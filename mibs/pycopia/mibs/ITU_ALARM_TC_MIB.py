# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, mib_2
from SNMPv2_TC import TEXTUAL_CONVENTION

class ITU_ALARM_TC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ITU-ALARM-TC-MIB'
	conformance = 5
	name = 'ITU-ALARM-TC-MIB'
	language = 2
	description = 'This MIB module defines the ITU Alarm\ntextual convention for objects not expected to require\nregular extension.\n\nCopyright (C) The Internet Society (2004).  The\ninitial version of this MIB module was published\nin RFC 3877.  For full legal notices see the RFC\nitself.  Supplementary information may be available on:\nhttp://www.ietf.org/copyrights/ianamib.html'

# nodes
class ituAlarmTc(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 120])
	name = 'ituAlarmTc'


# macros
# types 

class ItuPerceivedSeverity(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'cleared'), Enum(2, 'indeterminate'), Enum(3, 'critical'), Enum(4, 'major'), Enum(5, 'minor'), Enum(6, 'warning')]


class ItuTrendIndication(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'moreSevere'), Enum(2, 'noChange'), Enum(3, 'lessSevere')]

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
