# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Integer32, Unsigned32, Counter32, Counter64, Gauge32, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, TimeStamp, TruthValue, RowStatus, RowPointer, AutonomousType, StorageType
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class SCSI_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/SCSI-MIB'
	name = 'SCSI-MIB'
	language = 2
	description = 'The SCSI MIB Module.\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4455; see the RFC\nitself for full legal notices.'

# nodes
class scsiMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139])
	name = 'scsiMIB'

class scsiNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 0])
	name = 'scsiNotifications'

class scsiNotificationsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 0, 0])
	name = 'scsiNotificationsPrefix'

class scsiAdmin(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1])
	name = 'scsiAdmin'

class scsiTransportTypes(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1])
	name = 'scsiTransportTypes'

class scsiTransportOther(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 1])
	name = 'scsiTransportOther'

class scsiTransportSPI(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 2])
	name = 'scsiTransportSPI'

class scsiTransportFCP(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 3])
	name = 'scsiTransportFCP'

class scsiTransportSRP(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 4])
	name = 'scsiTransportSRP'

class scsiTransportISCSI(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 5])
	name = 'scsiTransportISCSI'

class scsiTransportSBP(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 6])
	name = 'scsiTransportSBP'

class scsiTransportSAS(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 1, 1, 7])
	name = 'scsiTransportSAS'

class scsiObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2])
	name = 'scsiObjects'

class scsiGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1])
	name = 'scsiGeneral'

class scsiInitiatorDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2])
	name = 'scsiInitiatorDevice'

class scsiRemoteTgtDev(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3])
	name = 'scsiRemoteTgtDev'

class scsiTargetDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3])
	name = 'scsiTargetDevice'

class scsiRemoteIntrDev(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3])
	name = 'scsiRemoteIntrDev'

class scsiLogicalUnit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4])
	name = 'scsiLogicalUnit'

class scsiConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3])
	name = 'scsiConformance'

class scsiCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 1])
	name = 'scsiCompliances'

class scsiGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2])
	name = 'scsiGroups'


# macros
# types 

class ScsiLUN(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(2, 2), Range(8, 8))


class ScsiIndexValue(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(1, -1))
	format = 'd'


class ScsiPortIndexValueOrZero(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, -1))
	format = 'd'


class ScsiIndexValueOrZero(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, -1))
	format = 'd'


class ScsiIdentifier(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 262))


class ScsiName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 262))


class ScsiLuNameOrZero(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 0), Range(8, 8))


class ScsiDeviceOrPort(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'device'), Enum(2, 'port'), Enum(3, 'other')]


class ScsiIdCodeSet(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 15))
	format = 'd'


class ScsiIdAssociation(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 3))
	format = 'd'


class ScsiIdType(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 15))
	format = 'd'


class ScsiIdValue(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))


class ScsiHrSWInstalledIndexOrZero(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'd'

# scalars 
# columns
class scsiInstIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiInstAlias(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1, 2])
	syntaxobject = SnmpAdminString


class scsiInstSoftwareIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1, 3])
	syntaxobject = ScsiHrSWInstalledIndexOrZero


class scsiInstVendorVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1, 4])
	syntaxobject = SnmpAdminString


class scsiInstScsiNotificationsEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class scsiInstStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class scsiDeviceIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 2, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiDeviceAlias(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 2, 1, 2])
	syntaxobject = SnmpAdminString


class scsiDeviceRole(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class scsiDevicePortNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class scsiPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 3, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiPortRole(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class scsiPortTransportPtr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class scsiPortBusyStatuses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class scsiTransportIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 5, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiTransportType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.AutonomousType


class scsiTransportPointer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class scsiTransportDevName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 5, 1, 4])
	syntaxobject = ScsiName


class scsiIntrDevTgtAccessMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'autoEnable'), Enum(3, 'manualEnable')]


class scsiIntrDevOutResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class scsiIntrPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1, 1])
	syntaxobject = ScsiName


class scsiIntrPortIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1, 2])
	syntaxobject = ScsiIdentifier


class scsiIntrPortOutCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'commands'


class scsiIntrPortWrittenMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiIntrPortReadMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiIntrPortHSOutCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'commands'


class scsiDscTgtIntrPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 1])
	syntaxobject = ScsiPortIndexValueOrZero


class scsiDscTgtIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 2])
	syntaxobject = ScsiIndexValue


class scsiDscTgtDevOrPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 3])
	syntaxobject = ScsiDeviceOrPort


class scsiDscTgtName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 4])
	syntaxobject = ScsiName


class scsiDscTgtConfigured(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class scsiDscTgtDiscovered(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class scsiDscTgtInCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'commands'


class scsiDscTgtWrittenMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiDscTgtReadMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiDscTgtHSInCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'commands'


class scsiDscTgtLastCreation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class scsiDscTgtRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class scsiDscLunIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 2, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiDscLunLun(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 2, 1, 2])
	syntaxobject = ScsiLUN


class scsiDscLunIdIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 3, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiDscLunIdCodeSet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 3, 1, 2])
	syntaxobject = ScsiIdCodeSet


class scsiDscLunIdAssociation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 3, 1, 3])
	syntaxobject = ScsiIdAssociation


class scsiDscLunIdType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 3, 1, 4])
	syntaxobject = ScsiIdType


class scsiDscLunIdValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 3, 1, 5])
	syntaxobject = ScsiIdValue


class scsiAttTgtPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 4, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiAttTgtPortDscTgtIdx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 4, 1, 2])
	syntaxobject = ScsiIndexValueOrZero


class scsiAttTgtPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 4, 1, 3])
	syntaxobject = ScsiName


class scsiAttTgtPortIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 4, 1, 4])
	syntaxobject = ScsiIdentifier


class scsiTgtDevNumberOfLUs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class scsiTgtDeviceStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'available'), Enum(3, 'broken'), Enum(4, 'readying'), Enum(5, 'abnormal'), Enum(6, 'nonAddrFailure'), Enum(7, 'nonAddrFailReadying'), Enum(8, 'nonAddrFailAbnormal')]


class scsiTgtDevNonAccessibleLUs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class scsiTgtDevResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class scsiTgtPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1, 1])
	syntaxobject = ScsiName


class scsiTgtPortIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1, 2])
	syntaxobject = ScsiIdentifier


class scsiTgtPortInCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'commands'


class scsiTgtPortWrittenMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiTgtPortReadMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiTgtPortHSInCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'commands'


class scsiAuthIntrTgtPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 1])
	syntaxobject = ScsiPortIndexValueOrZero


class scsiAuthIntrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 2])
	syntaxobject = ScsiIndexValue


class scsiAuthIntrDevOrPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 3])
	syntaxobject = ScsiDeviceOrPort


class scsiAuthIntrName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 4])
	syntaxobject = ScsiName


class scsiAuthIntrLunMapIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 5])
	syntaxobject = ScsiIndexValueOrZero


class scsiAuthIntrAttachedTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Times'


class scsiAuthIntrOutCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'commands'


class scsiAuthIntrReadMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiAuthIntrWrittenMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiAuthIntrHSOutCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'commands'


class scsiAuthIntrLastCreation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class scsiAuthIntrRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class scsiAttIntrPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 2, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiAttIntrPortAuthIntrIdx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 2, 1, 2])
	syntaxobject = ScsiIndexValueOrZero


class scsiAttIntrPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 2, 1, 3])
	syntaxobject = ScsiName


class scsiAttIntrPortIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 2, 1, 4])
	syntaxobject = ScsiIdentifier


class scsiLuIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiLuDefaultLun(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 2])
	syntaxobject = ScsiLUN


class scsiLuWwnName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 3])
	syntaxobject = ScsiLuNameOrZero


class scsiLuVendorId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 4])
	syntaxobject = SnmpAdminString


class scsiLuProductId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 5])
	syntaxobject = SnmpAdminString


class scsiLuRevisionId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 6])
	syntaxobject = SnmpAdminString


class scsiLuPeripheralType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class scsiLuStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'available'), Enum(3, 'notAvailable'), Enum(4, 'broken'), Enum(5, 'readying'), Enum(6, 'abnormal')]


class scsiLuState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class scsiLuInCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'commands'


class scsiLuReadMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiLuWrittenMegaBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Megabytes'


class scsiLuInResets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'resets'


class scsiLuOutTaskSetFullStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class scsiLuHSInCommands(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'commands'


class scsiLuLastCreation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class scsiLuIdIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 2, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiLuIdCodeSet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 2, 1, 2])
	syntaxobject = ScsiIdCodeSet


class scsiLuIdAssociation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 2, 1, 3])
	syntaxobject = ScsiIdAssociation


class scsiLuIdType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 2, 1, 4])
	syntaxobject = ScsiIdType


class scsiLuIdValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 2, 1, 5])
	syntaxobject = ScsiIdValue


class scsiLunMapIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 3, 1, 1])
	syntaxobject = ScsiIndexValue


class scsiLunMapLun(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 3, 1, 2])
	syntaxobject = ScsiLUN


class scsiLunMapLuIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 3, 1, 3])
	syntaxobject = ScsiIndexValue


class scsiLunMapRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class scsiInstanceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 1, 1])
	access = 2
	columns = {'scsiInstIndex': scsiInstIndex, 'scsiInstAlias': scsiInstAlias, 'scsiInstSoftwareIndex': scsiInstSoftwareIndex, 'scsiInstVendorVersion': scsiInstVendorVersion, 'scsiInstScsiNotificationsEnable': scsiInstScsiNotificationsEnable, 'scsiInstStorageType': scsiInstStorageType}


class scsiDeviceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 2, 1])
	access = 2
	columns = {'scsiDeviceIndex': scsiDeviceIndex, 'scsiDeviceAlias': scsiDeviceAlias, 'scsiDeviceRole': scsiDeviceRole, 'scsiDevicePortNumber': scsiDevicePortNumber}


class scsiPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 3, 1])
	access = 2
	columns = {'scsiPortIndex': scsiPortIndex, 'scsiPortRole': scsiPortRole, 'scsiPortTransportPtr': scsiPortTransportPtr, 'scsiPortBusyStatuses': scsiPortBusyStatuses}


class scsiTransportEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiTransportIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 1, 5, 1])
	access = 2
	columns = {'scsiTransportIndex': scsiTransportIndex, 'scsiTransportType': scsiTransportType, 'scsiTransportPointer': scsiTransportPointer, 'scsiTransportDevName': scsiTransportDevName}


class scsiIntrDevEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 1, 1])
	access = 2
	columns = {'scsiIntrDevTgtAccessMode': scsiIntrDevTgtAccessMode, 'scsiIntrDevOutResets': scsiIntrDevOutResets}


class scsiIntrPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 2, 1])
	access = 2
	columns = {'scsiIntrPortName': scsiIntrPortName, 'scsiIntrPortIdentifier': scsiIntrPortIdentifier, 'scsiIntrPortOutCommands': scsiIntrPortOutCommands, 'scsiIntrPortWrittenMegaBytes': scsiIntrPortWrittenMegaBytes, 'scsiIntrPortReadMegaBytes': scsiIntrPortReadMegaBytes, 'scsiIntrPortHSOutCommands': scsiIntrPortHSOutCommands}


class scsiDscTgtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiDscTgtIntrPortIndex, scsiDscTgtIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 1, 1])
	access = 2
	rowstatus = scsiDscTgtRowStatus
	columns = {'scsiDscTgtIntrPortIndex': scsiDscTgtIntrPortIndex, 'scsiDscTgtIndex': scsiDscTgtIndex, 'scsiDscTgtDevOrPort': scsiDscTgtDevOrPort, 'scsiDscTgtName': scsiDscTgtName, 'scsiDscTgtConfigured': scsiDscTgtConfigured, 'scsiDscTgtDiscovered': scsiDscTgtDiscovered, 'scsiDscTgtInCommands': scsiDscTgtInCommands, 'scsiDscTgtWrittenMegaBytes': scsiDscTgtWrittenMegaBytes, 'scsiDscTgtReadMegaBytes': scsiDscTgtReadMegaBytes, 'scsiDscTgtHSInCommands': scsiDscTgtHSInCommands, 'scsiDscTgtLastCreation': scsiDscTgtLastCreation, 'scsiDscTgtRowStatus': scsiDscTgtRowStatus}


class scsiDscLunEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiDscTgtIntrPortIndex, scsiDscTgtIndex, scsiDscLunIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 2, 1])
	access = 2
	columns = {'scsiDscLunIndex': scsiDscLunIndex, 'scsiDscLunLun': scsiDscLunLun}


class scsiDscLunIdEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiDscTgtIntrPortIndex, scsiDscTgtIndex, scsiDscLunIndex, scsiDscLunIdIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 3, 1])
	access = 2
	columns = {'scsiDscLunIdIndex': scsiDscLunIdIndex, 'scsiDscLunIdCodeSet': scsiDscLunIdCodeSet, 'scsiDscLunIdAssociation': scsiDscLunIdAssociation, 'scsiDscLunIdType': scsiDscLunIdType, 'scsiDscLunIdValue': scsiDscLunIdValue}


class scsiAttTgtPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiPortIndex, scsiAttTgtPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 2, 3, 4, 1])
	access = 2
	columns = {'scsiAttTgtPortIndex': scsiAttTgtPortIndex, 'scsiAttTgtPortDscTgtIdx': scsiAttTgtPortDscTgtIdx, 'scsiAttTgtPortName': scsiAttTgtPortName, 'scsiAttTgtPortIdentifier': scsiAttTgtPortIdentifier}


class scsiTgtDevEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 1, 1])
	access = 2
	columns = {'scsiTgtDevNumberOfLUs': scsiTgtDevNumberOfLUs, 'scsiTgtDeviceStatus': scsiTgtDeviceStatus, 'scsiTgtDevNonAccessibleLUs': scsiTgtDevNonAccessibleLUs, 'scsiTgtDevResets': scsiTgtDevResets}


class scsiTgtPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 2, 1])
	access = 2
	columns = {'scsiTgtPortName': scsiTgtPortName, 'scsiTgtPortIdentifier': scsiTgtPortIdentifier, 'scsiTgtPortInCommands': scsiTgtPortInCommands, 'scsiTgtPortWrittenMegaBytes': scsiTgtPortWrittenMegaBytes, 'scsiTgtPortReadMegaBytes': scsiTgtPortReadMegaBytes, 'scsiTgtPortHSInCommands': scsiTgtPortHSInCommands}


class scsiAuthorizedIntrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiAuthIntrTgtPortIndex, scsiAuthIntrIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 1, 1])
	access = 2
	rowstatus = scsiAuthIntrRowStatus
	columns = {'scsiAuthIntrTgtPortIndex': scsiAuthIntrTgtPortIndex, 'scsiAuthIntrIndex': scsiAuthIntrIndex, 'scsiAuthIntrDevOrPort': scsiAuthIntrDevOrPort, 'scsiAuthIntrName': scsiAuthIntrName, 'scsiAuthIntrLunMapIndex': scsiAuthIntrLunMapIndex, 'scsiAuthIntrAttachedTimes': scsiAuthIntrAttachedTimes, 'scsiAuthIntrOutCommands': scsiAuthIntrOutCommands, 'scsiAuthIntrReadMegaBytes': scsiAuthIntrReadMegaBytes, 'scsiAuthIntrWrittenMegaBytes': scsiAuthIntrWrittenMegaBytes, 'scsiAuthIntrHSOutCommands': scsiAuthIntrHSOutCommands, 'scsiAuthIntrLastCreation': scsiAuthIntrLastCreation, 'scsiAuthIntrRowStatus': scsiAuthIntrRowStatus}


class scsiAttIntrPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiPortIndex, scsiAttIntrPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 3, 3, 2, 1])
	access = 2
	columns = {'scsiAttIntrPortIndex': scsiAttIntrPortIndex, 'scsiAttIntrPortAuthIntrIdx': scsiAttIntrPortAuthIntrIdx, 'scsiAttIntrPortName': scsiAttIntrPortName, 'scsiAttIntrPortIdentifier': scsiAttIntrPortIdentifier}


class scsiLuEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiLuIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 1, 1])
	access = 2
	columns = {'scsiLuIndex': scsiLuIndex, 'scsiLuDefaultLun': scsiLuDefaultLun, 'scsiLuWwnName': scsiLuWwnName, 'scsiLuVendorId': scsiLuVendorId, 'scsiLuProductId': scsiLuProductId, 'scsiLuRevisionId': scsiLuRevisionId, 'scsiLuPeripheralType': scsiLuPeripheralType, 'scsiLuStatus': scsiLuStatus, 'scsiLuState': scsiLuState, 'scsiLuInCommands': scsiLuInCommands, 'scsiLuReadMegaBytes': scsiLuReadMegaBytes, 'scsiLuWrittenMegaBytes': scsiLuWrittenMegaBytes, 'scsiLuInResets': scsiLuInResets, 'scsiLuOutTaskSetFullStatus': scsiLuOutTaskSetFullStatus, 'scsiLuHSInCommands': scsiLuHSInCommands, 'scsiLuLastCreation': scsiLuLastCreation}


class scsiLuIdEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiLuIndex, scsiLuIdIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 2, 1])
	access = 2
	columns = {'scsiLuIdIndex': scsiLuIdIndex, 'scsiLuIdCodeSet': scsiLuIdCodeSet, 'scsiLuIdAssociation': scsiLuIdAssociation, 'scsiLuIdType': scsiLuIdType, 'scsiLuIdValue': scsiLuIdValue}


class scsiLunMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([scsiInstIndex, scsiDeviceIndex, scsiLunMapIndex, scsiLunMapLun], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 2, 4, 3, 1])
	access = 2
	rowstatus = scsiLunMapRowStatus
	columns = {'scsiLunMapIndex': scsiLunMapIndex, 'scsiLunMapLun': scsiLunMapLun, 'scsiLunMapLuIndex': scsiLunMapLuIndex, 'scsiLunMapRowStatus': scsiLunMapRowStatus}


# notifications (traps) 
class scsiTgtDeviceStatusChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 0, 0, 1])

class scsiLuStatusChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 0, 0, 2])

# groups 
class scsiDeviceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 1])
	group = [scsiInstAlias, scsiInstSoftwareIndex, scsiInstVendorVersion, scsiInstScsiNotificationsEnable, scsiInstStorageType, scsiDeviceAlias, scsiDeviceRole, scsiDevicePortNumber, scsiPortRole, scsiPortTransportPtr, scsiTransportType, scsiTransportPointer, scsiTransportDevName]

class scsiInitiatorDeviceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 2])
	group = [scsiIntrDevTgtAccessMode, scsiIntrPortName, scsiIntrPortIdentifier, scsiAttTgtPortDscTgtIdx, scsiAttTgtPortName, scsiAttTgtPortIdentifier]

class scsiDiscoveryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 3])
	group = [scsiDscTgtDevOrPort, scsiDscTgtName, scsiDscTgtConfigured, scsiDscTgtDiscovered, scsiDscTgtRowStatus, scsiDscTgtLastCreation, scsiDscLunLun, scsiDscLunIdCodeSet, scsiDscLunIdAssociation, scsiDscLunIdType, scsiDscLunIdValue]

class scsiTargetDeviceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 4])
	group = [scsiTgtDevNumberOfLUs, scsiTgtDeviceStatus, scsiTgtDevNonAccessibleLUs, scsiTgtPortName, scsiTgtPortIdentifier, scsiAttIntrPortAuthIntrIdx, scsiAttIntrPortName, scsiAttIntrPortIdentifier, scsiLuDefaultLun, scsiLuWwnName, scsiLuVendorId, scsiLuProductId, scsiLuRevisionId, scsiLuPeripheralType, scsiLuStatus, scsiLuState, scsiLuLastCreation, scsiLuIdCodeSet, scsiLuIdAssociation, scsiLuIdType, scsiLuIdValue]

class scsiLunMapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 5])
	group = [scsiLunMapLuIndex, scsiLunMapRowStatus, scsiAuthIntrDevOrPort, scsiAuthIntrName, scsiAuthIntrLunMapIndex, scsiAuthIntrLastCreation, scsiAuthIntrRowStatus]

class scsiTargetDevStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 6])
	group = [scsiTgtDevResets, scsiTgtPortInCommands, scsiTgtPortWrittenMegaBytes, scsiTgtPortReadMegaBytes, scsiLuInCommands, scsiLuReadMegaBytes, scsiLuWrittenMegaBytes, scsiLuInResets, scsiLuOutTaskSetFullStatus]

class scsiTargetDevHSStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 7])
	group = [scsiTgtPortHSInCommands, scsiLuHSInCommands]

class scsiLunMapStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 8])
	group = [scsiAuthIntrAttachedTimes, scsiAuthIntrOutCommands, scsiAuthIntrReadMegaBytes, scsiAuthIntrWrittenMegaBytes]

class scsiLunMapHSStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 9])
	group = [scsiAuthIntrHSOutCommands]

class scsiInitiatorDevStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 10])
	group = [scsiIntrDevOutResets, scsiIntrPortOutCommands, scsiIntrPortWrittenMegaBytes, scsiIntrPortReadMegaBytes]

class scsiInitiatorDevHSStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 11])
	group = [scsiIntrPortHSOutCommands]

class scsiDiscoveryStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 12])
	group = [scsiDscTgtInCommands, scsiDscTgtReadMegaBytes, scsiDscTgtWrittenMegaBytes]

class scsiDiscoveryHSStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 13])
	group = [scsiDscTgtHSInCommands]

class scsiDeviceStatGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 14])
	group = [scsiPortBusyStatuses]

class scsiTgtDevLuNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 139, 3, 2, 15])
	group = [scsiTgtDeviceStatusChanged, scsiLuStatusChanged]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
