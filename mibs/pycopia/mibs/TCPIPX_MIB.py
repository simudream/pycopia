# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1155_SMI import enterprises

class TCPIPX_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/TCPIPX-MIB'
	conformance = 2
	name = 'TCPIPX-MIB'
	language = 1

# nodes
class novell(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23])
	name = 'novell'

class mibDoc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2])
	name = 'mibDoc'

class tcpx(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29])
	name = 'tcpx'

class tcpxTcp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1])
	name = 'tcpxTcp'

class tcpxUdp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 2])
	name = 'tcpxUdp'


# macros
# types 

class IpxAddress(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(10, 10))

# scalars 
# columns
class tcpIpxConnState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'closed'), Enum(2, 'listen'), Enum(3, 'synSent'), Enum(4, 'synReceived'), Enum(5, 'established'), Enum(6, 'finWait1'), Enum(7, 'finWait2'), Enum(8, 'closeWait'), Enum(9, 'lastAck'), Enum(10, 'closing'), Enum(11, 'timeWait'), Enum(12, 'deleteTCB')]


class tcpIpxConnLocalAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 1, 1, 2])
	syntaxobject = IpxAddress


class tcpIpxConnLocalPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tcpIpxConnRemAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 1, 1, 4])
	syntaxobject = IpxAddress


class tcpIpxConnRemPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tcpUnspecConnState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'closed'), Enum(2, 'listen'), Enum(12, 'deleteTCB')]


class tcpUnspecConnLocalPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class udpIpxLocalAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 2, 1, 1, 1])
	syntaxobject = IpxAddress


class udpIpxLocalPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class udpUnspecLocalPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class tcpIpxConnEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([tcpIpxConnLocalAddress, tcpIpxConnLocalPort, tcpIpxConnRemAddress, tcpIpxConnRemPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 1, 1])
	access = 2
	columns = {'tcpIpxConnState': tcpIpxConnState, 'tcpIpxConnLocalAddress': tcpIpxConnLocalAddress, 'tcpIpxConnLocalPort': tcpIpxConnLocalPort, 'tcpIpxConnRemAddress': tcpIpxConnRemAddress, 'tcpIpxConnRemPort': tcpIpxConnRemPort}


class tcpUnspecConnEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([tcpUnspecConnLocalPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 1, 2, 1])
	access = 2
	columns = {'tcpUnspecConnState': tcpUnspecConnState, 'tcpUnspecConnLocalPort': tcpUnspecConnLocalPort}


class udpIpxEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([udpIpxLocalAddress, udpIpxLocalPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 2, 1, 1])
	access = 2
	columns = {'udpIpxLocalAddress': udpIpxLocalAddress, 'udpIpxLocalPort': udpIpxLocalPort}


class udpUnspecEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([udpUnspecLocalPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 29, 2, 2, 1])
	access = 2
	columns = {'udpUnspecLocalPort': udpUnspecLocalPort}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
