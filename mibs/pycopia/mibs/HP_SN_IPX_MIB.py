# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from HP_SN_ROOT_MIB import snIpx
from RFC1155_SMI import Counter

class HP_SN_IPX_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-IPX-MIB'
	conformance = 2
	name = 'HP-SN-IPX-MIB'
	language = 1

# nodes
class snIpxGen(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1])
	name = 'snIpxGen'

class snIpxCache(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2])
	name = 'snIpxCache'

class snIpxRoute(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3])
	name = 'snIpxRoute'

class snIpxServer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4])
	name = 'snIpxServer'

class snIpxFwdFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5])
	name = 'snIpxFwdFilter'

class snIpxRipFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6])
	name = 'snIpxRipFilter'

class snIpxSapFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7])
	name = 'snIpxSapFilter'

class snIpxIfFwdAccess(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 8])
	name = 'snIpxIfFwdAccess'

class snIpxIfRipAccess(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 9])
	name = 'snIpxIfRipAccess'

class snIpxIfSapAccess(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 10])
	name = 'snIpxIfSapAccess'

class snIpxPortAddr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11])
	name = 'snIpxPortAddr'

class snIpxPortCounters(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12])
	name = 'snIpxPortCounters'


# macros
# types 

class RtrStatus(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class ClearStatus(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'normal'), Enum(1, 'clear')]


class PortIndex(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(1, 3900))


class Action(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]

PhysAddress = pycopia.SMI.Basetypes.PhysAddress

class NetNumber(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(4, 4))

# scalars 
class snIpxRoutingMode(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 1])
	syntaxobject = RtrStatus


class snIpxNetBiosFilterMode(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 2])
	syntaxobject = RtrStatus


class snIpxClearCache(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 3])
	syntaxobject = ClearStatus


class snIpxClearRoute(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 4])
	syntaxobject = ClearStatus


class snIpxClearTrafficCnts(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 5])
	syntaxobject = ClearStatus


class snIpxRcvPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxTxPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxFwdPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxRcvDropPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxRcvFiltPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxRipGblFiltList(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxRipFiltOnAllPort(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'valid'), Enum(2, 'deleteAllInBound'), Enum(3, 'deleteAllOutBound'), Enum(4, 'addAllInBound'), Enum(5, 'addAllOutBound')]


class snIpxSapGblFiltList(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxSapFiltOnAllPort(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'valid'), Enum(2, 'deleteAllInBound'), Enum(3, 'deleteAllOutBound'), Enum(4, 'addAllInBound'), Enum(5, 'addAllOutBound')]


class snIpxTxDropPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxTxFiltPktsCnt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class snIpxCacheIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxCacheNetNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1, 2])
	syntaxobject = NetNumber


class snIpxCacheNode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snIpxCacheOutFilter(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1, 4])
	syntaxobject = RtrStatus


class snIpxCacheEncap(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ethernetII'), Enum(2, 'ethernet8022'), Enum(3, 'ethernet8023'), Enum(4, 'ethernetSnap')]


class snIpxCachePort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1, 6])
	syntaxobject = PortIndex


class snIpxRouteIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxDestNetNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1, 2])
	syntaxobject = NetNumber


class snIpxFwdRouterNode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snIpxDestHopCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxRouteMetric(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxDestPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxServerIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxServerType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxServerNetNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 3])
	syntaxobject = NetNumber


class snIpxServerNode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snIpxServerSocket(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxServerHopCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxServerName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxFwdFilterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxFwdFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 2])
	syntaxobject = Action


class snIpxFwdFilterSocket(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxFwdFilterSrcNet(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 4])
	syntaxobject = NetNumber


class snIpxFwdFilterSrcNode(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snIpxFwdFilterDestNet(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 6])
	syntaxobject = NetNumber


class snIpxFwdFilterDestNode(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snIpxFwdFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxRipFilterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxRipFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6, 1, 1, 2])
	syntaxobject = Action


class snIpxRipFilterNet(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6, 1, 1, 3])
	syntaxobject = NetNumber


class snIpxRipFilterMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6, 1, 1, 4])
	syntaxobject = NetNumber


class snIpxRipFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxSapFilterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxSapFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7, 1, 1, 2])
	syntaxobject = Action


class snIpxSapFilterType(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxSapFilterName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxSapFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxIfFwdAccessPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxIfFwdAccessDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'in'), Enum(2, 'out')]


class snIpxIfFwdAccessFilterList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxIfFwdAccessRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxIfRipAccessPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxIfRipAccessDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'in'), Enum(2, 'out')]


class snIpxIfRipAccessFilterList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxIfRipAccessRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxIfSapAccessPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snIpxIfSapAccessDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'in'), Enum(2, 'out')]


class snIpxIfSapAccessFilterList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snIpxIfSapAccessRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 10, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxPortAddrPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11, 1, 1, 1])
	syntaxobject = PortIndex


class snIpxPortAddrEncap(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ethernet8022'), Enum(2, 'ethernet8023'), Enum(3, 'ethernetII'), Enum(4, 'ethernetSnap')]


class snIpxPortAddrNetNum(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11, 1, 1, 3])
	syntaxobject = NetNumber


class snIpxPortAddrRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snIpxPortAddrNetBiosFilterMode(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11, 1, 1, 5])
	syntaxobject = RtrStatus


class snIpxPortCountersPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 1])
	syntaxobject = PortIndex


class snIpxPortCountersRcvPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxPortCountersTxPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxPortCountersFwdPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxPortCountersRcvDropPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxPortCountersTxDropPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxPortCountersRcvFiltPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snIpxPortCountersTxFiltPktsCnt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class snIpxCacheEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxCacheIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 2, 1, 1])
	access = 2
	columns = {'snIpxCacheIndex': snIpxCacheIndex, 'snIpxCacheNetNum': snIpxCacheNetNum, 'snIpxCacheNode': snIpxCacheNode, 'snIpxCacheOutFilter': snIpxCacheOutFilter, 'snIpxCacheEncap': snIpxCacheEncap, 'snIpxCachePort': snIpxCachePort}


class snIpxRouteEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxRouteIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 3, 1, 1])
	access = 2
	columns = {'snIpxRouteIndex': snIpxRouteIndex, 'snIpxDestNetNum': snIpxDestNetNum, 'snIpxFwdRouterNode': snIpxFwdRouterNode, 'snIpxDestHopCnts': snIpxDestHopCnts, 'snIpxRouteMetric': snIpxRouteMetric, 'snIpxDestPort': snIpxDestPort}


class snIpxServerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxServerIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 4, 1, 1])
	access = 2
	columns = {'snIpxServerIndex': snIpxServerIndex, 'snIpxServerType': snIpxServerType, 'snIpxServerNetNum': snIpxServerNetNum, 'snIpxServerNode': snIpxServerNode, 'snIpxServerSocket': snIpxServerSocket, 'snIpxServerHopCnts': snIpxServerHopCnts, 'snIpxServerName': snIpxServerName}


class snIpxFwdFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxFwdFilterId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 5, 1, 1])
	access = 2
	columns = {'snIpxFwdFilterId': snIpxFwdFilterId, 'snIpxFwdFilterAction': snIpxFwdFilterAction, 'snIpxFwdFilterSocket': snIpxFwdFilterSocket, 'snIpxFwdFilterSrcNet': snIpxFwdFilterSrcNet, 'snIpxFwdFilterSrcNode': snIpxFwdFilterSrcNode, 'snIpxFwdFilterDestNet': snIpxFwdFilterDestNet, 'snIpxFwdFilterDestNode': snIpxFwdFilterDestNode, 'snIpxFwdFilterRowStatus': snIpxFwdFilterRowStatus}


class snIpxRipFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxRipFilterId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 6, 1, 1])
	access = 2
	columns = {'snIpxRipFilterId': snIpxRipFilterId, 'snIpxRipFilterAction': snIpxRipFilterAction, 'snIpxRipFilterNet': snIpxRipFilterNet, 'snIpxRipFilterMask': snIpxRipFilterMask, 'snIpxRipFilterRowStatus': snIpxRipFilterRowStatus}


class snIpxSapFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxSapFilterId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 7, 1, 1])
	access = 2
	columns = {'snIpxSapFilterId': snIpxSapFilterId, 'snIpxSapFilterAction': snIpxSapFilterAction, 'snIpxSapFilterType': snIpxSapFilterType, 'snIpxSapFilterName': snIpxSapFilterName, 'snIpxSapFilterRowStatus': snIpxSapFilterRowStatus}


class snIpxIfFwdAccessEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxIfFwdAccessPort, snIpxIfFwdAccessDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 8, 1, 1])
	access = 2
	columns = {'snIpxIfFwdAccessPort': snIpxIfFwdAccessPort, 'snIpxIfFwdAccessDir': snIpxIfFwdAccessDir, 'snIpxIfFwdAccessFilterList': snIpxIfFwdAccessFilterList, 'snIpxIfFwdAccessRowStatus': snIpxIfFwdAccessRowStatus}


class snIpxIfRipAccessEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxIfRipAccessPort, snIpxIfRipAccessDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 9, 1, 1])
	access = 2
	columns = {'snIpxIfRipAccessPort': snIpxIfRipAccessPort, 'snIpxIfRipAccessDir': snIpxIfRipAccessDir, 'snIpxIfRipAccessFilterList': snIpxIfRipAccessFilterList, 'snIpxIfRipAccessRowStatus': snIpxIfRipAccessRowStatus}


class snIpxIfSapAccessEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxIfSapAccessPort, snIpxIfSapAccessDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 10, 1, 1])
	access = 2
	columns = {'snIpxIfSapAccessPort': snIpxIfSapAccessPort, 'snIpxIfSapAccessDir': snIpxIfSapAccessDir, 'snIpxIfSapAccessFilterList': snIpxIfSapAccessFilterList, 'snIpxIfSapAccessRowStatus': snIpxIfSapAccessRowStatus}


class snIpxPortAddrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxPortAddrPort, snIpxPortAddrEncap], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 11, 1, 1])
	access = 2
	columns = {'snIpxPortAddrPort': snIpxPortAddrPort, 'snIpxPortAddrEncap': snIpxPortAddrEncap, 'snIpxPortAddrNetNum': snIpxPortAddrNetNum, 'snIpxPortAddrRowStatus': snIpxPortAddrRowStatus, 'snIpxPortAddrNetBiosFilterMode': snIpxPortAddrNetBiosFilterMode}


class snIpxPortCountersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snIpxPortCountersPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 1, 12, 1, 1])
	access = 2
	columns = {'snIpxPortCountersPort': snIpxPortCountersPort, 'snIpxPortCountersRcvPktsCnt': snIpxPortCountersRcvPktsCnt, 'snIpxPortCountersTxPktsCnt': snIpxPortCountersTxPktsCnt, 'snIpxPortCountersFwdPktsCnt': snIpxPortCountersFwdPktsCnt, 'snIpxPortCountersRcvDropPktsCnt': snIpxPortCountersRcvDropPktsCnt, 'snIpxPortCountersTxDropPktsCnt': snIpxPortCountersTxDropPktsCnt, 'snIpxPortCountersRcvFiltPktsCnt': snIpxPortCountersRcvFiltPktsCnt, 'snIpxPortCountersTxFiltPktsCnt': snIpxPortCountersTxFiltPktsCnt}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
