# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, transmission
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import DisplayString, RowStatus, TestAndIncr
from IF_MIB import ifIndex, InterfaceIndex

class DS0BUNDLE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DS0BUNDLE-MIB'
	conformance = 3
	name = 'DS0BUNDLE-MIB'
	language = 2
	description = 'The MIB module to describe\nDS0 Bundle interfaces objects.'

# nodes
class ds0Bundle(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82])
	name = 'ds0Bundle'

class ds0BundleConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 4])
	name = 'ds0BundleConformance'

class ds0BundleGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 4, 1])
	name = 'ds0BundleGroups'

class ds0BundleCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 4, 2])
	name = 'ds0BundleCompliances'


# macros
# types 
# scalars 
class dsx0BundleNextIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 2])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


# columns
class dsx0BondMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'other'), Enum(3, 'mode0'), Enum(4, 'mode1'), Enum(5, 'mode2'), Enum(6, 'mode3')]


class dsx0BondStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'idle'), Enum(2, 'callSetup'), Enum(3, 'dataTransfer')]


class dsx0BondRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class dsx0BundleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx0BundleIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 3, 1, 2])
	syntaxobject = InterfaceIndex


class dsx0BundleCircuitIdentifier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx0BundleRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class dsx0BondingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 1, 1])
	access = 2
	rowstatus = dsx0BondRowStatus
	columns = {'dsx0BondMode': dsx0BondMode, 'dsx0BondStatus': dsx0BondStatus, 'dsx0BondRowStatus': dsx0BondRowStatus}


class dsx0BundleEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx0BundleIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 3, 1])
	access = 2
	rowstatus = dsx0BundleRowStatus
	columns = {'dsx0BundleIndex': dsx0BundleIndex, 'dsx0BundleIfIndex': dsx0BundleIfIndex, 'dsx0BundleCircuitIdentifier': dsx0BundleCircuitIdentifier, 'dsx0BundleRowStatus': dsx0BundleRowStatus}


# notifications (traps) 
# groups 
class ds0BondingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 4, 1, 1])
	group = [dsx0BondMode, dsx0BondStatus, dsx0BondRowStatus]

class ds0BundleConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 82, 4, 1, 2])
	group = [dsx0BundleNextIndex, dsx0BundleIfIndex, dsx0BundleCircuitIdentifier, dsx0BundleRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
