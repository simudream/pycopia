# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, OBJECT_IDENTITY, NOTIFICATION_TYPE, mib_2, Counter32, Integer32, TimeTicks
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString

class RMON_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RMON-MIB'
	conformance = 3
	name = 'RMON-MIB'
	language = 2
	description = 'Remote network monitoring devices, often called\nmonitors or probes, are instruments that exist for\nthe purpose of managing a network. This MIB defines\nobjects for managing remote network monitoring devices.'

# nodes
class rmon(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16])
	name = 'rmon'

class rmonEventsV2(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 0])
	name = 'rmonEventsV2'

class statistics(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1])
	name = 'statistics'

class history(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2])
	name = 'history'

class alarm(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3])
	name = 'alarm'

class hosts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4])
	name = 'hosts'

class hostTopN(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5])
	name = 'hostTopN'

class matrix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6])
	name = 'matrix'

class filter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7])
	name = 'filter'

class capture(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8])
	name = 'capture'

class event(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9])
	name = 'event'

class rmonConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20])
	name = 'rmonConformance'

class rmonMibModule(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 8])
	name = 'rmonMibModule'

class rmonCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 9])
	name = 'rmonCompliances'

class rmonGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10])
	name = 'rmonGroups'


# macros
# types 

class OwnerString(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 127))


class EntryStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'valid'), Enum(2, 'createRequest'), Enum(3, 'underCreation'), Enum(4, 'invalid')]

# scalars 
# columns
class etherStatsIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class etherStatsDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class etherStatsDropEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class etherStatsOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class etherStatsPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsBroadcastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsMulticastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsCRCAlignErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsUndersizePkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsOversizePkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsFragments(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsJabbers(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsCollisions(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Collisions'


class etherStatsPkts64Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsPkts65to127Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsPkts128to255Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsPkts256to511Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsPkts512to1023Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsPkts1024to1518Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 20])
	syntaxobject = OwnerString


class etherStatsStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 21])
	syntaxobject = EntryStatus


class historyControlIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class historyControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class historyControlBucketsRequested(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class historyControlBucketsGranted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class historyControlInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Seconds'


class historyControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 6])
	syntaxobject = OwnerString


class historyControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 7])
	syntaxobject = EntryStatus


class etherHistoryIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class etherHistorySampleIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class etherHistoryIntervalStart(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class etherHistoryDropEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class etherHistoryOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class etherHistoryPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryBroadcastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryMulticastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryCRCAlignErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryUndersizePkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryOversizePkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryFragments(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryJabbers(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherHistoryCollisions(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Collisions'


class etherHistoryUtilization(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Seconds'


class alarmVariable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class alarmSampleType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'absoluteValue'), Enum(2, 'deltaValue')]


class alarmValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmStartupAlarm(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'risingAlarm'), Enum(2, 'fallingAlarm'), Enum(3, 'risingOrFallingAlarm')]


class alarmRisingThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmFallingThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmRisingEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmFallingEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alarmOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 11])
	syntaxobject = OwnerString


class alarmStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 12])
	syntaxobject = EntryStatus


class hostControlIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class hostControlTableSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostControlLastDeleteTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class hostControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 5])
	syntaxobject = OwnerString


class hostControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 6])
	syntaxobject = EntryStatus


class hostAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hostCreationOrder(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostOutErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostOutBroadcastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostOutMulticastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hostTimeCreationOrder(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTimeIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTimeInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostTimeOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostTimeOutErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeOutBroadcastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeOutMulticastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTopNControlIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTopNHostIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTopNRateBase(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'hostTopNInPkts'), Enum(2, 'hostTopNOutPkts'), Enum(3, 'hostTopNInOctets'), Enum(4, 'hostTopNOutOctets'), Enum(5, 'hostTopNOutErrors'), Enum(6, 'hostTopNOutBroadcastPkts'), Enum(7, 'hostTopNOutMulticastPkts')]


class hostTopNTimeRemaining(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Seconds'


class hostTopNDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Seconds'


class hostTopNRequestedSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTopNGrantedSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTopNStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class hostTopNOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 9])
	syntaxobject = OwnerString


class hostTopNStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 10])
	syntaxobject = EntryStatus


class hostTopNReport(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTopNIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hostTopNAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hostTopNRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class matrixControlIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class matrixControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class matrixControlTableSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class matrixControlLastDeleteTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class matrixControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 5])
	syntaxobject = OwnerString


class matrixControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 6])
	syntaxobject = EntryStatus


class matrixSDSourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class matrixSDDestAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class matrixSDIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class matrixSDPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class matrixSDOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class matrixSDErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class matrixDSSourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class matrixDSDestAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class matrixDSIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class matrixDSPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class matrixDSOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class matrixDSErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class filterIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class filterChannelIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class filterPktDataOffset(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Octets'


class filterPktData(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class filterPktDataMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class filterPktDataNotMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class filterPktStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class filterPktStatusMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class filterPktStatusNotMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class filterOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 10])
	syntaxobject = OwnerString


class filterStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 11])
	syntaxobject = EntryStatus


class channelIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class channelIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class channelAcceptType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'acceptMatched'), Enum(2, 'acceptFailed')]


class channelDataControl(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off')]


class channelTurnOnEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class channelTurnOffEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class channelEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class channelEventStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'eventReady'), Enum(2, 'eventFired'), Enum(3, 'eventAlwaysReady')]


class channelMatches(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class channelDescription(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class channelOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 11])
	syntaxobject = OwnerString


class channelStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 12])
	syntaxobject = EntryStatus


class bufferControlIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bufferControlChannelIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bufferControlFullStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'spaceAvailable'), Enum(2, 'full')]


class bufferControlFullAction(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lockWhenFull'), Enum(2, 'wrapWhenFull')]


class bufferControlCaptureSliceSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Octets'


class bufferControlDownloadSliceSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Octets'


class bufferControlDownloadOffset(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Octets'


class bufferControlMaxOctetsRequested(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'Octets'


class bufferControlMaxOctetsGranted(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Octets'


class bufferControlCapturedPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Packets'


class bufferControlTurnOnTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class bufferControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 12])
	syntaxobject = OwnerString


class bufferControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 13])
	syntaxobject = EntryStatus


class captureBufferControlIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class captureBufferIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class captureBufferPacketID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class captureBufferPacketData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class captureBufferPacketLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Octets'


class captureBufferPacketTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Milliseconds'


class captureBufferPacketStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class eventIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class eventDescription(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class eventType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'log'), Enum(3, 'snmptrap'), Enum(4, 'logandtrap')]


class eventCommunity(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class eventLastTimeSent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class eventOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 6])
	syntaxobject = OwnerString


class eventStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 7])
	syntaxobject = EntryStatus


class logEventIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class logIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class logTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class logDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# rows 
class etherStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([etherStatsIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 1, 1])
	access = 2
	columns = {'etherStatsIndex': etherStatsIndex, 'etherStatsDataSource': etherStatsDataSource, 'etherStatsDropEvents': etherStatsDropEvents, 'etherStatsOctets': etherStatsOctets, 'etherStatsPkts': etherStatsPkts, 'etherStatsBroadcastPkts': etherStatsBroadcastPkts, 'etherStatsMulticastPkts': etherStatsMulticastPkts, 'etherStatsCRCAlignErrors': etherStatsCRCAlignErrors, 'etherStatsUndersizePkts': etherStatsUndersizePkts, 'etherStatsOversizePkts': etherStatsOversizePkts, 'etherStatsFragments': etherStatsFragments, 'etherStatsJabbers': etherStatsJabbers, 'etherStatsCollisions': etherStatsCollisions, 'etherStatsPkts64Octets': etherStatsPkts64Octets, 'etherStatsPkts65to127Octets': etherStatsPkts65to127Octets, 'etherStatsPkts128to255Octets': etherStatsPkts128to255Octets, 'etherStatsPkts256to511Octets': etherStatsPkts256to511Octets, 'etherStatsPkts512to1023Octets': etherStatsPkts512to1023Octets, 'etherStatsPkts1024to1518Octets': etherStatsPkts1024to1518Octets, 'etherStatsOwner': etherStatsOwner, 'etherStatsStatus': etherStatsStatus}


class historyControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([historyControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 1, 1])
	access = 2
	columns = {'historyControlIndex': historyControlIndex, 'historyControlDataSource': historyControlDataSource, 'historyControlBucketsRequested': historyControlBucketsRequested, 'historyControlBucketsGranted': historyControlBucketsGranted, 'historyControlInterval': historyControlInterval, 'historyControlOwner': historyControlOwner, 'historyControlStatus': historyControlStatus}


class etherHistoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([etherHistoryIndex, etherHistorySampleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 2, 1])
	access = 2
	columns = {'etherHistoryIndex': etherHistoryIndex, 'etherHistorySampleIndex': etherHistorySampleIndex, 'etherHistoryIntervalStart': etherHistoryIntervalStart, 'etherHistoryDropEvents': etherHistoryDropEvents, 'etherHistoryOctets': etherHistoryOctets, 'etherHistoryPkts': etherHistoryPkts, 'etherHistoryBroadcastPkts': etherHistoryBroadcastPkts, 'etherHistoryMulticastPkts': etherHistoryMulticastPkts, 'etherHistoryCRCAlignErrors': etherHistoryCRCAlignErrors, 'etherHistoryUndersizePkts': etherHistoryUndersizePkts, 'etherHistoryOversizePkts': etherHistoryOversizePkts, 'etherHistoryFragments': etherHistoryFragments, 'etherHistoryJabbers': etherHistoryJabbers, 'etherHistoryCollisions': etherHistoryCollisions, 'etherHistoryUtilization': etherHistoryUtilization}


class alarmEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alarmIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 3, 1, 1])
	access = 2
	columns = {'alarmIndex': alarmIndex, 'alarmInterval': alarmInterval, 'alarmVariable': alarmVariable, 'alarmSampleType': alarmSampleType, 'alarmValue': alarmValue, 'alarmStartupAlarm': alarmStartupAlarm, 'alarmRisingThreshold': alarmRisingThreshold, 'alarmFallingThreshold': alarmFallingThreshold, 'alarmRisingEventIndex': alarmRisingEventIndex, 'alarmFallingEventIndex': alarmFallingEventIndex, 'alarmOwner': alarmOwner, 'alarmStatus': alarmStatus}


class hostControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 1, 1])
	access = 2
	columns = {'hostControlIndex': hostControlIndex, 'hostControlDataSource': hostControlDataSource, 'hostControlTableSize': hostControlTableSize, 'hostControlLastDeleteTime': hostControlLastDeleteTime, 'hostControlOwner': hostControlOwner, 'hostControlStatus': hostControlStatus}


class hostEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostIndex, hostAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 2, 1])
	access = 2
	columns = {'hostAddress': hostAddress, 'hostCreationOrder': hostCreationOrder, 'hostIndex': hostIndex, 'hostInPkts': hostInPkts, 'hostOutPkts': hostOutPkts, 'hostInOctets': hostInOctets, 'hostOutOctets': hostOutOctets, 'hostOutErrors': hostOutErrors, 'hostOutBroadcastPkts': hostOutBroadcastPkts, 'hostOutMulticastPkts': hostOutMulticastPkts}


class hostTimeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostTimeIndex, hostTimeCreationOrder], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 3, 1])
	access = 2
	columns = {'hostTimeAddress': hostTimeAddress, 'hostTimeCreationOrder': hostTimeCreationOrder, 'hostTimeIndex': hostTimeIndex, 'hostTimeInPkts': hostTimeInPkts, 'hostTimeOutPkts': hostTimeOutPkts, 'hostTimeInOctets': hostTimeInOctets, 'hostTimeOutOctets': hostTimeOutOctets, 'hostTimeOutErrors': hostTimeOutErrors, 'hostTimeOutBroadcastPkts': hostTimeOutBroadcastPkts, 'hostTimeOutMulticastPkts': hostTimeOutMulticastPkts}


class hostTopNControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostTopNControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 1, 1])
	access = 2
	columns = {'hostTopNControlIndex': hostTopNControlIndex, 'hostTopNHostIndex': hostTopNHostIndex, 'hostTopNRateBase': hostTopNRateBase, 'hostTopNTimeRemaining': hostTopNTimeRemaining, 'hostTopNDuration': hostTopNDuration, 'hostTopNRequestedSize': hostTopNRequestedSize, 'hostTopNGrantedSize': hostTopNGrantedSize, 'hostTopNStartTime': hostTopNStartTime, 'hostTopNOwner': hostTopNOwner, 'hostTopNStatus': hostTopNStatus}


class hostTopNEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostTopNReport, hostTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 2, 1])
	access = 2
	columns = {'hostTopNReport': hostTopNReport, 'hostTopNIndex': hostTopNIndex, 'hostTopNAddress': hostTopNAddress, 'hostTopNRate': hostTopNRate}


class matrixControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([matrixControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 1, 1])
	access = 2
	columns = {'matrixControlIndex': matrixControlIndex, 'matrixControlDataSource': matrixControlDataSource, 'matrixControlTableSize': matrixControlTableSize, 'matrixControlLastDeleteTime': matrixControlLastDeleteTime, 'matrixControlOwner': matrixControlOwner, 'matrixControlStatus': matrixControlStatus}


class matrixSDEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([matrixSDIndex, matrixSDSourceAddress, matrixSDDestAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 2, 1])
	access = 2
	columns = {'matrixSDSourceAddress': matrixSDSourceAddress, 'matrixSDDestAddress': matrixSDDestAddress, 'matrixSDIndex': matrixSDIndex, 'matrixSDPkts': matrixSDPkts, 'matrixSDOctets': matrixSDOctets, 'matrixSDErrors': matrixSDErrors}


class matrixDSEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([matrixDSIndex, matrixDSDestAddress, matrixDSSourceAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 3, 1])
	access = 2
	columns = {'matrixDSSourceAddress': matrixDSSourceAddress, 'matrixDSDestAddress': matrixDSDestAddress, 'matrixDSIndex': matrixDSIndex, 'matrixDSPkts': matrixDSPkts, 'matrixDSOctets': matrixDSOctets, 'matrixDSErrors': matrixDSErrors}


class filterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([filterIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 1, 1])
	access = 2
	columns = {'filterIndex': filterIndex, 'filterChannelIndex': filterChannelIndex, 'filterPktDataOffset': filterPktDataOffset, 'filterPktData': filterPktData, 'filterPktDataMask': filterPktDataMask, 'filterPktDataNotMask': filterPktDataNotMask, 'filterPktStatus': filterPktStatus, 'filterPktStatusMask': filterPktStatusMask, 'filterPktStatusNotMask': filterPktStatusNotMask, 'filterOwner': filterOwner, 'filterStatus': filterStatus}


class channelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([channelIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 2, 1])
	access = 2
	columns = {'channelIndex': channelIndex, 'channelIfIndex': channelIfIndex, 'channelAcceptType': channelAcceptType, 'channelDataControl': channelDataControl, 'channelTurnOnEventIndex': channelTurnOnEventIndex, 'channelTurnOffEventIndex': channelTurnOffEventIndex, 'channelEventIndex': channelEventIndex, 'channelEventStatus': channelEventStatus, 'channelMatches': channelMatches, 'channelDescription': channelDescription, 'channelOwner': channelOwner, 'channelStatus': channelStatus}


class bufferControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([bufferControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 1, 1])
	access = 2
	columns = {'bufferControlIndex': bufferControlIndex, 'bufferControlChannelIndex': bufferControlChannelIndex, 'bufferControlFullStatus': bufferControlFullStatus, 'bufferControlFullAction': bufferControlFullAction, 'bufferControlCaptureSliceSize': bufferControlCaptureSliceSize, 'bufferControlDownloadSliceSize': bufferControlDownloadSliceSize, 'bufferControlDownloadOffset': bufferControlDownloadOffset, 'bufferControlMaxOctetsRequested': bufferControlMaxOctetsRequested, 'bufferControlMaxOctetsGranted': bufferControlMaxOctetsGranted, 'bufferControlCapturedPackets': bufferControlCapturedPackets, 'bufferControlTurnOnTime': bufferControlTurnOnTime, 'bufferControlOwner': bufferControlOwner, 'bufferControlStatus': bufferControlStatus}


class captureBufferEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([captureBufferControlIndex, captureBufferIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 2, 1])
	access = 2
	columns = {'captureBufferControlIndex': captureBufferControlIndex, 'captureBufferIndex': captureBufferIndex, 'captureBufferPacketID': captureBufferPacketID, 'captureBufferPacketData': captureBufferPacketData, 'captureBufferPacketLength': captureBufferPacketLength, 'captureBufferPacketTime': captureBufferPacketTime, 'captureBufferPacketStatus': captureBufferPacketStatus}


class eventEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([eventIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 1, 1])
	access = 2
	columns = {'eventIndex': eventIndex, 'eventDescription': eventDescription, 'eventType': eventType, 'eventCommunity': eventCommunity, 'eventLastTimeSent': eventLastTimeSent, 'eventOwner': eventOwner, 'eventStatus': eventStatus}


class logEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([logEventIndex, logIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 9, 2, 1])
	access = 2
	columns = {'logEventIndex': logEventIndex, 'logIndex': logIndex, 'logTime': logTime, 'logDescription': logDescription}


# notifications (traps) 
class risingAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 0, 1])

class fallingAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 0, 2])

# groups 
class rmonEtherStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 1])
	group = [etherStatsIndex, etherStatsDataSource, etherStatsDropEvents, etherStatsOctets, etherStatsPkts, etherStatsBroadcastPkts, etherStatsMulticastPkts, etherStatsCRCAlignErrors, etherStatsUndersizePkts, etherStatsOversizePkts, etherStatsFragments, etherStatsJabbers, etherStatsCollisions, etherStatsPkts64Octets, etherStatsPkts65to127Octets, etherStatsPkts128to255Octets, etherStatsPkts256to511Octets, etherStatsPkts512to1023Octets, etherStatsPkts1024to1518Octets, etherStatsOwner, etherStatsStatus]

class rmonHistoryControlGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 2])
	group = [historyControlIndex, historyControlDataSource, historyControlBucketsRequested, historyControlBucketsGranted, historyControlInterval, historyControlOwner, historyControlStatus]

class rmonEthernetHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 3])
	group = [etherHistoryIndex, etherHistorySampleIndex, etherHistoryIntervalStart, etherHistoryDropEvents, etherHistoryOctets, etherHistoryPkts, etherHistoryBroadcastPkts, etherHistoryMulticastPkts, etherHistoryCRCAlignErrors, etherHistoryUndersizePkts, etherHistoryOversizePkts, etherHistoryFragments, etherHistoryJabbers, etherHistoryCollisions, etherHistoryUtilization]

class rmonAlarmGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 4])
	group = [alarmIndex, alarmInterval, alarmVariable, alarmSampleType, alarmValue, alarmStartupAlarm, alarmRisingThreshold, alarmFallingThreshold, alarmRisingEventIndex, alarmFallingEventIndex, alarmOwner, alarmStatus]

class rmonHostGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 5])
	group = [hostControlIndex, hostControlDataSource, hostControlTableSize, hostControlLastDeleteTime, hostControlOwner, hostControlStatus, hostAddress, hostCreationOrder, hostIndex, hostInPkts, hostOutPkts, hostInOctets, hostOutOctets, hostOutErrors, hostOutBroadcastPkts, hostOutMulticastPkts, hostTimeAddress, hostTimeCreationOrder, hostTimeIndex, hostTimeInPkts, hostTimeOutPkts, hostTimeInOctets, hostTimeOutOctets, hostTimeOutErrors, hostTimeOutBroadcastPkts, hostTimeOutMulticastPkts]

class rmonHostTopNGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 6])
	group = [hostTopNControlIndex, hostTopNHostIndex, hostTopNRateBase, hostTopNTimeRemaining, hostTopNDuration, hostTopNRequestedSize, hostTopNGrantedSize, hostTopNStartTime, hostTopNOwner, hostTopNStatus, hostTopNReport, hostTopNIndex, hostTopNAddress, hostTopNRate]

class rmonMatrixGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 7])
	group = [matrixControlIndex, matrixControlDataSource, matrixControlTableSize, matrixControlLastDeleteTime, matrixControlOwner, matrixControlStatus, matrixSDSourceAddress, matrixSDDestAddress, matrixSDIndex, matrixSDPkts, matrixSDOctets, matrixSDErrors, matrixDSSourceAddress, matrixDSDestAddress, matrixDSIndex, matrixDSPkts, matrixDSOctets, matrixDSErrors]

class rmonFilterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 8])
	group = [filterIndex, filterChannelIndex, filterPktDataOffset, filterPktData, filterPktDataMask, filterPktDataNotMask, filterPktStatus, filterPktStatusMask, filterPktStatusNotMask, filterOwner, filterStatus, channelIndex, channelIfIndex, channelAcceptType, channelDataControl, channelTurnOnEventIndex, channelTurnOffEventIndex, channelEventIndex, channelEventStatus, channelMatches, channelDescription, channelOwner, channelStatus]

class rmonPacketCaptureGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 9])
	group = [bufferControlIndex, bufferControlChannelIndex, bufferControlFullStatus, bufferControlFullAction, bufferControlCaptureSliceSize, bufferControlDownloadSliceSize, bufferControlDownloadOffset, bufferControlMaxOctetsRequested, bufferControlMaxOctetsGranted, bufferControlCapturedPackets, bufferControlTurnOnTime, bufferControlOwner, bufferControlStatus, captureBufferControlIndex, captureBufferIndex, captureBufferPacketID, captureBufferPacketData, captureBufferPacketLength, captureBufferPacketTime, captureBufferPacketStatus]

class rmonEventGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 10])
	group = [eventIndex, eventDescription, eventType, eventCommunity, eventLastTimeSent, eventOwner, eventStatus, logEventIndex, logIndex, logTime, logDescription]

class rmonNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 10, 11])
	group = [risingAlarm, fallingAlarm]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
