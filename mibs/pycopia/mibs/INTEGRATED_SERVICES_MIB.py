# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Gauge32, Integer32, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TimeInterval, TEXTUAL_CONVENTION, RowStatus, TruthValue, TestAndIncr
from IF_MIB import ifIndex, InterfaceIndex

class INTEGRATED_SERVICES_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/INTEGRATED-SERVICES-MIB'
	conformance = 3
	name = 'INTEGRATED-SERVICES-MIB'
	language = 2
	description = 'The MIB module to describe the Integrated Services\nProtocol'

# nodes
class intSrv(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52])
	name = 'intSrv'

class intSrvObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1])
	name = 'intSrvObjects'

class intSrvGenObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 2])
	name = 'intSrvGenObjects'

class intSrvNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 3])
	name = 'intSrvNotifications'

class intSrvConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 4])
	name = 'intSrvConformance'

class intSrvGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 4, 1])
	name = 'intSrvGroups'

class intSrvCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 4, 2])
	name = 'intSrvCompliances'


# macros
# types 

class SessionNumber(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))


class Protocol(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 255))
	format = 'd'


class SessionType(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 255))


class Port(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(2, 4))


class MessageSize(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'd'


class BitRate(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'd'


class BurstSize(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'd'


class QosService(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'bestEffort'), Enum(2, 'guaranteedDelay'), Enum(5, 'controlledLoad')]

# scalars 
class intSrvFlowNewIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


# columns
class intSrvIfAttribAllocatedBits(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1, 1])
	syntaxobject = BitRate
	access = 4
	units = 'Bits per second'


class intSrvIfAttribMaxAllocatedBits(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1, 2])
	syntaxobject = BitRate
	access = 5
	units = 'Bits per second'


class intSrvIfAttribAllocatedBuffer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1, 3])
	syntaxobject = BurstSize
	access = 4
	units = 'Bytes'


class intSrvIfAttribFlows(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class intSrvIfAttribPropagationDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'microseconds'


class intSrvIfAttribStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class intSrvFlowNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 1])
	syntaxobject = SessionNumber


class intSrvFlowType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 2])
	syntaxobject = SessionType


class intSrvFlowOwner(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'rsvp'), Enum(3, 'management')]


class intSrvFlowDestAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class intSrvFlowSenderAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class intSrvFlowDestAddrLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvFlowSenderAddrLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvFlowProtocol(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 8])
	syntaxobject = Protocol


class intSrvFlowDestPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 9])
	syntaxobject = Port


class intSrvFlowPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 10])
	syntaxobject = Port


class intSrvFlowFlowId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvFlowInterface(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 12])
	syntaxobject = InterfaceIndex


class intSrvFlowIfAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class intSrvFlowRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 14])
	syntaxobject = BitRate
	access = 5
	units = 'bits per second'


class intSrvFlowBurst(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 15])
	syntaxobject = BurstSize
	access = 5
	units = 'bytes'


class intSrvFlowWeight(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvFlowQueue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvFlowMinTU(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 18])
	syntaxobject = MessageSize


class intSrvFlowMaxTU(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 19])
	syntaxobject = MessageSize


class intSrvFlowBestEffort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class intSrvFlowPoliced(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class intSrvFlowDiscard(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class intSrvFlowService(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 23])
	syntaxobject = QosService


class intSrvFlowOrder(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvFlowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class intSrvIfAttribEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 1, 1])
	access = 2
	rowstatus = intSrvIfAttribStatus
	columns = {'intSrvIfAttribAllocatedBits': intSrvIfAttribAllocatedBits, 'intSrvIfAttribMaxAllocatedBits': intSrvIfAttribMaxAllocatedBits, 'intSrvIfAttribAllocatedBuffer': intSrvIfAttribAllocatedBuffer, 'intSrvIfAttribFlows': intSrvIfAttribFlows, 'intSrvIfAttribPropagationDelay': intSrvIfAttribPropagationDelay, 'intSrvIfAttribStatus': intSrvIfAttribStatus}


class intSrvFlowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([intSrvFlowNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 1, 2, 1])
	access = 2
	rowstatus = intSrvFlowStatus
	columns = {'intSrvFlowNumber': intSrvFlowNumber, 'intSrvFlowType': intSrvFlowType, 'intSrvFlowOwner': intSrvFlowOwner, 'intSrvFlowDestAddr': intSrvFlowDestAddr, 'intSrvFlowSenderAddr': intSrvFlowSenderAddr, 'intSrvFlowDestAddrLength': intSrvFlowDestAddrLength, 'intSrvFlowSenderAddrLength': intSrvFlowSenderAddrLength, 'intSrvFlowProtocol': intSrvFlowProtocol, 'intSrvFlowDestPort': intSrvFlowDestPort, 'intSrvFlowPort': intSrvFlowPort, 'intSrvFlowFlowId': intSrvFlowFlowId, 'intSrvFlowInterface': intSrvFlowInterface, 'intSrvFlowIfAddr': intSrvFlowIfAddr, 'intSrvFlowRate': intSrvFlowRate, 'intSrvFlowBurst': intSrvFlowBurst, 'intSrvFlowWeight': intSrvFlowWeight, 'intSrvFlowQueue': intSrvFlowQueue, 'intSrvFlowMinTU': intSrvFlowMinTU, 'intSrvFlowMaxTU': intSrvFlowMaxTU, 'intSrvFlowBestEffort': intSrvFlowBestEffort, 'intSrvFlowPoliced': intSrvFlowPoliced, 'intSrvFlowDiscard': intSrvFlowDiscard, 'intSrvFlowService': intSrvFlowService, 'intSrvFlowOrder': intSrvFlowOrder, 'intSrvFlowStatus': intSrvFlowStatus}


# notifications (traps) 
# groups 
class intSrvIfAttribGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 4, 1, 1])
	group = [intSrvIfAttribAllocatedBits, intSrvIfAttribMaxAllocatedBits, intSrvIfAttribAllocatedBuffer, intSrvIfAttribFlows, intSrvIfAttribPropagationDelay, intSrvIfAttribStatus]

class intSrvFlowsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 4, 1, 2])
	group = [intSrvFlowType, intSrvFlowOwner, intSrvFlowDestAddr, intSrvFlowSenderAddr, intSrvFlowDestAddrLength, intSrvFlowSenderAddrLength, intSrvFlowProtocol, intSrvFlowDestPort, intSrvFlowPort, intSrvFlowInterface, intSrvFlowBestEffort, intSrvFlowRate, intSrvFlowBurst, intSrvFlowWeight, intSrvFlowQueue, intSrvFlowMinTU, intSrvFlowDiscard, intSrvFlowPoliced, intSrvFlowService, intSrvFlowIfAddr, intSrvFlowOrder, intSrvFlowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
