# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Gauge32, Integer32, Unsigned32, transmission
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, RowPointer, RowStatus, TruthValue
from IF_MIB import ifIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class OPT_IF_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/OPT-IF-MIB'
	conformance = 5
	name = 'OPT-IF-MIB'
	language = 2
	description = 'The MIB module to describe pre-OTN and OTN interfaces.\n\nCopyright (C) The Internet Society (2003).  This version\nof this MIB module is part of RFC 3591;  see the RFC\nitself for full legal notices.'

# nodes
class optIfMibModule(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133])
	name = 'optIfMibModule'

class optIfObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1])
	name = 'optIfObjects'

class optIfOTMn(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1])
	name = 'optIfOTMn'

class optIfPerfMon(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 2])
	name = 'optIfPerfMon'

class optIfOTSn(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3])
	name = 'optIfOTSn'

class optIfOMSn(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4])
	name = 'optIfOMSn'

class optIfOChGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5])
	name = 'optIfOChGroup'

class optIfOCh(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6])
	name = 'optIfOCh'

class optIfOTUk(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7])
	name = 'optIfOTUk'

class optIfODUk(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8])
	name = 'optIfODUk'

class optIfODUkT(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9])
	name = 'optIfODUkT'

class optIfConfs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2])
	name = 'optIfConfs'

class optIfGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1])
	name = 'optIfGroups'

class optIfCompl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 2])
	name = 'optIfCompl'


# macros
# types 

class OptIfAcTI(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(64, 64))


class OptIfBitRateK(pycopia.SMI.Basetypes.Integer32):
	status = 1


class OptIfDEGM(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(2, 10))


class OptIfDEGThr(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(1, 100))


class OptIfDirectionality(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'sink'), Enum(2, 'source'), Enum(3, 'bidirectional')]


class OptIfSinkOrSource(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'sink'), Enum(2, 'source')]


class OptIfExDAPI(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(16, 16))


class OptIfExSAPI(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(16, 16))


class OptIfIntervalNumber(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(1, 96))


class OptIfTIMDetMode(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'off'), Enum(2, 'dapi'), Enum(3, 'sapi'), Enum(4, 'both')]


class OptIfTxTI(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(64, 64))

# scalars 
# columns
class optIfOTMnOrder(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfOTMnReduced(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTMnBitRates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfOTMnInterfaceType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1, 4])
	syntaxobject = SnmpAdminString


class optIfOTMnTcmMax(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfOTMnOpticalReach(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'intraOffice'), Enum(2, 'shortHaul'), Enum(3, 'longHaul'), Enum(4, 'veryLongHaul'), Enum(5, 'ultraLongHaul')]


class optIfPerfMonCurrentTimeElapsed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class optIfPerfMonCurDayTimeElapsed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class optIfPerfMonIntervalNumIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfPerfMonIntervalNumInvalidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfOTSnDirectionality(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfOTSnAprStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 2])
	syntaxobject = SnmpAdminString


class optIfOTSnAprControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 3])
	syntaxobject = SnmpAdminString


class optIfOTSnTraceIdentifierTransmitted(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 4])
	syntaxobject = OptIfTxTI


class optIfOTSnDAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 5])
	syntaxobject = OptIfExDAPI


class optIfOTSnSAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 6])
	syntaxobject = OptIfExSAPI


class optIfOTSnTraceIdentifierAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 7])
	syntaxobject = OptIfAcTI


class optIfOTSnTIMDetMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 8])
	syntaxobject = OptIfTIMDetMode


class optIfOTSnTIMActEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfOTSnSinkCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSinkCurrentInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurrentLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurrentHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSinkCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSinkCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSinkCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSinkIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOTSnSinkIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSinkIntervalLastInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkIntervalLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkIntervalHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSinkCurDayLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurDayHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSinkPrevDayLastInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkPrevDayLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkPrevDayHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSinkPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSrcCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSrcCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSrcCurrentInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSrcCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOTSnSrcIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOTSnSrcIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSrcIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcIntervalLastInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcIntervalLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcIntervalHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSrcCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurDayLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcCurDayHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTSnSrcPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcPrevDayLastInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcPrevDayLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTSnSrcPrevDayHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnDirectionality(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 1, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfOMSnCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfOMSnSinkCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSinkCurrentAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurrentLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurrentHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSinkCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSinkCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSinkCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSinkIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOMSnSinkIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSinkIntervalLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkIntervalLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkIntervalHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSinkCurDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSinkPrevDayLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkPrevDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkPrevDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSinkPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSrcCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSrcCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSrcCurrentAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSrcCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOMSnSrcIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOMSnSrcIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSrcIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcIntervalLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcIntervalLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcIntervalHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSrcCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcCurDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOMSnSrcPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcPrevDayLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcPrevDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOMSnSrcPrevDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupDirectionality(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 1, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfOChGroupSinkCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSinkCurrentAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSinkCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSinkIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOChGroupSinkIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSinkIntervalLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkIntervalLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkIntervalHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSinkCurDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSinkPrevDayLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkPrevDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkPrevDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSinkPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSrcCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSrcCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChGroupSrcIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOChGroupSrcIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSrcIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcIntervalLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcIntervalLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcIntervalHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSrcCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcCurDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChGroupSrcPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcPrevDayLastAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcPrevDayLowAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChGroupSrcPrevDayHighAggregatedInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChDirectionality(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 1, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfOChCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfOChSinkCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSinkCurrentInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkCurrentLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkCurrentHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkCurrentLowerInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChSinkCurrentUpperInputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChSinkIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 3, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOChSinkIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSinkIntervalLastInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkIntervalLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkIntervalHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSinkCurDayLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkCurDayHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSinkPrevDayLastInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkPrevDayLowInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSinkPrevDayHighInputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcCurrentSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSrcCurrentOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcCurrentLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcCurrentHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcCurrentLowerOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChSrcCurrentUpperOutputPowerThreshold(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = '0.1 dbm'


class optIfOChSrcIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 7, 1, 1])
	syntaxobject = OptIfIntervalNumber


class optIfOChSrcIntervalSuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSrcIntervalLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcIntervalLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcIntervalHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcCurDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSrcCurDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcCurDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcPrevDaySuspectedFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOChSrcPrevDayLastOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcPrevDayLowOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOChSrcPrevDayHighOutputPower(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.1 dbm'


class optIfOTUkDirectionality(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfOTUkBitRateK(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 2])
	syntaxobject = OptIfBitRateK


class optIfOTUkTraceIdentifierTransmitted(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 3])
	syntaxobject = OptIfTxTI


class optIfOTUkDAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 4])
	syntaxobject = OptIfExDAPI


class optIfOTUkSAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 5])
	syntaxobject = OptIfExSAPI


class optIfOTUkTraceIdentifierAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 6])
	syntaxobject = OptIfAcTI


class optIfOTUkTIMDetMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 7])
	syntaxobject = OptIfTIMDetMode


class optIfOTUkTIMActEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTUkDEGThr(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 9])
	syntaxobject = OptIfDEGThr
	access = 5
	units = 'percentage'


class optIfOTUkDEGM(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 10])
	syntaxobject = OptIfDEGM


class optIfOTUkSinkAdaptActive(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTUkSourceAdaptActive(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTUkSinkFECEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfOTUkCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfGCC0Directionality(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 2, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfGCC0Application(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 2, 1, 2])
	syntaxobject = SnmpAdminString


class optIfGCC0RowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class optIfODUkDirectionality(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 1, 1, 1])
	syntaxobject = OptIfDirectionality


class optIfODUkBitRateK(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 1, 1, 2])
	syntaxobject = OptIfBitRateK


class optIfODUkTcmFieldsInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfODUkPositionSeqCurrentSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfODUkTtpPresent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfODUkTtpTraceIdentifierTransmitted(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 1])
	syntaxobject = OptIfTxTI


class optIfODUkTtpDAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 2])
	syntaxobject = OptIfExDAPI


class optIfODUkTtpSAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 3])
	syntaxobject = OptIfExSAPI


class optIfODUkTtpTraceIdentifierAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 4])
	syntaxobject = OptIfAcTI


class optIfODUkTtpTIMDetMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 5])
	syntaxobject = OptIfTIMDetMode


class optIfODUkTtpTIMActEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfODUkTtpDEGThr(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 7])
	syntaxobject = OptIfDEGThr
	access = 5
	units = 'percentage'


class optIfODUkTtpDEGM(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 8])
	syntaxobject = OptIfDEGM


class optIfODUkTtpCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfODUkPositionSeqIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfODUkPositionSeqPosition(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfODUkPositionSeqPointer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class optIfODUkNimDirectionality(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 1])
	syntaxobject = OptIfSinkOrSource


class optIfODUkNimDAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 2])
	syntaxobject = OptIfExDAPI


class optIfODUkNimSAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 3])
	syntaxobject = OptIfExSAPI


class optIfODUkNimTraceIdentifierAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 4])
	syntaxobject = OptIfAcTI


class optIfODUkNimTIMDetMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 5])
	syntaxobject = OptIfTIMDetMode


class optIfODUkNimTIMActEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfODUkNimDEGThr(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 7])
	syntaxobject = OptIfDEGThr
	access = 5
	units = 'percentage'


class optIfODUkNimDEGM(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 8])
	syntaxobject = OptIfDEGM


class optIfODUkNimCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfODUkNimRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class optIfGCC12Codirectional(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfGCC12GCCAccess(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'gcc1'), Enum(2, 'gcc2'), Enum(3, 'gcc1and2')]


class optIfGCC12GCCPassThrough(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfGCC12Application(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 5, 1, 4])
	syntaxobject = SnmpAdminString


class optIfGCC12RowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class optIfODUkTTcmField(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfODUkTCodirectional(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfODUkTTraceIdentifierTransmitted(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 3])
	syntaxobject = OptIfTxTI


class optIfODUkTDAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 4])
	syntaxobject = OptIfExDAPI


class optIfODUkTSAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 5])
	syntaxobject = OptIfExSAPI


class optIfODUkTTraceIdentifierAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 6])
	syntaxobject = OptIfAcTI


class optIfODUkTTIMDetMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 7])
	syntaxobject = OptIfTIMDetMode


class optIfODUkTTIMActEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfODUkTDEGThr(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 9])
	syntaxobject = OptIfDEGThr
	access = 5
	units = 'percentage'


class optIfODUkTDEGM(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 10])
	syntaxobject = OptIfDEGM


class optIfODUkTSinkMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'operational'), Enum(2, 'monitor')]


class optIfODUkTSinkLockSignalAdminState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'locked'), Enum(2, 'normal')]


class optIfODUkTSourceLockSignalAdminState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'locked'), Enum(2, 'normal')]


class optIfODUkTCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfODUkTRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class optIfODUkTNimTcmField(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class optIfODUkTNimDirectionality(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 2])
	syntaxobject = OptIfSinkOrSource


class optIfODUkTNimDAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 3])
	syntaxobject = OptIfExDAPI


class optIfODUkTNimSAPIExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 4])
	syntaxobject = OptIfExSAPI


class optIfODUkTNimTraceIdentifierAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 5])
	syntaxobject = OptIfAcTI


class optIfODUkTNimTIMDetMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 6])
	syntaxobject = OptIfTIMDetMode


class optIfODUkTNimTIMActEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class optIfODUkTNimDEGThr(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 8])
	syntaxobject = OptIfDEGThr
	access = 5
	units = 'percentage'


class optIfODUkTNimDEGM(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 9])
	syntaxobject = OptIfDEGM


class optIfODUkTNimCurrentStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class optIfODUkTNimRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class optIfOTMnEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 1, 1, 1])
	access = 2
	columns = {'optIfOTMnOrder': optIfOTMnOrder, 'optIfOTMnReduced': optIfOTMnReduced, 'optIfOTMnBitRates': optIfOTMnBitRates, 'optIfOTMnInterfaceType': optIfOTMnInterfaceType, 'optIfOTMnTcmMax': optIfOTMnTcmMax, 'optIfOTMnOpticalReach': optIfOTMnOpticalReach}


class optIfPerfMonIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 2, 1, 1])
	access = 2
	columns = {'optIfPerfMonCurrentTimeElapsed': optIfPerfMonCurrentTimeElapsed, 'optIfPerfMonCurDayTimeElapsed': optIfPerfMonCurDayTimeElapsed, 'optIfPerfMonIntervalNumIntervals': optIfPerfMonIntervalNumIntervals, 'optIfPerfMonIntervalNumInvalidIntervals': optIfPerfMonIntervalNumInvalidIntervals}


class optIfOTSnConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 1, 1])
	access = 2
	columns = {'optIfOTSnDirectionality': optIfOTSnDirectionality, 'optIfOTSnAprStatus': optIfOTSnAprStatus, 'optIfOTSnAprControl': optIfOTSnAprControl, 'optIfOTSnTraceIdentifierTransmitted': optIfOTSnTraceIdentifierTransmitted, 'optIfOTSnDAPIExpected': optIfOTSnDAPIExpected, 'optIfOTSnSAPIExpected': optIfOTSnSAPIExpected, 'optIfOTSnTraceIdentifierAccepted': optIfOTSnTraceIdentifierAccepted, 'optIfOTSnTIMDetMode': optIfOTSnTIMDetMode, 'optIfOTSnTIMActEnabled': optIfOTSnTIMActEnabled, 'optIfOTSnCurrentStatus': optIfOTSnCurrentStatus}


class optIfOTSnSinkCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 2, 1])
	access = 2
	columns = {'optIfOTSnSinkCurrentSuspectedFlag': optIfOTSnSinkCurrentSuspectedFlag, 'optIfOTSnSinkCurrentInputPower': optIfOTSnSinkCurrentInputPower, 'optIfOTSnSinkCurrentLowInputPower': optIfOTSnSinkCurrentLowInputPower, 'optIfOTSnSinkCurrentHighInputPower': optIfOTSnSinkCurrentHighInputPower, 'optIfOTSnSinkCurrentLowerInputPowerThreshold': optIfOTSnSinkCurrentLowerInputPowerThreshold, 'optIfOTSnSinkCurrentUpperInputPowerThreshold': optIfOTSnSinkCurrentUpperInputPowerThreshold, 'optIfOTSnSinkCurrentOutputPower': optIfOTSnSinkCurrentOutputPower, 'optIfOTSnSinkCurrentLowOutputPower': optIfOTSnSinkCurrentLowOutputPower, 'optIfOTSnSinkCurrentHighOutputPower': optIfOTSnSinkCurrentHighOutputPower, 'optIfOTSnSinkCurrentLowerOutputPowerThreshold': optIfOTSnSinkCurrentLowerOutputPowerThreshold, 'optIfOTSnSinkCurrentUpperOutputPowerThreshold': optIfOTSnSinkCurrentUpperOutputPowerThreshold}


class optIfOTSnSinkIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOTSnSinkIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 3, 1])
	access = 2
	columns = {'optIfOTSnSinkIntervalNumber': optIfOTSnSinkIntervalNumber, 'optIfOTSnSinkIntervalSuspectedFlag': optIfOTSnSinkIntervalSuspectedFlag, 'optIfOTSnSinkIntervalLastInputPower': optIfOTSnSinkIntervalLastInputPower, 'optIfOTSnSinkIntervalLowInputPower': optIfOTSnSinkIntervalLowInputPower, 'optIfOTSnSinkIntervalHighInputPower': optIfOTSnSinkIntervalHighInputPower, 'optIfOTSnSinkIntervalLastOutputPower': optIfOTSnSinkIntervalLastOutputPower, 'optIfOTSnSinkIntervalLowOutputPower': optIfOTSnSinkIntervalLowOutputPower, 'optIfOTSnSinkIntervalHighOutputPower': optIfOTSnSinkIntervalHighOutputPower}


class optIfOTSnSinkCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 4, 1])
	access = 2
	columns = {'optIfOTSnSinkCurDaySuspectedFlag': optIfOTSnSinkCurDaySuspectedFlag, 'optIfOTSnSinkCurDayLowInputPower': optIfOTSnSinkCurDayLowInputPower, 'optIfOTSnSinkCurDayHighInputPower': optIfOTSnSinkCurDayHighInputPower, 'optIfOTSnSinkCurDayLowOutputPower': optIfOTSnSinkCurDayLowOutputPower, 'optIfOTSnSinkCurDayHighOutputPower': optIfOTSnSinkCurDayHighOutputPower}


class optIfOTSnSinkPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 5, 1])
	access = 2
	columns = {'optIfOTSnSinkPrevDaySuspectedFlag': optIfOTSnSinkPrevDaySuspectedFlag, 'optIfOTSnSinkPrevDayLastInputPower': optIfOTSnSinkPrevDayLastInputPower, 'optIfOTSnSinkPrevDayLowInputPower': optIfOTSnSinkPrevDayLowInputPower, 'optIfOTSnSinkPrevDayHighInputPower': optIfOTSnSinkPrevDayHighInputPower, 'optIfOTSnSinkPrevDayLastOutputPower': optIfOTSnSinkPrevDayLastOutputPower, 'optIfOTSnSinkPrevDayLowOutputPower': optIfOTSnSinkPrevDayLowOutputPower, 'optIfOTSnSinkPrevDayHighOutputPower': optIfOTSnSinkPrevDayHighOutputPower}


class optIfOTSnSrcCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 6, 1])
	access = 2
	columns = {'optIfOTSnSrcCurrentSuspectedFlag': optIfOTSnSrcCurrentSuspectedFlag, 'optIfOTSnSrcCurrentOutputPower': optIfOTSnSrcCurrentOutputPower, 'optIfOTSnSrcCurrentLowOutputPower': optIfOTSnSrcCurrentLowOutputPower, 'optIfOTSnSrcCurrentHighOutputPower': optIfOTSnSrcCurrentHighOutputPower, 'optIfOTSnSrcCurrentLowerOutputPowerThreshold': optIfOTSnSrcCurrentLowerOutputPowerThreshold, 'optIfOTSnSrcCurrentUpperOutputPowerThreshold': optIfOTSnSrcCurrentUpperOutputPowerThreshold, 'optIfOTSnSrcCurrentInputPower': optIfOTSnSrcCurrentInputPower, 'optIfOTSnSrcCurrentLowInputPower': optIfOTSnSrcCurrentLowInputPower, 'optIfOTSnSrcCurrentHighInputPower': optIfOTSnSrcCurrentHighInputPower, 'optIfOTSnSrcCurrentLowerInputPowerThreshold': optIfOTSnSrcCurrentLowerInputPowerThreshold, 'optIfOTSnSrcCurrentUpperInputPowerThreshold': optIfOTSnSrcCurrentUpperInputPowerThreshold}


class optIfOTSnSrcIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOTSnSrcIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 7, 1])
	access = 2
	columns = {'optIfOTSnSrcIntervalNumber': optIfOTSnSrcIntervalNumber, 'optIfOTSnSrcIntervalSuspectedFlag': optIfOTSnSrcIntervalSuspectedFlag, 'optIfOTSnSrcIntervalLastOutputPower': optIfOTSnSrcIntervalLastOutputPower, 'optIfOTSnSrcIntervalLowOutputPower': optIfOTSnSrcIntervalLowOutputPower, 'optIfOTSnSrcIntervalHighOutputPower': optIfOTSnSrcIntervalHighOutputPower, 'optIfOTSnSrcIntervalLastInputPower': optIfOTSnSrcIntervalLastInputPower, 'optIfOTSnSrcIntervalLowInputPower': optIfOTSnSrcIntervalLowInputPower, 'optIfOTSnSrcIntervalHighInputPower': optIfOTSnSrcIntervalHighInputPower}


class optIfOTSnSrcCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 8, 1])
	access = 2
	columns = {'optIfOTSnSrcCurDaySuspectedFlag': optIfOTSnSrcCurDaySuspectedFlag, 'optIfOTSnSrcCurDayLowOutputPower': optIfOTSnSrcCurDayLowOutputPower, 'optIfOTSnSrcCurDayHighOutputPower': optIfOTSnSrcCurDayHighOutputPower, 'optIfOTSnSrcCurDayLowInputPower': optIfOTSnSrcCurDayLowInputPower, 'optIfOTSnSrcCurDayHighInputPower': optIfOTSnSrcCurDayHighInputPower}


class optIfOTSnSrcPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 3, 9, 1])
	access = 2
	columns = {'optIfOTSnSrcPrevDaySuspectedFlag': optIfOTSnSrcPrevDaySuspectedFlag, 'optIfOTSnSrcPrevDayLastOutputPower': optIfOTSnSrcPrevDayLastOutputPower, 'optIfOTSnSrcPrevDayLowOutputPower': optIfOTSnSrcPrevDayLowOutputPower, 'optIfOTSnSrcPrevDayHighOutputPower': optIfOTSnSrcPrevDayHighOutputPower, 'optIfOTSnSrcPrevDayLastInputPower': optIfOTSnSrcPrevDayLastInputPower, 'optIfOTSnSrcPrevDayLowInputPower': optIfOTSnSrcPrevDayLowInputPower, 'optIfOTSnSrcPrevDayHighInputPower': optIfOTSnSrcPrevDayHighInputPower}


class optIfOMSnConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 1, 1])
	access = 2
	columns = {'optIfOMSnDirectionality': optIfOMSnDirectionality, 'optIfOMSnCurrentStatus': optIfOMSnCurrentStatus}


class optIfOMSnSinkCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 2, 1])
	access = 2
	columns = {'optIfOMSnSinkCurrentSuspectedFlag': optIfOMSnSinkCurrentSuspectedFlag, 'optIfOMSnSinkCurrentAggregatedInputPower': optIfOMSnSinkCurrentAggregatedInputPower, 'optIfOMSnSinkCurrentLowAggregatedInputPower': optIfOMSnSinkCurrentLowAggregatedInputPower, 'optIfOMSnSinkCurrentHighAggregatedInputPower': optIfOMSnSinkCurrentHighAggregatedInputPower, 'optIfOMSnSinkCurrentLowerInputPowerThreshold': optIfOMSnSinkCurrentLowerInputPowerThreshold, 'optIfOMSnSinkCurrentUpperInputPowerThreshold': optIfOMSnSinkCurrentUpperInputPowerThreshold, 'optIfOMSnSinkCurrentOutputPower': optIfOMSnSinkCurrentOutputPower, 'optIfOMSnSinkCurrentLowOutputPower': optIfOMSnSinkCurrentLowOutputPower, 'optIfOMSnSinkCurrentHighOutputPower': optIfOMSnSinkCurrentHighOutputPower, 'optIfOMSnSinkCurrentLowerOutputPowerThreshold': optIfOMSnSinkCurrentLowerOutputPowerThreshold, 'optIfOMSnSinkCurrentUpperOutputPowerThreshold': optIfOMSnSinkCurrentUpperOutputPowerThreshold}


class optIfOMSnSinkIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOMSnSinkIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 3, 1])
	access = 2
	columns = {'optIfOMSnSinkIntervalNumber': optIfOMSnSinkIntervalNumber, 'optIfOMSnSinkIntervalSuspectedFlag': optIfOMSnSinkIntervalSuspectedFlag, 'optIfOMSnSinkIntervalLastAggregatedInputPower': optIfOMSnSinkIntervalLastAggregatedInputPower, 'optIfOMSnSinkIntervalLowAggregatedInputPower': optIfOMSnSinkIntervalLowAggregatedInputPower, 'optIfOMSnSinkIntervalHighAggregatedInputPower': optIfOMSnSinkIntervalHighAggregatedInputPower, 'optIfOMSnSinkIntervalLastOutputPower': optIfOMSnSinkIntervalLastOutputPower, 'optIfOMSnSinkIntervalLowOutputPower': optIfOMSnSinkIntervalLowOutputPower, 'optIfOMSnSinkIntervalHighOutputPower': optIfOMSnSinkIntervalHighOutputPower}


class optIfOMSnSinkCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 4, 1])
	access = 2
	columns = {'optIfOMSnSinkCurDaySuspectedFlag': optIfOMSnSinkCurDaySuspectedFlag, 'optIfOMSnSinkCurDayLowAggregatedInputPower': optIfOMSnSinkCurDayLowAggregatedInputPower, 'optIfOMSnSinkCurDayHighAggregatedInputPower': optIfOMSnSinkCurDayHighAggregatedInputPower, 'optIfOMSnSinkCurDayLowOutputPower': optIfOMSnSinkCurDayLowOutputPower, 'optIfOMSnSinkCurDayHighOutputPower': optIfOMSnSinkCurDayHighOutputPower}


class optIfOMSnSinkPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 5, 1])
	access = 2
	columns = {'optIfOMSnSinkPrevDaySuspectedFlag': optIfOMSnSinkPrevDaySuspectedFlag, 'optIfOMSnSinkPrevDayLastAggregatedInputPower': optIfOMSnSinkPrevDayLastAggregatedInputPower, 'optIfOMSnSinkPrevDayLowAggregatedInputPower': optIfOMSnSinkPrevDayLowAggregatedInputPower, 'optIfOMSnSinkPrevDayHighAggregatedInputPower': optIfOMSnSinkPrevDayHighAggregatedInputPower, 'optIfOMSnSinkPrevDayLastOutputPower': optIfOMSnSinkPrevDayLastOutputPower, 'optIfOMSnSinkPrevDayLowOutputPower': optIfOMSnSinkPrevDayLowOutputPower, 'optIfOMSnSinkPrevDayHighOutputPower': optIfOMSnSinkPrevDayHighOutputPower}


class optIfOMSnSrcCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 6, 1])
	access = 2
	columns = {'optIfOMSnSrcCurrentSuspectedFlag': optIfOMSnSrcCurrentSuspectedFlag, 'optIfOMSnSrcCurrentOutputPower': optIfOMSnSrcCurrentOutputPower, 'optIfOMSnSrcCurrentLowOutputPower': optIfOMSnSrcCurrentLowOutputPower, 'optIfOMSnSrcCurrentHighOutputPower': optIfOMSnSrcCurrentHighOutputPower, 'optIfOMSnSrcCurrentLowerOutputPowerThreshold': optIfOMSnSrcCurrentLowerOutputPowerThreshold, 'optIfOMSnSrcCurrentUpperOutputPowerThreshold': optIfOMSnSrcCurrentUpperOutputPowerThreshold, 'optIfOMSnSrcCurrentAggregatedInputPower': optIfOMSnSrcCurrentAggregatedInputPower, 'optIfOMSnSrcCurrentLowAggregatedInputPower': optIfOMSnSrcCurrentLowAggregatedInputPower, 'optIfOMSnSrcCurrentHighAggregatedInputPower': optIfOMSnSrcCurrentHighAggregatedInputPower, 'optIfOMSnSrcCurrentLowerInputPowerThreshold': optIfOMSnSrcCurrentLowerInputPowerThreshold, 'optIfOMSnSrcCurrentUpperInputPowerThreshold': optIfOMSnSrcCurrentUpperInputPowerThreshold}


class optIfOMSnSrcIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOMSnSrcIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 7, 1])
	access = 2
	columns = {'optIfOMSnSrcIntervalNumber': optIfOMSnSrcIntervalNumber, 'optIfOMSnSrcIntervalSuspectedFlag': optIfOMSnSrcIntervalSuspectedFlag, 'optIfOMSnSrcIntervalLastOutputPower': optIfOMSnSrcIntervalLastOutputPower, 'optIfOMSnSrcIntervalLowOutputPower': optIfOMSnSrcIntervalLowOutputPower, 'optIfOMSnSrcIntervalHighOutputPower': optIfOMSnSrcIntervalHighOutputPower, 'optIfOMSnSrcIntervalLastAggregatedInputPower': optIfOMSnSrcIntervalLastAggregatedInputPower, 'optIfOMSnSrcIntervalLowAggregatedInputPower': optIfOMSnSrcIntervalLowAggregatedInputPower, 'optIfOMSnSrcIntervalHighAggregatedInputPower': optIfOMSnSrcIntervalHighAggregatedInputPower}


class optIfOMSnSrcCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 8, 1])
	access = 2
	columns = {'optIfOMSnSrcCurDaySuspectedFlag': optIfOMSnSrcCurDaySuspectedFlag, 'optIfOMSnSrcCurDayLowOutputPower': optIfOMSnSrcCurDayLowOutputPower, 'optIfOMSnSrcCurDayHighOutputPower': optIfOMSnSrcCurDayHighOutputPower, 'optIfOMSnSrcCurDayLowAggregatedInputPower': optIfOMSnSrcCurDayLowAggregatedInputPower, 'optIfOMSnSrcCurDayHighAggregatedInputPower': optIfOMSnSrcCurDayHighAggregatedInputPower}


class optIfOMSnSrcPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 4, 9, 1])
	access = 2
	columns = {'optIfOMSnSrcPrevDaySuspectedFlag': optIfOMSnSrcPrevDaySuspectedFlag, 'optIfOMSnSrcPrevDayLastOutputPower': optIfOMSnSrcPrevDayLastOutputPower, 'optIfOMSnSrcPrevDayLowOutputPower': optIfOMSnSrcPrevDayLowOutputPower, 'optIfOMSnSrcPrevDayHighOutputPower': optIfOMSnSrcPrevDayHighOutputPower, 'optIfOMSnSrcPrevDayLastAggregatedInputPower': optIfOMSnSrcPrevDayLastAggregatedInputPower, 'optIfOMSnSrcPrevDayLowAggregatedInputPower': optIfOMSnSrcPrevDayLowAggregatedInputPower, 'optIfOMSnSrcPrevDayHighAggregatedInputPower': optIfOMSnSrcPrevDayHighAggregatedInputPower}


class optIfOChGroupConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 1, 1])
	access = 2
	columns = {'optIfOChGroupDirectionality': optIfOChGroupDirectionality}


class optIfOChGroupSinkCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 2, 1])
	access = 2
	columns = {'optIfOChGroupSinkCurrentSuspectedFlag': optIfOChGroupSinkCurrentSuspectedFlag, 'optIfOChGroupSinkCurrentAggregatedInputPower': optIfOChGroupSinkCurrentAggregatedInputPower, 'optIfOChGroupSinkCurrentLowAggregatedInputPower': optIfOChGroupSinkCurrentLowAggregatedInputPower, 'optIfOChGroupSinkCurrentHighAggregatedInputPower': optIfOChGroupSinkCurrentHighAggregatedInputPower, 'optIfOChGroupSinkCurrentLowerInputPowerThreshold': optIfOChGroupSinkCurrentLowerInputPowerThreshold, 'optIfOChGroupSinkCurrentUpperInputPowerThreshold': optIfOChGroupSinkCurrentUpperInputPowerThreshold, 'optIfOChGroupSinkCurrentOutputPower': optIfOChGroupSinkCurrentOutputPower, 'optIfOChGroupSinkCurrentLowOutputPower': optIfOChGroupSinkCurrentLowOutputPower, 'optIfOChGroupSinkCurrentHighOutputPower': optIfOChGroupSinkCurrentHighOutputPower, 'optIfOChGroupSinkCurrentLowerOutputPowerThreshold': optIfOChGroupSinkCurrentLowerOutputPowerThreshold, 'optIfOChGroupSinkCurrentUpperOutputPowerThreshold': optIfOChGroupSinkCurrentUpperOutputPowerThreshold}


class optIfOChGroupSinkIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOChGroupSinkIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 3, 1])
	access = 2
	columns = {'optIfOChGroupSinkIntervalNumber': optIfOChGroupSinkIntervalNumber, 'optIfOChGroupSinkIntervalSuspectedFlag': optIfOChGroupSinkIntervalSuspectedFlag, 'optIfOChGroupSinkIntervalLastAggregatedInputPower': optIfOChGroupSinkIntervalLastAggregatedInputPower, 'optIfOChGroupSinkIntervalLowAggregatedInputPower': optIfOChGroupSinkIntervalLowAggregatedInputPower, 'optIfOChGroupSinkIntervalHighAggregatedInputPower': optIfOChGroupSinkIntervalHighAggregatedInputPower, 'optIfOChGroupSinkIntervalLastOutputPower': optIfOChGroupSinkIntervalLastOutputPower, 'optIfOChGroupSinkIntervalLowOutputPower': optIfOChGroupSinkIntervalLowOutputPower, 'optIfOChGroupSinkIntervalHighOutputPower': optIfOChGroupSinkIntervalHighOutputPower}


class optIfOChGroupSinkCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 4, 1])
	access = 2
	columns = {'optIfOChGroupSinkCurDaySuspectedFlag': optIfOChGroupSinkCurDaySuspectedFlag, 'optIfOChGroupSinkCurDayLowAggregatedInputPower': optIfOChGroupSinkCurDayLowAggregatedInputPower, 'optIfOChGroupSinkCurDayHighAggregatedInputPower': optIfOChGroupSinkCurDayHighAggregatedInputPower, 'optIfOChGroupSinkCurDayLowOutputPower': optIfOChGroupSinkCurDayLowOutputPower, 'optIfOChGroupSinkCurDayHighOutputPower': optIfOChGroupSinkCurDayHighOutputPower}


class optIfOChGroupSinkPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 5, 1])
	access = 2
	columns = {'optIfOChGroupSinkPrevDaySuspectedFlag': optIfOChGroupSinkPrevDaySuspectedFlag, 'optIfOChGroupSinkPrevDayLastAggregatedInputPower': optIfOChGroupSinkPrevDayLastAggregatedInputPower, 'optIfOChGroupSinkPrevDayLowAggregatedInputPower': optIfOChGroupSinkPrevDayLowAggregatedInputPower, 'optIfOChGroupSinkPrevDayHighAggregatedInputPower': optIfOChGroupSinkPrevDayHighAggregatedInputPower, 'optIfOChGroupSinkPrevDayLastOutputPower': optIfOChGroupSinkPrevDayLastOutputPower, 'optIfOChGroupSinkPrevDayLowOutputPower': optIfOChGroupSinkPrevDayLowOutputPower, 'optIfOChGroupSinkPrevDayHighOutputPower': optIfOChGroupSinkPrevDayHighOutputPower}


class optIfOChGroupSrcCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 6, 1])
	access = 2
	columns = {'optIfOChGroupSrcCurrentSuspectedFlag': optIfOChGroupSrcCurrentSuspectedFlag, 'optIfOChGroupSrcCurrentOutputPower': optIfOChGroupSrcCurrentOutputPower, 'optIfOChGroupSrcCurrentLowOutputPower': optIfOChGroupSrcCurrentLowOutputPower, 'optIfOChGroupSrcCurrentHighOutputPower': optIfOChGroupSrcCurrentHighOutputPower, 'optIfOChGroupSrcCurrentLowerOutputPowerThreshold': optIfOChGroupSrcCurrentLowerOutputPowerThreshold, 'optIfOChGroupSrcCurrentUpperOutputPowerThreshold': optIfOChGroupSrcCurrentUpperOutputPowerThreshold, 'optIfOChGroupSrcCurrentAggregatedInputPower': optIfOChGroupSrcCurrentAggregatedInputPower, 'optIfOChGroupSrcCurrentLowAggregatedInputPower': optIfOChGroupSrcCurrentLowAggregatedInputPower, 'optIfOChGroupSrcCurrentHighAggregatedInputPower': optIfOChGroupSrcCurrentHighAggregatedInputPower, 'optIfOChGroupSrcCurrentLowerInputPowerThreshold': optIfOChGroupSrcCurrentLowerInputPowerThreshold, 'optIfOChGroupSrcCurrentUpperInputPowerThreshold': optIfOChGroupSrcCurrentUpperInputPowerThreshold}


class optIfOChGroupSrcIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOChGroupSrcIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 7, 1])
	access = 2
	columns = {'optIfOChGroupSrcIntervalNumber': optIfOChGroupSrcIntervalNumber, 'optIfOChGroupSrcIntervalSuspectedFlag': optIfOChGroupSrcIntervalSuspectedFlag, 'optIfOChGroupSrcIntervalLastOutputPower': optIfOChGroupSrcIntervalLastOutputPower, 'optIfOChGroupSrcIntervalLowOutputPower': optIfOChGroupSrcIntervalLowOutputPower, 'optIfOChGroupSrcIntervalHighOutputPower': optIfOChGroupSrcIntervalHighOutputPower, 'optIfOChGroupSrcIntervalLastAggregatedInputPower': optIfOChGroupSrcIntervalLastAggregatedInputPower, 'optIfOChGroupSrcIntervalLowAggregatedInputPower': optIfOChGroupSrcIntervalLowAggregatedInputPower, 'optIfOChGroupSrcIntervalHighAggregatedInputPower': optIfOChGroupSrcIntervalHighAggregatedInputPower}


class optIfOChGroupSrcCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 8, 1])
	access = 2
	columns = {'optIfOChGroupSrcCurDaySuspectedFlag': optIfOChGroupSrcCurDaySuspectedFlag, 'optIfOChGroupSrcCurDayLowOutputPower': optIfOChGroupSrcCurDayLowOutputPower, 'optIfOChGroupSrcCurDayHighOutputPower': optIfOChGroupSrcCurDayHighOutputPower, 'optIfOChGroupSrcCurDayLowAggregatedInputPower': optIfOChGroupSrcCurDayLowAggregatedInputPower, 'optIfOChGroupSrcCurDayHighAggregatedInputPower': optIfOChGroupSrcCurDayHighAggregatedInputPower}


class optIfOChGroupSrcPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 5, 9, 1])
	access = 2
	columns = {'optIfOChGroupSrcPrevDaySuspectedFlag': optIfOChGroupSrcPrevDaySuspectedFlag, 'optIfOChGroupSrcPrevDayLastOutputPower': optIfOChGroupSrcPrevDayLastOutputPower, 'optIfOChGroupSrcPrevDayLowOutputPower': optIfOChGroupSrcPrevDayLowOutputPower, 'optIfOChGroupSrcPrevDayHighOutputPower': optIfOChGroupSrcPrevDayHighOutputPower, 'optIfOChGroupSrcPrevDayLastAggregatedInputPower': optIfOChGroupSrcPrevDayLastAggregatedInputPower, 'optIfOChGroupSrcPrevDayLowAggregatedInputPower': optIfOChGroupSrcPrevDayLowAggregatedInputPower, 'optIfOChGroupSrcPrevDayHighAggregatedInputPower': optIfOChGroupSrcPrevDayHighAggregatedInputPower}


class optIfOChConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 1, 1])
	access = 2
	columns = {'optIfOChDirectionality': optIfOChDirectionality, 'optIfOChCurrentStatus': optIfOChCurrentStatus}


class optIfOChSinkCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 2, 1])
	access = 2
	columns = {'optIfOChSinkCurrentSuspectedFlag': optIfOChSinkCurrentSuspectedFlag, 'optIfOChSinkCurrentInputPower': optIfOChSinkCurrentInputPower, 'optIfOChSinkCurrentLowInputPower': optIfOChSinkCurrentLowInputPower, 'optIfOChSinkCurrentHighInputPower': optIfOChSinkCurrentHighInputPower, 'optIfOChSinkCurrentLowerInputPowerThreshold': optIfOChSinkCurrentLowerInputPowerThreshold, 'optIfOChSinkCurrentUpperInputPowerThreshold': optIfOChSinkCurrentUpperInputPowerThreshold}


class optIfOChSinkIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOChSinkIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 3, 1])
	access = 2
	columns = {'optIfOChSinkIntervalNumber': optIfOChSinkIntervalNumber, 'optIfOChSinkIntervalSuspectedFlag': optIfOChSinkIntervalSuspectedFlag, 'optIfOChSinkIntervalLastInputPower': optIfOChSinkIntervalLastInputPower, 'optIfOChSinkIntervalLowInputPower': optIfOChSinkIntervalLowInputPower, 'optIfOChSinkIntervalHighInputPower': optIfOChSinkIntervalHighInputPower}


class optIfOChSinkCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 4, 1])
	access = 2
	columns = {'optIfOChSinkCurDaySuspectedFlag': optIfOChSinkCurDaySuspectedFlag, 'optIfOChSinkCurDayLowInputPower': optIfOChSinkCurDayLowInputPower, 'optIfOChSinkCurDayHighInputPower': optIfOChSinkCurDayHighInputPower}


class optIfOChSinkPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 5, 1])
	access = 2
	columns = {'optIfOChSinkPrevDaySuspectedFlag': optIfOChSinkPrevDaySuspectedFlag, 'optIfOChSinkPrevDayLastInputPower': optIfOChSinkPrevDayLastInputPower, 'optIfOChSinkPrevDayLowInputPower': optIfOChSinkPrevDayLowInputPower, 'optIfOChSinkPrevDayHighInputPower': optIfOChSinkPrevDayHighInputPower}


class optIfOChSrcCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 6, 1])
	access = 2
	columns = {'optIfOChSrcCurrentSuspectedFlag': optIfOChSrcCurrentSuspectedFlag, 'optIfOChSrcCurrentOutputPower': optIfOChSrcCurrentOutputPower, 'optIfOChSrcCurrentLowOutputPower': optIfOChSrcCurrentLowOutputPower, 'optIfOChSrcCurrentHighOutputPower': optIfOChSrcCurrentHighOutputPower, 'optIfOChSrcCurrentLowerOutputPowerThreshold': optIfOChSrcCurrentLowerOutputPowerThreshold, 'optIfOChSrcCurrentUpperOutputPowerThreshold': optIfOChSrcCurrentUpperOutputPowerThreshold}


class optIfOChSrcIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfOChSrcIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 7, 1])
	access = 2
	columns = {'optIfOChSrcIntervalNumber': optIfOChSrcIntervalNumber, 'optIfOChSrcIntervalSuspectedFlag': optIfOChSrcIntervalSuspectedFlag, 'optIfOChSrcIntervalLastOutputPower': optIfOChSrcIntervalLastOutputPower, 'optIfOChSrcIntervalLowOutputPower': optIfOChSrcIntervalLowOutputPower, 'optIfOChSrcIntervalHighOutputPower': optIfOChSrcIntervalHighOutputPower}


class optIfOChSrcCurDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 8, 1])
	access = 2
	columns = {'optIfOChSrcCurDaySuspectedFlag': optIfOChSrcCurDaySuspectedFlag, 'optIfOChSrcCurDayLowOutputPower': optIfOChSrcCurDayLowOutputPower, 'optIfOChSrcCurDayHighOutputPower': optIfOChSrcCurDayHighOutputPower}


class optIfOChSrcPrevDayEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 6, 9, 1])
	access = 2
	columns = {'optIfOChSrcPrevDaySuspectedFlag': optIfOChSrcPrevDaySuspectedFlag, 'optIfOChSrcPrevDayLastOutputPower': optIfOChSrcPrevDayLastOutputPower, 'optIfOChSrcPrevDayLowOutputPower': optIfOChSrcPrevDayLowOutputPower, 'optIfOChSrcPrevDayHighOutputPower': optIfOChSrcPrevDayHighOutputPower}


class optIfOTUkConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 1, 1])
	access = 2
	columns = {'optIfOTUkDirectionality': optIfOTUkDirectionality, 'optIfOTUkBitRateK': optIfOTUkBitRateK, 'optIfOTUkTraceIdentifierTransmitted': optIfOTUkTraceIdentifierTransmitted, 'optIfOTUkDAPIExpected': optIfOTUkDAPIExpected, 'optIfOTUkSAPIExpected': optIfOTUkSAPIExpected, 'optIfOTUkTraceIdentifierAccepted': optIfOTUkTraceIdentifierAccepted, 'optIfOTUkTIMDetMode': optIfOTUkTIMDetMode, 'optIfOTUkTIMActEnabled': optIfOTUkTIMActEnabled, 'optIfOTUkDEGThr': optIfOTUkDEGThr, 'optIfOTUkDEGM': optIfOTUkDEGM, 'optIfOTUkSinkAdaptActive': optIfOTUkSinkAdaptActive, 'optIfOTUkSourceAdaptActive': optIfOTUkSourceAdaptActive, 'optIfOTUkSinkFECEnabled': optIfOTUkSinkFECEnabled, 'optIfOTUkCurrentStatus': optIfOTUkCurrentStatus}


class optIfGCC0ConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfGCC0Directionality], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 7, 2, 1])
	access = 2
	rowstatus = optIfGCC0RowStatus
	columns = {'optIfGCC0Directionality': optIfGCC0Directionality, 'optIfGCC0Application': optIfGCC0Application, 'optIfGCC0RowStatus': optIfGCC0RowStatus}


class optIfODUkConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 1, 1])
	access = 2
	columns = {'optIfODUkDirectionality': optIfODUkDirectionality, 'optIfODUkBitRateK': optIfODUkBitRateK, 'optIfODUkTcmFieldsInUse': optIfODUkTcmFieldsInUse, 'optIfODUkPositionSeqCurrentSize': optIfODUkPositionSeqCurrentSize, 'optIfODUkTtpPresent': optIfODUkTtpPresent}


class optIfODUkTtpConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 2, 1])
	access = 2
	columns = {'optIfODUkTtpTraceIdentifierTransmitted': optIfODUkTtpTraceIdentifierTransmitted, 'optIfODUkTtpDAPIExpected': optIfODUkTtpDAPIExpected, 'optIfODUkTtpSAPIExpected': optIfODUkTtpSAPIExpected, 'optIfODUkTtpTraceIdentifierAccepted': optIfODUkTtpTraceIdentifierAccepted, 'optIfODUkTtpTIMDetMode': optIfODUkTtpTIMDetMode, 'optIfODUkTtpTIMActEnabled': optIfODUkTtpTIMActEnabled, 'optIfODUkTtpDEGThr': optIfODUkTtpDEGThr, 'optIfODUkTtpDEGM': optIfODUkTtpDEGM, 'optIfODUkTtpCurrentStatus': optIfODUkTtpCurrentStatus}


class optIfODUkPositionSeqEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfODUkPositionSeqIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 3, 1])
	access = 2
	columns = {'optIfODUkPositionSeqIndex': optIfODUkPositionSeqIndex, 'optIfODUkPositionSeqPosition': optIfODUkPositionSeqPosition, 'optIfODUkPositionSeqPointer': optIfODUkPositionSeqPointer}


class optIfODUkNimConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfODUkNimDirectionality], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 4, 1])
	access = 2
	rowstatus = optIfODUkNimRowStatus
	columns = {'optIfODUkNimDirectionality': optIfODUkNimDirectionality, 'optIfODUkNimDAPIExpected': optIfODUkNimDAPIExpected, 'optIfODUkNimSAPIExpected': optIfODUkNimSAPIExpected, 'optIfODUkNimTraceIdentifierAccepted': optIfODUkNimTraceIdentifierAccepted, 'optIfODUkNimTIMDetMode': optIfODUkNimTIMDetMode, 'optIfODUkNimTIMActEnabled': optIfODUkNimTIMActEnabled, 'optIfODUkNimDEGThr': optIfODUkNimDEGThr, 'optIfODUkNimDEGM': optIfODUkNimDEGM, 'optIfODUkNimCurrentStatus': optIfODUkNimCurrentStatus, 'optIfODUkNimRowStatus': optIfODUkNimRowStatus}


class optIfGCC12ConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfGCC12Codirectional, optIfGCC12GCCAccess], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 8, 5, 1])
	access = 2
	rowstatus = optIfGCC12RowStatus
	columns = {'optIfGCC12Codirectional': optIfGCC12Codirectional, 'optIfGCC12GCCAccess': optIfGCC12GCCAccess, 'optIfGCC12GCCPassThrough': optIfGCC12GCCPassThrough, 'optIfGCC12Application': optIfGCC12Application, 'optIfGCC12RowStatus': optIfGCC12RowStatus}


class optIfODUkTConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfODUkTTcmField, optIfODUkTCodirectional], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 1, 1])
	access = 2
	rowstatus = optIfODUkTRowStatus
	columns = {'optIfODUkTTcmField': optIfODUkTTcmField, 'optIfODUkTCodirectional': optIfODUkTCodirectional, 'optIfODUkTTraceIdentifierTransmitted': optIfODUkTTraceIdentifierTransmitted, 'optIfODUkTDAPIExpected': optIfODUkTDAPIExpected, 'optIfODUkTSAPIExpected': optIfODUkTSAPIExpected, 'optIfODUkTTraceIdentifierAccepted': optIfODUkTTraceIdentifierAccepted, 'optIfODUkTTIMDetMode': optIfODUkTTIMDetMode, 'optIfODUkTTIMActEnabled': optIfODUkTTIMActEnabled, 'optIfODUkTDEGThr': optIfODUkTDEGThr, 'optIfODUkTDEGM': optIfODUkTDEGM, 'optIfODUkTSinkMode': optIfODUkTSinkMode, 'optIfODUkTSinkLockSignalAdminState': optIfODUkTSinkLockSignalAdminState, 'optIfODUkTSourceLockSignalAdminState': optIfODUkTSourceLockSignalAdminState, 'optIfODUkTCurrentStatus': optIfODUkTCurrentStatus, 'optIfODUkTRowStatus': optIfODUkTRowStatus}


class optIfODUkTNimConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, optIfODUkTNimTcmField, optIfODUkTNimDirectionality], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 1, 9, 2, 1])
	access = 2
	rowstatus = optIfODUkTNimRowStatus
	columns = {'optIfODUkTNimTcmField': optIfODUkTNimTcmField, 'optIfODUkTNimDirectionality': optIfODUkTNimDirectionality, 'optIfODUkTNimDAPIExpected': optIfODUkTNimDAPIExpected, 'optIfODUkTNimSAPIExpected': optIfODUkTNimSAPIExpected, 'optIfODUkTNimTraceIdentifierAccepted': optIfODUkTNimTraceIdentifierAccepted, 'optIfODUkTNimTIMDetMode': optIfODUkTNimTIMDetMode, 'optIfODUkTNimTIMActEnabled': optIfODUkTNimTIMActEnabled, 'optIfODUkTNimDEGThr': optIfODUkTNimDEGThr, 'optIfODUkTNimDEGM': optIfODUkTNimDEGM, 'optIfODUkTNimCurrentStatus': optIfODUkTNimCurrentStatus, 'optIfODUkTNimRowStatus': optIfODUkTNimRowStatus}


# notifications (traps) 
# groups 
class optIfOTMnGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 1])
	group = [optIfOTMnOrder, optIfOTMnReduced, optIfOTMnBitRates, optIfOTMnInterfaceType, optIfOTMnTcmMax, optIfOTMnOpticalReach]

class optIfPerfMonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 2])
	group = [optIfPerfMonCurrentTimeElapsed, optIfPerfMonCurDayTimeElapsed, optIfPerfMonIntervalNumIntervals, optIfPerfMonIntervalNumInvalidIntervals]

class optIfOTSnCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 3])
	group = [optIfOTSnDirectionality]

class optIfOTSnSourceGroupFull(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 4])
	group = [optIfOTSnTraceIdentifierTransmitted]

class optIfOTSnAPRStatusGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 5])
	group = [optIfOTSnAprStatus]

class optIfOTSnAPRControlGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 6])
	group = [optIfOTSnAprControl]

class optIfOTSnSinkGroupBasic(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 7])
	group = [optIfOTSnCurrentStatus]

class optIfOTSnSinkGroupFull(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 8])
	group = [optIfOTSnDAPIExpected, optIfOTSnSAPIExpected, optIfOTSnTraceIdentifierAccepted, optIfOTSnTIMDetMode, optIfOTSnTIMActEnabled]

class optIfOTSnSinkPreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 9])
	group = [optIfOTSnSinkCurrentSuspectedFlag, optIfOTSnSinkCurrentInputPower, optIfOTSnSinkCurrentLowInputPower, optIfOTSnSinkCurrentHighInputPower, optIfOTSnSinkCurrentOutputPower, optIfOTSnSinkCurrentLowOutputPower, optIfOTSnSinkCurrentHighOutputPower, optIfOTSnSinkIntervalSuspectedFlag, optIfOTSnSinkIntervalLastInputPower, optIfOTSnSinkIntervalLowInputPower, optIfOTSnSinkIntervalHighInputPower, optIfOTSnSinkIntervalLastOutputPower, optIfOTSnSinkIntervalLowOutputPower, optIfOTSnSinkIntervalHighOutputPower, optIfOTSnSinkCurDaySuspectedFlag, optIfOTSnSinkCurDayLowInputPower, optIfOTSnSinkCurDayHighInputPower, optIfOTSnSinkCurDayLowOutputPower, optIfOTSnSinkCurDayHighOutputPower, optIfOTSnSinkPrevDaySuspectedFlag, optIfOTSnSinkPrevDayLastInputPower, optIfOTSnSinkPrevDayLowInputPower, optIfOTSnSinkPrevDayHighInputPower, optIfOTSnSinkPrevDayLastOutputPower, optIfOTSnSinkPrevDayLowOutputPower, optIfOTSnSinkPrevDayHighOutputPower]

class optIfOTSnSinkPreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 10])
	group = [optIfOTSnSinkCurrentLowerInputPowerThreshold, optIfOTSnSinkCurrentUpperInputPowerThreshold, optIfOTSnSinkCurrentLowerOutputPowerThreshold, optIfOTSnSinkCurrentUpperOutputPowerThreshold]

class optIfOTSnSourcePreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 11])
	group = [optIfOTSnSrcCurrentSuspectedFlag, optIfOTSnSrcCurrentOutputPower, optIfOTSnSrcCurrentLowOutputPower, optIfOTSnSrcCurrentHighOutputPower, optIfOTSnSrcCurrentInputPower, optIfOTSnSrcCurrentLowInputPower, optIfOTSnSrcCurrentHighInputPower, optIfOTSnSrcIntervalSuspectedFlag, optIfOTSnSrcIntervalLastOutputPower, optIfOTSnSrcIntervalLowOutputPower, optIfOTSnSrcIntervalHighOutputPower, optIfOTSnSrcIntervalLastInputPower, optIfOTSnSrcIntervalLowInputPower, optIfOTSnSrcIntervalHighInputPower, optIfOTSnSrcCurDaySuspectedFlag, optIfOTSnSrcCurDayLowOutputPower, optIfOTSnSrcCurDayHighOutputPower, optIfOTSnSrcCurDayLowInputPower, optIfOTSnSrcCurDayHighInputPower, optIfOTSnSrcPrevDaySuspectedFlag, optIfOTSnSrcPrevDayLastOutputPower, optIfOTSnSrcPrevDayLowOutputPower, optIfOTSnSrcPrevDayHighOutputPower, optIfOTSnSrcPrevDayLastInputPower, optIfOTSnSrcPrevDayLowInputPower, optIfOTSnSrcPrevDayHighInputPower]

class optIfOTSnSourcePreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 12])
	group = [optIfOTSnSrcCurrentLowerOutputPowerThreshold, optIfOTSnSrcCurrentUpperOutputPowerThreshold, optIfOTSnSrcCurrentLowerInputPowerThreshold, optIfOTSnSrcCurrentUpperInputPowerThreshold]

class optIfOMSnCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 13])
	group = [optIfOMSnDirectionality]

class optIfOMSnSinkGroupBasic(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 14])
	group = [optIfOMSnCurrentStatus]

class optIfOMSnSinkPreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 15])
	group = [optIfOMSnSinkCurrentSuspectedFlag, optIfOMSnSinkCurrentAggregatedInputPower, optIfOMSnSinkCurrentLowAggregatedInputPower, optIfOMSnSinkCurrentHighAggregatedInputPower, optIfOMSnSinkCurrentOutputPower, optIfOMSnSinkCurrentLowOutputPower, optIfOMSnSinkCurrentHighOutputPower, optIfOMSnSinkIntervalSuspectedFlag, optIfOMSnSinkIntervalLastAggregatedInputPower, optIfOMSnSinkIntervalLowAggregatedInputPower, optIfOMSnSinkIntervalHighAggregatedInputPower, optIfOMSnSinkIntervalLastOutputPower, optIfOMSnSinkIntervalLowOutputPower, optIfOMSnSinkIntervalHighOutputPower, optIfOMSnSinkCurDaySuspectedFlag, optIfOMSnSinkCurDayLowAggregatedInputPower, optIfOMSnSinkCurDayHighAggregatedInputPower, optIfOMSnSinkCurDayLowOutputPower, optIfOMSnSinkCurDayHighOutputPower, optIfOMSnSinkPrevDaySuspectedFlag, optIfOMSnSinkPrevDayLastAggregatedInputPower, optIfOMSnSinkPrevDayLowAggregatedInputPower, optIfOMSnSinkPrevDayHighAggregatedInputPower, optIfOMSnSinkPrevDayLastOutputPower, optIfOMSnSinkPrevDayLowOutputPower, optIfOMSnSinkPrevDayHighOutputPower]

class optIfOMSnSinkPreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 16])
	group = [optIfOMSnSinkCurrentLowerInputPowerThreshold, optIfOMSnSinkCurrentUpperInputPowerThreshold, optIfOMSnSinkCurrentLowerOutputPowerThreshold, optIfOMSnSinkCurrentUpperOutputPowerThreshold]

class optIfOMSnSourcePreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 17])
	group = [optIfOMSnSrcCurrentSuspectedFlag, optIfOMSnSrcCurrentOutputPower, optIfOMSnSrcCurrentLowOutputPower, optIfOMSnSrcCurrentHighOutputPower, optIfOMSnSrcCurrentAggregatedInputPower, optIfOMSnSrcCurrentLowAggregatedInputPower, optIfOMSnSrcCurrentHighAggregatedInputPower, optIfOMSnSrcIntervalSuspectedFlag, optIfOMSnSrcIntervalLastOutputPower, optIfOMSnSrcIntervalLowOutputPower, optIfOMSnSrcIntervalHighOutputPower, optIfOMSnSrcIntervalLastAggregatedInputPower, optIfOMSnSrcIntervalLowAggregatedInputPower, optIfOMSnSrcIntervalHighAggregatedInputPower, optIfOMSnSrcCurDaySuspectedFlag, optIfOMSnSrcCurDayLowOutputPower, optIfOMSnSrcCurDayHighOutputPower, optIfOMSnSrcCurDayLowAggregatedInputPower, optIfOMSnSrcCurDayHighAggregatedInputPower, optIfOMSnSrcPrevDaySuspectedFlag, optIfOMSnSrcPrevDayLastOutputPower, optIfOMSnSrcPrevDayLowOutputPower, optIfOMSnSrcPrevDayHighOutputPower, optIfOMSnSrcPrevDayLastAggregatedInputPower, optIfOMSnSrcPrevDayLowAggregatedInputPower, optIfOMSnSrcPrevDayHighAggregatedInputPower]

class optIfOMSnSourcePreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 18])
	group = [optIfOMSnSrcCurrentLowerOutputPowerThreshold, optIfOMSnSrcCurrentUpperOutputPowerThreshold, optIfOMSnSrcCurrentLowerInputPowerThreshold, optIfOMSnSrcCurrentUpperInputPowerThreshold]

class optIfOChGroupCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 19])
	group = [optIfOChGroupDirectionality]

class optIfOChGroupSinkPreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 20])
	group = [optIfOChGroupSinkCurrentSuspectedFlag, optIfOChGroupSinkCurrentAggregatedInputPower, optIfOChGroupSinkCurrentLowAggregatedInputPower, optIfOChGroupSinkCurrentHighAggregatedInputPower, optIfOChGroupSinkCurrentOutputPower, optIfOChGroupSinkCurrentLowOutputPower, optIfOChGroupSinkCurrentHighOutputPower, optIfOChGroupSinkIntervalSuspectedFlag, optIfOChGroupSinkIntervalLastAggregatedInputPower, optIfOChGroupSinkIntervalLowAggregatedInputPower, optIfOChGroupSinkIntervalHighAggregatedInputPower, optIfOChGroupSinkIntervalLastOutputPower, optIfOChGroupSinkIntervalLowOutputPower, optIfOChGroupSinkIntervalHighOutputPower, optIfOChGroupSinkCurDaySuspectedFlag, optIfOChGroupSinkCurDayLowAggregatedInputPower, optIfOChGroupSinkCurDayHighAggregatedInputPower, optIfOChGroupSinkCurDayLowOutputPower, optIfOChGroupSinkCurDayHighOutputPower, optIfOChGroupSinkPrevDaySuspectedFlag, optIfOChGroupSinkPrevDayLastAggregatedInputPower, optIfOChGroupSinkPrevDayLowAggregatedInputPower, optIfOChGroupSinkPrevDayHighAggregatedInputPower, optIfOChGroupSinkPrevDayLastOutputPower, optIfOChGroupSinkPrevDayLowOutputPower, optIfOChGroupSinkPrevDayHighOutputPower]

class optIfOChGroupSinkPreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 21])
	group = [optIfOChGroupSinkCurrentLowerInputPowerThreshold, optIfOChGroupSinkCurrentUpperInputPowerThreshold, optIfOChGroupSinkCurrentLowerOutputPowerThreshold, optIfOChGroupSinkCurrentUpperOutputPowerThreshold]

class optIfOChGroupSourcePreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 22])
	group = [optIfOChGroupSrcCurrentSuspectedFlag, optIfOChGroupSrcCurrentOutputPower, optIfOChGroupSrcCurrentLowOutputPower, optIfOChGroupSrcCurrentHighOutputPower, optIfOChGroupSrcCurrentAggregatedInputPower, optIfOChGroupSrcCurrentLowAggregatedInputPower, optIfOChGroupSrcCurrentHighAggregatedInputPower, optIfOChGroupSrcIntervalSuspectedFlag, optIfOChGroupSrcIntervalLastOutputPower, optIfOChGroupSrcIntervalLowOutputPower, optIfOChGroupSrcIntervalHighOutputPower, optIfOChGroupSrcIntervalLastAggregatedInputPower, optIfOChGroupSrcIntervalLowAggregatedInputPower, optIfOChGroupSrcIntervalHighAggregatedInputPower, optIfOChGroupSrcCurDaySuspectedFlag, optIfOChGroupSrcCurDayLowOutputPower, optIfOChGroupSrcCurDayHighOutputPower, optIfOChGroupSrcCurDayLowAggregatedInputPower, optIfOChGroupSrcCurDayHighAggregatedInputPower, optIfOChGroupSrcPrevDaySuspectedFlag, optIfOChGroupSrcPrevDayLastOutputPower, optIfOChGroupSrcPrevDayLowOutputPower, optIfOChGroupSrcPrevDayHighOutputPower, optIfOChGroupSrcPrevDayLastAggregatedInputPower, optIfOChGroupSrcPrevDayLowAggregatedInputPower, optIfOChGroupSrcPrevDayHighAggregatedInputPower]

class optIfOChGroupSourcePreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 23])
	group = [optIfOChGroupSrcCurrentLowerOutputPowerThreshold, optIfOChGroupSrcCurrentUpperOutputPowerThreshold, optIfOChGroupSrcCurrentLowerInputPowerThreshold, optIfOChGroupSrcCurrentUpperInputPowerThreshold]

class optIfOChCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 24])
	group = [optIfOChDirectionality]

class optIfOChSinkGroupBasic(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 25])
	group = [optIfOChCurrentStatus]

class optIfOChSinkPreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 26])
	group = [optIfOChSinkCurrentSuspectedFlag, optIfOChSinkCurrentInputPower, optIfOChSinkCurrentLowInputPower, optIfOChSinkCurrentHighInputPower, optIfOChSinkIntervalSuspectedFlag, optIfOChSinkIntervalLastInputPower, optIfOChSinkIntervalLowInputPower, optIfOChSinkIntervalHighInputPower, optIfOChSinkCurDaySuspectedFlag, optIfOChSinkCurDayLowInputPower, optIfOChSinkCurDayHighInputPower, optIfOChSinkPrevDaySuspectedFlag, optIfOChSinkPrevDayLastInputPower, optIfOChSinkPrevDayLowInputPower, optIfOChSinkPrevDayHighInputPower]

class optIfOChSinkPreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 27])
	group = [optIfOChSinkCurrentLowerInputPowerThreshold, optIfOChSinkCurrentUpperInputPowerThreshold]

class optIfOChSourcePreOtnPMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 28])
	group = [optIfOChSrcCurrentSuspectedFlag, optIfOChSrcCurrentOutputPower, optIfOChSrcCurrentLowOutputPower, optIfOChSrcCurrentHighOutputPower, optIfOChSrcIntervalSuspectedFlag, optIfOChSrcIntervalLastOutputPower, optIfOChSrcIntervalLowOutputPower, optIfOChSrcIntervalHighOutputPower, optIfOChSrcCurDaySuspectedFlag, optIfOChSrcCurDayLowOutputPower, optIfOChSrcCurDayHighOutputPower, optIfOChSrcPrevDaySuspectedFlag, optIfOChSrcPrevDayLastOutputPower, optIfOChSrcPrevDayLowOutputPower, optIfOChSrcPrevDayHighOutputPower]

class optIfOChSourcePreOtnPMThresholdGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 29])
	group = [optIfOChSrcCurrentLowerOutputPowerThreshold, optIfOChSrcCurrentUpperOutputPowerThreshold]

class optIfOTUkCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 30])
	group = [optIfOTUkDirectionality, optIfOTUkBitRateK]

class optIfOTUkSourceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 31])
	group = [optIfOTUkTraceIdentifierTransmitted, optIfOTUkSourceAdaptActive]

class optIfOTUkSinkGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 32])
	group = [optIfOTUkDAPIExpected, optIfOTUkSAPIExpected, optIfOTUkTraceIdentifierAccepted, optIfOTUkTIMDetMode, optIfOTUkTIMActEnabled, optIfOTUkDEGThr, optIfOTUkDEGM, optIfOTUkSinkAdaptActive, optIfOTUkSinkFECEnabled, optIfOTUkCurrentStatus]

class optIfGCC0Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 33])
	group = [optIfGCC0Application, optIfGCC0RowStatus]

class optIfODUkGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 34])
	group = [optIfODUkDirectionality, optIfODUkBitRateK, optIfODUkTcmFieldsInUse, optIfODUkPositionSeqCurrentSize, optIfODUkPositionSeqPosition, optIfODUkPositionSeqPointer, optIfODUkTtpPresent]

class optIfODUkTtpSourceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 35])
	group = [optIfODUkTtpTraceIdentifierTransmitted]

class optIfODUkTtpSinkGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 36])
	group = [optIfODUkTtpDAPIExpected, optIfODUkTtpSAPIExpected, optIfODUkTtpTraceIdentifierAccepted, optIfODUkTtpTIMDetMode, optIfODUkTtpTIMActEnabled, optIfODUkTtpDEGThr, optIfODUkTtpDEGM, optIfODUkTtpCurrentStatus]

class optIfODUkNimGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 37])
	group = [optIfODUkNimDAPIExpected, optIfODUkNimSAPIExpected, optIfODUkNimTraceIdentifierAccepted, optIfODUkNimTIMDetMode, optIfODUkNimTIMActEnabled, optIfODUkNimDEGThr, optIfODUkNimDEGM, optIfODUkNimCurrentStatus, optIfODUkNimRowStatus]

class optIfGCC12Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 38])
	group = [optIfGCC12GCCPassThrough, optIfGCC12Application, optIfGCC12RowStatus]

class optIfODUkTCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 39])
	group = [optIfODUkTRowStatus]

class optIfODUkTSourceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 40])
	group = [optIfODUkTTraceIdentifierTransmitted, optIfODUkTSourceLockSignalAdminState]

class optIfODUkTSinkGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 41])
	group = [optIfODUkTDAPIExpected, optIfODUkTSAPIExpected, optIfODUkTTraceIdentifierAccepted, optIfODUkTTIMDetMode, optIfODUkTTIMActEnabled, optIfODUkTDEGThr, optIfODUkTDEGM, optIfODUkTCurrentStatus]

class optIfODUkTSinkGroupCtp(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 42])
	group = [optIfODUkTSinkMode, optIfODUkTSinkLockSignalAdminState]

class optIfODUkTNimGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 133, 2, 1, 43])
	group = [optIfODUkTNimDAPIExpected, optIfODUkTNimSAPIExpected, optIfODUkTNimTraceIdentifierAccepted, optIfODUkTNimTIMDetMode, optIfODUkTNimTIMActEnabled, optIfODUkTNimDEGThr, optIfODUkTNimDEGM, optIfODUkTNimCurrentStatus, optIfODUkTNimRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
