# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString
from ENTITY_MIB import entPhysicalIndex

class CISCO_ENTITY_FRU_CONTROL_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-ENTITY-FRU-CONTROL-MIB'
	conformance = 3
	name = 'CISCO-ENTITY-FRU-CONTROL-MIB'
	language = 2
	description = 'The CISCO-ENTITY-FRU-CONTROL-MIB is used to monitor \nand configure operational status of \nField Replaceable Units (FRUs) of the \nsystem listed in the Entity-MIB (RFC 2037) entPhysicalTable. \n\nFRUs include assemblies such as power supplies, fans, \nprocessor modules, interface modules, etc.'

# nodes
class ciscoEntityFRUControlMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117])
	name = 'ciscoEntityFRUControlMIB'

class cefcMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1])
	name = 'cefcMIBObjects'

class cefcFRUPower(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1])
	name = 'cefcFRUPower'

class cefcMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 2])
	name = 'cefcMIBNotificationPrefix'

class cefcMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 3])
	name = 'cefcMIBConformance'

class cefcMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 3, 1])
	name = 'cefcMIBCompliances'

class cefcMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 3, 2])
	name = 'cefcMIBGroups'


# macros
# types 

class PowerRedundancyType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'notsupported'), Enum(2, 'redundant'), Enum(3, 'combined')]


class PowerAdminType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'on'), Enum(2, 'off')]


class PowerOperType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'offEnvOther'), Enum(2, 'on'), Enum(3, 'offAdmin'), Enum(4, 'offDenied'), Enum(5, 'offEnvPower'), Enum(6, 'offEnvTemp'), Enum(7, 'offEnvFan')]


class FRUCurrentType(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(-1000000000, 1000000000))

# scalars 
# columns
class cefcPowerRedundancyMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 1, 1, 1])
	syntaxobject = PowerRedundancyType


class cefcPowerUnits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cefcTotalAvailableCurrent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 1, 1, 3])
	syntaxobject = FRUCurrentType


class cefcTotalDrawnCurrent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 1, 1, 4])
	syntaxobject = FRUCurrentType


class cefcFRUPowerAdminStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 2, 1, 1])
	syntaxobject = PowerAdminType


class cefcFRUPowerOperStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 2, 1, 2])
	syntaxobject = PowerOperType


class cefcFRUCurrent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 2, 1, 3])
	syntaxobject = FRUCurrentType


# rows 
class cefcFRUPowerSupplyGroupEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([entPhysicalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 1, 1])
	access = 2
	columns = {'cefcPowerRedundancyMode': cefcPowerRedundancyMode, 'cefcPowerUnits': cefcPowerUnits, 'cefcTotalAvailableCurrent': cefcTotalAvailableCurrent, 'cefcTotalDrawnCurrent': cefcTotalDrawnCurrent}


class cefcFRUPowerStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([entPhysicalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 1, 1, 2, 1])
	access = 2
	columns = {'cefcFRUPowerAdminStatus': cefcFRUPowerAdminStatus, 'cefcFRUPowerOperStatus': cefcFRUPowerOperStatus, 'cefcFRUCurrent': cefcFRUCurrent}


# notifications (traps) 
# groups 
class cefcMIBPowerModeGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 3, 2, 1])
	group = [cefcPowerRedundancyMode, cefcPowerUnits, cefcTotalAvailableCurrent, cefcTotalDrawnCurrent]

class cefcMIBPowerFRUControlGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 117, 3, 2, 2])
	group = [cefcFRUPowerAdminStatus, cefcFRUPowerOperStatus, cefcFRUCurrent]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
