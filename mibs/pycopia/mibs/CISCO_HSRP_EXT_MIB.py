# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex, InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, IpAddress
from CISCO_HSRP_MIB import cHsrpGrpNumber
from CISCO_TC import Unsigned32
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TruthValue, RowStatus

class CISCO_HSRP_EXT_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-HSRP-EXT-MIB'
	conformance = 3
	name = 'CISCO-HSRP-EXT-MIB'
	language = 2
	description = 'The Extension MIB module for the CISCO-HSRP-MIB which is\nbased on RFC2281.'

# nodes
class ciscoHsrpExtMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107])
	name = 'ciscoHsrpExtMIB'

class ciscoHsrpExtMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1])
	name = 'ciscoHsrpExtMIBObjects'

class cHsrpExtGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1])
	name = 'cHsrpExtGroup'

class cHsrpExtIfBIA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 2])
	name = 'cHsrpExtIfBIA'

class cHsrpExtConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 3])
	name = 'cHsrpExtConformance'

class cHsrpExtCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 3, 1])
	name = 'cHsrpExtCompliances'

class cHsrpExtComplianceGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 3, 2])
	name = 'cHsrpExtComplianceGroups'


# macros
# types 
# scalars 
# columns
class cHsrpExtIfTracked(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 1, 1, 1])
	syntaxobject = InterfaceIndex


class cHsrpExtIfTrackedPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class cHsrpExtIfTrackedRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class cHsrpExtSecAddrAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cHsrpExtSecAddrRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class cHsrpExtIfUseBIA(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cHsrpExtIfRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class cHsrpExtIfTrackedEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, cHsrpGrpNumber, cHsrpExtIfTracked], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 1, 1])
	access = 2
	rowstatus = cHsrpExtIfTrackedRowStatus
	columns = {'cHsrpExtIfTracked': cHsrpExtIfTracked, 'cHsrpExtIfTrackedPriority': cHsrpExtIfTrackedPriority, 'cHsrpExtIfTrackedRowStatus': cHsrpExtIfTrackedRowStatus}


class cHsrpExtSecAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, cHsrpGrpNumber, cHsrpExtSecAddrAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 1, 2, 1])
	access = 2
	rowstatus = cHsrpExtSecAddrRowStatus
	columns = {'cHsrpExtSecAddrAddress': cHsrpExtSecAddrAddress, 'cHsrpExtSecAddrRowStatus': cHsrpExtSecAddrRowStatus}


class cHsrpExtIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 1, 2, 1, 1])
	access = 2
	rowstatus = cHsrpExtIfRowStatus
	columns = {'cHsrpExtIfUseBIA': cHsrpExtIfUseBIA, 'cHsrpExtIfRowStatus': cHsrpExtIfRowStatus}


# notifications (traps) 
# groups 
class cHsrpExtIfTrackedGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 3, 2, 1])
	group = [cHsrpExtIfTrackedPriority, cHsrpExtIfTrackedRowStatus]

class cHsrpExtSecAddrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 3, 2, 2])
	group = [cHsrpExtSecAddrRowStatus]

class cHsrpExtIfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 107, 3, 2, 3])
	group = [cHsrpExtIfUseBIA, cHsrpExtIfRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
