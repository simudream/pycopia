# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_SMI import Integer32, Counter32, OBJECT_TYPE, MODULE_IDENTITY, NOTIFICATION_TYPE
from SNMP_REPEATER_MIB import rptrPortAutoPartitionState
from MAU_MIB import rpMauMediaAvailable, rpMauGroupIndex, rpMauPortIndex, rpMauIndex
from HP_ICF_OID import hpicfObjectModules, hpicfRepeater, hpicf8023RptrTrapsPrefix
from SNMPv2_TC import DisplayString, TruthValue

class HP_ICF_8023_RPTR(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-ICF-8023-RPTR'
	conformance = 5
	name = 'HP-ICF-8023-RPTR'
	language = 2
	description = 'This MIB module contains objects that provide\nHP-specific extensions to the 802.3 Repeater MIB.'

# nodes
class hpicf8023RptrMib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9])
	name = 'hpicf8023RptrMib'

class hpicf8023RptrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1])
	name = 'hpicf8023RptrConformance'

class hpicf8023RptrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 1])
	name = 'hpicf8023RptrCompliances'

class hpicf8023RptrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2])
	name = 'hpicf8023RptrGroups'

class hpRptrBasic(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1])
	name = 'hpRptrBasic'

class hpRptrBasicGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 1])
	name = 'hpRptrBasicGlobal'

class hpRptrBasicGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2])
	name = 'hpRptrBasicGroup'

class hpRptrBasicPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3])
	name = 'hpRptrBasicPort'

class hpRptrMonitor(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2])
	name = 'hpRptrMonitor'

class hpRptrMonitorGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1])
	name = 'hpRptrMonitorGlobal'

class hpRptrMonCounters(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1])
	name = 'hpRptrMonCounters'

class hpRptrMonitorGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 2])
	name = 'hpRptrMonitorGroup'

class hpRptrMonitorPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3])
	name = 'hpRptrMonitorPort'

class hpRpMauGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4])
	name = 'hpRpMauGroup'


# macros
# types 
# scalars 
class hpRptrEntityName(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hpRptrThinlanFault(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrSqeEnabled(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrRobustHealing(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrMonGlobalFrames(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalOctets(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalFCSErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalAlignmentErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalFrameTooLongs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalShortEvents(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalRunts(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalCollisions(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalLateEvents(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalVeryLongEvents(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalDataRateMismatches(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalAutoPartitions(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalUcastPackets(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalBcastPackets(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonGlobalMcastPackets(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class hpRptrGrpGroupIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpRptrGrpPortsAdminStatus(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpRptrGrpPortsSegStatus(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpRptrGrpPortsMediaAvailable(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpRptrGrpPortsLinkbeatEnabled(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpRptrGrpPortsOperStatus(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpRptrPtGroupIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpRptrPtPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpRptrPtLinkbeatEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrPtPolarityReversed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrPtSqeEnabled(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrPtMediaAvailTrapEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrPtLongCableEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRptrMonPtGroupIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpRptrMonPtPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpRptrMonPtUcastPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonPtBcastPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRptrMonPtMcastPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpRpMauTypeList(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class hpRpMauAutoNegSupported(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpRpMauAutoNegAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'autoNegotiate'), Enum(2, 'forceTo100TXHD'), Enum(3, 'forceTo10THD')]


class hpRpMauAutoNegRemoteSignaling(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'detected'), Enum(2, 'notdetected')]


class hpRpMauAutoNegConfig(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'configuring'), Enum(3, 'complete'), Enum(4, 'disabled'), Enum(5, 'parallelDetectFail')]


class hpRpMauAutoNegCapReceived(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class hpRpMauAutoNegRestart(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'restart'), Enum(2, 'norestart')]


# rows 
class hpRptrBasicGroupEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([hpRptrGrpGroupIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 2, 1, 1])
	access = 2
	columns = {'hpRptrGrpGroupIndex': hpRptrGrpGroupIndex, 'hpRptrGrpPortsAdminStatus': hpRptrGrpPortsAdminStatus, 'hpRptrGrpPortsSegStatus': hpRptrGrpPortsSegStatus, 'hpRptrGrpPortsMediaAvailable': hpRptrGrpPortsMediaAvailable, 'hpRptrGrpPortsLinkbeatEnabled': hpRptrGrpPortsLinkbeatEnabled, 'hpRptrGrpPortsOperStatus': hpRptrGrpPortsOperStatus}


class hpRptrBasicPtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpRptrPtGroupIndex, hpRptrPtPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 1, 3, 1, 1])
	access = 2
	columns = {'hpRptrPtGroupIndex': hpRptrPtGroupIndex, 'hpRptrPtPortIndex': hpRptrPtPortIndex, 'hpRptrPtLinkbeatEnable': hpRptrPtLinkbeatEnable, 'hpRptrPtPolarityReversed': hpRptrPtPolarityReversed, 'hpRptrPtSqeEnabled': hpRptrPtSqeEnabled, 'hpRptrPtMediaAvailTrapEnable': hpRptrPtMediaAvailTrapEnable, 'hpRptrPtLongCableEnable': hpRptrPtLongCableEnable}


class hpRptrMonPtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpRptrMonPtGroupIndex, hpRptrMonPtPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 2, 3, 1, 1])
	access = 2
	columns = {'hpRptrMonPtGroupIndex': hpRptrMonPtGroupIndex, 'hpRptrMonPtPortIndex': hpRptrMonPtPortIndex, 'hpRptrMonPtUcastPackets': hpRptrMonPtUcastPackets, 'hpRptrMonPtBcastPackets': hpRptrMonPtBcastPackets, 'hpRptrMonPtMcastPackets': hpRptrMonPtMcastPackets}


class hpRpMauEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rpMauGroupIndex, rpMauPortIndex, rpMauIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2, 4, 1, 1])
	access = 2
	columns = {'hpRpMauTypeList': hpRpMauTypeList, 'hpRpMauAutoNegSupported': hpRpMauAutoNegSupported, 'hpRpMauAutoNegAdminStatus': hpRpMauAutoNegAdminStatus, 'hpRpMauAutoNegRemoteSignaling': hpRpMauAutoNegRemoteSignaling, 'hpRpMauAutoNegConfig': hpRpMauAutoNegConfig, 'hpRpMauAutoNegCapReceived': hpRpMauAutoNegCapReceived, 'hpRpMauAutoNegRestart': hpRpMauAutoNegRestart}


# notifications (traps) 
class hpicfLinkBeatTrap(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0, 1])

class hpicfPartitionTrap(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0, 2])

class hpicfMediaAvailDetectTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0, 3])

class hpicfMediaAvailLostTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0, 4])

class hpicfPortPartitionTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0, 5])

class hpicfPortHealTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0, 6])

# groups 
class hpicf8023RptrBasicGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 1])
	group = [hpRptrEntityName, hpRptrThinlanFault, hpRptrSqeEnabled, hpRptrRobustHealing, hpRptrGrpGroupIndex, hpRptrGrpPortsAdminStatus, hpRptrGrpPortsSegStatus, hpRptrGrpPortsMediaAvailable, hpRptrGrpPortsLinkbeatEnabled, hpRptrGrpPortsOperStatus, hpRptrPtGroupIndex, hpRptrPtPortIndex, hpRptrPtLinkbeatEnable, hpRptrPtPolarityReversed]

class hpicf8023RptrBasicSlaveGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 2])
	group = [hpRptrEntityName, hpRptrThinlanFault, hpRptrSqeEnabled, hpRptrGrpGroupIndex, hpRptrGrpPortsAdminStatus, hpRptrGrpPortsSegStatus, hpRptrGrpPortsMediaAvailable, hpRptrGrpPortsLinkbeatEnabled, hpRptrGrpPortsOperStatus, hpRptrPtGroupIndex, hpRptrPtPortIndex, hpRptrPtLinkbeatEnable, hpRptrPtPolarityReversed]

class hpicf8023RptrMonitorGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 3])
	group = [hpRptrMonGlobalFrames, hpRptrMonGlobalOctets, hpRptrMonGlobalFCSErrors, hpRptrMonGlobalAlignmentErrors, hpRptrMonGlobalFrameTooLongs, hpRptrMonGlobalShortEvents, hpRptrMonGlobalRunts, hpRptrMonGlobalCollisions, hpRptrMonGlobalLateEvents, hpRptrMonGlobalVeryLongEvents, hpRptrMonGlobalDataRateMismatches, hpRptrMonGlobalAutoPartitions, hpRptrMonGlobalErrors, hpRptrMonGlobalUcastPackets, hpRptrMonGlobalBcastPackets, hpRptrMonGlobalMcastPackets, hpRptrMonPtGroupIndex, hpRptrMonPtPortIndex, hpRptrMonPtUcastPackets, hpRptrMonPtBcastPackets, hpRptrMonPtMcastPackets]

class hpicf8023RptrMonitorSlaveGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 4])
	group = [hpRptrMonGlobalFrames, hpRptrMonGlobalOctets, hpRptrMonGlobalFCSErrors, hpRptrMonGlobalAlignmentErrors, hpRptrMonGlobalFrameTooLongs, hpRptrMonGlobalShortEvents, hpRptrMonGlobalRunts, hpRptrMonGlobalCollisions, hpRptrMonGlobalLateEvents, hpRptrMonGlobalVeryLongEvents, hpRptrMonGlobalDataRateMismatches, hpRptrMonGlobalAutoPartitions, hpRptrMonGlobalErrors]

class hpicf8023MultiRptrBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 5])
	group = [hpRptrPtGroupIndex, hpRptrPtPortIndex, hpRptrPtLinkbeatEnable, hpRptrPtPolarityReversed, hpRptrPtSqeEnabled, hpRptrPtMediaAvailTrapEnable, hpRptrPtLongCableEnable]

class hpicf8023MultiRptrMonitorGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 6])
	group = [hpRptrMonPtGroupIndex, hpRptrMonPtPortIndex, hpRptrMonPtUcastPackets, hpRptrMonPtBcastPackets, hpRptrMonPtMcastPackets]

class hpicf8023RptrNotifyGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 7])
	group = [hpicfLinkBeatTrap, hpicfPartitionTrap]

class hpicf8023MultiRptrNotifyGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 8])
	group = [hpicfMediaAvailDetectTrap, hpicfMediaAvailLostTrap, hpicfPortPartitionTrap, hpicfPortHealTrap]

class hpicf8023RpMauAutoNegGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 9])
	group = [hpRpMauTypeList, hpRpMauAutoNegSupported, hpRpMauAutoNegAdminStatus, hpRpMauAutoNegRemoteSignaling, hpRpMauAutoNegConfig, hpRpMauAutoNegCapReceived, hpRpMauAutoNegRestart]

class hpicf8023Rptr100BasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9, 1, 2, 10])
	group = [hpRptrPtGroupIndex, hpRptrPtPortIndex, hpRptrPtPolarityReversed, hpRptrPtMediaAvailTrapEnable]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
