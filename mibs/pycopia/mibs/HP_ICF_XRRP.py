# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, IpAddress, Integer32, Counter32
from RMON2_MIB import LastCreateTime
from Q_BRIDGE_MIB import VlanId
from HP_ICF_OID import hpSwitch
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, RowStatus, TimeStamp, MacAddress

class HP_ICF_XRRP(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-ICF-XRRP'
	conformance = 3
	name = 'HP-ICF-XRRP'
	language = 2
	description = 'This MIB module contains the definitions of Managed\nObjects for the XRRP router - the device running HP \nproprietory version of the Virtual Router Redundancy\nProtocol (VRRP).'

# nodes
class hpicfXrrpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18])
	name = 'hpicfXrrpMIB'

class hpicfXrrpNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1])
	name = 'hpicfXrrpNotifications'

class hpicfXrrpNotificationsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 0])
	name = 'hpicfXrrpNotificationsPrefix'

class hpicfXrrpNotificationsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 1])
	name = 'hpicfXrrpNotificationsObjects'

class hpicfXrrpOperations(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2])
	name = 'hpicfXrrpOperations'

class hpicfXrrpStatistics(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3])
	name = 'hpicfXrrpStatistics'

class hpicfXrrpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4])
	name = 'hpicfXrrpConformance'

class hpicfXrrpMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 1])
	name = 'hpicfXrrpMIBCompliances'

class hpicfXrrpMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2])
	name = 'hpicfXrrpMIBGroups'


# macros
# types 

class XrrpRouterId(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 255))

# scalars 
class hpicfXrrpTrapAuthErrorType(ScalarObject):
	status = 1
	access = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalidAuthType'), Enum(2, 'authTypeMismatch'), Enum(3, 'authFailure')]


class hpicfXrrpVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfXrrpAdminState(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpicfXrrpDomain(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfXrrpRouterId(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 4])
	syntaxobject = XrrpRouterId


class hpicfXrrpFailback(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfXrrpTrapCntl(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class hpicfXrrpStatsXrrpMacAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class hpicfXrrpStatsMacAndMask(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class hpicfXrrpStatsPktsRcvd(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsNotDomainPktsReject(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsCheckSumPktsReject(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsBadValuePktsReject(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsCorruptedPktsReject(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsVersionErrorPktsReject(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsBcastArpsXmtd(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsUpTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hpicfXrrpStatsProtocolCreateTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 11])
	syntaxobject = LastCreateTime


# columns
class hpicfXrrpInstanceRouterId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 1])
	syntaxobject = XrrpRouterId


class hpicfXrrpInstanceVlanId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 2])
	syntaxobject = VlanId


class hpicfXrrpInstanceOperState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'initialize'), Enum(2, 'backup'), Enum(3, 'master'), Enum(4, 'vlandown')]


class hpicfXrrpInstanceAuthType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noAuthentication'), Enum(2, 'simpleTextPassword')]


class hpicfXrrpInstanceAuthKey(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpicfXrrpInstanceAdvertiseInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfXrrpInstanceUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hpicfXrrpInstanceRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpicfXrrpAssoIpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class hpicfXrrpAssoIpMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class hpicfXrrpAssoRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpicfXrrpStatsInstancePktsRcvd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstancePktsXmtd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstanceVersionErrPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstancePriorityZeroPktsRcvd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstancePriorityZeroPktsXmtd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstanceMismatchedIpPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstanceAuthFailPktsReject(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstanceIntervalMismatchPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsInstanceCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 9])
	syntaxobject = LastCreateTime


class hpicfXrrpStatsRcRouterId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 1])
	syntaxobject = XrrpRouterId


class hpicfXrrpStatsRcOperState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'initialize'), Enum(2, 'backup'), Enum(3, 'master'), Enum(4, 'failback')]


class hpicfXrrpStatsRcType1PktsRcvd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsRcType1PktsXmtd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsRcType2PktsRcvd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsRcType2PktsXmtd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsRcBecomeMaster(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsRcMasterTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hpicfXrrpStatsRcUnknownVlanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hpicfXrrpStatsRcCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 10])
	syntaxobject = LastCreateTime


# rows 
class hpicfXrrpInstanceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfXrrpInstanceRouterId, hpicfXrrpInstanceVlanId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1])
	access = 2
	rowstatus = hpicfXrrpInstanceRowStatus
	columns = {'hpicfXrrpInstanceRouterId': hpicfXrrpInstanceRouterId, 'hpicfXrrpInstanceVlanId': hpicfXrrpInstanceVlanId, 'hpicfXrrpInstanceOperState': hpicfXrrpInstanceOperState, 'hpicfXrrpInstanceAuthType': hpicfXrrpInstanceAuthType, 'hpicfXrrpInstanceAuthKey': hpicfXrrpInstanceAuthKey, 'hpicfXrrpInstanceAdvertiseInterval': hpicfXrrpInstanceAdvertiseInterval, 'hpicfXrrpInstanceUpTime': hpicfXrrpInstanceUpTime, 'hpicfXrrpInstanceRowStatus': hpicfXrrpInstanceRowStatus}


class hpicfXrrpInstanceAssoIpAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfXrrpInstanceRouterId, hpicfXrrpInstanceVlanId, hpicfXrrpAssoIpAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1])
	access = 2
	rowstatus = hpicfXrrpAssoRowStatus
	columns = {'hpicfXrrpAssoIpAddr': hpicfXrrpAssoIpAddr, 'hpicfXrrpAssoIpMask': hpicfXrrpAssoIpMask, 'hpicfXrrpAssoRowStatus': hpicfXrrpAssoRowStatus}


class hpicfXrrpStatsInstanceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfXrrpInstanceRouterId, hpicfXrrpInstanceVlanId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1])
	access = 2
	columns = {'hpicfXrrpStatsInstancePktsRcvd': hpicfXrrpStatsInstancePktsRcvd, 'hpicfXrrpStatsInstancePktsXmtd': hpicfXrrpStatsInstancePktsXmtd, 'hpicfXrrpStatsInstanceVersionErrPkts': hpicfXrrpStatsInstanceVersionErrPkts, 'hpicfXrrpStatsInstancePriorityZeroPktsRcvd': hpicfXrrpStatsInstancePriorityZeroPktsRcvd, 'hpicfXrrpStatsInstancePriorityZeroPktsXmtd': hpicfXrrpStatsInstancePriorityZeroPktsXmtd, 'hpicfXrrpStatsInstanceMismatchedIpPkts': hpicfXrrpStatsInstanceMismatchedIpPkts, 'hpicfXrrpStatsInstanceAuthFailPktsReject': hpicfXrrpStatsInstanceAuthFailPktsReject, 'hpicfXrrpStatsInstanceIntervalMismatchPkts': hpicfXrrpStatsInstanceIntervalMismatchPkts, 'hpicfXrrpStatsInstanceCreateTime': hpicfXrrpStatsInstanceCreateTime}


class hpicfXrrpStatsRcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfXrrpStatsRcRouterId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1])
	access = 2
	columns = {'hpicfXrrpStatsRcRouterId': hpicfXrrpStatsRcRouterId, 'hpicfXrrpStatsRcOperState': hpicfXrrpStatsRcOperState, 'hpicfXrrpStatsRcType1PktsRcvd': hpicfXrrpStatsRcType1PktsRcvd, 'hpicfXrrpStatsRcType1PktsXmtd': hpicfXrrpStatsRcType1PktsXmtd, 'hpicfXrrpStatsRcType2PktsRcvd': hpicfXrrpStatsRcType2PktsRcvd, 'hpicfXrrpStatsRcType2PktsXmtd': hpicfXrrpStatsRcType2PktsXmtd, 'hpicfXrrpStatsRcBecomeMaster': hpicfXrrpStatsRcBecomeMaster, 'hpicfXrrpStatsRcMasterTime': hpicfXrrpStatsRcMasterTime, 'hpicfXrrpStatsRcUnknownVlanId': hpicfXrrpStatsRcUnknownVlanId, 'hpicfXrrpStatsRcCreateTime': hpicfXrrpStatsRcCreateTime}


# notifications (traps) 
class hpicfXrrpTrapStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 0, 1])

class hpicfXrrpTrapAuthFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 0, 2])

# groups 
class hpicfXrrpOperGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 1])
	group = [hpicfXrrpVersion, hpicfXrrpAdminState, hpicfXrrpDomain, hpicfXrrpRouterId, hpicfXrrpTrapCntl, hpicfXrrpInstanceOperState, hpicfXrrpInstanceAuthType, hpicfXrrpInstanceAuthKey, hpicfXrrpInstanceAdvertiseInterval, hpicfXrrpInstanceUpTime, hpicfXrrpInstanceRowStatus, hpicfXrrpAssoIpMask, hpicfXrrpAssoRowStatus]

class hpicfXrrpStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 2])
	group = [hpicfXrrpStatsXrrpMacAddress, hpicfXrrpStatsMacAndMask, hpicfXrrpStatsPktsRcvd, hpicfXrrpStatsNotDomainPktsReject, hpicfXrrpStatsCheckSumPktsReject, hpicfXrrpStatsBadValuePktsReject, hpicfXrrpStatsCorruptedPktsReject, hpicfXrrpStatsVersionErrorPktsReject, hpicfXrrpStatsBcastArpsXmtd, hpicfXrrpStatsUpTime, hpicfXrrpStatsProtocolCreateTime, hpicfXrrpStatsInstancePktsRcvd, hpicfXrrpStatsInstancePktsXmtd, hpicfXrrpStatsInstanceVersionErrPkts, hpicfXrrpStatsInstancePriorityZeroPktsRcvd, hpicfXrrpStatsInstancePriorityZeroPktsXmtd, hpicfXrrpStatsInstanceMismatchedIpPkts, hpicfXrrpStatsInstanceAuthFailPktsReject, hpicfXrrpStatsInstanceIntervalMismatchPkts, hpicfXrrpStatsInstanceCreateTime, hpicfXrrpStatsRcOperState, hpicfXrrpStatsRcType1PktsRcvd, hpicfXrrpStatsRcType1PktsXmtd, hpicfXrrpStatsRcType2PktsRcvd, hpicfXrrpStatsRcType2PktsXmtd, hpicfXrrpStatsRcBecomeMaster, hpicfXrrpStatsRcMasterTime, hpicfXrrpStatsRcUnknownVlanId, hpicfXrrpStatsRcCreateTime]

class hpicfXrrpTrapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 3])
	group = [hpicfXrrpTrapAuthErrorType]

class hpicfXrrpNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 4])
	group = [hpicfXrrpTrapStateChange, hpicfXrrpTrapAuthFailure]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
