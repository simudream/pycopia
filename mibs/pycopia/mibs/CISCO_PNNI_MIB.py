# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, DisplayString
from  import pnniNodeEntry, pnniIfEntry, pnniRouteAddrEntry

class CISCO_PNNI_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-PNNI-MIB'
	conformance = 1
	name = 'CISCO-PNNI-MIB'
	language = 2
	description = 'The MIB module for managing Cisco specific\nextensions to the ATM Forum PNNI MIB.'

# nodes
class ciscoPnniMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65])
	name = 'ciscoPnniMIB'

class ciscoPnniMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1])
	name = 'ciscoPnniMIBObjects'

class ciscoPnniBase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1])
	name = 'ciscoPnniBase'

class ciscoPnniNode(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2])
	name = 'ciscoPnniNode'

class ciscoPnniInterface(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3])
	name = 'ciscoPnniInterface'

class ciscoPnniPrecedence(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 4])
	name = 'ciscoPnniPrecedence'

class ciscoPnniRouteAddr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 5])
	name = 'ciscoPnniRouteAddr'

class ciscoPnniMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 3])
	name = 'ciscoPnniMIBConformance'

class ciscoPnniMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 3, 1])
	name = 'ciscoPnniMIBCompliances'

class ciscoPnniMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 3, 2])
	name = 'ciscoPnniMIBGroups'


# macros
# types 

class E164Address(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 0), Range(8, 8))

# scalars 
class ciscoPnniBackgroundRoutes(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoPnniBackgroundPollInterval(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class ciscoPnniBackgroundInsignificantThreshold(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'changes'


class ciscoPnniResourceMgmtPollInterval(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class ciscoPnniAdminWeightMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'uniform'), Enum(2, 'linespeed')]


class ciscoPnniMaxAdminWeightPercentage(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoPnniRouteOptimizationThreshold(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'percent'


# columns
class ciscoPnniNodeAutoSummary(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoPnniNodeRedistributeStatic(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoPnniNodePtseRequest(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoPnniNodeName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoPnniNodeScopeMappingMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'automatic'), Enum(2, 'manual')]


class ciscoPnniIfLinkSelection(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'adminWeightMinimize'), Enum(2, 'blockingMinimize'), Enum(3, 'transmitSpeedMaximize'), Enum(4, 'loadBalance')]


class ciscoPnniIfRouteOptimization(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disable'), Enum(2, 'soft'), Enum(3, 'switched'), Enum(4, 'switchedAndSoft')]


class ciscoPnniIfRouteOptimInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class ciscoPnniIfRouteOptimStartHour(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'hour'


class ciscoPnniIfRouteOptimStartMinute(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class ciscoPnniIfRouteOptimEndHour(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'hour'


class ciscoPnniIfRouteOptimEndMinute(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class ciscoPnniPrecedenceAddressType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'staticLocalInternalWithMetrics'), Enum(2, 'staticLocalExterior'), Enum(3, 'staticLocalExteriorWithMetrics'), Enum(4, 'pnniRemoteInternal'), Enum(5, 'pnniRemoteInternalWithMetrics'), Enum(6, 'pnniRemoteExterior'), Enum(7, 'pnniRemoteExteriorWithMetrics')]


class ciscoPnniPrecedenceValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoPnniRouteAddrForwardingE164Address(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 5, 1, 1, 1])
	syntaxobject = E164Address


# rows 
class ciscoPnniNodeEntry(RowObject):
	status = 1
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 2, 1, 1])
	access = 2
	columns = {'ciscoPnniNodeAutoSummary': ciscoPnniNodeAutoSummary, 'ciscoPnniNodeRedistributeStatic': ciscoPnniNodeRedistributeStatic, 'ciscoPnniNodePtseRequest': ciscoPnniNodePtseRequest, 'ciscoPnniNodeName': ciscoPnniNodeName, 'ciscoPnniNodeScopeMappingMode': ciscoPnniNodeScopeMappingMode}


class ciscoPnniIfEntry(RowObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 3, 1, 1])
	access = 2
	columns = {'ciscoPnniIfLinkSelection': ciscoPnniIfLinkSelection, 'ciscoPnniIfRouteOptimization': ciscoPnniIfRouteOptimization, 'ciscoPnniIfRouteOptimInterval': ciscoPnniIfRouteOptimInterval, 'ciscoPnniIfRouteOptimStartHour': ciscoPnniIfRouteOptimStartHour, 'ciscoPnniIfRouteOptimStartMinute': ciscoPnniIfRouteOptimStartMinute, 'ciscoPnniIfRouteOptimEndHour': ciscoPnniIfRouteOptimEndHour, 'ciscoPnniIfRouteOptimEndMinute': ciscoPnniIfRouteOptimEndMinute}


class ciscoPnniPrecedenceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoPnniPrecedenceAddressType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 4, 1, 1])
	access = 2
	columns = {'ciscoPnniPrecedenceAddressType': ciscoPnniPrecedenceAddressType, 'ciscoPnniPrecedenceValue': ciscoPnniPrecedenceValue}


class ciscoPnniRouteAddrEntry(RowObject):
	status = 1
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 1, 5, 1, 1])
	access = 2
	columns = {'ciscoPnniRouteAddrForwardingE164Address': ciscoPnniRouteAddrForwardingE164Address}


# notifications (traps) 
# groups 
class ciscoPnniBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 3, 2, 1])
	group = [ciscoPnniBackgroundRoutes, ciscoPnniBackgroundPollInterval, ciscoPnniBackgroundInsignificantThreshold, ciscoPnniResourceMgmtPollInterval, ciscoPnniAdminWeightMode, ciscoPnniMaxAdminWeightPercentage, ciscoPnniNodeAutoSummary, ciscoPnniNodeRedistributeStatic, ciscoPnniNodePtseRequest, ciscoPnniNodeName, ciscoPnniNodeScopeMappingMode, ciscoPnniIfLinkSelection, ciscoPnniPrecedenceValue, ciscoPnniRouteAddrForwardingE164Address]

class ciscoPnniRouteOptimizationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 65, 3, 2, 2])
	group = [ciscoPnniRouteOptimizationThreshold, ciscoPnniIfRouteOptimization, ciscoPnniIfRouteOptimInterval, ciscoPnniIfRouteOptimStartHour, ciscoPnniIfRouteOptimStartMinute, ciscoPnniIfRouteOptimEndHour, ciscoPnniIfRouteOptimEndMinute]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
