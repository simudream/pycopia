# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, Gauge32, Counter32, Counter64, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetPortNumber
from SNMPv2_TC import TimeStamp, TruthValue

class SCTP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/SCTP-MIB'
	conformance = 5
	name = 'SCTP-MIB'
	language = 2
	description = 'The MIB module for managing SCTP implementations.\n\nCopyright (C) The Internet Society (2004).  This version of\nthis MIB module is part of RFC 3873; see the RFC itself for\nfull legal notices. '

# nodes
class sctpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104])
	name = 'sctpMIB'

class sctpObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1])
	name = 'sctpObjects'

class sctpStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1])
	name = 'sctpStats'

class sctpParams(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2])
	name = 'sctpParams'

class sctpMibConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2])
	name = 'sctpMibConformance'

class sctpMibCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 1])
	name = 'sctpMibCompliances'

class sctpMibGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 2])
	name = 'sctpMibGroups'


# macros
# types 
# scalars 
class sctpCurrEstab(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class sctpActiveEstabs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpPassiveEstabs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpAborteds(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpShutdowns(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpOutOfBlues(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpChecksumErrors(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpOutCtrlChunks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpOutOrderChunks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpOutUnorderChunks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpInCtrlChunks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpInOrderChunks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpInUnorderChunks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpFragUsrMsgs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpReasmUsrMsgs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpOutSCTPPacks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpInSCTPPacks(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class sctpDiscontinuityTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpRtoAlgorithm(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'vanj')]


class sctpRtoMin(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class sctpRtoMax(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class sctpRtoInitial(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class sctpMaxAssocs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sctpValCookieLife(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class sctpMaxInitRetr(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# columns
class sctpAssocId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class sctpAssocRemHostName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class sctpAssocLocalPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 3])
	syntaxobject = InetPortNumber


class sctpAssocRemPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 4])
	syntaxobject = InetPortNumber


class sctpAssocRemPrimAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 5])
	syntaxobject = InetAddressType


class sctpAssocRemPrimAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 6])
	syntaxobject = InetAddress


class sctpAssocHeartBeatInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class sctpAssocState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'closed'), Enum(2, 'cookieWait'), Enum(3, 'cookieEchoed'), Enum(4, 'established'), Enum(5, 'shutdownPending'), Enum(6, 'shutdownSent'), Enum(7, 'shutdownReceived'), Enum(8, 'shutdownAckSent'), Enum(9, 'deleteTCB')]


class sctpAssocInStreams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class sctpAssocOutStreams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class sctpAssocMaxRetr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class sctpAssocPrimProcess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class sctpAssocT1expireds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpAssocT2expireds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpAssocRtxChunks(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpAssocStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpAssocDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpAssocLocalAddrType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 4, 1, 1])
	syntaxobject = InetAddressType


class sctpAssocLocalAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 4, 1, 2])
	syntaxobject = InetAddress


class sctpAssocLocalAddrStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpAssocRemAddrType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 1])
	syntaxobject = InetAddressType


class sctpAssocRemAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 2])
	syntaxobject = InetAddress


class sctpAssocRemAddrActive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class sctpAssocRemAddrHBActive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class sctpAssocRemAddrRTO(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class sctpAssocRemAddrMaxPathRtx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class sctpAssocRemAddrRtx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sctpAssocRemAddrStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpLookupLocalPortStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpLookupRemPortStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpLookupRemHostNameStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpLookupRemPrimIPAddrStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class sctpLookupRemIPAddrStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# rows 
class sctpAssocEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 3, 1])
	access = 2
	columns = {'sctpAssocId': sctpAssocId, 'sctpAssocRemHostName': sctpAssocRemHostName, 'sctpAssocLocalPort': sctpAssocLocalPort, 'sctpAssocRemPort': sctpAssocRemPort, 'sctpAssocRemPrimAddrType': sctpAssocRemPrimAddrType, 'sctpAssocRemPrimAddr': sctpAssocRemPrimAddr, 'sctpAssocHeartBeatInterval': sctpAssocHeartBeatInterval, 'sctpAssocState': sctpAssocState, 'sctpAssocInStreams': sctpAssocInStreams, 'sctpAssocOutStreams': sctpAssocOutStreams, 'sctpAssocMaxRetr': sctpAssocMaxRetr, 'sctpAssocPrimProcess': sctpAssocPrimProcess, 'sctpAssocT1expireds': sctpAssocT1expireds, 'sctpAssocT2expireds': sctpAssocT2expireds, 'sctpAssocRtxChunks': sctpAssocRtxChunks, 'sctpAssocStartTime': sctpAssocStartTime, 'sctpAssocDiscontinuityTime': sctpAssocDiscontinuityTime}


class sctpAssocLocalAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocId, sctpAssocLocalAddrType, sctpAssocLocalAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 4, 1])
	access = 2
	columns = {'sctpAssocLocalAddrType': sctpAssocLocalAddrType, 'sctpAssocLocalAddr': sctpAssocLocalAddr, 'sctpAssocLocalAddrStartTime': sctpAssocLocalAddrStartTime}


class sctpAssocRemAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocId, sctpAssocRemAddrType, sctpAssocRemAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 5, 1])
	access = 2
	columns = {'sctpAssocRemAddrType': sctpAssocRemAddrType, 'sctpAssocRemAddr': sctpAssocRemAddr, 'sctpAssocRemAddrActive': sctpAssocRemAddrActive, 'sctpAssocRemAddrHBActive': sctpAssocRemAddrHBActive, 'sctpAssocRemAddrRTO': sctpAssocRemAddrRTO, 'sctpAssocRemAddrMaxPathRtx': sctpAssocRemAddrMaxPathRtx, 'sctpAssocRemAddrRtx': sctpAssocRemAddrRtx, 'sctpAssocRemAddrStartTime': sctpAssocRemAddrStartTime}


class sctpLookupLocalPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocLocalPort, sctpAssocId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 6, 1])
	access = 2
	columns = {'sctpLookupLocalPortStartTime': sctpLookupLocalPortStartTime}


class sctpLookupRemPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocRemPort, sctpAssocId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 7, 1])
	access = 2
	columns = {'sctpLookupRemPortStartTime': sctpLookupRemPortStartTime}


class sctpLookupRemHostNameEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocRemHostName, sctpAssocId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 8, 1])
	access = 2
	columns = {'sctpLookupRemHostNameStartTime': sctpLookupRemHostNameStartTime}


class sctpLookupRemPrimIPAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocRemPrimAddrType, sctpAssocRemPrimAddr, sctpAssocId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 9, 1])
	access = 2
	columns = {'sctpLookupRemPrimIPAddrStartTime': sctpLookupRemPrimIPAddrStartTime}


class sctpLookupRemIPAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sctpAssocRemAddrType, sctpAssocRemAddr, sctpAssocId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 1, 10, 1])
	access = 2
	columns = {'sctpLookupRemIPAddrStartTime': sctpLookupRemIPAddrStartTime}


# notifications (traps) 
# groups 
class sctpLayerParamsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 2, 1])
	group = [sctpRtoAlgorithm, sctpRtoMin, sctpRtoMax, sctpRtoInitial, sctpMaxAssocs, sctpValCookieLife, sctpMaxInitRetr]

class sctpStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 2, 2])
	group = [sctpCurrEstab, sctpActiveEstabs, sctpPassiveEstabs, sctpAborteds, sctpShutdowns, sctpOutOfBlues, sctpChecksumErrors, sctpOutCtrlChunks, sctpOutOrderChunks, sctpOutUnorderChunks, sctpInCtrlChunks, sctpInOrderChunks, sctpInUnorderChunks, sctpFragUsrMsgs, sctpReasmUsrMsgs, sctpOutSCTPPacks, sctpInSCTPPacks, sctpDiscontinuityTime, sctpAssocT1expireds, sctpAssocT2expireds, sctpAssocRtxChunks, sctpAssocRemAddrRtx]

class sctpPerAssocParamsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 2, 3])
	group = [sctpAssocRemHostName, sctpAssocLocalPort, sctpAssocRemPort, sctpAssocRemPrimAddrType, sctpAssocRemPrimAddr, sctpAssocHeartBeatInterval, sctpAssocState, sctpAssocInStreams, sctpAssocOutStreams, sctpAssocMaxRetr, sctpAssocPrimProcess, sctpAssocStartTime, sctpAssocDiscontinuityTime, sctpAssocLocalAddrStartTime, sctpAssocRemAddrActive, sctpAssocRemAddrHBActive, sctpAssocRemAddrRTO, sctpAssocRemAddrMaxPathRtx, sctpAssocRemAddrStartTime]

class sctpPerAssocStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 2, 4])
	group = [sctpAssocT1expireds, sctpAssocT2expireds, sctpAssocRtxChunks, sctpAssocRemAddrRtx]

class sctpInverseGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 104, 2, 2, 5])
	group = [sctpLookupLocalPortStartTime, sctpLookupRemPortStartTime, sctpLookupRemHostNameStartTime, sctpLookupRemPrimIPAddrStartTime, sctpLookupRemIPAddrStartTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
