# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Gauge32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, TruthValue

class CISCO_MEMORY_POOL_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-MEMORY-POOL-MIB'
	conformance = 3
	name = 'CISCO-MEMORY-POOL-MIB'
	language = 2
	description = 'MIB module for monitoring memory pools'

# nodes
class ciscoMemoryPoolMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48])
	name = 'ciscoMemoryPoolMIB'

class ciscoMemoryPoolObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1])
	name = 'ciscoMemoryPoolObjects'

class ciscoMemoryPoolNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 2])
	name = 'ciscoMemoryPoolNotifications'

class ciscoMemoryPoolConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 3])
	name = 'ciscoMemoryPoolConformance'

class ciscoMemoryPoolCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 3, 1])
	name = 'ciscoMemoryPoolCompliances'

class ciscoMemoryPoolGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 3, 2])
	name = 'ciscoMemoryPoolGroups'


# macros
# types 

class CiscoMemoryPoolTypes(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 65535))

# scalars 
# columns
class ciscoMemoryPoolType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 1])
	syntaxobject = CiscoMemoryPoolTypes


class ciscoMemoryPoolName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoMemoryPoolAlternate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoMemoryPoolValid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoMemoryPoolUsed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes'


class ciscoMemoryPoolFree(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes'


class ciscoMemoryPoolLargestFree(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes'


# rows 
class ciscoMemoryPoolEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoMemoryPoolType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 1, 1, 1])
	access = 2
	columns = {'ciscoMemoryPoolType': ciscoMemoryPoolType, 'ciscoMemoryPoolName': ciscoMemoryPoolName, 'ciscoMemoryPoolAlternate': ciscoMemoryPoolAlternate, 'ciscoMemoryPoolValid': ciscoMemoryPoolValid, 'ciscoMemoryPoolUsed': ciscoMemoryPoolUsed, 'ciscoMemoryPoolFree': ciscoMemoryPoolFree, 'ciscoMemoryPoolLargestFree': ciscoMemoryPoolLargestFree}


# notifications (traps) 
# groups 
class ciscoMemoryPoolGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 48, 3, 2, 1])
	group = [ciscoMemoryPoolName, ciscoMemoryPoolAlternate, ciscoMemoryPoolValid, ciscoMemoryPoolUsed, ciscoMemoryPoolFree, ciscoMemoryPoolLargestFree]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
