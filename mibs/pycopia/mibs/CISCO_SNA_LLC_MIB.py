# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, Integer32, TimeTicks, Gauge32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from RFC1213_MIB import ifIndex
from SNMPv2_TC import DisplayString, RowStatus, TimeStamp, MacAddress
from CISCO_SMI import ciscoExperiment

class CISCO_SNA_LLC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-SNA-LLC-MIB'
	conformance = 2
	name = 'CISCO-SNA-LLC-MIB'
	language = 2
	description = 'This is the MIB module for objects used to\nmanage LLC devices.'

# nodes
class ciscoSnaLlcMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8])
	name = 'ciscoSnaLlcMIB'

class ciscoSnaLlcMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1])
	name = 'ciscoSnaLlcMIBObjects'

class llcPortGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1])
	name = 'llcPortGroup'

class llcSapGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2])
	name = 'llcSapGroup'

class llcCcGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3])
	name = 'llcCcGroup'

class snaLlcMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 2])
	name = 'snaLlcMIBNotificationPrefix'

class snaLlcMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 2, 0])
	name = 'snaLlcMIBNotifications'

class snaLlcMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 3])
	name = 'snaLlcMIBConformance'

class snaLlcMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 1])
	name = 'snaLlcMIBCompliances'

class snaLlcMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2])
	name = 'snaLlcMIBGroups'


# macros
# types 
# scalars 
# columns
class llcPortVirtualIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcPortAdminName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class llcPortAdminMaxSaps(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class llcPortAdminMaxCcs(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class llcPortAdminMaxPDUOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'octets'


class llcPortAdminMaxUnackedIPDUsSend(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcPortAdminMaxUnackedIPDUsRcv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcPortAdminMaxRetransmits(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcPortAdminAckTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcPortAdminPbitTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcPortAdminRejTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcPortAdminBusyTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcPortAdminInactTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcPortAdminDelayAckCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcPortAdminDelayAckTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcPortAdminNw(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcPortOperMacAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class llcPortOperNumSaps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class llcPortOperHiWaterNumSaps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class llcPortOperSimRim(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'no'), Enum(2, 'yes')]


class llcPortOperLastModifyTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class llcPortStatsPDUsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcPortStatsPDUsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcPortStatsOctetsIn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class llcPortStatsOctetsOut(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class llcPortStatsTESTCommandsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcPortStatsTESTResponsesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcPortStatsLocalBusies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcPortStatsUnknownSaps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapAdminMaxPDUOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'octets'


class llcSapAdminMaxUnackedIPDUsSend(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapAdminMaxUnackedIPDUsRcv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapAdminMaxRetransmits(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapAdminAckTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcSapAdminPbitTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcSapAdminRejTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcSapAdminBusyTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcSapAdminInactTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcSapAdminDelayAckCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapAdminDelayAckTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcSapAdminNw(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active')]


class llcSapOperNumCcs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcSapOperHiWaterNumCcs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class llcSapOperLlc2Support(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'no'), Enum(2, 'yes')]


class llcSapStatsLocalBusies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsRemoteBusies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsIFramesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsIFramesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsIOctetsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsIOctetsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsSFramesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsSFramesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsRetransmitsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsREJsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsREJsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsWwCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsTESTCommandsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsTESTCommandsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsTESTResponsesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsTESTResponsesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsXIDCommandsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsXIDCommandsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsXIDResponsesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsXIDResponsesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsUIFramesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsUIFramesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsUIOctetsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsUIOctetsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsConnectOk(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsConnectFail(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsDisconnect(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsDisconnectFRMRSend(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsDisconnectFRMRRcv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsDisconnectTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsDMsInABM(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcSapStatsSABMEsInABM(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcRMac(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class llcCcRSap(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcAdminBounce(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'no'), Enum(2, 'yes')]


class llcCcAdminMaxPDUOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'octets'


class llcCcAdminMaxUnackedIPDUsSend(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcAdminMaxUnackedIPDUsRcv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcAdminMaxRetransmits(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcAdminAckTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcAdminPbitTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcAdminRejTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcAdminBusyTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcAdminInactTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcAdminDelayAckCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcAdminDelayAckTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcAdminNw(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcAdminRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class llcCcOperState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aDM'), Enum(2, 'setup'), Enum(3, 'normal'), Enum(4, 'busy'), Enum(5, 'reject'), Enum(6, 'await'), Enum(7, 'awaitBusy'), Enum(8, 'awaitReject'), Enum(9, 'dConn'), Enum(10, 'reset'), Enum(11, 'error'), Enum(12, 'conn'), Enum(13, 'resetCheck'), Enum(14, 'resetWait')]


class llcCcOperMaxIPDUOctetsSend(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperMaxIPDUOctetsRcv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperMaxUnackedIPDUsSend(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperMaxUnackedIPDUsRcv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperMaxRetransmits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperAckTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcOperPbitTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcOperRejTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcOperBusyTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcOperInactTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcOperDelayAckCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperDelayAckTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class llcCcOperNw(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperWw(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class llcCcOperCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class llcCcOperLastModifyTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class llcCcOperLastFailTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class llcCcOperLastFailCause(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'undefined'), Enum(2, 'rxFRMR'), Enum(3, 'txFRMR'), Enum(4, 'discReceived'), Enum(5, 'discSent'), Enum(6, 'retriesExpired'), Enum(7, 'forcedShutdown')]


class llcCcOperLastFailFRMRInfo(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class llcCcOperLastWwCause(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'neverInvoked'), Enum(2, 'lostData'), Enum(3, 'macLayerCongestion'), Enum(4, 'other')]


class llcCcStatsLocalBusies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsRemoteBusies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsIFramesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsIFramesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsIOctetsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsIOctetsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsSFramesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsSFramesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsRetransmitsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsREJsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsREJsOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class llcCcStatsWwCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class llcPortAdminEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1])
	access = 2
	columns = {'llcPortVirtualIndex': llcPortVirtualIndex, 'llcPortAdminName': llcPortAdminName, 'llcPortAdminMaxSaps': llcPortAdminMaxSaps, 'llcPortAdminMaxCcs': llcPortAdminMaxCcs, 'llcPortAdminMaxPDUOctets': llcPortAdminMaxPDUOctets, 'llcPortAdminMaxUnackedIPDUsSend': llcPortAdminMaxUnackedIPDUsSend, 'llcPortAdminMaxUnackedIPDUsRcv': llcPortAdminMaxUnackedIPDUsRcv, 'llcPortAdminMaxRetransmits': llcPortAdminMaxRetransmits, 'llcPortAdminAckTimer': llcPortAdminAckTimer, 'llcPortAdminPbitTimer': llcPortAdminPbitTimer, 'llcPortAdminRejTimer': llcPortAdminRejTimer, 'llcPortAdminBusyTimer': llcPortAdminBusyTimer, 'llcPortAdminInactTimer': llcPortAdminInactTimer, 'llcPortAdminDelayAckCount': llcPortAdminDelayAckCount, 'llcPortAdminDelayAckTimer': llcPortAdminDelayAckTimer, 'llcPortAdminNw': llcPortAdminNw}


class llcPortOperEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1])
	access = 2
	columns = {'llcPortOperMacAddress': llcPortOperMacAddress, 'llcPortOperNumSaps': llcPortOperNumSaps, 'llcPortOperHiWaterNumSaps': llcPortOperHiWaterNumSaps, 'llcPortOperSimRim': llcPortOperSimRim, 'llcPortOperLastModifyTime': llcPortOperLastModifyTime}


class llcPortStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1])
	access = 2
	columns = {'llcPortStatsPDUsIn': llcPortStatsPDUsIn, 'llcPortStatsPDUsOut': llcPortStatsPDUsOut, 'llcPortStatsOctetsIn': llcPortStatsOctetsIn, 'llcPortStatsOctetsOut': llcPortStatsOctetsOut, 'llcPortStatsTESTCommandsIn': llcPortStatsTESTCommandsIn, 'llcPortStatsTESTResponsesOut': llcPortStatsTESTResponsesOut, 'llcPortStatsLocalBusies': llcPortStatsLocalBusies, 'llcPortStatsUnknownSaps': llcPortStatsUnknownSaps}


class llcSapAdminEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex, llcSapNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1])
	access = 2
	columns = {'llcSapNumber': llcSapNumber, 'llcSapAdminMaxPDUOctets': llcSapAdminMaxPDUOctets, 'llcSapAdminMaxUnackedIPDUsSend': llcSapAdminMaxUnackedIPDUsSend, 'llcSapAdminMaxUnackedIPDUsRcv': llcSapAdminMaxUnackedIPDUsRcv, 'llcSapAdminMaxRetransmits': llcSapAdminMaxRetransmits, 'llcSapAdminAckTimer': llcSapAdminAckTimer, 'llcSapAdminPbitTimer': llcSapAdminPbitTimer, 'llcSapAdminRejTimer': llcSapAdminRejTimer, 'llcSapAdminBusyTimer': llcSapAdminBusyTimer, 'llcSapAdminInactTimer': llcSapAdminInactTimer, 'llcSapAdminDelayAckCount': llcSapAdminDelayAckCount, 'llcSapAdminDelayAckTimer': llcSapAdminDelayAckTimer, 'llcSapAdminNw': llcSapAdminNw}


class llcSapOperEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex, llcSapNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1])
	access = 2
	columns = {'llcSapOperStatus': llcSapOperStatus, 'llcSapOperNumCcs': llcSapOperNumCcs, 'llcSapOperHiWaterNumCcs': llcSapOperHiWaterNumCcs, 'llcSapOperLlc2Support': llcSapOperLlc2Support}


class llcSapStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex, llcSapNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1])
	access = 2
	columns = {'llcSapStatsLocalBusies': llcSapStatsLocalBusies, 'llcSapStatsRemoteBusies': llcSapStatsRemoteBusies, 'llcSapStatsIFramesIn': llcSapStatsIFramesIn, 'llcSapStatsIFramesOut': llcSapStatsIFramesOut, 'llcSapStatsIOctetsIn': llcSapStatsIOctetsIn, 'llcSapStatsIOctetsOut': llcSapStatsIOctetsOut, 'llcSapStatsSFramesIn': llcSapStatsSFramesIn, 'llcSapStatsSFramesOut': llcSapStatsSFramesOut, 'llcSapStatsRetransmitsOut': llcSapStatsRetransmitsOut, 'llcSapStatsREJsIn': llcSapStatsREJsIn, 'llcSapStatsREJsOut': llcSapStatsREJsOut, 'llcSapStatsWwCount': llcSapStatsWwCount, 'llcSapStatsTESTCommandsIn': llcSapStatsTESTCommandsIn, 'llcSapStatsTESTCommandsOut': llcSapStatsTESTCommandsOut, 'llcSapStatsTESTResponsesIn': llcSapStatsTESTResponsesIn, 'llcSapStatsTESTResponsesOut': llcSapStatsTESTResponsesOut, 'llcSapStatsXIDCommandsIn': llcSapStatsXIDCommandsIn, 'llcSapStatsXIDCommandsOut': llcSapStatsXIDCommandsOut, 'llcSapStatsXIDResponsesIn': llcSapStatsXIDResponsesIn, 'llcSapStatsXIDResponsesOut': llcSapStatsXIDResponsesOut, 'llcSapStatsUIFramesIn': llcSapStatsUIFramesIn, 'llcSapStatsUIFramesOut': llcSapStatsUIFramesOut, 'llcSapStatsUIOctetsIn': llcSapStatsUIOctetsIn, 'llcSapStatsUIOctetsOut': llcSapStatsUIOctetsOut, 'llcSapStatsConnectOk': llcSapStatsConnectOk, 'llcSapStatsConnectFail': llcSapStatsConnectFail, 'llcSapStatsDisconnect': llcSapStatsDisconnect, 'llcSapStatsDisconnectFRMRSend': llcSapStatsDisconnectFRMRSend, 'llcSapStatsDisconnectFRMRRcv': llcSapStatsDisconnectFRMRRcv, 'llcSapStatsDisconnectTimer': llcSapStatsDisconnectTimer, 'llcSapStatsDMsInABM': llcSapStatsDMsInABM, 'llcSapStatsSABMEsInABM': llcSapStatsSABMEsInABM}


class llcCcAdminEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex, llcSapNumber, llcCcRMac, llcCcRSap], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1])
	access = 2
	rowstatus = llcCcAdminRowStatus
	columns = {'llcCcRMac': llcCcRMac, 'llcCcRSap': llcCcRSap, 'llcCcAdminBounce': llcCcAdminBounce, 'llcCcAdminMaxPDUOctets': llcCcAdminMaxPDUOctets, 'llcCcAdminMaxUnackedIPDUsSend': llcCcAdminMaxUnackedIPDUsSend, 'llcCcAdminMaxUnackedIPDUsRcv': llcCcAdminMaxUnackedIPDUsRcv, 'llcCcAdminMaxRetransmits': llcCcAdminMaxRetransmits, 'llcCcAdminAckTimer': llcCcAdminAckTimer, 'llcCcAdminPbitTimer': llcCcAdminPbitTimer, 'llcCcAdminRejTimer': llcCcAdminRejTimer, 'llcCcAdminBusyTimer': llcCcAdminBusyTimer, 'llcCcAdminInactTimer': llcCcAdminInactTimer, 'llcCcAdminDelayAckCount': llcCcAdminDelayAckCount, 'llcCcAdminDelayAckTimer': llcCcAdminDelayAckTimer, 'llcCcAdminNw': llcCcAdminNw, 'llcCcAdminRowStatus': llcCcAdminRowStatus}


class llcCcOperEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex, llcSapNumber, llcCcRMac, llcCcRSap], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1])
	access = 2
	columns = {'llcCcOperState': llcCcOperState, 'llcCcOperMaxIPDUOctetsSend': llcCcOperMaxIPDUOctetsSend, 'llcCcOperMaxIPDUOctetsRcv': llcCcOperMaxIPDUOctetsRcv, 'llcCcOperMaxUnackedIPDUsSend': llcCcOperMaxUnackedIPDUsSend, 'llcCcOperMaxUnackedIPDUsRcv': llcCcOperMaxUnackedIPDUsRcv, 'llcCcOperMaxRetransmits': llcCcOperMaxRetransmits, 'llcCcOperAckTimer': llcCcOperAckTimer, 'llcCcOperPbitTimer': llcCcOperPbitTimer, 'llcCcOperRejTimer': llcCcOperRejTimer, 'llcCcOperBusyTimer': llcCcOperBusyTimer, 'llcCcOperInactTimer': llcCcOperInactTimer, 'llcCcOperDelayAckCount': llcCcOperDelayAckCount, 'llcCcOperDelayAckTimer': llcCcOperDelayAckTimer, 'llcCcOperNw': llcCcOperNw, 'llcCcOperWw': llcCcOperWw, 'llcCcOperCreateTime': llcCcOperCreateTime, 'llcCcOperLastModifyTime': llcCcOperLastModifyTime, 'llcCcOperLastFailTime': llcCcOperLastFailTime, 'llcCcOperLastFailCause': llcCcOperLastFailCause, 'llcCcOperLastFailFRMRInfo': llcCcOperLastFailFRMRInfo, 'llcCcOperLastWwCause': llcCcOperLastWwCause}


class llcCcStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, llcPortVirtualIndex, llcSapNumber, llcCcRMac, llcCcRSap], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1])
	access = 2
	columns = {'llcCcStatsLocalBusies': llcCcStatsLocalBusies, 'llcCcStatsRemoteBusies': llcCcStatsRemoteBusies, 'llcCcStatsIFramesIn': llcCcStatsIFramesIn, 'llcCcStatsIFramesOut': llcCcStatsIFramesOut, 'llcCcStatsIOctetsIn': llcCcStatsIOctetsIn, 'llcCcStatsIOctetsOut': llcCcStatsIOctetsOut, 'llcCcStatsSFramesIn': llcCcStatsSFramesIn, 'llcCcStatsSFramesOut': llcCcStatsSFramesOut, 'llcCcStatsRetransmitsOut': llcCcStatsRetransmitsOut, 'llcCcStatsREJsIn': llcCcStatsREJsIn, 'llcCcStatsREJsOut': llcCcStatsREJsOut, 'llcCcStatsWwCount': llcCcStatsWwCount}


# notifications (traps) 
class llcCcStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 2, 0, 1])

# groups 
class llcCorePortGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2, 1])
	group = [llcPortAdminName, llcPortAdminMaxSaps, llcPortAdminMaxCcs, llcPortAdminMaxPDUOctets, llcPortAdminMaxUnackedIPDUsSend, llcPortAdminMaxUnackedIPDUsRcv, llcPortAdminMaxRetransmits, llcPortAdminAckTimer, llcPortAdminPbitTimer, llcPortAdminRejTimer, llcPortAdminBusyTimer, llcPortAdminInactTimer, llcPortAdminDelayAckCount, llcPortAdminDelayAckTimer, llcPortAdminNw, llcPortOperMacAddress, llcPortOperNumSaps, llcPortOperHiWaterNumSaps, llcPortOperSimRim, llcPortOperLastModifyTime, llcPortStatsPDUsIn, llcPortStatsPDUsOut, llcPortStatsOctetsIn, llcPortStatsOctetsOut, llcPortStatsTESTCommandsIn, llcPortStatsTESTResponsesOut, llcPortStatsLocalBusies, llcPortStatsUnknownSaps]

class llcCoreSapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2, 2])
	group = [llcSapAdminMaxPDUOctets, llcSapAdminMaxUnackedIPDUsSend, llcSapAdminMaxUnackedIPDUsRcv, llcSapAdminMaxRetransmits, llcSapAdminAckTimer, llcSapAdminPbitTimer, llcSapAdminRejTimer, llcSapAdminBusyTimer, llcSapAdminInactTimer, llcSapAdminDelayAckCount, llcSapAdminDelayAckTimer, llcSapAdminNw, llcSapOperStatus, llcSapOperNumCcs, llcSapOperHiWaterNumCcs, llcSapOperLlc2Support, llcSapStatsLocalBusies, llcSapStatsRemoteBusies, llcSapStatsIFramesIn, llcSapStatsIFramesOut, llcSapStatsIOctetsIn, llcSapStatsIOctetsOut, llcSapStatsSFramesIn, llcSapStatsSFramesOut, llcSapStatsRetransmitsOut, llcSapStatsREJsIn, llcSapStatsREJsOut, llcSapStatsWwCount, llcSapStatsTESTCommandsIn, llcSapStatsTESTCommandsOut, llcSapStatsTESTResponsesIn, llcSapStatsTESTResponsesOut, llcSapStatsXIDCommandsIn, llcSapStatsXIDCommandsOut, llcSapStatsXIDResponsesIn, llcSapStatsXIDResponsesOut, llcSapStatsUIFramesIn, llcSapStatsUIFramesOut, llcSapStatsUIOctetsIn, llcSapStatsUIOctetsOut, llcSapStatsConnectOk, llcSapStatsConnectFail, llcSapStatsDisconnect, llcSapStatsDisconnectFRMRSend, llcSapStatsDisconnectFRMRRcv, llcSapStatsDisconnectTimer, llcSapStatsDMsInABM, llcSapStatsSABMEsInABM]

class llcCoreCcGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2, 3])
	group = [llcCcAdminBounce, llcCcAdminMaxPDUOctets, llcCcAdminMaxUnackedIPDUsSend, llcCcAdminMaxUnackedIPDUsRcv, llcCcAdminMaxRetransmits, llcCcAdminAckTimer, llcCcAdminPbitTimer, llcCcAdminRejTimer, llcCcAdminBusyTimer, llcCcAdminInactTimer, llcCcAdminDelayAckCount, llcCcAdminDelayAckTimer, llcCcAdminNw, llcCcAdminRowStatus, llcCcOperState, llcCcOperMaxIPDUOctetsSend, llcCcOperMaxIPDUOctetsRcv, llcCcOperMaxUnackedIPDUsSend, llcCcOperMaxUnackedIPDUsRcv, llcCcOperMaxRetransmits, llcCcOperAckTimer, llcCcOperPbitTimer, llcCcOperRejTimer, llcCcOperBusyTimer, llcCcOperInactTimer, llcCcOperDelayAckCount, llcCcOperDelayAckTimer, llcCcOperNw, llcCcOperWw, llcCcOperCreateTime, llcCcOperLastModifyTime, llcCcOperLastFailTime, llcCcOperLastFailCause, llcCcOperLastFailFRMRInfo, llcCcOperLastWwCause, llcCcStatsLocalBusies, llcCcStatsRemoteBusies, llcCcStatsIFramesIn, llcCcStatsIFramesOut, llcCcStatsIOctetsIn, llcCcStatsIOctetsOut, llcCcStatsSFramesIn, llcCcStatsSFramesOut, llcCcStatsRetransmitsOut, llcCcStatsREJsIn, llcCcStatsREJsOut, llcCcStatsWwCount]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
