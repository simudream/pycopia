# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, Integer32
from TUBS_SMI import ibr
from SNMPv2_TC import TEXTUAL_CONVENTION

class TUBS_IBR_TEST_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/tubs/TUBS-IBR-TEST-MIB'
	conformance = 2
	name = 'TUBS-IBR-TEST-MIB'
	language = 2
	description = 'A MIB module which is only used for testing purposes.'

# nodes
class testMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 7])
	name = 'testMIB'


# macros
# types 

class OctalValue(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'o'


class HexValue(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'x'


class BinaryValue(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'b'


class Dot3Value(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))
	format = 'd-3'


class NumValue(pycopia.SMI.Basetypes.OctetString):
	status = 1

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
