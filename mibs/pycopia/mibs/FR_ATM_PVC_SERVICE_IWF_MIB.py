# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, mib_2, Integer32, Counter32
from ATM_TC_MIB import AtmVpIdentifier, AtmVcIdentifier
from ATM_MIB import atmVclEntry
from SNMPv2_TC import RowStatus, TimeStamp

class FR_ATM_PVC_SERVICE_IWF_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/FR-ATM-PVC-SERVICE-IWF-MIB'
	conformance = 132
	name = 'FR-ATM-PVC-SERVICE-IWF-MIB'
	language = 2
	description = 'The MIB module for monitoring and controlling the\nFrame Relay/ATM PVC Service Interworking\nFunction.'

# nodes
class frAtmIwfMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86])
	name = 'frAtmIwfMIB'

class frAtmIwfMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1])
	name = 'frAtmIwfMIBObjects'

class frAtmIwfTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 2])
	name = 'frAtmIwfTraps'

class frAtmIwfTrapsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 2, 0])
	name = 'frAtmIwfTrapsPrefix'

class frAtmIwfConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3])
	name = 'frAtmIwfConformance'

class frAtmIwfGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3, 1])
	name = 'frAtmIwfGroups'

class frAtmIwfCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3, 2])
	name = 'frAtmIwfCompliances'


# macros
# types 
# scalars 
class frAtmIwfConnIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frAtmIwfConnectionDescriptorIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class frAtmIwfConnIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frAtmIwfConnAtmPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 2])
	syntaxobject = InterfaceIndex


class frAtmIwfConnVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 3])
	syntaxobject = AtmVpIdentifier


class frAtmIwfConnVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 4])
	syntaxobject = AtmVcIdentifier


class frAtmIwfConnFrPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 5])
	syntaxobject = InterfaceIndex


class frAtmIwfConnDlci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frAtmIwfConnRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class frAtmIwfConnAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class frAtmIwfConnAtm2FrOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class frAtmIwfConnAtm2FrLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class frAtmIwfConnFr2AtmOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class frAtmIwfConnFr2AtmLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class frAtmIwfConnectionDescriptor(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frAtmIwfConnFailedFrameTranslate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Frames'


class frAtmIwfConnOverSizedFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Frames'


class frAtmIwfConnFailedAal5PduTranslate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'PDUs'


class frAtmIwfConnOverSizedSDUs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'SDUs'


class frAtmIwfConnCrcErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'PDUs'


class frAtmIwfConnSarTimeOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'PDUs'


class frAtmIwfConnectionDescriptorIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frAtmIwfConnDescriptorRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class frAtmIwfConnDeToClpMappingMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'mode1'), Enum(2, 'mode2Const0'), Enum(3, 'mode2Const1')]


class frAtmIwfConnClpToDeMappingMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'mode1'), Enum(2, 'mode2Const0'), Enum(3, 'mode2Const1')]


class frAtmIwfConnCongestionMappingMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'mode1'), Enum(2, 'mode2')]


class frAtmIwfConnEncapsulationMappingMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'transparentMode'), Enum(2, 'translationMode'), Enum(3, 'translationModeAll')]


class frAtmIwfConnEncapsulationMappings(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class frAtmIwfConnFragAndReassEnabled(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class frAtmIwfConnArpTranslationEnabled(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class frAtmIwfVclCrossConnectIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class frAtmIwfConnectionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frAtmIwfConnIndex, frAtmIwfConnAtmPort, frAtmIwfConnVpi, frAtmIwfConnVci, frAtmIwfConnFrPort, frAtmIwfConnDlci], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 2, 1])
	access = 2
	rowstatus = frAtmIwfConnRowStatus
	columns = {'frAtmIwfConnIndex': frAtmIwfConnIndex, 'frAtmIwfConnAtmPort': frAtmIwfConnAtmPort, 'frAtmIwfConnVpi': frAtmIwfConnVpi, 'frAtmIwfConnVci': frAtmIwfConnVci, 'frAtmIwfConnFrPort': frAtmIwfConnFrPort, 'frAtmIwfConnDlci': frAtmIwfConnDlci, 'frAtmIwfConnRowStatus': frAtmIwfConnRowStatus, 'frAtmIwfConnAdminStatus': frAtmIwfConnAdminStatus, 'frAtmIwfConnAtm2FrOperStatus': frAtmIwfConnAtm2FrOperStatus, 'frAtmIwfConnAtm2FrLastChange': frAtmIwfConnAtm2FrLastChange, 'frAtmIwfConnFr2AtmOperStatus': frAtmIwfConnFr2AtmOperStatus, 'frAtmIwfConnFr2AtmLastChange': frAtmIwfConnFr2AtmLastChange, 'frAtmIwfConnectionDescriptor': frAtmIwfConnectionDescriptor, 'frAtmIwfConnFailedFrameTranslate': frAtmIwfConnFailedFrameTranslate, 'frAtmIwfConnOverSizedFrames': frAtmIwfConnOverSizedFrames, 'frAtmIwfConnFailedAal5PduTranslate': frAtmIwfConnFailedAal5PduTranslate, 'frAtmIwfConnOverSizedSDUs': frAtmIwfConnOverSizedSDUs, 'frAtmIwfConnCrcErrors': frAtmIwfConnCrcErrors, 'frAtmIwfConnSarTimeOuts': frAtmIwfConnSarTimeOuts}


class frAtmIwfConnectionDescriptorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frAtmIwfConnectionDescriptorIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 4, 1])
	access = 2
	rowstatus = frAtmIwfConnDescriptorRowStatus
	columns = {'frAtmIwfConnectionDescriptorIndex': frAtmIwfConnectionDescriptorIndex, 'frAtmIwfConnDescriptorRowStatus': frAtmIwfConnDescriptorRowStatus, 'frAtmIwfConnDeToClpMappingMode': frAtmIwfConnDeToClpMappingMode, 'frAtmIwfConnClpToDeMappingMode': frAtmIwfConnClpToDeMappingMode, 'frAtmIwfConnCongestionMappingMode': frAtmIwfConnCongestionMappingMode, 'frAtmIwfConnEncapsulationMappingMode': frAtmIwfConnEncapsulationMappingMode, 'frAtmIwfConnEncapsulationMappings': frAtmIwfConnEncapsulationMappings, 'frAtmIwfConnFragAndReassEnabled': frAtmIwfConnFragAndReassEnabled, 'frAtmIwfConnArpTranslationEnabled': frAtmIwfConnArpTranslationEnabled}


from IF_MIB import ifIndex
from ATM_MIB import atmVclVpi
from ATM_MIB import atmVclVci
class frAtmIwfVclEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVclVpi, atmVclVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 1, 5, 1])
	access = 2
	columns = {'frAtmIwfVclCrossConnectIdentifier': frAtmIwfVclCrossConnectIdentifier}


# notifications (traps) 
class frAtmIwfConnStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 2, 0, 1])

# groups 
class frAtmIwfBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3, 1, 1])
	group = [frAtmIwfConnIndexNext, frAtmIwfConnAdminStatus, frAtmIwfConnAtm2FrOperStatus, frAtmIwfConnAtm2FrLastChange, frAtmIwfConnFr2AtmOperStatus, frAtmIwfConnFr2AtmLastChange, frAtmIwfConnectionDescriptor, frAtmIwfConnFailedFrameTranslate, frAtmIwfConnOverSizedFrames, frAtmIwfConnFailedAal5PduTranslate, frAtmIwfConnOverSizedSDUs, frAtmIwfConnCrcErrors, frAtmIwfConnSarTimeOuts, frAtmIwfConnRowStatus]

class frAtmIwfConnectionDescriptorGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3, 1, 2])
	group = [frAtmIwfConnectionDescriptorIndexNext, frAtmIwfConnDeToClpMappingMode, frAtmIwfConnClpToDeMappingMode, frAtmIwfConnCongestionMappingMode, frAtmIwfConnEncapsulationMappingMode, frAtmIwfConnEncapsulationMappings, frAtmIwfConnFragAndReassEnabled, frAtmIwfConnArpTranslationEnabled, frAtmIwfConnDescriptorRowStatus]

class frAtmIwfAtmVclTableAugmentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3, 1, 3])
	group = [frAtmIwfVclCrossConnectIdentifier]

class frAtmIwfNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 86, 3, 1, 4])
	group = [frAtmIwfConnStatusChange]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
