# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 

class RFC1065_SMI(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RFC1065-SMI'
	conformance = 2
	name = 'RFC1065-SMI'
	language = 1

# nodes
class internet(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1])
	name = 'internet'

class directory(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 1])
	name = 'directory'

class mgmt(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2])
	name = 'mgmt'

class experimental(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3])
	name = 'experimental'

class private(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4])
	name = 'private'

class enterprises(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1])
	name = 'enterprises'


# macros
class OBJECT_TYPE(MacroObject):
	name = 'OBJECT-TYPE'


# types 

class ObjectName(pycopia.SMI.Basetypes.ObjectIdentifier):
	pass


class NetworkAddress(pycopia.SMI.Basetypes.IpAddress):
	pass

IpAddress = pycopia.SMI.Basetypes.IpAddress
Counter = pycopia.SMI.Basetypes.Counter
Gauge = pycopia.SMI.Basetypes.Gauge
TimeTicks = pycopia.SMI.Basetypes.TimeTicks
Opaque = pycopia.SMI.Basetypes.Opaque
# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
