# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, transmission
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import DisplayString, TimeStamp, TruthValue
from IF_MIB import InterfaceIndex
from PerfHist_TC_MIB import PerfCurrentCount, PerfIntervalCount, PerfTotalCount

class DS3_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DS3-MIB'
	conformance = 5
	name = 'DS3-MIB'
	language = 2
	description = 'The is the MIB module that describes\nDS3 and E3 interfaces objects.\n\nCopyright (c) The Internet Society (2004).  This\nversion of this MIB module is part of RFC 3896;\nsee the RFC itself for full legal notices.'

# nodes
class ds3(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30])
	name = 'ds3'

class ds3Conformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14])
	name = 'ds3Conformance'

class ds3Groups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1])
	name = 'ds3Groups'

class ds3Compliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 2])
	name = 'ds3Compliances'

class ds3Traps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 15])
	name = 'ds3Traps'


# macros
# types 
# scalars 
# columns
class dsx3LineIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3IfIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 2])
	syntaxobject = InterfaceIndex


class dsx3TimeElapsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3ValidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3LineType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx3other'), Enum(2, 'dsx3M23'), Enum(3, 'dsx3SYNTRAN'), Enum(4, 'dsx3CbitParity'), Enum(5, 'dsx3ClearChannel'), Enum(6, 'e3other'), Enum(7, 'e3Framed'), Enum(8, 'e3Plcp'), Enum(9, 'dsx3M13')]


class dsx3LineCoding(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx3Other'), Enum(2, 'dsx3B3ZS'), Enum(3, 'e3HDB3')]


class dsx3SendCode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx3SendNoCode'), Enum(2, 'dsx3SendLineCode'), Enum(3, 'dsx3SendPayloadCode'), Enum(4, 'dsx3SendResetCode'), Enum(5, 'dsx3SendDS1LoopCode'), Enum(6, 'dsx3SendTestPattern')]


class dsx3CircuitIdentifier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx3LoopbackConfig(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx3NoLoop'), Enum(2, 'dsx3PayloadLoop'), Enum(3, 'dsx3LineLoop'), Enum(4, 'dsx3OtherLoop'), Enum(5, 'dsx3InwardLoop'), Enum(6, 'dsx3DualLoop')]


class dsx3LineStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3TransmitClockSource(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'loopTiming'), Enum(2, 'localTiming'), Enum(3, 'throughTiming')]


class dsx3InvalidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3LineLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'meters'


class dsx3LineStatusLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsx3LineStatusChangeTrapEnable(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class dsx3LoopbackStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3Channelization(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabledDs1'), Enum(3, 'enabledDs2')]


class dsx3Ds1ForRemoteLoop(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3CurrentIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3CurrentPESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 2])
	syntaxobject = PerfCurrentCount


class dsx3CurrentPSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 3])
	syntaxobject = PerfCurrentCount


class dsx3CurrentSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 4])
	syntaxobject = PerfCurrentCount


class dsx3CurrentUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 5])
	syntaxobject = PerfCurrentCount


class dsx3CurrentLCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 6])
	syntaxobject = PerfCurrentCount


class dsx3CurrentPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 7])
	syntaxobject = PerfCurrentCount


class dsx3CurrentLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 8])
	syntaxobject = PerfCurrentCount


class dsx3CurrentCCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 9])
	syntaxobject = PerfCurrentCount


class dsx3CurrentCESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 10])
	syntaxobject = PerfCurrentCount


class dsx3CurrentCSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1, 11])
	syntaxobject = PerfCurrentCount


class dsx3IntervalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3IntervalNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3IntervalPESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 3])
	syntaxobject = PerfIntervalCount


class dsx3IntervalPSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 4])
	syntaxobject = PerfIntervalCount


class dsx3IntervalSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 5])
	syntaxobject = PerfIntervalCount


class dsx3IntervalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 6])
	syntaxobject = PerfIntervalCount


class dsx3IntervalLCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 7])
	syntaxobject = PerfIntervalCount


class dsx3IntervalPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 8])
	syntaxobject = PerfIntervalCount


class dsx3IntervalLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 9])
	syntaxobject = PerfIntervalCount


class dsx3IntervalCCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 10])
	syntaxobject = PerfIntervalCount


class dsx3IntervalCESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 11])
	syntaxobject = PerfIntervalCount


class dsx3IntervalCSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 12])
	syntaxobject = PerfIntervalCount


class dsx3IntervalValidData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dsx3TotalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3TotalPESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 2])
	syntaxobject = PerfTotalCount


class dsx3TotalPSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 3])
	syntaxobject = PerfTotalCount


class dsx3TotalSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 4])
	syntaxobject = PerfTotalCount


class dsx3TotalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 5])
	syntaxobject = PerfTotalCount


class dsx3TotalLCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 6])
	syntaxobject = PerfTotalCount


class dsx3TotalPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 7])
	syntaxobject = PerfTotalCount


class dsx3TotalLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 8])
	syntaxobject = PerfTotalCount


class dsx3TotalCCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 9])
	syntaxobject = PerfTotalCount


class dsx3TotalCESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 10])
	syntaxobject = PerfTotalCount


class dsx3TotalCSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1, 11])
	syntaxobject = PerfTotalCount


class dsx3FarEndLineIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3FarEndEquipCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx3FarEndLocationIDCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx3FarEndFrameIDCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx3FarEndUnitCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx3FarEndFacilityIDCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx3FarEndCurrentIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3FarEndTimeElapsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3FarEndValidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3FarEndCurrentCESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 4])
	syntaxobject = PerfCurrentCount


class dsx3FarEndCurrentCSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 5])
	syntaxobject = PerfCurrentCount


class dsx3FarEndCurrentCCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 6])
	syntaxobject = PerfCurrentCount


class dsx3FarEndCurrentUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 7])
	syntaxobject = PerfCurrentCount


class dsx3FarEndInvalidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3FarEndIntervalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3FarEndIntervalNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3FarEndIntervalCESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 3])
	syntaxobject = PerfIntervalCount


class dsx3FarEndIntervalCSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 4])
	syntaxobject = PerfIntervalCount


class dsx3FarEndIntervalCCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 5])
	syntaxobject = PerfIntervalCount


class dsx3FarEndIntervalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 6])
	syntaxobject = PerfIntervalCount


class dsx3FarEndIntervalValidData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dsx3FarEndTotalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 12, 1, 1])
	syntaxobject = InterfaceIndex


class dsx3FarEndTotalCESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 12, 1, 2])
	syntaxobject = PerfTotalCount


class dsx3FarEndTotalCSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 12, 1, 3])
	syntaxobject = PerfTotalCount


class dsx3FarEndTotalCCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 12, 1, 4])
	syntaxobject = PerfTotalCount


class dsx3FarEndTotalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 12, 1, 5])
	syntaxobject = PerfTotalCount


class dsx3FracIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3FracNumber(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx3FracIfIndex(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class dsx3ConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3LineIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 5, 1])
	access = 2
	columns = {'dsx3LineIndex': dsx3LineIndex, 'dsx3IfIndex': dsx3IfIndex, 'dsx3TimeElapsed': dsx3TimeElapsed, 'dsx3ValidIntervals': dsx3ValidIntervals, 'dsx3LineType': dsx3LineType, 'dsx3LineCoding': dsx3LineCoding, 'dsx3SendCode': dsx3SendCode, 'dsx3CircuitIdentifier': dsx3CircuitIdentifier, 'dsx3LoopbackConfig': dsx3LoopbackConfig, 'dsx3LineStatus': dsx3LineStatus, 'dsx3TransmitClockSource': dsx3TransmitClockSource, 'dsx3InvalidIntervals': dsx3InvalidIntervals, 'dsx3LineLength': dsx3LineLength, 'dsx3LineStatusLastChange': dsx3LineStatusLastChange, 'dsx3LineStatusChangeTrapEnable': dsx3LineStatusChangeTrapEnable, 'dsx3LoopbackStatus': dsx3LoopbackStatus, 'dsx3Channelization': dsx3Channelization, 'dsx3Ds1ForRemoteLoop': dsx3Ds1ForRemoteLoop}


class dsx3CurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3CurrentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 6, 1])
	access = 2
	columns = {'dsx3CurrentIndex': dsx3CurrentIndex, 'dsx3CurrentPESs': dsx3CurrentPESs, 'dsx3CurrentPSESs': dsx3CurrentPSESs, 'dsx3CurrentSEFSs': dsx3CurrentSEFSs, 'dsx3CurrentUASs': dsx3CurrentUASs, 'dsx3CurrentLCVs': dsx3CurrentLCVs, 'dsx3CurrentPCVs': dsx3CurrentPCVs, 'dsx3CurrentLESs': dsx3CurrentLESs, 'dsx3CurrentCCVs': dsx3CurrentCCVs, 'dsx3CurrentCESs': dsx3CurrentCESs, 'dsx3CurrentCSESs': dsx3CurrentCSESs}


class dsx3IntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3IntervalIndex, dsx3IntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 7, 1])
	access = 2
	columns = {'dsx3IntervalIndex': dsx3IntervalIndex, 'dsx3IntervalNumber': dsx3IntervalNumber, 'dsx3IntervalPESs': dsx3IntervalPESs, 'dsx3IntervalPSESs': dsx3IntervalPSESs, 'dsx3IntervalSEFSs': dsx3IntervalSEFSs, 'dsx3IntervalUASs': dsx3IntervalUASs, 'dsx3IntervalLCVs': dsx3IntervalLCVs, 'dsx3IntervalPCVs': dsx3IntervalPCVs, 'dsx3IntervalLESs': dsx3IntervalLESs, 'dsx3IntervalCCVs': dsx3IntervalCCVs, 'dsx3IntervalCESs': dsx3IntervalCESs, 'dsx3IntervalCSESs': dsx3IntervalCSESs, 'dsx3IntervalValidData': dsx3IntervalValidData}


class dsx3TotalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3TotalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 8, 1])
	access = 2
	columns = {'dsx3TotalIndex': dsx3TotalIndex, 'dsx3TotalPESs': dsx3TotalPESs, 'dsx3TotalPSESs': dsx3TotalPSESs, 'dsx3TotalSEFSs': dsx3TotalSEFSs, 'dsx3TotalUASs': dsx3TotalUASs, 'dsx3TotalLCVs': dsx3TotalLCVs, 'dsx3TotalPCVs': dsx3TotalPCVs, 'dsx3TotalLESs': dsx3TotalLESs, 'dsx3TotalCCVs': dsx3TotalCCVs, 'dsx3TotalCESs': dsx3TotalCESs, 'dsx3TotalCSESs': dsx3TotalCSESs}


class dsx3FarEndConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3FarEndLineIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 9, 1])
	access = 2
	columns = {'dsx3FarEndLineIndex': dsx3FarEndLineIndex, 'dsx3FarEndEquipCode': dsx3FarEndEquipCode, 'dsx3FarEndLocationIDCode': dsx3FarEndLocationIDCode, 'dsx3FarEndFrameIDCode': dsx3FarEndFrameIDCode, 'dsx3FarEndUnitCode': dsx3FarEndUnitCode, 'dsx3FarEndFacilityIDCode': dsx3FarEndFacilityIDCode}


class dsx3FarEndCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3FarEndCurrentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 10, 1])
	access = 2
	columns = {'dsx3FarEndCurrentIndex': dsx3FarEndCurrentIndex, 'dsx3FarEndTimeElapsed': dsx3FarEndTimeElapsed, 'dsx3FarEndValidIntervals': dsx3FarEndValidIntervals, 'dsx3FarEndCurrentCESs': dsx3FarEndCurrentCESs, 'dsx3FarEndCurrentCSESs': dsx3FarEndCurrentCSESs, 'dsx3FarEndCurrentCCVs': dsx3FarEndCurrentCCVs, 'dsx3FarEndCurrentUASs': dsx3FarEndCurrentUASs, 'dsx3FarEndInvalidIntervals': dsx3FarEndInvalidIntervals}


class dsx3FarEndIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3FarEndIntervalIndex, dsx3FarEndIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 11, 1])
	access = 2
	columns = {'dsx3FarEndIntervalIndex': dsx3FarEndIntervalIndex, 'dsx3FarEndIntervalNumber': dsx3FarEndIntervalNumber, 'dsx3FarEndIntervalCESs': dsx3FarEndIntervalCESs, 'dsx3FarEndIntervalCSESs': dsx3FarEndIntervalCSESs, 'dsx3FarEndIntervalCCVs': dsx3FarEndIntervalCCVs, 'dsx3FarEndIntervalUASs': dsx3FarEndIntervalUASs, 'dsx3FarEndIntervalValidData': dsx3FarEndIntervalValidData}


class dsx3FarEndTotalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx3FarEndTotalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 12, 1])
	access = 2
	columns = {'dsx3FarEndTotalIndex': dsx3FarEndTotalIndex, 'dsx3FarEndTotalCESs': dsx3FarEndTotalCESs, 'dsx3FarEndTotalCSESs': dsx3FarEndTotalCSESs, 'dsx3FarEndTotalCCVs': dsx3FarEndTotalCCVs, 'dsx3FarEndTotalUASs': dsx3FarEndTotalUASs}


class dsx3FracEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([dsx3FracIndex, dsx3FracNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 13, 1])
	access = 2
	columns = {'dsx3FracIndex': dsx3FracIndex, 'dsx3FracNumber': dsx3FracNumber, 'dsx3FracIfIndex': dsx3FracIfIndex}


# notifications (traps) 
class dsx3LineStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 15, 0, 1])

# groups 
class ds3NearEndConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1, 1])
	group = [dsx3LineIndex, dsx3TimeElapsed, dsx3ValidIntervals, dsx3LineType, dsx3LineCoding, dsx3SendCode, dsx3CircuitIdentifier, dsx3LoopbackConfig, dsx3LineStatus, dsx3TransmitClockSource, dsx3InvalidIntervals, dsx3LineLength, dsx3LoopbackStatus, dsx3Channelization, dsx3Ds1ForRemoteLoop]

class ds3NearEndStatisticsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1, 2])
	group = [dsx3CurrentIndex, dsx3CurrentPESs, dsx3CurrentPSESs, dsx3CurrentSEFSs, dsx3CurrentUASs, dsx3CurrentLCVs, dsx3CurrentPCVs, dsx3CurrentLESs, dsx3CurrentCCVs, dsx3CurrentCESs, dsx3CurrentCSESs, dsx3IntervalIndex, dsx3IntervalNumber, dsx3IntervalPESs, dsx3IntervalPSESs, dsx3IntervalSEFSs, dsx3IntervalUASs, dsx3IntervalLCVs, dsx3IntervalPCVs, dsx3IntervalLESs, dsx3IntervalCCVs, dsx3IntervalCESs, dsx3IntervalCSESs, dsx3IntervalValidData, dsx3TotalIndex, dsx3TotalPESs, dsx3TotalPSESs, dsx3TotalSEFSs, dsx3TotalUASs, dsx3TotalLCVs, dsx3TotalPCVs, dsx3TotalLESs, dsx3TotalCCVs, dsx3TotalCESs, dsx3TotalCSESs]

class ds3FarEndGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1, 3])
	group = [dsx3FarEndLineIndex, dsx3FarEndEquipCode, dsx3FarEndLocationIDCode, dsx3FarEndFrameIDCode, dsx3FarEndUnitCode, dsx3FarEndFacilityIDCode, dsx3FarEndCurrentIndex, dsx3FarEndTimeElapsed, dsx3FarEndValidIntervals, dsx3FarEndCurrentCESs, dsx3FarEndCurrentCSESs, dsx3FarEndCurrentCCVs, dsx3FarEndCurrentUASs, dsx3FarEndInvalidIntervals, dsx3FarEndIntervalIndex, dsx3FarEndIntervalNumber, dsx3FarEndIntervalCESs, dsx3FarEndIntervalCSESs, dsx3FarEndIntervalCCVs, dsx3FarEndIntervalUASs, dsx3FarEndIntervalValidData, dsx3FarEndTotalIndex, dsx3FarEndTotalCESs, dsx3FarEndTotalCSESs, dsx3FarEndTotalCCVs, dsx3FarEndTotalUASs]

class ds3DeprecatedGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1, 4])
	group = [dsx3IfIndex, dsx3FracIndex, dsx3FracNumber, dsx3FracIfIndex]

class ds3NearEndOptionalConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1, 5])
	group = [dsx3LineStatusLastChange, dsx3LineStatusChangeTrapEnable]

class ds3NearEndOptionalTrapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 30, 14, 1, 6])
	group = [dsx3LineStatusChange]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
