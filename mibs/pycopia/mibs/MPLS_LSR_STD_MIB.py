# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndexOrZero, ifGeneralInformationGroup, ifCounterDiscontinuityGroup
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Integer32, Counter32, Unsigned32, Counter64, Gauge32, zeroDotZero
from MPLS_TC_STD_MIB import mplsStdMIB, MplsLSPID, MplsLabel, MplsBitRate, MplsOwner
from INET_ADDRESS_MIB import InetAddress, InetAddressType
from IANA_ADDRESS_FAMILY_NUMBERS_MIB import AddressFamilyNumbers
from SNMPv2_TC import TruthValue, RowStatus, StorageType, RowPointer, TimeStamp, TEXTUAL_CONVENTION

class MPLS_LSR_STD_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/MPLS-LSR-STD-MIB'
	conformance = 3
	name = 'MPLS-LSR-STD-MIB'
	language = 2
	description = 'This MIB module contains managed object definitions for\nthe Multiprotocol Label Switching (MPLS) Router as\n\n\n\ndefined in: Rosen, E., Viswanathan, A., and R.\nCallon, Multiprotocol Label Switching Architecture,\nRFC 3031, January 2001.\n\nCopyright (C) The Internet Society (2004). The\ninitial version of this MIB module was published\nin RFC 3812. For full legal notices see the RFC\nitself or see:\nhttp://www.ietf.org/copyrights/ianamib.html'

# nodes
class mplsLsrStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2])
	name = 'mplsLsrStdMIB'

class mplsLsrNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 0])
	name = 'mplsLsrNotifications'

class mplsLsrObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1])
	name = 'mplsLsrObjects'

class mplsLsrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2])
	name = 'mplsLsrConformance'

class mplsLsrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1])
	name = 'mplsLsrGroups'

class mplsLsrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 2])
	name = 'mplsLsrCompliances'


# macros
# types 

class MplsIndexType(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 24))


class MplsIndexNextType(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 24))

# scalars 
class mplsInSegmentIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 3])
	syntaxobject = MplsIndexNextType


class mplsOutSegmentIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 6])
	syntaxobject = MplsIndexNextType


class mplsXCIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 9])
	syntaxobject = MplsIndexNextType


class mplsMaxLabelStackDepth(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLabelStackIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 12])
	syntaxobject = MplsIndexNextType


class mplsXCNotificationsEnable(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class mplsInterfaceIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class mplsInterfaceLabelMinIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 2])
	syntaxobject = MplsLabel


class mplsInterfaceLabelMaxIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 3])
	syntaxobject = MplsLabel


class mplsInterfaceLabelMinOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 4])
	syntaxobject = MplsLabel


class mplsInterfaceLabelMaxOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 5])
	syntaxobject = MplsLabel


class mplsInterfaceTotalBandwidth(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 6])
	syntaxobject = MplsBitRate
	access = 4
	units = 'kilobits per second'


class mplsInterfaceAvailableBandwidth(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 7])
	syntaxobject = MplsBitRate


class mplsInterfaceLabelParticipationType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class mplsInterfacePerfInLabelsInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mplsInterfacePerfInLabelLookupFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInterfacePerfOutLabelsInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mplsInterfacePerfOutFragmentedPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 1])
	syntaxobject = MplsIndexType


class mplsInSegmentInterface(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 2])
	syntaxobject = InterfaceIndexOrZero


class mplsInSegmentLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 3])
	syntaxobject = MplsLabel


class mplsInSegmentLabelPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsInSegmentNPop(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsInSegmentAddrFamily(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 6])
	syntaxobject = AddressFamilyNumbers


class mplsInSegmentXCIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 7])
	syntaxobject = MplsIndexType


class mplsInSegmentOwner(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 8])
	syntaxobject = MplsOwner


class mplsInSegmentTrafficParamPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsInSegmentRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsInSegmentStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsInSegmentPerfOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentPerfPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentPerfErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentPerfDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentPerfHCOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class mplsInSegmentPerfDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsOutSegmentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 1])
	syntaxobject = MplsIndexType


class mplsOutSegmentInterface(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 2])
	syntaxobject = InterfaceIndexOrZero


class mplsOutSegmentPushTopLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class mplsOutSegmentTopLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 4])
	syntaxobject = MplsLabel


class mplsOutSegmentTopLabelPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsOutSegmentNextHopAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 6])
	syntaxobject = InetAddressType


class mplsOutSegmentNextHopAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 7])
	syntaxobject = InetAddress


class mplsOutSegmentXCIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 8])
	syntaxobject = MplsIndexType


class mplsOutSegmentOwner(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 9])
	syntaxobject = MplsOwner


class mplsOutSegmentTrafficParamPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsOutSegmentRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsOutSegmentStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsOutSegmentPerfOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentPerfPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentPerfErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentPerfDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentPerfHCOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class mplsOutSegmentPerfDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsXCIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 1])
	syntaxobject = MplsIndexType


class mplsXCInSegmentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 2])
	syntaxobject = MplsIndexType


class mplsXCOutSegmentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 3])
	syntaxobject = MplsIndexType


class mplsXCLspId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 4])
	syntaxobject = MplsLSPID


class mplsXCLabelStackIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 5])
	syntaxobject = MplsIndexType


class mplsXCOwner(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 6])
	syntaxobject = MplsOwner


class mplsXCRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsXCStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsXCAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'testing')]


class mplsXCOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'testing'), Enum(4, 'unknown'), Enum(5, 'dormant'), Enum(6, 'notPresent'), Enum(7, 'lowerLayerDown')]


class mplsLabelStackIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1, 1])
	syntaxobject = MplsIndexType


class mplsLabelStackLabelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLabelStackLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1, 3])
	syntaxobject = MplsLabel


class mplsLabelStackLabelPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsLabelStackRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsLabelStackStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsInSegmentMapInterface(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 14, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class mplsInSegmentMapLabel(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 14, 1, 2])
	syntaxobject = MplsLabel


class mplsInSegmentMapLabelPtrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsInSegmentMapIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 14, 1, 4])
	syntaxobject = MplsIndexType


# rows 
class mplsInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInterfaceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 1, 1])
	access = 2
	columns = {'mplsInterfaceIndex': mplsInterfaceIndex, 'mplsInterfaceLabelMinIn': mplsInterfaceLabelMinIn, 'mplsInterfaceLabelMaxIn': mplsInterfaceLabelMaxIn, 'mplsInterfaceLabelMinOut': mplsInterfaceLabelMinOut, 'mplsInterfaceLabelMaxOut': mplsInterfaceLabelMaxOut, 'mplsInterfaceTotalBandwidth': mplsInterfaceTotalBandwidth, 'mplsInterfaceAvailableBandwidth': mplsInterfaceAvailableBandwidth, 'mplsInterfaceLabelParticipationType': mplsInterfaceLabelParticipationType}


from MPLS_LSR_STD_MIB import mplsInterfaceIndex
class mplsInterfacePerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInterfaceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 2, 1])
	access = 2
	columns = {'mplsInterfacePerfInLabelsInUse': mplsInterfacePerfInLabelsInUse, 'mplsInterfacePerfInLabelLookupFailures': mplsInterfacePerfInLabelLookupFailures, 'mplsInterfacePerfOutLabelsInUse': mplsInterfacePerfOutLabelsInUse, 'mplsInterfacePerfOutFragmentedPkts': mplsInterfacePerfOutFragmentedPkts}


class mplsInSegmentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 4, 1])
	access = 2
	rowstatus = mplsInSegmentRowStatus
	columns = {'mplsInSegmentIndex': mplsInSegmentIndex, 'mplsInSegmentInterface': mplsInSegmentInterface, 'mplsInSegmentLabel': mplsInSegmentLabel, 'mplsInSegmentLabelPtr': mplsInSegmentLabelPtr, 'mplsInSegmentNPop': mplsInSegmentNPop, 'mplsInSegmentAddrFamily': mplsInSegmentAddrFamily, 'mplsInSegmentXCIndex': mplsInSegmentXCIndex, 'mplsInSegmentOwner': mplsInSegmentOwner, 'mplsInSegmentTrafficParamPtr': mplsInSegmentTrafficParamPtr, 'mplsInSegmentRowStatus': mplsInSegmentRowStatus, 'mplsInSegmentStorageType': mplsInSegmentStorageType}


from MPLS_LSR_STD_MIB import mplsInSegmentIndex
class mplsInSegmentPerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInSegmentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 5, 1])
	access = 2
	columns = {'mplsInSegmentPerfOctets': mplsInSegmentPerfOctets, 'mplsInSegmentPerfPackets': mplsInSegmentPerfPackets, 'mplsInSegmentPerfErrors': mplsInSegmentPerfErrors, 'mplsInSegmentPerfDiscards': mplsInSegmentPerfDiscards, 'mplsInSegmentPerfHCOctets': mplsInSegmentPerfHCOctets, 'mplsInSegmentPerfDiscontinuityTime': mplsInSegmentPerfDiscontinuityTime}


class mplsOutSegmentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsOutSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 7, 1])
	access = 2
	rowstatus = mplsOutSegmentRowStatus
	columns = {'mplsOutSegmentIndex': mplsOutSegmentIndex, 'mplsOutSegmentInterface': mplsOutSegmentInterface, 'mplsOutSegmentPushTopLabel': mplsOutSegmentPushTopLabel, 'mplsOutSegmentTopLabel': mplsOutSegmentTopLabel, 'mplsOutSegmentTopLabelPtr': mplsOutSegmentTopLabelPtr, 'mplsOutSegmentNextHopAddrType': mplsOutSegmentNextHopAddrType, 'mplsOutSegmentNextHopAddr': mplsOutSegmentNextHopAddr, 'mplsOutSegmentXCIndex': mplsOutSegmentXCIndex, 'mplsOutSegmentOwner': mplsOutSegmentOwner, 'mplsOutSegmentTrafficParamPtr': mplsOutSegmentTrafficParamPtr, 'mplsOutSegmentRowStatus': mplsOutSegmentRowStatus, 'mplsOutSegmentStorageType': mplsOutSegmentStorageType}


from MPLS_LSR_STD_MIB import mplsOutSegmentIndex
class mplsOutSegmentPerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsOutSegmentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 8, 1])
	access = 2
	columns = {'mplsOutSegmentPerfOctets': mplsOutSegmentPerfOctets, 'mplsOutSegmentPerfPackets': mplsOutSegmentPerfPackets, 'mplsOutSegmentPerfErrors': mplsOutSegmentPerfErrors, 'mplsOutSegmentPerfDiscards': mplsOutSegmentPerfDiscards, 'mplsOutSegmentPerfHCOctets': mplsOutSegmentPerfHCOctets, 'mplsOutSegmentPerfDiscontinuityTime': mplsOutSegmentPerfDiscontinuityTime}


class mplsXCEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsXCIndex, mplsXCInSegmentIndex, mplsXCOutSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 10, 1])
	access = 2
	rowstatus = mplsXCRowStatus
	columns = {'mplsXCIndex': mplsXCIndex, 'mplsXCInSegmentIndex': mplsXCInSegmentIndex, 'mplsXCOutSegmentIndex': mplsXCOutSegmentIndex, 'mplsXCLspId': mplsXCLspId, 'mplsXCLabelStackIndex': mplsXCLabelStackIndex, 'mplsXCOwner': mplsXCOwner, 'mplsXCRowStatus': mplsXCRowStatus, 'mplsXCStorageType': mplsXCStorageType, 'mplsXCAdminStatus': mplsXCAdminStatus, 'mplsXCOperStatus': mplsXCOperStatus}


class mplsLabelStackEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLabelStackIndex, mplsLabelStackLabelIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 13, 1])
	access = 2
	rowstatus = mplsLabelStackRowStatus
	columns = {'mplsLabelStackIndex': mplsLabelStackIndex, 'mplsLabelStackLabelIndex': mplsLabelStackLabelIndex, 'mplsLabelStackLabel': mplsLabelStackLabel, 'mplsLabelStackLabelPtr': mplsLabelStackLabelPtr, 'mplsLabelStackRowStatus': mplsLabelStackRowStatus, 'mplsLabelStackStorageType': mplsLabelStackStorageType}


class mplsInSegmentMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInSegmentMapInterface, mplsInSegmentMapLabel, mplsInSegmentMapLabelPtrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 1, 14, 1])
	access = 2
	columns = {'mplsInSegmentMapInterface': mplsInSegmentMapInterface, 'mplsInSegmentMapLabel': mplsInSegmentMapLabel, 'mplsInSegmentMapLabelPtrIndex': mplsInSegmentMapLabelPtrIndex, 'mplsInSegmentMapIndex': mplsInSegmentMapIndex}


# notifications (traps) 
class mplsXCUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 0, 1])

class mplsXCDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 0, 2])

# groups 
class mplsInterfaceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 1])
	group = [mplsInterfaceLabelMinIn, mplsInterfaceLabelMaxIn, mplsInterfaceLabelMinOut, mplsInterfaceLabelMaxOut, mplsInterfaceTotalBandwidth, mplsInterfaceAvailableBandwidth, mplsInterfaceLabelParticipationType]

class mplsInSegmentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 2])
	group = [mplsInSegmentIndexNext, mplsInSegmentInterface, mplsInSegmentLabel, mplsInSegmentLabelPtr, mplsInSegmentNPop, mplsInSegmentAddrFamily, mplsInSegmentXCIndex, mplsInSegmentOwner, mplsInSegmentRowStatus, mplsInSegmentStorageType, mplsInSegmentTrafficParamPtr, mplsInSegmentMapIndex]

class mplsOutSegmentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 3])
	group = [mplsOutSegmentIndexNext, mplsOutSegmentInterface, mplsOutSegmentPushTopLabel, mplsOutSegmentTopLabel, mplsOutSegmentTopLabelPtr, mplsOutSegmentNextHopAddrType, mplsOutSegmentNextHopAddr, mplsOutSegmentXCIndex, mplsOutSegmentOwner, mplsOutSegmentPerfOctets, mplsOutSegmentPerfDiscards, mplsOutSegmentPerfErrors, mplsOutSegmentRowStatus, mplsOutSegmentStorageType, mplsOutSegmentTrafficParamPtr]

class mplsXCGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 4])
	group = [mplsXCIndexNext, mplsXCLspId, mplsXCLabelStackIndex, mplsXCOwner, mplsXCStorageType, mplsXCAdminStatus, mplsXCOperStatus, mplsXCRowStatus, mplsXCNotificationsEnable]

class mplsPerfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 5])
	group = [mplsInSegmentPerfOctets, mplsInSegmentPerfPackets, mplsInSegmentPerfErrors, mplsInSegmentPerfDiscards, mplsInSegmentPerfDiscontinuityTime, mplsOutSegmentPerfOctets, mplsOutSegmentPerfPackets, mplsOutSegmentPerfDiscards, mplsOutSegmentPerfDiscontinuityTime, mplsInterfacePerfInLabelsInUse, mplsInterfacePerfInLabelLookupFailures, mplsInterfacePerfOutFragmentedPkts, mplsInterfacePerfOutLabelsInUse]

class mplsHCInSegmentPerfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 6])
	group = [mplsInSegmentPerfHCOctets]

class mplsHCOutSegmentPerfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 7])
	group = [mplsOutSegmentPerfHCOctets]

class mplsLabelStackGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 8])
	group = [mplsLabelStackLabel, mplsLabelStackLabelPtr, mplsLabelStackRowStatus, mplsLabelStackStorageType, mplsMaxLabelStackDepth, mplsLabelStackIndexNext]

class mplsLsrNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 2, 2, 1, 9])
	group = [mplsXCUp, mplsXCDown]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
