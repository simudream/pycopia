# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Integer32, OBJECT_TYPE, MODULE_IDENTITY
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import RowStatus, TimeInterval
from HP_ICF_OID import hpicfObjectModules, hpicfCommon
from RMON_MIB import OwnerString

class HP_ICF_LINKTEST(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-ICF-LINKTEST'
	conformance = 5
	name = 'HP-ICF-LINKTEST'
	language = 2
	description = 'This MIB module describes objects for managing\nthe link test features of devices in the HP\nIntegrated Communication Facility product line.'

# nodes
class hpicfLinkTestMib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7])
	name = 'hpicfLinkTestMib'

class hpicfLinkTestConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7, 1])
	name = 'hpicfLinkTestConformance'

class hpicfLinkTestCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7, 1, 1])
	name = 'hpicfLinkTestCompliances'

class hpicfLinkTestGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7, 1, 2])
	name = 'hpicfLinkTestGroups'

class hpicfLinktest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6])
	name = 'hpicfLinktest'


# macros
# types 
# scalars 
class hpicfLinkTestNextIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class hpicfLinkTestIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'icmpEcho'), Enum(2, 'ieee8022Test'), Enum(3, 'ipxDiagnostic')]


class hpicfLinkTestAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpicfLinkTestIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestTimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class hpicfLinkTestRepetitions(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestAttempts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestSuccesses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestMinRespTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestMaxRespTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestTotalRespTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfLinkTestOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 12])
	syntaxobject = OwnerString


class hpicfLinkTestStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpicfLinkTestDeleteMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'keepWhenDone'), Enum(2, 'destroyWhenDone')]


# rows 
class hpicfLinkTestEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfLinkTestIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6, 2, 1])
	access = 2
	rowstatus = hpicfLinkTestStatus
	columns = {'hpicfLinkTestIndex': hpicfLinkTestIndex, 'hpicfLinkTestType': hpicfLinkTestType, 'hpicfLinkTestAddress': hpicfLinkTestAddress, 'hpicfLinkTestIfIndex': hpicfLinkTestIfIndex, 'hpicfLinkTestTimeout': hpicfLinkTestTimeout, 'hpicfLinkTestRepetitions': hpicfLinkTestRepetitions, 'hpicfLinkTestAttempts': hpicfLinkTestAttempts, 'hpicfLinkTestSuccesses': hpicfLinkTestSuccesses, 'hpicfLinkTestMinRespTime': hpicfLinkTestMinRespTime, 'hpicfLinkTestMaxRespTime': hpicfLinkTestMaxRespTime, 'hpicfLinkTestTotalRespTime': hpicfLinkTestTotalRespTime, 'hpicfLinkTestOwner': hpicfLinkTestOwner, 'hpicfLinkTestStatus': hpicfLinkTestStatus, 'hpicfLinkTestDeleteMode': hpicfLinkTestDeleteMode}


# notifications (traps) 
# groups 
class hpicfLinkTestGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7, 1, 2, 1])
	group = [hpicfLinkTestNextIndex, hpicfLinkTestType, hpicfLinkTestAddress, hpicfLinkTestIfIndex, hpicfLinkTestTimeout, hpicfLinkTestRepetitions, hpicfLinkTestAttempts, hpicfLinkTestSuccesses, hpicfLinkTestMinRespTime, hpicfLinkTestMaxRespTime, hpicfLinkTestTotalRespTime, hpicfLinkTestOwner, hpicfLinkTestStatus]

class hpicfLinkTestGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7, 1, 2, 2])
	group = [hpicfLinkTestNextIndex, hpicfLinkTestType, hpicfLinkTestAddress, hpicfLinkTestIfIndex, hpicfLinkTestTimeout, hpicfLinkTestRepetitions, hpicfLinkTestAttempts, hpicfLinkTestSuccesses, hpicfLinkTestMinRespTime, hpicfLinkTestMaxRespTime, hpicfLinkTestTotalRespTime, hpicfLinkTestOwner, hpicfLinkTestStatus, hpicfLinkTestDeleteMode]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
