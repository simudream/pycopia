# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE
from LAN_EMULATION_CLIENT_MIB import lecIndex, AtmLaneAddress
from CISCO_SMI import ciscoMgmt
from ATM_MIB import atmVclVpi, atmVclVci

class CISCO_LEC_DATA_VCC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-LEC-DATA-VCC-MIB'
	conformance = 132
	name = 'CISCO-LEC-DATA-VCC-MIB'
	language = 2
	description = "This MIB module is a Cisco extension to the ATM\nForum's LANE Client MIB.  This extension identifies\nthose VCCs which are being used to carry packets\nsent on LANE Data Direct VCCs."

# nodes
class ciscoLecDataVccMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69])
	name = 'ciscoLecDataVccMIB'

class ciscoLecDataVccMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 1])
	name = 'ciscoLecDataVccMIBObjects'

class cLecDataDirectVcc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1])
	name = 'cLecDataDirectVcc'

class ciscoLecDataVccMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 2])
	name = 'ciscoLecDataVccMIBNotificationPrefix'

class ciscoLecDataVccMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 2, 0])
	name = 'ciscoLecDataVccMIBNotifications'

class ciscoLecDataVccMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 3])
	name = 'ciscoLecDataVccMIBConformance'

class ciscoLecDataVccMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 1])
	name = 'ciscoLecDataVccMIBCompliances'

class ciscoLecDataVccMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 2])
	name = 'ciscoLecDataVccMIBGroups'


# macros
# types 
# scalars 
# columns
class cLecDataDirectLocalAtmAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1, 1, 1])
	syntaxobject = AtmLaneAddress


class cLecDataDirectRemoteAtmAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1, 1, 2])
	syntaxobject = AtmLaneAddress


# rows 
class cLecDataDirectVccEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecIndex, ifIndex, atmVclVpi, atmVclVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1, 1])
	access = 2
	columns = {'cLecDataDirectLocalAtmAddress': cLecDataDirectLocalAtmAddress, 'cLecDataDirectRemoteAtmAddress': cLecDataDirectRemoteAtmAddress}


# notifications (traps) 
# groups 
class ciscoLecDataVccBaseMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 2, 1])
	group = [cLecDataDirectLocalAtmAddress, cLecDataDirectRemoteAtmAddress]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
