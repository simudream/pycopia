# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1271_MIB import OwnerString, EntryStatus, rmon, statistics, history
from RFC1155_SMI import Counter, TimeTicks

class TOKEN_RING_RMON_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/TOKEN-RING-RMON-MIB'
	conformance = 2
	name = 'TOKEN-RING-RMON-MIB'
	language = 1

# nodes
class tokenRing(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10])
	name = 'tokenRing'


# macros
# types 
MacAddress = pycopia.SMI.Basetypes.MacAddress
TimeInterval = pycopia.SMI.Basetypes.TimeInterval
# scalars 
# columns
class tokenRingMLStatsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingMLStatsDataSource(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class tokenRingMLStatsDropEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsMacOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsMacPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsRingPurgeEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsRingPurgePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsBeaconEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsBeaconTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class tokenRingMLStatsBeaconPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsClaimTokenEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsClaimTokenPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsNAUNChanges(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsLineErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsInternalErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsBurstErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsACErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsAbortErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsLostFrameErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsCongestionErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsFrameCopiedErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsFrequencyErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsTokenErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsSoftErrorReports(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsRingPollEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsOwner(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 26])
	syntaxobject = OwnerString


class tokenRingMLStatsStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 27])
	syntaxobject = EntryStatus


class tokenRingPStatsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingPStatsDataSource(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class tokenRingPStatsDropEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataBroadcastPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataMulticastPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts18to63Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts64to127Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts128to255Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts256to511Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts512to1023Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts1024to2047Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts2048to4095Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts4096to8191Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPkts8192to18000Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsDataPktsGreaterThan18000Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsOwner(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 18])
	syntaxobject = OwnerString


class tokenRingPStatsStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 19])
	syntaxobject = EntryStatus


class tokenRingMLHistoryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingMLHistorySampleIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingMLHistoryIntervalStart(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class tokenRingMLHistoryDropEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryMacOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryMacPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryRingPurgeEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryRingPurgePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryBeaconEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryBeaconTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class tokenRingMLHistoryBeaconPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryClaimTokenEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryClaimTokenPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryNAUNChanges(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryLineErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryInternalErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryBurstErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryACErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryAbortErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryLostFrameErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryCongestionErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryFrameCopiedErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryFrequencyErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryTokenErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistorySoftErrorReports(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryRingPollEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLHistoryActiveStations(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingPHistoryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingPHistorySampleIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tokenRingPHistoryIntervalStart(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class tokenRingPHistoryDropEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataBroadcastPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataMulticastPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts18to63Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts64to127Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts128to255Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts256to511Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts512to1023Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts1024to2047Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts2048to4095Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts4096to8191Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPkts8192to18000Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPHistoryDataPktsGreaterThan18000Octets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationControlIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationControlTableSize(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationControlActiveStations(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationControlRingState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normalOperation'), Enum(2, 'ringPurgeState'), Enum(3, 'claimTokenState'), Enum(4, 'beaconFrameStreamingState'), Enum(5, 'beaconBitStreamingState'), Enum(6, 'beaconRingSignalLossState'), Enum(7, 'beaconSetRecoveryModeState')]


class ringStationControlBeaconSender(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationControlBeaconNAUN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationControlActiveMonitor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationControlOrderChanges(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationControlOwner(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 9])
	syntaxobject = OwnerString


class ringStationControlStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 10])
	syntaxobject = EntryStatus


class ringStationIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationMacAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationLastNAUN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationStationStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive'), Enum(3, 'forcedRemoval')]


class ringStationLastEnterTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ringStationLastExitTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ringStationDuplicateAddresses(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationInLineErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationOutLineErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationInternalErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationInBurstErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationOutBurstErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationACErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationAbortErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationLostFrameErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationCongestionErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationFrameCopiedErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationFrequencyErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationTokenErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationInBeaconErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationOutBeaconErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationInsertions(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationOrderIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationOrderOrderIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationOrderMacAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationConfigControlIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationConfigControlMacAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationConfigControlRemove(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stable'), Enum(2, 'removing')]


class ringStationConfigControlUpdateStats(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stable'), Enum(2, 'updating')]


class ringStationConfigIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationConfigMacAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ringStationConfigUpdateTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ringStationConfigLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ringStationConfigMicrocode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ringStationConfigGroupAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ringStationConfigFunctionalAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class sourceRoutingStatsIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sourceRoutingStatsRingNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sourceRoutingStatsInFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsOutFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsThroughFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsAllRoutesBroadcastFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsSingleRouteBroadcastFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsInOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsOutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsThroughOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsAllRoutesBroadcastOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsSingleRoutesBroadcastOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsLocalLLCFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats1HopFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats2HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats3HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats4HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats5HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats6HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats7HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStats8HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsMoreThan8HopsFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsOwner(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 23])
	syntaxobject = OwnerString


class sourceRoutingStatsStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 24])
	syntaxobject = EntryStatus


# rows 
class tokenRingMLStatsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([tokenRingMLStatsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 2, 1])
	access = 2
	columns = {'tokenRingMLStatsIndex': tokenRingMLStatsIndex, 'tokenRingMLStatsDataSource': tokenRingMLStatsDataSource, 'tokenRingMLStatsDropEvents': tokenRingMLStatsDropEvents, 'tokenRingMLStatsMacOctets': tokenRingMLStatsMacOctets, 'tokenRingMLStatsMacPkts': tokenRingMLStatsMacPkts, 'tokenRingMLStatsRingPurgeEvents': tokenRingMLStatsRingPurgeEvents, 'tokenRingMLStatsRingPurgePkts': tokenRingMLStatsRingPurgePkts, 'tokenRingMLStatsBeaconEvents': tokenRingMLStatsBeaconEvents, 'tokenRingMLStatsBeaconTime': tokenRingMLStatsBeaconTime, 'tokenRingMLStatsBeaconPkts': tokenRingMLStatsBeaconPkts, 'tokenRingMLStatsClaimTokenEvents': tokenRingMLStatsClaimTokenEvents, 'tokenRingMLStatsClaimTokenPkts': tokenRingMLStatsClaimTokenPkts, 'tokenRingMLStatsNAUNChanges': tokenRingMLStatsNAUNChanges, 'tokenRingMLStatsLineErrors': tokenRingMLStatsLineErrors, 'tokenRingMLStatsInternalErrors': tokenRingMLStatsInternalErrors, 'tokenRingMLStatsBurstErrors': tokenRingMLStatsBurstErrors, 'tokenRingMLStatsACErrors': tokenRingMLStatsACErrors, 'tokenRingMLStatsAbortErrors': tokenRingMLStatsAbortErrors, 'tokenRingMLStatsLostFrameErrors': tokenRingMLStatsLostFrameErrors, 'tokenRingMLStatsCongestionErrors': tokenRingMLStatsCongestionErrors, 'tokenRingMLStatsFrameCopiedErrors': tokenRingMLStatsFrameCopiedErrors, 'tokenRingMLStatsFrequencyErrors': tokenRingMLStatsFrequencyErrors, 'tokenRingMLStatsTokenErrors': tokenRingMLStatsTokenErrors, 'tokenRingMLStatsSoftErrorReports': tokenRingMLStatsSoftErrorReports, 'tokenRingMLStatsRingPollEvents': tokenRingMLStatsRingPollEvents, 'tokenRingMLStatsOwner': tokenRingMLStatsOwner, 'tokenRingMLStatsStatus': tokenRingMLStatsStatus}


class tokenRingPStatsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([tokenRingPStatsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 3, 1])
	access = 2
	columns = {'tokenRingPStatsIndex': tokenRingPStatsIndex, 'tokenRingPStatsDataSource': tokenRingPStatsDataSource, 'tokenRingPStatsDropEvents': tokenRingPStatsDropEvents, 'tokenRingPStatsDataOctets': tokenRingPStatsDataOctets, 'tokenRingPStatsDataPkts': tokenRingPStatsDataPkts, 'tokenRingPStatsDataBroadcastPkts': tokenRingPStatsDataBroadcastPkts, 'tokenRingPStatsDataMulticastPkts': tokenRingPStatsDataMulticastPkts, 'tokenRingPStatsDataPkts18to63Octets': tokenRingPStatsDataPkts18to63Octets, 'tokenRingPStatsDataPkts64to127Octets': tokenRingPStatsDataPkts64to127Octets, 'tokenRingPStatsDataPkts128to255Octets': tokenRingPStatsDataPkts128to255Octets, 'tokenRingPStatsDataPkts256to511Octets': tokenRingPStatsDataPkts256to511Octets, 'tokenRingPStatsDataPkts512to1023Octets': tokenRingPStatsDataPkts512to1023Octets, 'tokenRingPStatsDataPkts1024to2047Octets': tokenRingPStatsDataPkts1024to2047Octets, 'tokenRingPStatsDataPkts2048to4095Octets': tokenRingPStatsDataPkts2048to4095Octets, 'tokenRingPStatsDataPkts4096to8191Octets': tokenRingPStatsDataPkts4096to8191Octets, 'tokenRingPStatsDataPkts8192to18000Octets': tokenRingPStatsDataPkts8192to18000Octets, 'tokenRingPStatsDataPktsGreaterThan18000Octets': tokenRingPStatsDataPktsGreaterThan18000Octets, 'tokenRingPStatsOwner': tokenRingPStatsOwner, 'tokenRingPStatsStatus': tokenRingPStatsStatus}


class tokenRingMLHistoryEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([tokenRingMLHistoryIndex, tokenRingMLHistorySampleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 3, 1])
	access = 2
	columns = {'tokenRingMLHistoryIndex': tokenRingMLHistoryIndex, 'tokenRingMLHistorySampleIndex': tokenRingMLHistorySampleIndex, 'tokenRingMLHistoryIntervalStart': tokenRingMLHistoryIntervalStart, 'tokenRingMLHistoryDropEvents': tokenRingMLHistoryDropEvents, 'tokenRingMLHistoryMacOctets': tokenRingMLHistoryMacOctets, 'tokenRingMLHistoryMacPkts': tokenRingMLHistoryMacPkts, 'tokenRingMLHistoryRingPurgeEvents': tokenRingMLHistoryRingPurgeEvents, 'tokenRingMLHistoryRingPurgePkts': tokenRingMLHistoryRingPurgePkts, 'tokenRingMLHistoryBeaconEvents': tokenRingMLHistoryBeaconEvents, 'tokenRingMLHistoryBeaconTime': tokenRingMLHistoryBeaconTime, 'tokenRingMLHistoryBeaconPkts': tokenRingMLHistoryBeaconPkts, 'tokenRingMLHistoryClaimTokenEvents': tokenRingMLHistoryClaimTokenEvents, 'tokenRingMLHistoryClaimTokenPkts': tokenRingMLHistoryClaimTokenPkts, 'tokenRingMLHistoryNAUNChanges': tokenRingMLHistoryNAUNChanges, 'tokenRingMLHistoryLineErrors': tokenRingMLHistoryLineErrors, 'tokenRingMLHistoryInternalErrors': tokenRingMLHistoryInternalErrors, 'tokenRingMLHistoryBurstErrors': tokenRingMLHistoryBurstErrors, 'tokenRingMLHistoryACErrors': tokenRingMLHistoryACErrors, 'tokenRingMLHistoryAbortErrors': tokenRingMLHistoryAbortErrors, 'tokenRingMLHistoryLostFrameErrors': tokenRingMLHistoryLostFrameErrors, 'tokenRingMLHistoryCongestionErrors': tokenRingMLHistoryCongestionErrors, 'tokenRingMLHistoryFrameCopiedErrors': tokenRingMLHistoryFrameCopiedErrors, 'tokenRingMLHistoryFrequencyErrors': tokenRingMLHistoryFrequencyErrors, 'tokenRingMLHistoryTokenErrors': tokenRingMLHistoryTokenErrors, 'tokenRingMLHistorySoftErrorReports': tokenRingMLHistorySoftErrorReports, 'tokenRingMLHistoryRingPollEvents': tokenRingMLHistoryRingPollEvents, 'tokenRingMLHistoryActiveStations': tokenRingMLHistoryActiveStations}


class tokenRingPHistoryEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([tokenRingPHistoryIndex, tokenRingPHistorySampleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 4, 1])
	access = 2
	columns = {'tokenRingPHistoryIndex': tokenRingPHistoryIndex, 'tokenRingPHistorySampleIndex': tokenRingPHistorySampleIndex, 'tokenRingPHistoryIntervalStart': tokenRingPHistoryIntervalStart, 'tokenRingPHistoryDropEvents': tokenRingPHistoryDropEvents, 'tokenRingPHistoryDataOctets': tokenRingPHistoryDataOctets, 'tokenRingPHistoryDataPkts': tokenRingPHistoryDataPkts, 'tokenRingPHistoryDataBroadcastPkts': tokenRingPHistoryDataBroadcastPkts, 'tokenRingPHistoryDataMulticastPkts': tokenRingPHistoryDataMulticastPkts, 'tokenRingPHistoryDataPkts18to63Octets': tokenRingPHistoryDataPkts18to63Octets, 'tokenRingPHistoryDataPkts64to127Octets': tokenRingPHistoryDataPkts64to127Octets, 'tokenRingPHistoryDataPkts128to255Octets': tokenRingPHistoryDataPkts128to255Octets, 'tokenRingPHistoryDataPkts256to511Octets': tokenRingPHistoryDataPkts256to511Octets, 'tokenRingPHistoryDataPkts512to1023Octets': tokenRingPHistoryDataPkts512to1023Octets, 'tokenRingPHistoryDataPkts1024to2047Octets': tokenRingPHistoryDataPkts1024to2047Octets, 'tokenRingPHistoryDataPkts2048to4095Octets': tokenRingPHistoryDataPkts2048to4095Octets, 'tokenRingPHistoryDataPkts4096to8191Octets': tokenRingPHistoryDataPkts4096to8191Octets, 'tokenRingPHistoryDataPkts8192to18000Octets': tokenRingPHistoryDataPkts8192to18000Octets, 'tokenRingPHistoryDataPktsGreaterThan18000Octets': tokenRingPHistoryDataPktsGreaterThan18000Octets}


class ringStationControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ringStationControlIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 1, 1])
	access = 2
	columns = {'ringStationControlIfIndex': ringStationControlIfIndex, 'ringStationControlTableSize': ringStationControlTableSize, 'ringStationControlActiveStations': ringStationControlActiveStations, 'ringStationControlRingState': ringStationControlRingState, 'ringStationControlBeaconSender': ringStationControlBeaconSender, 'ringStationControlBeaconNAUN': ringStationControlBeaconNAUN, 'ringStationControlActiveMonitor': ringStationControlActiveMonitor, 'ringStationControlOrderChanges': ringStationControlOrderChanges, 'ringStationControlOwner': ringStationControlOwner, 'ringStationControlStatus': ringStationControlStatus}


class ringStationEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ringStationIfIndex, ringStationMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 2, 1])
	access = 2
	columns = {'ringStationIfIndex': ringStationIfIndex, 'ringStationMacAddress': ringStationMacAddress, 'ringStationLastNAUN': ringStationLastNAUN, 'ringStationStationStatus': ringStationStationStatus, 'ringStationLastEnterTime': ringStationLastEnterTime, 'ringStationLastExitTime': ringStationLastExitTime, 'ringStationDuplicateAddresses': ringStationDuplicateAddresses, 'ringStationInLineErrors': ringStationInLineErrors, 'ringStationOutLineErrors': ringStationOutLineErrors, 'ringStationInternalErrors': ringStationInternalErrors, 'ringStationInBurstErrors': ringStationInBurstErrors, 'ringStationOutBurstErrors': ringStationOutBurstErrors, 'ringStationACErrors': ringStationACErrors, 'ringStationAbortErrors': ringStationAbortErrors, 'ringStationLostFrameErrors': ringStationLostFrameErrors, 'ringStationCongestionErrors': ringStationCongestionErrors, 'ringStationFrameCopiedErrors': ringStationFrameCopiedErrors, 'ringStationFrequencyErrors': ringStationFrequencyErrors, 'ringStationTokenErrors': ringStationTokenErrors, 'ringStationInBeaconErrors': ringStationInBeaconErrors, 'ringStationOutBeaconErrors': ringStationOutBeaconErrors, 'ringStationInsertions': ringStationInsertions}


class ringStationOrderEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ringStationOrderIfIndex, ringStationOrderOrderIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 3, 1])
	access = 2
	columns = {'ringStationOrderIfIndex': ringStationOrderIfIndex, 'ringStationOrderOrderIndex': ringStationOrderOrderIndex, 'ringStationOrderMacAddress': ringStationOrderMacAddress}


class ringStationConfigControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ringStationConfigControlIfIndex, ringStationConfigControlMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 4, 1])
	access = 2
	columns = {'ringStationConfigControlIfIndex': ringStationConfigControlIfIndex, 'ringStationConfigControlMacAddress': ringStationConfigControlMacAddress, 'ringStationConfigControlRemove': ringStationConfigControlRemove, 'ringStationConfigControlUpdateStats': ringStationConfigControlUpdateStats}


class ringStationConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ringStationConfigIfIndex, ringStationConfigMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 5, 1])
	access = 2
	columns = {'ringStationConfigIfIndex': ringStationConfigIfIndex, 'ringStationConfigMacAddress': ringStationConfigMacAddress, 'ringStationConfigUpdateTime': ringStationConfigUpdateTime, 'ringStationConfigLocation': ringStationConfigLocation, 'ringStationConfigMicrocode': ringStationConfigMicrocode, 'ringStationConfigGroupAddress': ringStationConfigGroupAddress, 'ringStationConfigFunctionalAddress': ringStationConfigFunctionalAddress}


class sourceRoutingStatsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sourceRoutingStatsIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 6, 1])
	access = 2
	columns = {'sourceRoutingStatsIfIndex': sourceRoutingStatsIfIndex, 'sourceRoutingStatsRingNumber': sourceRoutingStatsRingNumber, 'sourceRoutingStatsInFrames': sourceRoutingStatsInFrames, 'sourceRoutingStatsOutFrames': sourceRoutingStatsOutFrames, 'sourceRoutingStatsThroughFrames': sourceRoutingStatsThroughFrames, 'sourceRoutingStatsAllRoutesBroadcastFrames': sourceRoutingStatsAllRoutesBroadcastFrames, 'sourceRoutingStatsSingleRouteBroadcastFrames': sourceRoutingStatsSingleRouteBroadcastFrames, 'sourceRoutingStatsInOctets': sourceRoutingStatsInOctets, 'sourceRoutingStatsOutOctets': sourceRoutingStatsOutOctets, 'sourceRoutingStatsThroughOctets': sourceRoutingStatsThroughOctets, 'sourceRoutingStatsAllRoutesBroadcastOctets': sourceRoutingStatsAllRoutesBroadcastOctets, 'sourceRoutingStatsSingleRoutesBroadcastOctets': sourceRoutingStatsSingleRoutesBroadcastOctets, 'sourceRoutingStatsLocalLLCFrames': sourceRoutingStatsLocalLLCFrames, 'sourceRoutingStats1HopFrames': sourceRoutingStats1HopFrames, 'sourceRoutingStats2HopsFrames': sourceRoutingStats2HopsFrames, 'sourceRoutingStats3HopsFrames': sourceRoutingStats3HopsFrames, 'sourceRoutingStats4HopsFrames': sourceRoutingStats4HopsFrames, 'sourceRoutingStats5HopsFrames': sourceRoutingStats5HopsFrames, 'sourceRoutingStats6HopsFrames': sourceRoutingStats6HopsFrames, 'sourceRoutingStats7HopsFrames': sourceRoutingStats7HopsFrames, 'sourceRoutingStats8HopsFrames': sourceRoutingStats8HopsFrames, 'sourceRoutingStatsMoreThan8HopsFrames': sourceRoutingStatsMoreThan8HopsFrames, 'sourceRoutingStatsOwner': sourceRoutingStatsOwner, 'sourceRoutingStatsStatus': sourceRoutingStatsStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
