# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from HP_SN_OSPF_GROUP_MIB import snOspfRouterId, snOspfIfStatusIpAddress, snOspfIfStatusState, snOspfVirtIfStatusAreaID, snOspfVirtIfStatusNeighbor, snOspfVirtIfStatusState, snOspfNbrIpAddr, snOspfNbrRtrId, snOspfNbrState, snOspfVirtNbrArea, snOspfVirtNbrRtrId, snOspfVirtNbrState, snOspfPacketSrc, snOspfConfigErrorType, snOspfPacketType, snOspfLsdbAreaId, snOspfLsdbType, snOspfLsdbLsId, snOspfLsdbRouterId, snOspfExtLsdbLimit
from HP_SN_SWITCH_GROUP_MIB import snSwViolatorPortNumber, snSwViolatorMacAddress
from HP_SN_ROOT_MIB import hp
from HP_SN_AGENT_MIB import snChasPwrSupplyStatus, snAgGblTrapMessage, snAgentBrdIndex, snChasPwrSupplyIndex, snChasPwrSupplyDescription, snChasFanIndex, snChasFanDescription
from RFC_1215 import TRAP_TYPE
from HP_SN_SW_L4_SWITCH_GROUP_MIB import snL4MaxSessionLimit, snL4TcpSynLimit, snL4TrapRealServerIP, snL4TrapRealServerName, snL4TrapRealServerPort, snL4TrapRealServerCurConnections

class HP_SN_TRAP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-TRAP-MIB'
	conformance = 3
	name = 'HP-SN-TRAP-MIB'
	language = 1

# nodes

# macros
# types 
# scalars 
# columns
# rows 
# notifications (traps) 
class snTrapChasPwrSupply(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 1])

class snTrapLockedAddressViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 2])

class snTrapOspfIfStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 3])

class snTrapOspfVirtIfStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 4])

class snOspfNbrStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 5])

class snOspfVirtNbrStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 6])

class snOspfIfConfigError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 7])

class snOspfVirtIfConfigError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 8])

class snOspfIfAuthFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 9])

class snOspfVirtIfAuthFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 10])

class snOspfIfRxBadPacket(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 11])

class snOspfVirtIfRxBadPacket(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 12])

class snOspfTxRetransmit(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 13])

class ospfVirtIfTxRetransmit(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 14])

class snOspfOriginateLsa(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 15])

class snOspfMaxAgeLsa(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 16])

class snOspfLsdbOverflow(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 17])

class snOspfLsdbApproachingOverflow(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 18])

class snTrapL4MaxSessionLimitReached(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 19])

class snTrapL4TcpSynLimitReached(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 20])

class snTrapL4RealServerUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 21])

class snTrapL4RealServerDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 22])

class snTrapL4RealServerPortUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 23])

class snTrapL4RealServerPortDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 24])

class snTrapL4RealServerMaxConnectionLimitReached(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 25])

class snTrapL4BecomeStandby(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 26])

class snTrapL4BecomeActive(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 27])

class snTrapModuleInserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 28])

class snTrapModuleRemoved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 29])

class snTrapChasPwrSupplyFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 30])

class snTrapChasFanFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 31])

class snTrapLockedAddressViolation2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 32])

class snTrapFsrpIfStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 33])

class snTrapVrrpIfStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 34])

class snTrapMgmtModuleRedunStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 35])

class snTrapTemperatureWarning(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 36])

class snTrapAccessListDeny(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 37])

class snTrapMacFilterDeny(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 38])

class snTrapL4GslbRemoteUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 39])

class snTrapL4GslbRemoteDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 40])

class snTrapL4GslbRemoteControllerUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 41])

class snTrapL4GslbRemoteControllerDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 42])

class snTrapL4GslbHealthCheckIpUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 43])

class snTrapL4GslbHealthCheckIpDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 44])

class snTrapL4GslbHealthCheckIpPortUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 45])

class snTrapL4GslbHealthCheckIpPortDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 0, 46])

# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
