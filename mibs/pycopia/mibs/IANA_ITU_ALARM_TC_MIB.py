# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, mib_2
from SNMPv2_TC import TEXTUAL_CONVENTION

class IANA_ITU_ALARM_TC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IANA-ITU-ALARM-TC-MIB'
	conformance = 5
	name = 'IANA-ITU-ALARM-TC-MIB'
	language = 2
	description = 'The MIB module defines the ITU Alarm\ntextual convention for objects expected to require\nregular extension.\n\nCopyright (C) The Internet Society (2004).  The\ninitial version of this MIB module was published\nin RFC 3877.  For full legal notices see the RFC\nitself.  Supplementary information may be available on:\nhttp://www.ietf.org/copyrights/ianamib.html'

# nodes
class ianaItuAlarmNumbers(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 119])
	name = 'ianaItuAlarmNumbers'


# macros
# types 

class IANAItuProbableCause(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'aIS'), Enum(2, 'callSetUpFailure'), Enum(3, 'degradedSignal'), Enum(4, 'farEndReceiverFailure'), Enum(5, 'framingError'), Enum(6, 'lossOfFrame'), Enum(7, 'lossOfPointer'), Enum(8, 'lossOfSignal'), Enum(9, 'payloadTypeMismatch'), Enum(10, 'transmissionError'), Enum(11, 'remoteAlarmInterface'), Enum(12, 'excessiveBER'), Enum(13, 'pathTraceMismatch'), Enum(14, 'unavailable'), Enum(15, 'signalLabelMismatch'), Enum(16, 'lossOfMultiFrame'), Enum(17, 'receiveFailure'), Enum(18, 'transmitFailure'), Enum(19, 'modulationFailure'), Enum(20, 'demodulationFailure'), Enum(21, 'broadcastChannelFailure'), Enum(22, 'connectionEstablishmentError'), Enum(23, 'invalidMessageReceived'), Enum(24, 'localNodeTransmissionError'), Enum(25, 'remoteNodeTransmissionError'), Enum(26, 'routingFailure'), Enum(51, 'backplaneFailure'), Enum(52, 'dataSetProblem'), Enum(53, 'equipmentIdentifierDuplication'), Enum(54, 'externalIFDeviceProblem'), Enum(55, 'lineCardProblem'), Enum(56, 'multiplexerProblem'), Enum(57, 'nEIdentifierDuplication'), Enum(58, 'powerProblem'), Enum(59, 'processorProblem'), Enum(60, 'protectionPathFailure'), Enum(61, 'receiverFailure'), Enum(62, 'replaceableUnitMissing'), Enum(63, 'replaceableUnitTypeMismatch'), Enum(64, 'synchronizationSourceMismatch'), Enum(65, 'terminalProblem'), Enum(66, 'timingProblem'), Enum(67, 'transmitterFailure'), Enum(68, 'trunkCardProblem'), Enum(69, 'replaceableUnitProblem'), Enum(70, 'realTimeClockFailure'), Enum(71, 'antennaFailure'), Enum(72, 'batteryChargingFailure'), Enum(73, 'diskFailure'), Enum(74, 'frequencyHoppingFailure'), Enum(75, 'iODeviceError'), Enum(76, 'lossOfSynchronisation'), Enum(77, 'lossOfRedundancy'), Enum(78, 'powerSupplyFailure'), Enum(79, 'signalQualityEvaluationFailure'), Enum(80, 'tranceiverFailure'), Enum(81, 'protectionMechanismFailure'), Enum(82, 'protectingResourceFailure'), Enum(101, 'airCompressorFailure'), Enum(102, 'airConditioningFailure'), Enum(103, 'airDryerFailure'), Enum(104, 'batteryDischarging'), Enum(105, 'batteryFailure'), Enum(106, 'commercialPowerFailure'), Enum(107, 'coolingFanFailure'), Enum(108, 'engineFailure'), Enum(109, 'fireDetectorFailure'), Enum(110, 'fuseFailure'), Enum(111, 'generatorFailure'), Enum(112, 'lowBatteryThreshold'), Enum(113, 'pumpFailure'), Enum(114, 'rectifierFailure'), Enum(115, 'rectifierHighVoltage'), Enum(116, 'rectifierLowFVoltage'), Enum(117, 'ventilationsSystemFailure'), Enum(118, 'enclosureDoorOpen'), Enum(119, 'explosiveGas'), Enum(120, 'fire'), Enum(121, 'flood'), Enum(122, 'highHumidity'), Enum(123, 'highTemperature'), Enum(124, 'highWind'), Enum(125, 'iceBuildUp'), Enum(126, 'intrusionDetection'), Enum(127, 'lowFuel'), Enum(128, 'lowHumidity'), Enum(129, 'lowCablePressure'), Enum(130, 'lowTemperatue'), Enum(131, 'lowWater'), Enum(132, 'smoke'), Enum(133, 'toxicGas'), Enum(134, 'coolingSystemFailure'), Enum(135, 'externalEquipmentFailure'), Enum(136, 'externalPointFailure'), Enum(151, 'storageCapacityProblem'), Enum(152, 'memoryMismatch'), Enum(153, 'corruptData'), Enum(154, 'outOfCPUCycles'), Enum(155, 'sfwrEnvironmentProblem'), Enum(156, 'sfwrDownloadFailure'), Enum(157, 'lossOfRealTimel'), Enum(158, 'applicationSubsystemFailure'), Enum(159, 'configurationOrCustomisationError'), Enum(160, 'databaseInconsistency'), Enum(161, 'fileError'), Enum(162, 'outOfMemory'), Enum(163, 'softwareError'), Enum(164, 'timeoutExpired'), Enum(165, 'underlayingResourceUnavailable'), Enum(166, 'versionMismatch'), Enum(201, 'bandwidthReduced'), Enum(202, 'congestion'), Enum(203, 'excessiveErrorRate'), Enum(204, 'excessiveResponseTime'), Enum(205, 'excessiveRetransmissionRate'), Enum(206, 'reducedLoggingCapability'), Enum(207, 'systemResourcesOverload'), Enum(500, 'adapterError'), Enum(501, 'applicationSubsystemFailture'), Enum(502, 'bandwidthReducedX733'), Enum(503, 'callEstablishmentError'), Enum(504, 'communicationsProtocolError'), Enum(505, 'communicationsSubsystemFailure'), Enum(506, 'configurationOrCustomizationError'), Enum(507, 'congestionX733'), Enum(508, 'coruptData'), Enum(509, 'cpuCyclesLimitExceeded'), Enum(510, 'dataSetOrModemError'), Enum(511, 'degradedSignalX733'), Enum(512, 'dteDceInterfaceError'), Enum(513, 'enclosureDoorOpenX733'), Enum(514, 'equipmentMalfunction'), Enum(515, 'excessiveVibration'), Enum(516, 'fileErrorX733'), Enum(517, 'fireDetected'), Enum(518, 'framingErrorX733'), Enum(519, 'heatingVentCoolingSystemProblem'), Enum(520, 'humidityUnacceptable'), Enum(521, 'inputOutputDeviceError'), Enum(522, 'inputDeviceError'), Enum(523, 'lanError'), Enum(524, 'leakDetected'), Enum(525, 'localNodeTransmissionErrorX733'), Enum(526, 'lossOfFrameX733'), Enum(527, 'lossOfSignalX733'), Enum(528, 'materialSupplyExhausted'), Enum(529, 'multiplexerProblemX733'), Enum(530, 'outOfMemoryX733'), Enum(531, 'ouputDeviceError'), Enum(532, 'performanceDegraded'), Enum(533, 'powerProblems'), Enum(534, 'pressureUnacceptable'), Enum(535, 'processorProblems'), Enum(536, 'pumpFailureX733'), Enum(537, 'queueSizeExceeded'), Enum(538, 'receiveFailureX733'), Enum(539, 'receiverFailureX733'), Enum(540, 'remoteNodeTransmissionErrorX733'), Enum(541, 'resourceAtOrNearingCapacity'), Enum(542, 'responseTimeExecessive'), Enum(543, 'retransmissionRateExcessive'), Enum(544, 'softwareErrorX733'), Enum(545, 'softwareProgramAbnormallyTerminated'), Enum(546, 'softwareProgramError'), Enum(547, 'storageCapacityProblemX733'), Enum(548, 'temperatureUnacceptable'), Enum(549, 'thresholdCrossed'), Enum(550, 'timingProblemX733'), Enum(551, 'toxicLeakDetected'), Enum(552, 'transmitFailureX733'), Enum(553, 'transmiterFailure'), Enum(554, 'underlyingResourceUnavailable'), Enum(555, 'versionMismatchX733'), Enum(600, 'authenticationFailure'), Enum(601, 'breachOfConfidentiality'), Enum(602, 'cableTamper'), Enum(603, 'delayedInformation'), Enum(604, 'denialOfService'), Enum(605, 'duplicateInformation'), Enum(606, 'informationMissing'), Enum(607, 'informationModificationDetected'), Enum(608, 'informationOutOfSequence'), Enum(609, 'keyExpired'), Enum(610, 'nonRepudiationFailure'), Enum(611, 'outOfHoursActivity'), Enum(612, 'outOfService'), Enum(613, 'proceduralError'), Enum(614, 'unauthorizedAccessAttempt'), Enum(615, 'unexpectedInformation'), Enum(1024, 'other')]


class IANAItuEventType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'communicationsAlarm'), Enum(3, 'qualityOfServiceAlarm'), Enum(4, 'processingErrorAlarm'), Enum(5, 'equipmentAlarm'), Enum(6, 'environmentalAlarm'), Enum(7, 'integrityViolation'), Enum(8, 'operationalViolation'), Enum(9, 'physicalViolation'), Enum(10, 'securityServiceOrMechanismViolation'), Enum(11, 'timeDomainViolation')]

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
