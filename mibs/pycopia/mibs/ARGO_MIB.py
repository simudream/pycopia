# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, enterprises

class ARGO_MIB(ModuleObject):
	path = '/usr/share/mibs/site/ARGO-MIB'
	name = 'ARGO-MIB'
	language = 2
	description = 'This MIB describes the top level MIB registrations for the products \nof Argo Interactive Ltd.'

# nodes
class argo(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970])
	name = 'argo'

class ubiquinox(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1])
	name = 'ubiquinox'

class argoV1(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1, 1])
	name = 'argoV1'

class argoProducts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1, 1, 3])
	name = 'argoProducts'

class argoMonitorMaster(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1, 1, 3, 1])
	name = 'argoMonitorMaster'

class argoMMAgent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1, 1, 3, 1, 1])
	name = 'argoMMAgent'

class argoMMProjector(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1, 1, 3, 1, 2])
	name = 'argoMMProjector'

class argoCustomers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 8970, 1, 1, 4])
	name = 'argoCustomers'


# macros
# types 
# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
