# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNA_NAU_MIB import snanauMIB
from SNMPv2_TC import DisplayString, TruthValue
from APPN_MIB import SnaControlPointName

class APPN_DLUR_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/APPN-DLUR-MIB'
	conformance = 3
	name = 'APPN-DLUR-MIB'
	language = 2
	description = 'This is the MIB module for objects used to manage\nnetwork devices with DLUR capabilities.  This MIB\ncontains information that is useful for managing an APPN\nproduct that implements a DLUR (Dependent Logical Unit\nRequester).  The DLUR product has a client/server\nrelationship with an APPN product that implements a DLUS\n(Dependent Logical Unit Server).'

# nodes
class dlurMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5])
	name = 'dlurMIB'

class dlurObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1])
	name = 'dlurObjects'

class dlurNodeInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1])
	name = 'dlurNodeInfo'

class dlurNodeCapabilities(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1])
	name = 'dlurNodeCapabilities'

class dlurPuInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2])
	name = 'dlurPuInfo'

class dlurDlusInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 3])
	name = 'dlurDlusInfo'

class dlurConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 2])
	name = 'dlurConformance'

class dlurCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 2, 1])
	name = 'dlurCompliances'

class dlurGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 2, 2])
	name = 'dlurGroups'


# macros
# types 
# scalars 
class dlurNodeCpName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 1])
	syntaxobject = SnaControlPointName


class dlurReleaseLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurAnsSupport(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'continueOrStop'), Enum(2, 'stopOnly')]


class dlurMultiSubnetSupport(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dlurDefaultDefPrimDlusName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 5])
	syntaxobject = SnaControlPointName


class dlurNetworkNameForwardingSupport(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dlurNondisDlusDlurSessDeactSup(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class dlurDefaultDefBackupDlusIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class dlurDefaultDefBackupDlusName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2, 1, 2])
	syntaxobject = SnaControlPointName


class dlurPuName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurPuSscpSuppliedName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurPuStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'reset'), Enum(2, 'pendReqActpuRsp'), Enum(3, 'pendActpu'), Enum(4, 'pendActpuRsp'), Enum(5, 'active'), Enum(6, 'pendLinkact'), Enum(7, 'pendDactpuRsp'), Enum(8, 'pendInop'), Enum(9, 'pendInopActpu')]


class dlurPuAnsSupport(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'continue'), Enum(2, 'stop')]


class dlurPuLocation(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'internal'), Enum(2, 'downstream')]


class dlurPuLsName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurPuDlusSessnStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'reset'), Enum(2, 'pendingActive'), Enum(3, 'active'), Enum(4, 'pendingInactive')]


class dlurPuActiveDlusName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurPuDefPrimDlusName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurPuDefBackupDlusPuName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dlurPuDefBackupDlusIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class dlurPuDefBackupDlusName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1, 3])
	syntaxobject = SnaControlPointName


class dlurDlusName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1, 1, 1])
	syntaxobject = SnaControlPointName


class dlurDlusSessnStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'reset'), Enum(2, 'pendingActive'), Enum(3, 'active'), Enum(4, 'pendingInactive')]


# rows 
class dlurDefaultDefBackupDlusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dlurDefaultDefBackupDlusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2, 1])
	access = 2
	columns = {'dlurDefaultDefBackupDlusIndex': dlurDefaultDefBackupDlusIndex, 'dlurDefaultDefBackupDlusName': dlurDefaultDefBackupDlusName}


class dlurPuEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dlurPuName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1])
	access = 2
	columns = {'dlurPuName': dlurPuName, 'dlurPuSscpSuppliedName': dlurPuSscpSuppliedName, 'dlurPuStatus': dlurPuStatus, 'dlurPuAnsSupport': dlurPuAnsSupport, 'dlurPuLocation': dlurPuLocation, 'dlurPuLsName': dlurPuLsName, 'dlurPuDlusSessnStatus': dlurPuDlusSessnStatus, 'dlurPuActiveDlusName': dlurPuActiveDlusName, 'dlurPuDefPrimDlusName': dlurPuDefPrimDlusName}


class dlurPuDefBackupDlusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dlurPuDefBackupDlusPuName, dlurPuDefBackupDlusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1])
	access = 2
	columns = {'dlurPuDefBackupDlusPuName': dlurPuDefBackupDlusPuName, 'dlurPuDefBackupDlusIndex': dlurPuDefBackupDlusIndex, 'dlurPuDefBackupDlusName': dlurPuDefBackupDlusName}


class dlurDlusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dlurDlusName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1, 1])
	access = 2
	columns = {'dlurDlusName': dlurDlusName, 'dlurDlusSessnStatus': dlurDlusSessnStatus}


# notifications (traps) 
# groups 
class dlurConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 5, 2, 2, 1])
	group = [dlurNodeCpName, dlurReleaseLevel, dlurAnsSupport, dlurMultiSubnetSupport, dlurNetworkNameForwardingSupport, dlurNondisDlusDlurSessDeactSup, dlurDefaultDefPrimDlusName, dlurDefaultDefBackupDlusName, dlurPuSscpSuppliedName, dlurPuStatus, dlurPuAnsSupport, dlurPuLocation, dlurPuLsName, dlurPuDlusSessnStatus, dlurPuActiveDlusName, dlurPuDefPrimDlusName, dlurPuDefBackupDlusName, dlurDlusSessnStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
