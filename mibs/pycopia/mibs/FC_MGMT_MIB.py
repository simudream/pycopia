# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, Counter32, Counter64, transmission
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TruthValue, TEXTUAL_CONVENTION
from IF_MIB import ifIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class FC_MGMT_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/FC-MGMT-MIB'
	conformance = 5
	name = 'FC-MGMT-MIB'
	language = 2
	description = 'This module defines management information specific to\nFibre Channel-attached devices.\n\n\n\n\nCopyright (C) The Internet Society (2005).  This version\nof this MIB module is part of RFC 4044;  see the RFC\nitself for full legal notices.'

# nodes
class fcMgmtMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56])
	name = 'fcMgmtMIB'

class fcmgmtObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1])
	name = 'fcmgmtObjects'

class fcmgmtNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 2])
	name = 'fcmgmtNotifications'

class fcmgmtNotifPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 2, 0])
	name = 'fcmgmtNotifPrefix'

class fcmgmtConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3])
	name = 'fcmgmtConformance'

class fcmgmtCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 1])
	name = 'fcmgmtCompliances'

class fcmgmtGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2])
	name = 'fcmgmtGroups'


# macros
# types 

class FcNameIdOrZero(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 0), Range(8, 8), Range(16, 16))


class FcAddressIdOrZero(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 0), Range(3, 3))


class FcDomainIdOrZero(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 239))


class FcPortType(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class FcClasses(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'classF'), Enum(1, 'class1'), Enum(2, 'class2'), Enum(3, 'class3'), Enum(4, 'class4'), Enum(5, 'class5'), Enum(6, 'class6')]


class FcBbCredit(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 32767))


class FcBbCreditModel(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'regular'), Enum(2, 'alternate')]


class FcDataFieldSize(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(128, 2112))


class FcUnitFunctions(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'other'), Enum(1, 'hub'), Enum(2, 'switch'), Enum(3, 'bridge'), Enum(4, 'gateway'), Enum(5, 'host'), Enum(6, 'storageSubsys'), Enum(7, 'storageAccessDev'), Enum(8, 'nas'), Enum(9, 'wdmux'), Enum(10, 'storageDevice')]

# scalars 
# columns
class fcmInstanceIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmInstanceWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 2])
	syntaxobject = FcNameIdOrZero


class fcmInstanceFunctions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 3])
	syntaxobject = FcUnitFunctions


class fcmInstancePhysicalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fcmInstanceSoftwareIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fcmInstanceStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'ok'), Enum(3, 'warning'), Enum(4, 'failed')]


class fcmInstanceTextName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 7])
	syntaxobject = SnmpAdminString


class fcmInstanceDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 8])
	syntaxobject = SnmpAdminString


class fcmInstanceFabricId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1, 9])
	syntaxobject = FcNameIdOrZero


class fcmSwitchIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmSwitchDomainId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 2, 1, 2])
	syntaxobject = FcDomainIdOrZero


class fcmSwitchPrincipal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcmSwitchWWN(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 2, 1, 4])
	syntaxobject = FcNameIdOrZero


class fcmPortInstanceIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmPortWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 2])
	syntaxobject = FcNameIdOrZero


class fcmPortNodeWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 3])
	syntaxobject = FcNameIdOrZero


class fcmPortAdminType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 4])
	syntaxobject = FcPortType


class fcmPortOperType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 5])
	syntaxobject = FcPortType


class fcmPortFcCapClass(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 6])
	syntaxobject = FcClasses


class fcmPortFcOperClass(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 7])
	syntaxobject = FcClasses


class fcmPortTransmitterType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'other'), Enum(3, 'shortwave850nm'), Enum(4, 'longwave1550nm'), Enum(5, 'longwave1310nm'), Enum(6, 'electrical')]


class fcmPortConnectorType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'other'), Enum(3, 'gbic'), Enum(4, 'embedded'), Enum(5, 'glm'), Enum(6, 'gbicSerialId'), Enum(7, 'gbicNoSerialId'), Enum(8, 'sfpSerialId'), Enum(9, 'sfpNoSerialId')]


class fcmPortSerialNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 10])
	syntaxobject = SnmpAdminString


class fcmPortPhysicalNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmPortAdminSpeed(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto'), Enum(2, 'eighthGbs'), Enum(3, 'quarterGbs'), Enum(4, 'halfGbs'), Enum(5, 'oneGbs'), Enum(6, 'twoGbs'), Enum(7, 'fourGbs'), Enum(8, 'tenGbs')]


class fcmPortCapProtocols(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class fcmPortOperProtocols(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class fcmPortBBCreditZeros(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortFullInputBuffers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2RxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2RxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2TxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2TxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2RxFbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2RxPbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2RxFrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2RxPrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2TxFbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2TxPbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2TxFrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass2TxPrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass3RxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass3RxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass3TxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass3TxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClass3Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class fcmPortClassFRxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortClassFRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortClassFTxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortClassFTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortClassFDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcBBCreditZeros(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcFullInputBuffers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2RxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2RxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2TxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2TxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2RxFbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2RxPbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2RxFrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2RxPrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2TxFbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2TxPbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2TxFrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass2TxPrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass3RxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass3RxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass3TxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass3TxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLcClass3Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortRxLinkResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortTxLinkResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLinkResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortRxOfflineSequences(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortTxOfflineSequences(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLinkFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLossofSynchs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortLossofSignals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortPrimSeqProtocolErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortInvalidTxWords(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortInvalidCRCs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortInvalidOrderedSets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortFrameTooLongs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortTruncatedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortAddressErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortDelimiterErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortEncodingDisparityErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmPortOtherErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcmFxPortRatov(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class fcmFxPortEdtov(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class fcmFxPortRttov(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class fcmFxPortHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class fcmFxPortCapBbCreditMax(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 5])
	syntaxobject = FcBbCredit
	access = 4
	units = 'buffers'


class fcmFxPortCapBbCreditMin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 6])
	syntaxobject = FcBbCredit
	access = 4
	units = 'buffers'


class fcmFxPortCapDataFieldSizeMax(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 7])
	syntaxobject = FcDataFieldSize
	access = 4
	units = 'bytes'


class fcmFxPortCapDataFieldSizeMin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 8])
	syntaxobject = FcDataFieldSize
	access = 4
	units = 'bytes'


class fcmFxPortCapClass2SeqDeliv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcmFxPortCapClass3SeqDeliv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcmFxPortCapHoldTimeMax(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class fcmFxPortCapHoldTimeMin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class fcmISPortClassFCredit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 8, 1, 1])
	syntaxobject = FcBbCredit


class fcmISPortClassFDataFieldSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 8, 1, 2])
	syntaxobject = FcDataFieldSize
	access = 4
	units = 'bytes'


class fcmFLoginNxPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmFLoginPortWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 2])
	syntaxobject = FcNameIdOrZero


class fcmFLoginNodeWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 3])
	syntaxobject = FcNameIdOrZero


class fcmFLoginBbCreditModel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 4])
	syntaxobject = FcBbCreditModel


class fcmFLoginBbCredit(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 5])
	syntaxobject = FcBbCredit


class fcmFLoginClassesAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 6])
	syntaxobject = FcClasses


class fcmFLoginClass2SeqDelivAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcmFLoginClass2DataFieldSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 8])
	syntaxobject = FcDataFieldSize


class fcmFLoginClass3SeqDelivAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcmFLoginClass3DataFieldSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1, 10])
	syntaxobject = FcDataFieldSize


class fcmLinkIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmLinkEnd1NodeWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 2])
	syntaxobject = FcNameIdOrZero


class fcmLinkEnd1PhysPortNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmLinkEnd1PortWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 4])
	syntaxobject = FcNameIdOrZero


class fcmLinkEnd2NodeWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 5])
	syntaxobject = FcNameIdOrZero


class fcmLinkEnd2PhysPortNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcmLinkEnd2PortWwn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 7])
	syntaxobject = FcNameIdOrZero


class fcmLinkEnd2AgentAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 8])
	syntaxobject = SnmpAdminString


class fcmLinkEnd2PortType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 9])
	syntaxobject = FcPortType


class fcmLinkEnd2UnitType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 10])
	syntaxobject = FcUnitFunctions


class fcmLinkEnd2FcAddressId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1, 11])
	syntaxobject = FcAddressIdOrZero


# rows 
class fcmInstanceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 1, 1])
	access = 2
	columns = {'fcmInstanceIndex': fcmInstanceIndex, 'fcmInstanceWwn': fcmInstanceWwn, 'fcmInstanceFunctions': fcmInstanceFunctions, 'fcmInstancePhysicalIndex': fcmInstancePhysicalIndex, 'fcmInstanceSoftwareIndex': fcmInstanceSoftwareIndex, 'fcmInstanceStatus': fcmInstanceStatus, 'fcmInstanceTextName': fcmInstanceTextName, 'fcmInstanceDescr': fcmInstanceDescr, 'fcmInstanceFabricId': fcmInstanceFabricId}


class fcmSwitchEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 2, 1])
	access = 2
	columns = {'fcmSwitchIndex': fcmSwitchIndex, 'fcmSwitchDomainId': fcmSwitchDomainId, 'fcmSwitchPrincipal': fcmSwitchPrincipal, 'fcmSwitchWWN': fcmSwitchWWN}


class fcmPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 3, 1])
	access = 2
	columns = {'fcmPortInstanceIndex': fcmPortInstanceIndex, 'fcmPortWwn': fcmPortWwn, 'fcmPortNodeWwn': fcmPortNodeWwn, 'fcmPortAdminType': fcmPortAdminType, 'fcmPortOperType': fcmPortOperType, 'fcmPortFcCapClass': fcmPortFcCapClass, 'fcmPortFcOperClass': fcmPortFcOperClass, 'fcmPortTransmitterType': fcmPortTransmitterType, 'fcmPortConnectorType': fcmPortConnectorType, 'fcmPortSerialNumber': fcmPortSerialNumber, 'fcmPortPhysicalNumber': fcmPortPhysicalNumber, 'fcmPortAdminSpeed': fcmPortAdminSpeed, 'fcmPortCapProtocols': fcmPortCapProtocols, 'fcmPortOperProtocols': fcmPortOperProtocols}


from IF_MIB import ifIndex
class fcmPortStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 4, 1])
	access = 2
	columns = {'fcmPortBBCreditZeros': fcmPortBBCreditZeros, 'fcmPortFullInputBuffers': fcmPortFullInputBuffers, 'fcmPortClass2RxFrames': fcmPortClass2RxFrames, 'fcmPortClass2RxOctets': fcmPortClass2RxOctets, 'fcmPortClass2TxFrames': fcmPortClass2TxFrames, 'fcmPortClass2TxOctets': fcmPortClass2TxOctets, 'fcmPortClass2Discards': fcmPortClass2Discards, 'fcmPortClass2RxFbsyFrames': fcmPortClass2RxFbsyFrames, 'fcmPortClass2RxPbsyFrames': fcmPortClass2RxPbsyFrames, 'fcmPortClass2RxFrjtFrames': fcmPortClass2RxFrjtFrames, 'fcmPortClass2RxPrjtFrames': fcmPortClass2RxPrjtFrames, 'fcmPortClass2TxFbsyFrames': fcmPortClass2TxFbsyFrames, 'fcmPortClass2TxPbsyFrames': fcmPortClass2TxPbsyFrames, 'fcmPortClass2TxFrjtFrames': fcmPortClass2TxFrjtFrames, 'fcmPortClass2TxPrjtFrames': fcmPortClass2TxPrjtFrames, 'fcmPortClass3RxFrames': fcmPortClass3RxFrames, 'fcmPortClass3RxOctets': fcmPortClass3RxOctets, 'fcmPortClass3TxFrames': fcmPortClass3TxFrames, 'fcmPortClass3TxOctets': fcmPortClass3TxOctets, 'fcmPortClass3Discards': fcmPortClass3Discards, 'fcmPortClassFRxFrames': fcmPortClassFRxFrames, 'fcmPortClassFRxOctets': fcmPortClassFRxOctets, 'fcmPortClassFTxFrames': fcmPortClassFTxFrames, 'fcmPortClassFTxOctets': fcmPortClassFTxOctets, 'fcmPortClassFDiscards': fcmPortClassFDiscards}


from IF_MIB import ifIndex
class fcmPortLcStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 5, 1])
	access = 2
	columns = {'fcmPortLcBBCreditZeros': fcmPortLcBBCreditZeros, 'fcmPortLcFullInputBuffers': fcmPortLcFullInputBuffers, 'fcmPortLcClass2RxFrames': fcmPortLcClass2RxFrames, 'fcmPortLcClass2RxOctets': fcmPortLcClass2RxOctets, 'fcmPortLcClass2TxFrames': fcmPortLcClass2TxFrames, 'fcmPortLcClass2TxOctets': fcmPortLcClass2TxOctets, 'fcmPortLcClass2Discards': fcmPortLcClass2Discards, 'fcmPortLcClass2RxFbsyFrames': fcmPortLcClass2RxFbsyFrames, 'fcmPortLcClass2RxPbsyFrames': fcmPortLcClass2RxPbsyFrames, 'fcmPortLcClass2RxFrjtFrames': fcmPortLcClass2RxFrjtFrames, 'fcmPortLcClass2RxPrjtFrames': fcmPortLcClass2RxPrjtFrames, 'fcmPortLcClass2TxFbsyFrames': fcmPortLcClass2TxFbsyFrames, 'fcmPortLcClass2TxPbsyFrames': fcmPortLcClass2TxPbsyFrames, 'fcmPortLcClass2TxFrjtFrames': fcmPortLcClass2TxFrjtFrames, 'fcmPortLcClass2TxPrjtFrames': fcmPortLcClass2TxPrjtFrames, 'fcmPortLcClass3RxFrames': fcmPortLcClass3RxFrames, 'fcmPortLcClass3RxOctets': fcmPortLcClass3RxOctets, 'fcmPortLcClass3TxFrames': fcmPortLcClass3TxFrames, 'fcmPortLcClass3TxOctets': fcmPortLcClass3TxOctets, 'fcmPortLcClass3Discards': fcmPortLcClass3Discards}


from IF_MIB import ifIndex
class fcmPortErrorsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 6, 1])
	access = 2
	columns = {'fcmPortRxLinkResets': fcmPortRxLinkResets, 'fcmPortTxLinkResets': fcmPortTxLinkResets, 'fcmPortLinkResets': fcmPortLinkResets, 'fcmPortRxOfflineSequences': fcmPortRxOfflineSequences, 'fcmPortTxOfflineSequences': fcmPortTxOfflineSequences, 'fcmPortLinkFailures': fcmPortLinkFailures, 'fcmPortLossofSynchs': fcmPortLossofSynchs, 'fcmPortLossofSignals': fcmPortLossofSignals, 'fcmPortPrimSeqProtocolErrors': fcmPortPrimSeqProtocolErrors, 'fcmPortInvalidTxWords': fcmPortInvalidTxWords, 'fcmPortInvalidCRCs': fcmPortInvalidCRCs, 'fcmPortInvalidOrderedSets': fcmPortInvalidOrderedSets, 'fcmPortFrameTooLongs': fcmPortFrameTooLongs, 'fcmPortTruncatedFrames': fcmPortTruncatedFrames, 'fcmPortAddressErrors': fcmPortAddressErrors, 'fcmPortDelimiterErrors': fcmPortDelimiterErrors, 'fcmPortEncodingDisparityErrors': fcmPortEncodingDisparityErrors, 'fcmPortOtherErrors': fcmPortOtherErrors}


class fcmFxPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 7, 1])
	access = 2
	columns = {'fcmFxPortRatov': fcmFxPortRatov, 'fcmFxPortEdtov': fcmFxPortEdtov, 'fcmFxPortRttov': fcmFxPortRttov, 'fcmFxPortHoldTime': fcmFxPortHoldTime, 'fcmFxPortCapBbCreditMax': fcmFxPortCapBbCreditMax, 'fcmFxPortCapBbCreditMin': fcmFxPortCapBbCreditMin, 'fcmFxPortCapDataFieldSizeMax': fcmFxPortCapDataFieldSizeMax, 'fcmFxPortCapDataFieldSizeMin': fcmFxPortCapDataFieldSizeMin, 'fcmFxPortCapClass2SeqDeliv': fcmFxPortCapClass2SeqDeliv, 'fcmFxPortCapClass3SeqDeliv': fcmFxPortCapClass3SeqDeliv, 'fcmFxPortCapHoldTimeMax': fcmFxPortCapHoldTimeMax, 'fcmFxPortCapHoldTimeMin': fcmFxPortCapHoldTimeMin}


class fcmISPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 8, 1])
	access = 2
	columns = {'fcmISPortClassFCredit': fcmISPortClassFCredit, 'fcmISPortClassFDataFieldSize': fcmISPortClassFDataFieldSize}


class fcmFLoginEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, fcmFLoginNxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 9, 1])
	access = 2
	columns = {'fcmFLoginNxPortIndex': fcmFLoginNxPortIndex, 'fcmFLoginPortWwn': fcmFLoginPortWwn, 'fcmFLoginNodeWwn': fcmFLoginNodeWwn, 'fcmFLoginBbCreditModel': fcmFLoginBbCreditModel, 'fcmFLoginBbCredit': fcmFLoginBbCredit, 'fcmFLoginClassesAgreed': fcmFLoginClassesAgreed, 'fcmFLoginClass2SeqDelivAgreed': fcmFLoginClass2SeqDelivAgreed, 'fcmFLoginClass2DataFieldSize': fcmFLoginClass2DataFieldSize, 'fcmFLoginClass3SeqDelivAgreed': fcmFLoginClass3SeqDelivAgreed, 'fcmFLoginClass3DataFieldSize': fcmFLoginClass3DataFieldSize}


class fcmLinkEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmLinkIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 1, 10, 1])
	access = 2
	columns = {'fcmLinkIndex': fcmLinkIndex, 'fcmLinkEnd1NodeWwn': fcmLinkEnd1NodeWwn, 'fcmLinkEnd1PhysPortNumber': fcmLinkEnd1PhysPortNumber, 'fcmLinkEnd1PortWwn': fcmLinkEnd1PortWwn, 'fcmLinkEnd2NodeWwn': fcmLinkEnd2NodeWwn, 'fcmLinkEnd2PhysPortNumber': fcmLinkEnd2PhysPortNumber, 'fcmLinkEnd2PortWwn': fcmLinkEnd2PortWwn, 'fcmLinkEnd2AgentAddress': fcmLinkEnd2AgentAddress, 'fcmLinkEnd2PortType': fcmLinkEnd2PortType, 'fcmLinkEnd2UnitType': fcmLinkEnd2UnitType, 'fcmLinkEnd2FcAddressId': fcmLinkEnd2FcAddressId}


# notifications (traps) 
# groups 
class fcmInstanceBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 1])
	group = [fcmInstanceWwn, fcmInstanceFunctions, fcmInstancePhysicalIndex, fcmInstanceSoftwareIndex, fcmInstanceStatus, fcmInstanceTextName, fcmInstanceDescr, fcmInstanceFabricId]

class fcmSwitchBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 2])
	group = [fcmSwitchDomainId, fcmSwitchPrincipal, fcmSwitchWWN]

class fcmPortBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 3])
	group = [fcmPortInstanceIndex, fcmPortWwn, fcmPortNodeWwn, fcmPortAdminType, fcmPortOperType, fcmPortFcCapClass, fcmPortFcOperClass, fcmPortTransmitterType, fcmPortConnectorType, fcmPortSerialNumber, fcmPortPhysicalNumber, fcmPortAdminSpeed, fcmPortCapProtocols, fcmPortOperProtocols]

class fcmPortStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 4])
	group = [fcmPortBBCreditZeros, fcmPortFullInputBuffers]

class fcmPortClass23StatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 5])
	group = [fcmPortClass2RxFrames, fcmPortClass2RxOctets, fcmPortClass2TxFrames, fcmPortClass2TxOctets, fcmPortClass2Discards, fcmPortClass2RxFbsyFrames, fcmPortClass2RxPbsyFrames, fcmPortClass2RxFrjtFrames, fcmPortClass2RxPrjtFrames, fcmPortClass2TxFbsyFrames, fcmPortClass2TxPbsyFrames, fcmPortClass2TxFrjtFrames, fcmPortClass2TxPrjtFrames, fcmPortClass3RxFrames, fcmPortClass3RxOctets, fcmPortClass3TxFrames, fcmPortClass3TxOctets, fcmPortClass3Discards]

class fcmPortClassFStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 6])
	group = [fcmPortClassFRxFrames, fcmPortClassFRxOctets, fcmPortClassFTxFrames, fcmPortClassFTxOctets, fcmPortClassFDiscards]

class fcmPortLcStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 7])
	group = [fcmPortLcBBCreditZeros, fcmPortLcFullInputBuffers, fcmPortLcClass2RxFrames, fcmPortLcClass2RxOctets, fcmPortLcClass2TxFrames, fcmPortLcClass2TxOctets, fcmPortLcClass2Discards, fcmPortLcClass3Discards, fcmPortLcClass3RxFrames, fcmPortLcClass3RxOctets, fcmPortLcClass3TxFrames, fcmPortLcClass3TxOctets, fcmPortLcClass2RxFbsyFrames, fcmPortLcClass2RxPbsyFrames, fcmPortLcClass2RxFrjtFrames, fcmPortLcClass2RxPrjtFrames, fcmPortLcClass2TxFbsyFrames, fcmPortLcClass2TxPbsyFrames, fcmPortLcClass2TxFrjtFrames, fcmPortLcClass2TxPrjtFrames]

class fcmPortErrorsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 8])
	group = [fcmPortRxLinkResets, fcmPortTxLinkResets, fcmPortLinkResets, fcmPortRxOfflineSequences, fcmPortTxOfflineSequences, fcmPortLinkFailures, fcmPortLossofSynchs, fcmPortLossofSignals, fcmPortPrimSeqProtocolErrors, fcmPortInvalidTxWords, fcmPortInvalidCRCs, fcmPortInvalidOrderedSets, fcmPortFrameTooLongs, fcmPortTruncatedFrames, fcmPortAddressErrors, fcmPortDelimiterErrors, fcmPortEncodingDisparityErrors, fcmPortOtherErrors]

class fcmSwitchPortGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 9])
	group = [fcmFxPortRatov, fcmFxPortEdtov, fcmFxPortRttov, fcmFxPortHoldTime, fcmFxPortCapBbCreditMax, fcmFxPortCapBbCreditMin, fcmFxPortCapDataFieldSizeMax, fcmFxPortCapDataFieldSizeMin, fcmFxPortCapClass2SeqDeliv, fcmFxPortCapClass3SeqDeliv, fcmFxPortCapHoldTimeMax, fcmFxPortCapHoldTimeMin, fcmISPortClassFCredit, fcmISPortClassFDataFieldSize]

class fcmSwitchLoginGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 10])
	group = [fcmFLoginPortWwn, fcmFLoginNodeWwn, fcmFLoginBbCreditModel, fcmFLoginBbCredit, fcmFLoginClassesAgreed, fcmFLoginClass2SeqDelivAgreed, fcmFLoginClass2DataFieldSize, fcmFLoginClass3SeqDelivAgreed, fcmFLoginClass3DataFieldSize]

class fcmLinkBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 56, 3, 2, 11])
	group = [fcmLinkEnd1NodeWwn, fcmLinkEnd1PhysPortNumber, fcmLinkEnd1PortWwn, fcmLinkEnd2NodeWwn, fcmLinkEnd2PhysPortNumber, fcmLinkEnd2PortWwn, fcmLinkEnd2AgentAddress, fcmLinkEnd2PortType, fcmLinkEnd2UnitType, fcmLinkEnd2FcAddressId]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
