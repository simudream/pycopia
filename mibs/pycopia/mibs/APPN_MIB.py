# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Counter32, Gauge32, Unsigned32, TimeTicks, OBJECT_TYPE, MODULE_IDENTITY, NOTIFICATION_TYPE
from IANAifType_MIB import IANAifType
from SNA_NAU_MIB import snanauMIB
from SNMPv2_TC import DisplayString, VariablePointer, RowPointer, DateAndTime, TruthValue, TimeStamp, TEXTUAL_CONVENTION
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP

class APPN_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/APPN-MIB'
	conformance = 4
	name = 'APPN-MIB'
	language = 2
	description = 'This is the MIB module for objects used to\nmanage network devices with APPN capabilities.'

# nodes
class appnMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4])
	name = 'appnMIB'

class appnObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1])
	name = 'appnObjects'

class appnNode(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1])
	name = 'appnNode'

class appnGeneralInfoAndCaps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1])
	name = 'appnGeneralInfoAndCaps'

class appnNnUniqueInfoAndCaps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2])
	name = 'appnNnUniqueInfoAndCaps'

class appnEnUniqueCaps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3])
	name = 'appnEnUniqueCaps'

class appnPortInformation(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4])
	name = 'appnPortInformation'

class appnLinkStationInformation(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5])
	name = 'appnLinkStationInformation'

class appnVrnInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6])
	name = 'appnVrnInfo'

class appnNn(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2])
	name = 'appnNn'

class appnNnTopo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1])
	name = 'appnNnTopo'

class appnNnTopology(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2])
	name = 'appnNnTopology'

class appnLocalTopology(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3])
	name = 'appnLocalTopology'

class appnDir(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4])
	name = 'appnDir'

class appnDirPerf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1])
	name = 'appnDirPerf'

class appnCos(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5])
	name = 'appnCos'

class appnSessIntermediate(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6])
	name = 'appnSessIntermediate'

class appnIsInGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1])
	name = 'appnIsInGlobal'

class appnTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 2])
	name = 'appnTraps'

class appnConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3])
	name = 'appnConformance'

class appnCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 1])
	name = 'appnCompliances'

class appnGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2])
	name = 'appnGroups'


# macros
# types 

class SnaNodeIdentification(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8))


class SnaControlPointName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(3, 17))


class SnaClassOfServiceName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 8))


class SnaModeName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 8))


class SnaSenseData(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8))


class DisplayableDlcAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 64))


class AppnNodeCounter(pycopia.SMI.Basetypes.Counter32):
	status = 1


class AppnPortCounter(pycopia.SMI.Basetypes.Counter32):
	status = 1


class AppnLinkStationCounter(pycopia.SMI.Basetypes.Counter32):
	status = 1


class AppnTopologyEntryTimeLeft(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 15))


class AppnTgDlcData(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 64))


class AppnTgEffectiveCapacity(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 1))


class AppnTgSecurity(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'nonsecure'), Enum(32, 'publicSwitchedNetwork'), Enum(64, 'undergroundCable'), Enum(96, 'secureConduit'), Enum(128, 'guardedConduit'), Enum(160, 'encrypted'), Enum(192, 'guardedRadiation')]


class AppnTgDelay(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 1))

# scalars 
class appnNodeCpName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 1])
	syntaxobject = SnaControlPointName


class appnNodeMibVersion(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnNodeId(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 3])
	syntaxobject = SnaNodeIdentification


class appnNodeType(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'networkNode'), Enum(2, 'endNode'), Enum(4, 't21len')]


class appnNodeUpTime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'hundredths of a second'


class appnNodeParallelTg(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeAdaptiveBindPacing(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeHprSupport(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noHprSupport'), Enum(2, 'hprBaseOnly'), Enum(3, 'rtpTower'), Enum(4, 'controlFlowsOverRtpTower')]


class appnNodeMaxSessPerRtpConn(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class appnNodeHprIntRteSetups(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 10])
	syntaxobject = AppnNodeCounter


class appnNodeHprIntRteRejects(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 11])
	syntaxobject = AppnNodeCounter


class appnNodeHprOrgRteSetups(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 12])
	syntaxobject = AppnNodeCounter


class appnNodeHprOrgRteRejects(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 13])
	syntaxobject = AppnNodeCounter


class appnNodeHprEndRteSetups(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 14])
	syntaxobject = AppnNodeCounter


class appnNodeHprEndRteRejects(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 15])
	syntaxobject = AppnNodeCounter


class appnNodeCounterDisconTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class appnNodeLsCounterType(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'noAnr'), Enum(3, 'anrForLocalNces'), Enum(4, 'allAnr')]


class appnNodeBrNn(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnCentralDirectory(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnTreeCache(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCache'), Enum(2, 'cacheNoIncrUpdate'), Enum(3, 'cacheWithIncrUpdate')]


class appnNodeNnRouteAddResist(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNodeNnIsr(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnFrsn(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNodeNnPeriBorderSup(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnInterchangeSup(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnExteBorderSup(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnSafeStoreFreq(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'TDUs'


class appnNodeNnRsn(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNodeNnCongested(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnIsrDepleted(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnQuiescing(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeNnGateway(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeEnModeCosMap(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNodeEnNnServer(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnNodeEnLuSearch(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTopoMaxNodes(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'node entries'


class appnNnTopoCurNumNodes(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'node entries'


class appnNnTopoNodePurges(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 3])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'node entries'


class appnNnTopoTgPurges(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 4])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'TG entries'


class appnNnTopoTotalTduWars(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 5])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'TDU wars'


class appnDirMaxCaches(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'directory entries'


class appnDirCurCaches(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'directory entries'


class appnDirCurHomeEntries(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'directory entries'


class appnDirRegEntries(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'directory entries'


class appnDirInLocates(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 5])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'Locate messages'


class appnDirInBcastLocates(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 6])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'Locate messages'


class appnDirOutLocates(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 7])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'Locate messages'


class appnDirOutBcastLocates(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 8])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'Locate messages'


class appnDirNotFoundLocates(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 9])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'Locate messages'


class appnDirNotFoundBcastLocates(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 10])
	syntaxobject = AppnNodeCounter
	access = 4
	units = 'Locate messages'


class appnDirLocateOutstands(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Locate messages'


class appnIsInGlobeCtrAdminStatus(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notActive'), Enum(2, 'active'), Enum(3, 'ready')]


class appnIsInGlobeCtrOperStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notActive'), Enum(2, 'active')]


class appnIsInGlobeCtrStatusTime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'hundredths of a second'


class appnIsInGlobeRscv(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notActive'), Enum(2, 'active')]


class appnIsInGlobeRscvTime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'hundredths of a second'


class appnIsInGlobeActSess(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'sessions'


class appnIsInGlobeHprBfActSess(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'sessions'


class alertIdNumber(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class affectedObject(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.VariablePointer


# columns
class appnPortName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnPortCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deactivate'), Enum(2, 'activate'), Enum(3, 'recycle'), Enum(4, 'ready')]


class appnPortOperState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'pendactive'), Enum(3, 'active'), Enum(4, 'pendinact')]


class appnPortDlcType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 4])
	syntaxobject = IANAifType


class appnPortPortType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'leased'), Enum(2, 'switched'), Enum(3, 'sharedAccessFacilities')]


class appnPortSIMRIM(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnPortLsRole(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'primary'), Enum(2, 'secondary'), Enum(3, 'negotiable'), Enum(4, 'abm')]


class appnPortNegotLs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnPortDynamicLinkSupport(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnPortMaxRcvBtuSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class appnPortMaxIframeWindow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'I-frames'


class appnPortDefLsGoodXids(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 12])
	syntaxobject = AppnPortCounter
	access = 4
	units = 'XID exchanges'


class appnPortDefLsBadXids(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 13])
	syntaxobject = AppnPortCounter
	access = 4
	units = 'XID exchanges'


class appnPortDynLsGoodXids(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 14])
	syntaxobject = AppnPortCounter
	access = 4
	units = 'XID exchanges'


class appnPortDynLsBadXids(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 15])
	syntaxobject = AppnPortCounter
	access = 4
	units = 'XID exchanges'


class appnPortSpecific(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class appnPortDlcLocalAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 17])
	syntaxobject = DisplayableDlcAddress


class appnPortCounterDisconTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class appnLsName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnLsCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deactivate'), Enum(2, 'activate'), Enum(3, 'recycle'), Enum(4, 'ready')]


class appnLsOperState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'sentConnectOut'), Enum(3, 'pendXidExch'), Enum(4, 'sendActAs'), Enum(5, 'sendSetMode'), Enum(6, 'otherPendingActive'), Enum(7, 'active'), Enum(8, 'sentDeactAsOrd'), Enum(9, 'sentDiscOrd'), Enum(10, 'sentDiscImmed'), Enum(11, 'otherPendingInact')]


class appnLsPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnLsDlcType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 5])
	syntaxobject = IANAifType


class appnLsDynamic(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsAdjCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnLsAdjNodeType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'networkNode'), Enum(2, 'endNode'), Enum(4, 't21len'), Enum(255, 'unknown')]


class appnLsTgNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLsLimResource(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsActOnDemand(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsMigration(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsPartnerNodeId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 13])
	syntaxobject = SnaNodeIdentification


class appnLsCpCpSessionSupport(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsMaxSendBtuSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class appnLsInXidBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 16])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'bytes'


class appnLsInMsgBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 17])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'bytes'


class appnLsInXidFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 18])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'XID frames'


class appnLsInMsgFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 19])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'I-frames'


class appnLsOutXidBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 20])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'bytes'


class appnLsOutMsgBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 21])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'bytes'


class appnLsOutXidFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 22])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'XID frames'


class appnLsOutMsgFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 23])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'I-frames'


class appnLsEchoRsps(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 24])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'echo responses'


class appnLsCurrentDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class appnLsMaxDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class appnLsMinDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class appnLsMaxDelayTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class appnLsGoodXids(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 29])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'XID exchanges'


class appnLsBadXids(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 30])
	syntaxobject = AppnLinkStationCounter
	access = 4
	units = 'XID exchanges'


class appnLsSpecific(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class appnLsActiveTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'hundredths of a second'


class appnLsCurrentStateTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'hundredths of a second'


class appnLsHprSup(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noHprSupport'), Enum(2, 'hprBaseOnly'), Enum(3, 'rtpTower'), Enum(4, 'controlFlowsOverRtpTower')]


class appnLsErrRecoSup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsForAnrLabel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnLsRevAnrLabel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnLsCpCpNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnLsRouteNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnLsBfNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnLsLocalAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 41])
	syntaxobject = DisplayableDlcAddress


class appnLsRemoteAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 42])
	syntaxobject = DisplayableDlcAddress


class appnLsRemoteLsName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 43])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnLsCounterDisconTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 44])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class appnLsMltgMember(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 45])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsStatusIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLsStatusTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class appnLsStatusLsName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnLsStatusCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnLsStatusPartnerId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 5])
	syntaxobject = SnaNodeIdentification


class appnLsStatusTgNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLsStatusGeneralSense(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 7])
	syntaxobject = SnaSenseData


class appnLsStatusRetry(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLsStatusEndSense(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 9])
	syntaxobject = SnaSenseData


class appnLsStatusXidLocalSense(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 10])
	syntaxobject = SnaSenseData


class appnLsStatusXidRemoteSense(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 11])
	syntaxobject = SnaSenseData


class appnLsStatusXidByteInError(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLsStatusXidBitInError(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLsStatusDlcType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 14])
	syntaxobject = IANAifType


class appnLsStatusLocalAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 15])
	syntaxobject = DisplayableDlcAddress


class appnLsStatusRemoteAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 16])
	syntaxobject = DisplayableDlcAddress


class appnVrnName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1, 1])
	syntaxobject = SnaControlPointName


class appnVrnTgNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnVrnPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnNnNodeFRFrsn(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNnNodeFRName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 2])
	syntaxobject = SnaControlPointName


class appnNnNodeFREntryTimeLeft(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 3])
	syntaxobject = AppnTopologyEntryTimeLeft
	access = 4
	units = 'days'


class appnNnNodeFRType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'networkNode'), Enum(3, 'virtualRoutingNode')]


class appnNnNodeFRRsn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNnNodeFRRouteAddResist(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnNodeFRCongested(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRIsrDepleted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRQuiescing(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRGateway(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRCentralDirectory(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRIsr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRGarbageCollect(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRHprSupport(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noHprSupport'), Enum(2, 'hprBaseOnly'), Enum(3, 'rtpTower'), Enum(4, 'controlFlowsOverRtpTower')]


class appnNnNodeFRPeriBorderSup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRInterchangeSup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRExteBorderSup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnNodeFRBranchAwareness(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRFrsn(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNnTgFROwner(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 2])
	syntaxobject = SnaControlPointName


class appnNnTgFRDest(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 3])
	syntaxobject = SnaControlPointName


class appnNnTgFRNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnTgFREntryTimeLeft(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 5])
	syntaxobject = AppnTopologyEntryTimeLeft
	access = 4
	units = 'days'


class appnNnTgFRDestVirtual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRDlcData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 7])
	syntaxobject = AppnTgDlcData


class appnNnTgFRRsn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNnTgFROperational(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRQuiescing(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRCpCpSession(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'supportedUnknownStatus'), Enum(2, 'supportedActive'), Enum(3, 'notSupported'), Enum(4, 'supportedNotActive')]


class appnNnTgFREffCap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 12])
	syntaxobject = AppnTgEffectiveCapacity


class appnNnTgFRConnCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnTgFRByteCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnTgFRSecurity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 15])
	syntaxobject = AppnTgSecurity


class appnNnTgFRDelay(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 16])
	syntaxobject = AppnTgDelay


class appnNnTgFRUsr1(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnTgFRUsr2(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnTgFRUsr3(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnNnTgFRGarbageCollect(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRSubareaNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class appnNnTgFRHprSup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRDestHprTrans(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRTypeIndicator(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'appnOrBfTg'), Enum(3, 'interchangeTg'), Enum(4, 'virtualRouteTg')]


class appnNnTgFRIntersubnet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRMltgLinkType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnNnTgFRBranchTg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalTgDest(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 1])
	syntaxobject = SnaControlPointName


class appnLocalTgNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalTgDestVirtual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalTgDlcData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 4])
	syntaxobject = AppnTgDlcData


class appnLocalTgPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnLocalTgQuiescing(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalTgOperational(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalTgCpCpSession(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'supportedUnknownStatus'), Enum(2, 'supportedActive'), Enum(3, 'notSupported'), Enum(4, 'supportedNotActive')]


class appnLocalTgEffCap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 9])
	syntaxobject = AppnTgEffectiveCapacity


class appnLocalTgConnCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalTgByteCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalTgSecurity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 12])
	syntaxobject = AppnTgSecurity


class appnLocalTgDelay(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 13])
	syntaxobject = AppnTgDelay


class appnLocalTgUsr1(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalTgUsr2(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalTgUsr3(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalTgHprSup(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noHprSupport'), Enum(2, 'hprBaseOnly'), Enum(3, 'rtpTower'), Enum(4, 'controlFlowsOverRtpTower')]


class appnLocalTgIntersubnet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalTgMltgLinkType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalTgBranchLinkType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'uplink'), Enum(3, 'downlink'), Enum(4, 'downlinkToBranchNetworkNode'), Enum(5, 'none'), Enum(255, 'unknown')]


class appnLocalEnTgOrigin(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 1])
	syntaxobject = SnaControlPointName


class appnLocalEnTgDest(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 2])
	syntaxobject = SnaControlPointName


class appnLocalEnTgNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalEnTgEntryTimeLeft(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 4])
	syntaxobject = AppnTopologyEntryTimeLeft
	access = 4
	units = 'days'


class appnLocalEnTgDestVirtual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalEnTgDlcData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 6])
	syntaxobject = AppnTgDlcData


class appnLocalEnTgOperational(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnLocalEnTgCpCpSession(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'supportedUnknownStatus'), Enum(2, 'supportedActive'), Enum(3, 'notSupported'), Enum(4, 'supportedNotActive')]


class appnLocalEnTgEffCap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 9])
	syntaxobject = AppnTgEffectiveCapacity


class appnLocalEnTgConnCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalEnTgByteCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalEnTgSecurity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 12])
	syntaxobject = AppnTgSecurity


class appnLocalEnTgDelay(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 13])
	syntaxobject = AppnTgDelay


class appnLocalEnTgUsr1(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalEnTgUsr2(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalEnTgUsr3(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnLocalEnTgMltgLinkType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class appnDirLuName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnDirNnServerName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 2])
	syntaxobject = SnaControlPointName


class appnDirLuOwnerName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 3])
	syntaxobject = SnaControlPointName


class appnDirLuLocation(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'local'), Enum(2, 'domain'), Enum(3, 'xdomain')]


class appnDirType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'home'), Enum(2, 'cache'), Enum(3, 'registered')]


class appnDirApparentLuOwnerName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnCosModeName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1, 1, 1])
	syntaxobject = SnaModeName


class appnCosModeCosName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1, 1, 2])
	syntaxobject = SnaClassOfServiceName


class appnCosName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2, 1, 1])
	syntaxobject = SnaClassOfServiceName


class appnCosTransPriority(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'low'), Enum(2, 'medium'), Enum(3, 'high'), Enum(4, 'network')]


class appnCosNodeRowName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 1])
	syntaxobject = SnaClassOfServiceName


class appnCosNodeRowIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosNodeRowWgt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnCosNodeRowResistMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosNodeRowResistMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosNodeRowMinCongestAllow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosNodeRowMaxCongestAllow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 1])
	syntaxobject = SnaClassOfServiceName


class appnCosTgRowIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowWgt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnCosTgRowEffCapMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 4])
	syntaxobject = AppnTgEffectiveCapacity


class appnCosTgRowEffCapMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 5])
	syntaxobject = AppnTgEffectiveCapacity


class appnCosTgRowConnCostMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowConnCostMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowByteCostMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowByteCostMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowSecurityMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 10])
	syntaxobject = AppnTgSecurity


class appnCosTgRowSecurityMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 11])
	syntaxobject = AppnTgSecurity


class appnCosTgRowDelayMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 12])
	syntaxobject = AppnTgDelay


class appnCosTgRowDelayMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 13])
	syntaxobject = AppnTgDelay


class appnCosTgRowUsr1Min(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowUsr1Max(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowUsr2Min(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowUsr2Max(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowUsr3Min(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnCosTgRowUsr3Max(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnIsInFqCpName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 1])
	syntaxobject = SnaControlPointName


class appnIsInPcid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnIsInSessState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'pendactive'), Enum(3, 'active'), Enum(4, 'pendinact')]


class appnIsInPriLuName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnIsInSecLuName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class appnIsInModeName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 6])
	syntaxobject = SnaModeName


class appnIsInCosName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 7])
	syntaxobject = SnaClassOfServiceName


class appnIsInTransPriority(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'low'), Enum(2, 'medium'), Enum(3, 'high'), Enum(4, 'network')]


class appnIsInSessType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'lu62'), Enum(3, 'lu0thru3'), Enum(4, 'lu62dlur'), Enum(5, 'lu0thru3dlur')]


class appnIsInSessUpTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'hundredths of a second'


class appnIsInCtrUpTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'hundredths of a second'


class appnIsInP2SFmdPius(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'path information units (PIUs)'


class appnIsInS2PFmdPius(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'path information units (PIUs)'


class appnIsInP2SNonFmdPius(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'path information units (PIUs)'


class appnIsInS2PNonFmdPius(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'path information units (PIUs)'


class appnIsInP2SFmdBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class appnIsInS2PFmdBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class appnIsInP2SNonFmdBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class appnIsInS2PNonFmdBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class appnIsInPsAdjCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 20])
	syntaxobject = SnaControlPointName


class appnIsInPsAdjTgNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnIsInPsSendMaxBtuSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class appnIsInPsSendPacingType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fixed'), Enum(2, 'adaptive')]


class appnIsInPsSendRpc(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInPsSendNxWndwSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInPsRecvPacingType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fixed'), Enum(2, 'adaptive')]


class appnIsInPsRecvRpc(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInPsRecvNxWndwSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInSsAdjCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 29])
	syntaxobject = SnaControlPointName


class appnIsInSsAdjTgNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class appnIsInSsSendMaxBtuSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class appnIsInSsSendPacingType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fixed'), Enum(2, 'adaptive')]


class appnIsInSsSendRpc(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInSsSendNxWndwSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInSsRecvPacingType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fixed'), Enum(2, 'adaptive')]


class appnIsInSsRecvRpc(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInSsRecvNxWndwSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'message units (MUs)'


class appnIsInRouteInfo(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnIsInRtpNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnIsInRtpTcid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnIsRtpNceId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnIsRtpTcid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class appnIsRtpSessions(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'sessions'


# rows 
class appnPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnPortName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1])
	access = 2
	columns = {'appnPortName': appnPortName, 'appnPortCommand': appnPortCommand, 'appnPortOperState': appnPortOperState, 'appnPortDlcType': appnPortDlcType, 'appnPortPortType': appnPortPortType, 'appnPortSIMRIM': appnPortSIMRIM, 'appnPortLsRole': appnPortLsRole, 'appnPortNegotLs': appnPortNegotLs, 'appnPortDynamicLinkSupport': appnPortDynamicLinkSupport, 'appnPortMaxRcvBtuSize': appnPortMaxRcvBtuSize, 'appnPortMaxIframeWindow': appnPortMaxIframeWindow, 'appnPortDefLsGoodXids': appnPortDefLsGoodXids, 'appnPortDefLsBadXids': appnPortDefLsBadXids, 'appnPortDynLsGoodXids': appnPortDynLsGoodXids, 'appnPortDynLsBadXids': appnPortDynLsBadXids, 'appnPortSpecific': appnPortSpecific, 'appnPortDlcLocalAddr': appnPortDlcLocalAddr, 'appnPortCounterDisconTime': appnPortCounterDisconTime}


class appnLsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnLsName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1])
	access = 2
	columns = {'appnLsName': appnLsName, 'appnLsCommand': appnLsCommand, 'appnLsOperState': appnLsOperState, 'appnLsPortName': appnLsPortName, 'appnLsDlcType': appnLsDlcType, 'appnLsDynamic': appnLsDynamic, 'appnLsAdjCpName': appnLsAdjCpName, 'appnLsAdjNodeType': appnLsAdjNodeType, 'appnLsTgNum': appnLsTgNum, 'appnLsLimResource': appnLsLimResource, 'appnLsActOnDemand': appnLsActOnDemand, 'appnLsMigration': appnLsMigration, 'appnLsPartnerNodeId': appnLsPartnerNodeId, 'appnLsCpCpSessionSupport': appnLsCpCpSessionSupport, 'appnLsMaxSendBtuSize': appnLsMaxSendBtuSize, 'appnLsInXidBytes': appnLsInXidBytes, 'appnLsInMsgBytes': appnLsInMsgBytes, 'appnLsInXidFrames': appnLsInXidFrames, 'appnLsInMsgFrames': appnLsInMsgFrames, 'appnLsOutXidBytes': appnLsOutXidBytes, 'appnLsOutMsgBytes': appnLsOutMsgBytes, 'appnLsOutXidFrames': appnLsOutXidFrames, 'appnLsOutMsgFrames': appnLsOutMsgFrames, 'appnLsEchoRsps': appnLsEchoRsps, 'appnLsCurrentDelay': appnLsCurrentDelay, 'appnLsMaxDelay': appnLsMaxDelay, 'appnLsMinDelay': appnLsMinDelay, 'appnLsMaxDelayTime': appnLsMaxDelayTime, 'appnLsGoodXids': appnLsGoodXids, 'appnLsBadXids': appnLsBadXids, 'appnLsSpecific': appnLsSpecific, 'appnLsActiveTime': appnLsActiveTime, 'appnLsCurrentStateTime': appnLsCurrentStateTime, 'appnLsHprSup': appnLsHprSup, 'appnLsErrRecoSup': appnLsErrRecoSup, 'appnLsForAnrLabel': appnLsForAnrLabel, 'appnLsRevAnrLabel': appnLsRevAnrLabel, 'appnLsCpCpNceId': appnLsCpCpNceId, 'appnLsRouteNceId': appnLsRouteNceId, 'appnLsBfNceId': appnLsBfNceId, 'appnLsLocalAddr': appnLsLocalAddr, 'appnLsRemoteAddr': appnLsRemoteAddr, 'appnLsRemoteLsName': appnLsRemoteLsName, 'appnLsCounterDisconTime': appnLsCounterDisconTime, 'appnLsMltgMember': appnLsMltgMember}


class appnLsStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnLsStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1])
	access = 2
	columns = {'appnLsStatusIndex': appnLsStatusIndex, 'appnLsStatusTime': appnLsStatusTime, 'appnLsStatusLsName': appnLsStatusLsName, 'appnLsStatusCpName': appnLsStatusCpName, 'appnLsStatusPartnerId': appnLsStatusPartnerId, 'appnLsStatusTgNum': appnLsStatusTgNum, 'appnLsStatusGeneralSense': appnLsStatusGeneralSense, 'appnLsStatusRetry': appnLsStatusRetry, 'appnLsStatusEndSense': appnLsStatusEndSense, 'appnLsStatusXidLocalSense': appnLsStatusXidLocalSense, 'appnLsStatusXidRemoteSense': appnLsStatusXidRemoteSense, 'appnLsStatusXidByteInError': appnLsStatusXidByteInError, 'appnLsStatusXidBitInError': appnLsStatusXidBitInError, 'appnLsStatusDlcType': appnLsStatusDlcType, 'appnLsStatusLocalAddr': appnLsStatusLocalAddr, 'appnLsStatusRemoteAddr': appnLsStatusRemoteAddr}


class appnVrnEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnVrnName, appnVrnTgNum, appnVrnPortName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1])
	access = 2
	columns = {'appnVrnName': appnVrnName, 'appnVrnTgNum': appnVrnTgNum, 'appnVrnPortName': appnVrnPortName}


class appnNnTopologyFREntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnNnNodeFRFrsn, appnNnNodeFRName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1])
	access = 2
	columns = {'appnNnNodeFRFrsn': appnNnNodeFRFrsn, 'appnNnNodeFRName': appnNnNodeFRName, 'appnNnNodeFREntryTimeLeft': appnNnNodeFREntryTimeLeft, 'appnNnNodeFRType': appnNnNodeFRType, 'appnNnNodeFRRsn': appnNnNodeFRRsn, 'appnNnNodeFRRouteAddResist': appnNnNodeFRRouteAddResist, 'appnNnNodeFRCongested': appnNnNodeFRCongested, 'appnNnNodeFRIsrDepleted': appnNnNodeFRIsrDepleted, 'appnNnNodeFRQuiescing': appnNnNodeFRQuiescing, 'appnNnNodeFRGateway': appnNnNodeFRGateway, 'appnNnNodeFRCentralDirectory': appnNnNodeFRCentralDirectory, 'appnNnNodeFRIsr': appnNnNodeFRIsr, 'appnNnNodeFRGarbageCollect': appnNnNodeFRGarbageCollect, 'appnNnNodeFRHprSupport': appnNnNodeFRHprSupport, 'appnNnNodeFRPeriBorderSup': appnNnNodeFRPeriBorderSup, 'appnNnNodeFRInterchangeSup': appnNnNodeFRInterchangeSup, 'appnNnNodeFRExteBorderSup': appnNnNodeFRExteBorderSup, 'appnNnNodeFRBranchAwareness': appnNnNodeFRBranchAwareness}


class appnNnTgTopologyFREntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnNnTgFRFrsn, appnNnTgFROwner, appnNnTgFRDest, appnNnTgFRNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1])
	access = 2
	columns = {'appnNnTgFRFrsn': appnNnTgFRFrsn, 'appnNnTgFROwner': appnNnTgFROwner, 'appnNnTgFRDest': appnNnTgFRDest, 'appnNnTgFRNum': appnNnTgFRNum, 'appnNnTgFREntryTimeLeft': appnNnTgFREntryTimeLeft, 'appnNnTgFRDestVirtual': appnNnTgFRDestVirtual, 'appnNnTgFRDlcData': appnNnTgFRDlcData, 'appnNnTgFRRsn': appnNnTgFRRsn, 'appnNnTgFROperational': appnNnTgFROperational, 'appnNnTgFRQuiescing': appnNnTgFRQuiescing, 'appnNnTgFRCpCpSession': appnNnTgFRCpCpSession, 'appnNnTgFREffCap': appnNnTgFREffCap, 'appnNnTgFRConnCost': appnNnTgFRConnCost, 'appnNnTgFRByteCost': appnNnTgFRByteCost, 'appnNnTgFRSecurity': appnNnTgFRSecurity, 'appnNnTgFRDelay': appnNnTgFRDelay, 'appnNnTgFRUsr1': appnNnTgFRUsr1, 'appnNnTgFRUsr2': appnNnTgFRUsr2, 'appnNnTgFRUsr3': appnNnTgFRUsr3, 'appnNnTgFRGarbageCollect': appnNnTgFRGarbageCollect, 'appnNnTgFRSubareaNum': appnNnTgFRSubareaNum, 'appnNnTgFRHprSup': appnNnTgFRHprSup, 'appnNnTgFRDestHprTrans': appnNnTgFRDestHprTrans, 'appnNnTgFRTypeIndicator': appnNnTgFRTypeIndicator, 'appnNnTgFRIntersubnet': appnNnTgFRIntersubnet, 'appnNnTgFRMltgLinkType': appnNnTgFRMltgLinkType, 'appnNnTgFRBranchTg': appnNnTgFRBranchTg}


class appnLocalTgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnLocalTgDest, appnLocalTgNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1])
	access = 2
	columns = {'appnLocalTgDest': appnLocalTgDest, 'appnLocalTgNum': appnLocalTgNum, 'appnLocalTgDestVirtual': appnLocalTgDestVirtual, 'appnLocalTgDlcData': appnLocalTgDlcData, 'appnLocalTgPortName': appnLocalTgPortName, 'appnLocalTgQuiescing': appnLocalTgQuiescing, 'appnLocalTgOperational': appnLocalTgOperational, 'appnLocalTgCpCpSession': appnLocalTgCpCpSession, 'appnLocalTgEffCap': appnLocalTgEffCap, 'appnLocalTgConnCost': appnLocalTgConnCost, 'appnLocalTgByteCost': appnLocalTgByteCost, 'appnLocalTgSecurity': appnLocalTgSecurity, 'appnLocalTgDelay': appnLocalTgDelay, 'appnLocalTgUsr1': appnLocalTgUsr1, 'appnLocalTgUsr2': appnLocalTgUsr2, 'appnLocalTgUsr3': appnLocalTgUsr3, 'appnLocalTgHprSup': appnLocalTgHprSup, 'appnLocalTgIntersubnet': appnLocalTgIntersubnet, 'appnLocalTgMltgLinkType': appnLocalTgMltgLinkType, 'appnLocalTgBranchLinkType': appnLocalTgBranchLinkType}


class appnLocalEnTgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnLocalEnTgOrigin, appnLocalEnTgDest, appnLocalEnTgNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1])
	access = 2
	columns = {'appnLocalEnTgOrigin': appnLocalEnTgOrigin, 'appnLocalEnTgDest': appnLocalEnTgDest, 'appnLocalEnTgNum': appnLocalEnTgNum, 'appnLocalEnTgEntryTimeLeft': appnLocalEnTgEntryTimeLeft, 'appnLocalEnTgDestVirtual': appnLocalEnTgDestVirtual, 'appnLocalEnTgDlcData': appnLocalEnTgDlcData, 'appnLocalEnTgOperational': appnLocalEnTgOperational, 'appnLocalEnTgCpCpSession': appnLocalEnTgCpCpSession, 'appnLocalEnTgEffCap': appnLocalEnTgEffCap, 'appnLocalEnTgConnCost': appnLocalEnTgConnCost, 'appnLocalEnTgByteCost': appnLocalEnTgByteCost, 'appnLocalEnTgSecurity': appnLocalEnTgSecurity, 'appnLocalEnTgDelay': appnLocalEnTgDelay, 'appnLocalEnTgUsr1': appnLocalEnTgUsr1, 'appnLocalEnTgUsr2': appnLocalEnTgUsr2, 'appnLocalEnTgUsr3': appnLocalEnTgUsr3, 'appnLocalEnTgMltgLinkType': appnLocalEnTgMltgLinkType}


class appnDirEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnDirLuName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1])
	access = 2
	columns = {'appnDirLuName': appnDirLuName, 'appnDirNnServerName': appnDirNnServerName, 'appnDirLuOwnerName': appnDirLuOwnerName, 'appnDirLuLocation': appnDirLuLocation, 'appnDirType': appnDirType, 'appnDirApparentLuOwnerName': appnDirApparentLuOwnerName}


class appnCosModeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnCosModeName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1, 1])
	access = 2
	columns = {'appnCosModeName': appnCosModeName, 'appnCosModeCosName': appnCosModeCosName}


class appnCosNameEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnCosName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2, 1])
	access = 2
	columns = {'appnCosName': appnCosName, 'appnCosTransPriority': appnCosTransPriority}


class appnCosNodeRowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnCosNodeRowName, appnCosNodeRowIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1])
	access = 2
	columns = {'appnCosNodeRowName': appnCosNodeRowName, 'appnCosNodeRowIndex': appnCosNodeRowIndex, 'appnCosNodeRowWgt': appnCosNodeRowWgt, 'appnCosNodeRowResistMin': appnCosNodeRowResistMin, 'appnCosNodeRowResistMax': appnCosNodeRowResistMax, 'appnCosNodeRowMinCongestAllow': appnCosNodeRowMinCongestAllow, 'appnCosNodeRowMaxCongestAllow': appnCosNodeRowMaxCongestAllow}


class appnCosTgRowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnCosTgRowName, appnCosTgRowIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1])
	access = 2
	columns = {'appnCosTgRowName': appnCosTgRowName, 'appnCosTgRowIndex': appnCosTgRowIndex, 'appnCosTgRowWgt': appnCosTgRowWgt, 'appnCosTgRowEffCapMin': appnCosTgRowEffCapMin, 'appnCosTgRowEffCapMax': appnCosTgRowEffCapMax, 'appnCosTgRowConnCostMin': appnCosTgRowConnCostMin, 'appnCosTgRowConnCostMax': appnCosTgRowConnCostMax, 'appnCosTgRowByteCostMin': appnCosTgRowByteCostMin, 'appnCosTgRowByteCostMax': appnCosTgRowByteCostMax, 'appnCosTgRowSecurityMin': appnCosTgRowSecurityMin, 'appnCosTgRowSecurityMax': appnCosTgRowSecurityMax, 'appnCosTgRowDelayMin': appnCosTgRowDelayMin, 'appnCosTgRowDelayMax': appnCosTgRowDelayMax, 'appnCosTgRowUsr1Min': appnCosTgRowUsr1Min, 'appnCosTgRowUsr1Max': appnCosTgRowUsr1Max, 'appnCosTgRowUsr2Min': appnCosTgRowUsr2Min, 'appnCosTgRowUsr2Max': appnCosTgRowUsr2Max, 'appnCosTgRowUsr3Min': appnCosTgRowUsr3Min, 'appnCosTgRowUsr3Max': appnCosTgRowUsr3Max}


class appnIsInEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnIsInFqCpName, appnIsInPcid], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1])
	access = 2
	columns = {'appnIsInFqCpName': appnIsInFqCpName, 'appnIsInPcid': appnIsInPcid, 'appnIsInSessState': appnIsInSessState, 'appnIsInPriLuName': appnIsInPriLuName, 'appnIsInSecLuName': appnIsInSecLuName, 'appnIsInModeName': appnIsInModeName, 'appnIsInCosName': appnIsInCosName, 'appnIsInTransPriority': appnIsInTransPriority, 'appnIsInSessType': appnIsInSessType, 'appnIsInSessUpTime': appnIsInSessUpTime, 'appnIsInCtrUpTime': appnIsInCtrUpTime, 'appnIsInP2SFmdPius': appnIsInP2SFmdPius, 'appnIsInS2PFmdPius': appnIsInS2PFmdPius, 'appnIsInP2SNonFmdPius': appnIsInP2SNonFmdPius, 'appnIsInS2PNonFmdPius': appnIsInS2PNonFmdPius, 'appnIsInP2SFmdBytes': appnIsInP2SFmdBytes, 'appnIsInS2PFmdBytes': appnIsInS2PFmdBytes, 'appnIsInP2SNonFmdBytes': appnIsInP2SNonFmdBytes, 'appnIsInS2PNonFmdBytes': appnIsInS2PNonFmdBytes, 'appnIsInPsAdjCpName': appnIsInPsAdjCpName, 'appnIsInPsAdjTgNum': appnIsInPsAdjTgNum, 'appnIsInPsSendMaxBtuSize': appnIsInPsSendMaxBtuSize, 'appnIsInPsSendPacingType': appnIsInPsSendPacingType, 'appnIsInPsSendRpc': appnIsInPsSendRpc, 'appnIsInPsSendNxWndwSize': appnIsInPsSendNxWndwSize, 'appnIsInPsRecvPacingType': appnIsInPsRecvPacingType, 'appnIsInPsRecvRpc': appnIsInPsRecvRpc, 'appnIsInPsRecvNxWndwSize': appnIsInPsRecvNxWndwSize, 'appnIsInSsAdjCpName': appnIsInSsAdjCpName, 'appnIsInSsAdjTgNum': appnIsInSsAdjTgNum, 'appnIsInSsSendMaxBtuSize': appnIsInSsSendMaxBtuSize, 'appnIsInSsSendPacingType': appnIsInSsSendPacingType, 'appnIsInSsSendRpc': appnIsInSsSendRpc, 'appnIsInSsSendNxWndwSize': appnIsInSsSendNxWndwSize, 'appnIsInSsRecvPacingType': appnIsInSsRecvPacingType, 'appnIsInSsRecvRpc': appnIsInSsRecvRpc, 'appnIsInSsRecvNxWndwSize': appnIsInSsRecvNxWndwSize, 'appnIsInRouteInfo': appnIsInRouteInfo, 'appnIsInRtpNceId': appnIsInRtpNceId, 'appnIsInRtpTcid': appnIsInRtpTcid}


class appnIsRtpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([appnIsRtpNceId, appnIsRtpTcid], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1])
	access = 2
	columns = {'appnIsRtpNceId': appnIsRtpNceId, 'appnIsRtpTcid': appnIsRtpTcid, 'appnIsRtpSessions': appnIsRtpSessions}


# notifications (traps) 
class alertTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 2, 1])

# groups 
class appnGeneralConfGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 1])
	group = [appnNodeCpName, appnNodeMibVersion, appnNodeId, appnNodeType, appnNodeUpTime, appnNodeParallelTg, appnNodeAdaptiveBindPacing, appnNodeHprSupport, appnNodeCounterDisconTime]

class appnPortConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 2])
	group = [appnPortCommand, appnPortOperState, appnPortDlcType, appnPortPortType, appnPortSIMRIM, appnPortLsRole, appnPortNegotLs, appnPortDynamicLinkSupport, appnPortMaxRcvBtuSize, appnPortMaxIframeWindow, appnPortDefLsGoodXids, appnPortDefLsBadXids, appnPortDynLsGoodXids, appnPortDynLsBadXids, appnPortSpecific, appnPortDlcLocalAddr, appnPortCounterDisconTime]

class appnLinkConfGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 3])
	group = [appnLsCommand, appnLsOperState, appnLsPortName, appnLsDlcType, appnLsDynamic, appnLsAdjCpName, appnLsAdjNodeType, appnLsTgNum, appnLsLimResource, appnLsActOnDemand, appnLsMigration, appnLsPartnerNodeId, appnLsCpCpSessionSupport, appnLsMaxSendBtuSize, appnLsInXidBytes, appnLsInMsgBytes, appnLsInXidFrames, appnLsInMsgFrames, appnLsOutXidBytes, appnLsOutMsgBytes, appnLsOutXidFrames, appnLsOutMsgFrames, appnLsEchoRsps, appnLsCurrentDelay, appnLsMaxDelay, appnLsMinDelay, appnLsMaxDelayTime, appnLsGoodXids, appnLsBadXids, appnLsSpecific, appnLsActiveTime, appnLsCurrentStateTime, appnLsHprSup, appnLsLocalAddr, appnLsRemoteAddr, appnLsRemoteLsName, appnLsStatusTime, appnLsStatusLsName, appnLsStatusCpName, appnLsStatusPartnerId, appnLsStatusTgNum, appnLsStatusGeneralSense, appnLsStatusRetry, appnLsStatusEndSense, appnLsStatusXidLocalSense, appnLsStatusXidRemoteSense, appnLsStatusXidByteInError, appnLsStatusXidBitInError, appnLsStatusDlcType, appnLsStatusLocalAddr, appnLsStatusRemoteAddr, appnLsCounterDisconTime]

class appnLocalTgConfGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 4])
	group = [appnLocalTgDestVirtual, appnLocalTgDlcData, appnLocalTgPortName, appnLocalTgQuiescing, appnLocalTgOperational, appnLocalTgCpCpSession, appnLocalTgEffCap, appnLocalTgConnCost, appnLocalTgByteCost, appnLocalTgSecurity, appnLocalTgDelay, appnLocalTgUsr1, appnLocalTgUsr2, appnLocalTgUsr3, appnLocalTgHprSup, appnLocalTgIntersubnet]

class appnDirTableConfGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 5])
	group = [appnDirNnServerName, appnDirLuOwnerName, appnDirLuLocation, appnDirType]

class appnNnUniqueConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 6])
	group = [appnNodeNnCentralDirectory, appnNodeNnTreeCache, appnNodeNnRouteAddResist, appnNodeNnIsr, appnNodeNnFrsn, appnNodeNnPeriBorderSup, appnNodeNnInterchangeSup, appnNodeNnExteBorderSup, appnNodeNnSafeStoreFreq, appnNodeNnRsn, appnNodeNnCongested, appnNodeNnIsrDepleted, appnNodeNnQuiescing, appnNodeNnGateway]

class appnEnUniqueConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 7])
	group = [appnNodeEnModeCosMap, appnNodeEnNnServer, appnNodeEnLuSearch]

class appnVrnConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 8])
	group = [appnVrnPortName]

class appnNnTopoConfGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 9])
	group = [appnNnTopoMaxNodes, appnNnTopoCurNumNodes, appnNnTopoNodePurges, appnNnTopoTgPurges, appnNnTopoTotalTduWars, appnNnNodeFREntryTimeLeft, appnNnNodeFRType, appnNnNodeFRRsn, appnNnNodeFRRouteAddResist, appnNnNodeFRCongested, appnNnNodeFRIsrDepleted, appnNnNodeFRQuiescing, appnNnNodeFRGateway, appnNnNodeFRCentralDirectory, appnNnNodeFRIsr, appnNnNodeFRGarbageCollect, appnNnNodeFRHprSupport, appnNnNodeFRPeriBorderSup, appnNnNodeFRInterchangeSup, appnNnNodeFRExteBorderSup, appnNnTgFREntryTimeLeft, appnNnTgFRDestVirtual, appnNnTgFRDlcData, appnNnTgFRRsn, appnNnTgFROperational, appnNnTgFRQuiescing, appnNnTgFRCpCpSession, appnNnTgFREffCap, appnNnTgFRConnCost, appnNnTgFRByteCost, appnNnTgFRSecurity, appnNnTgFRDelay, appnNnTgFRUsr1, appnNnTgFRUsr2, appnNnTgFRUsr3, appnNnTgFRGarbageCollect, appnNnTgFRSubareaNum, appnNnTgFRHprSup, appnNnTgFRDestHprTrans, appnNnTgFRTypeIndicator, appnNnTgFRIntersubnet]

class appnLocalEnTopoConfGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 10])
	group = [appnLocalEnTgEntryTimeLeft, appnLocalEnTgDestVirtual, appnLocalEnTgDlcData, appnLocalEnTgOperational, appnLocalEnTgCpCpSession, appnLocalEnTgEffCap, appnLocalEnTgConnCost, appnLocalEnTgByteCost, appnLocalEnTgSecurity, appnLocalEnTgDelay, appnLocalEnTgUsr1, appnLocalEnTgUsr2, appnLocalEnTgUsr3]

class appnLocalDirPerfConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 11])
	group = [appnDirMaxCaches, appnDirCurCaches, appnDirCurHomeEntries, appnDirRegEntries, appnDirInLocates, appnDirInBcastLocates, appnDirOutLocates, appnDirOutBcastLocates, appnDirNotFoundLocates, appnDirNotFoundBcastLocates, appnDirLocateOutstands]

class appnCosConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 12])
	group = [appnCosModeCosName, appnCosTransPriority, appnCosNodeRowWgt, appnCosNodeRowResistMin, appnCosNodeRowResistMax, appnCosNodeRowMinCongestAllow, appnCosNodeRowMaxCongestAllow, appnCosTgRowWgt, appnCosTgRowEffCapMin, appnCosTgRowEffCapMax, appnCosTgRowConnCostMin, appnCosTgRowConnCostMax, appnCosTgRowByteCostMin, appnCosTgRowByteCostMax, appnCosTgRowSecurityMin, appnCosTgRowSecurityMax, appnCosTgRowDelayMin, appnCosTgRowDelayMax, appnCosTgRowUsr1Min, appnCosTgRowUsr1Max, appnCosTgRowUsr2Min, appnCosTgRowUsr2Max, appnCosTgRowUsr3Min, appnCosTgRowUsr3Max]

class appnIntSessConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 13])
	group = [appnIsInGlobeCtrAdminStatus, appnIsInGlobeCtrOperStatus, appnIsInGlobeCtrStatusTime, appnIsInGlobeRscv, appnIsInGlobeRscvTime, appnIsInGlobeActSess, appnIsInSessState, appnIsInPriLuName, appnIsInSecLuName, appnIsInModeName, appnIsInCosName, appnIsInTransPriority, appnIsInSessType, appnIsInSessUpTime, appnIsInCtrUpTime, appnIsInP2SFmdPius, appnIsInS2PFmdPius, appnIsInP2SNonFmdPius, appnIsInS2PNonFmdPius, appnIsInP2SFmdBytes, appnIsInS2PFmdBytes, appnIsInP2SNonFmdBytes, appnIsInS2PNonFmdBytes, appnIsInPsAdjCpName, appnIsInPsAdjTgNum, appnIsInPsSendMaxBtuSize, appnIsInPsSendPacingType, appnIsInPsSendRpc, appnIsInPsSendNxWndwSize, appnIsInPsRecvPacingType, appnIsInPsRecvRpc, appnIsInPsRecvNxWndwSize, appnIsInSsAdjCpName, appnIsInSsAdjTgNum, appnIsInSsSendMaxBtuSize, appnIsInSsSendPacingType, appnIsInSsSendRpc, appnIsInSsSendNxWndwSize, appnIsInSsRecvPacingType, appnIsInSsRecvRpc, appnIsInSsRecvNxWndwSize, appnIsInRouteInfo]

class appnHprBaseConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 14])
	group = [appnNodeHprIntRteSetups, appnNodeHprIntRteRejects, appnLsErrRecoSup, appnLsForAnrLabel, appnLsRevAnrLabel]

class appnHprRtpConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 15])
	group = [appnNodeMaxSessPerRtpConn, appnNodeHprOrgRteSetups, appnNodeHprOrgRteRejects, appnNodeHprEndRteSetups, appnNodeHprEndRteRejects, appnLsBfNceId]

class appnHprCtrlFlowsRtpConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 16])
	group = [appnLsCpCpNceId, appnLsRouteNceId]

class appnHprBfConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 17])
	group = [appnIsInGlobeHprBfActSess, appnIsInRtpNceId, appnIsInRtpTcid, appnIsRtpSessions]

class appnTrapConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 18])
	group = [alertIdNumber, affectedObject]

class appnTrapNotifGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 19])
	group = [alertTrap]

class appnBrNnConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 20])
	group = [appnNodeEnNnServer, appnNodeEnLuSearch, appnLocalTgBranchLinkType]

class appnGeneralConfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 26])
	group = [appnNodeCpName, appnNodeId, appnNodeType, appnNodeUpTime, appnNodeParallelTg, appnNodeAdaptiveBindPacing, appnNodeHprSupport, appnNodeCounterDisconTime, appnNodeLsCounterType, appnNodeBrNn]

class appnLinkConfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 27])
	group = [appnLsCommand, appnLsOperState, appnLsPortName, appnLsDlcType, appnLsDynamic, appnLsAdjCpName, appnLsAdjNodeType, appnLsTgNum, appnLsLimResource, appnLsActOnDemand, appnLsMigration, appnLsPartnerNodeId, appnLsCpCpSessionSupport, appnLsMaxSendBtuSize, appnLsInXidBytes, appnLsInMsgBytes, appnLsInXidFrames, appnLsInMsgFrames, appnLsOutXidBytes, appnLsOutMsgBytes, appnLsOutXidFrames, appnLsOutMsgFrames, appnLsEchoRsps, appnLsCurrentDelay, appnLsMaxDelay, appnLsMinDelay, appnLsMaxDelayTime, appnLsGoodXids, appnLsBadXids, appnLsSpecific, appnLsActiveTime, appnLsCurrentStateTime, appnLsHprSup, appnLsLocalAddr, appnLsRemoteAddr, appnLsRemoteLsName, appnLsStatusTime, appnLsStatusLsName, appnLsStatusCpName, appnLsStatusPartnerId, appnLsStatusTgNum, appnLsStatusGeneralSense, appnLsStatusRetry, appnLsStatusEndSense, appnLsStatusXidLocalSense, appnLsStatusXidRemoteSense, appnLsStatusXidByteInError, appnLsStatusXidBitInError, appnLsStatusDlcType, appnLsStatusLocalAddr, appnLsStatusRemoteAddr, appnLsCounterDisconTime, appnLsMltgMember]

class appnLocalTgConfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 28])
	group = [appnLocalTgDestVirtual, appnLocalTgDlcData, appnLocalTgPortName, appnLocalTgQuiescing, appnLocalTgOperational, appnLocalTgCpCpSession, appnLocalTgEffCap, appnLocalTgConnCost, appnLocalTgByteCost, appnLocalTgSecurity, appnLocalTgDelay, appnLocalTgUsr1, appnLocalTgUsr2, appnLocalTgUsr3, appnLocalTgHprSup, appnLocalTgIntersubnet, appnLocalTgMltgLinkType]

class appnDirTableConfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 29])
	group = [appnDirNnServerName, appnDirLuOwnerName, appnDirLuLocation, appnDirType, appnDirApparentLuOwnerName]

class appnNnTopoConfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 30])
	group = [appnNnTopoMaxNodes, appnNnTopoCurNumNodes, appnNnTopoNodePurges, appnNnTopoTgPurges, appnNnTopoTotalTduWars, appnNnNodeFREntryTimeLeft, appnNnNodeFRType, appnNnNodeFRRsn, appnNnNodeFRRouteAddResist, appnNnNodeFRCongested, appnNnNodeFRIsrDepleted, appnNnNodeFRQuiescing, appnNnNodeFRGateway, appnNnNodeFRCentralDirectory, appnNnNodeFRIsr, appnNnNodeFRGarbageCollect, appnNnNodeFRHprSupport, appnNnNodeFRPeriBorderSup, appnNnNodeFRInterchangeSup, appnNnNodeFRExteBorderSup, appnNnNodeFRBranchAwareness, appnNnTgFREntryTimeLeft, appnNnTgFRDestVirtual, appnNnTgFRDlcData, appnNnTgFRRsn, appnNnTgFROperational, appnNnTgFRQuiescing, appnNnTgFRCpCpSession, appnNnTgFREffCap, appnNnTgFRConnCost, appnNnTgFRByteCost, appnNnTgFRSecurity, appnNnTgFRDelay, appnNnTgFRUsr1, appnNnTgFRUsr2, appnNnTgFRUsr3, appnNnTgFRGarbageCollect, appnNnTgFRSubareaNum, appnNnTgFRHprSup, appnNnTgFRDestHprTrans, appnNnTgFRTypeIndicator, appnNnTgFRIntersubnet, appnNnTgFRMltgLinkType, appnNnTgFRBranchTg]

class appnLocalEnTopoConfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 31])
	group = [appnLocalEnTgEntryTimeLeft, appnLocalEnTgDestVirtual, appnLocalEnTgDlcData, appnLocalEnTgOperational, appnLocalEnTgCpCpSession, appnLocalEnTgEffCap, appnLocalEnTgConnCost, appnLocalEnTgByteCost, appnLocalEnTgSecurity, appnLocalEnTgDelay, appnLocalEnTgUsr1, appnLocalEnTgUsr2, appnLocalEnTgUsr3, appnLocalEnTgMltgLinkType]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
