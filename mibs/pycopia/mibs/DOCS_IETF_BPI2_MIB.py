# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE
from IF_MIB import ifIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, Counter32, mib_2
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from SNMPv2_TC import TEXTUAL_CONVENTION, MacAddress, RowStatus, TruthValue, DateAndTime, StorageType

class DOCS_IETF_BPI2_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DOCS-IETF-BPI2-MIB'
	conformance = 132
	name = 'DOCS-IETF-BPI2-MIB'
	language = 2
	description = 'This is the MIB module for the DOCSIS Baseline\nPrivacy Plus Interface (BPI+) at cable modems (CMs)\nand cable modem termination systems (CMTSs).\n\nCopyright (C) The Internet Society (2005).  This\n\n\n\nversion of this MIB module is part of RFC 4131; see\nthe RFC itself for full legal notices.'

# nodes
class docsBpi2MIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126])
	name = 'docsBpi2MIB'

class docsBpi2Notification(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 0])
	name = 'docsBpi2Notification'

class docsBpi2MIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1])
	name = 'docsBpi2MIBObjects'

class docsBpi2CmObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1])
	name = 'docsBpi2CmObjects'

class docsBpi2CmMulticastObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3])
	name = 'docsBpi2CmMulticastObjects'

class docsBpi2CmCertObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 4])
	name = 'docsBpi2CmCertObjects'

class docsBpi2CmtsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2])
	name = 'docsBpi2CmtsObjects'

class docsBpi2CmtsMulticastObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4])
	name = 'docsBpi2CmtsMulticastObjects'

class docsBpi2CmtsCertObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5])
	name = 'docsBpi2CmtsCertObjects'

class docsBpi2CodeDownloadControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4])
	name = 'docsBpi2CodeDownloadControl'

class docsBpi2Conformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 2])
	name = 'docsBpi2Conformance'

class docsBpi2Compliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 2, 1])
	name = 'docsBpi2Compliances'

class docsBpi2Groups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 2, 2])
	name = 'docsBpi2Groups'


# macros
# types 

class DocsX509ASN1DEREncodedCertificate(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 4096))


class DocsSAId(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 16383))
	format = 'd'


class DocsSAIdOrZero(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 16383))
	format = 'd'


class DocsBpkmSAType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'none'), Enum(1, 'primary'), Enum(2, 'static'), Enum(3, 'dynamic')]


class DocsBpkmDataEncryptAlg(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'none'), Enum(1, 'des56CbcMode'), Enum(2, 'des40CbcMode'), Enum(3, 't3Des128CbcMode'), Enum(4, 'aes128CbcMode'), Enum(5, 'aes256CbcMode')]


class DocsBpkmDataAuthentAlg(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'none'), Enum(1, 'hmacSha196')]

# scalars 
class docsBpi2CodeDownloadStatusCode(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'configFileCvcVerified'), Enum(2, 'configFileCvcRejected'), Enum(3, 'snmpCvcVerified'), Enum(4, 'snmpCvcRejected'), Enum(5, 'codeFileVerified'), Enum(6, 'codeFileRejected'), Enum(7, 'other')]


class docsBpi2CodeDownloadStatusString(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 2])
	syntaxobject = SnmpAdminString


class docsBpi2CodeMfgOrgName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 3])
	syntaxobject = SnmpAdminString


class docsBpi2CodeMfgCodeAccessStart(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CodeMfgCvcAccessStart(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CodeCoSignerOrgName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 6])
	syntaxobject = SnmpAdminString


class docsBpi2CodeCoSignerCodeAccessStart(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CodeCoSignerCvcAccessStart(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CodeCvcUpdate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 4, 9])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


# columns
class docsBpi2CmPrivacyEnable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpi2CmPublicKey(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsBpi2CmAuthState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'start'), Enum(2, 'authWait'), Enum(3, 'authorized'), Enum(4, 'reauthWait'), Enum(5, 'authRejectWait'), Enum(6, 'silent')]


class docsBpi2CmAuthKeySequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpi2CmAuthExpiresOld(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmAuthExpiresNew(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmAuthReset(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpi2CmAuthGraceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmTEKGraceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmAuthWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmReauthWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmOpWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmRekeyWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmAuthRejectWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmSAMapWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpi2CmSAMapMaxRetries(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'count'


class docsBpi2CmAuthentInfos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmAuthRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmAuthReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmAuthRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmAuthInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmAuthRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(4, 'unauthorizedSaid'), Enum(8, 'permanentAuthorizationFailure'), Enum(11, 'timeOfDayNotAcquired')]


class docsBpi2CmAuthRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 23])
	syntaxobject = SnmpAdminString


class docsBpi2CmAuthInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(5, 'unsolicited'), Enum(6, 'invalidKeySequence'), Enum(7, 'keyRequestAuthenticationFailure')]


class docsBpi2CmAuthInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1, 25])
	syntaxobject = SnmpAdminString


class docsBpi2CmTEKSAId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 1])
	syntaxobject = DocsSAId


class docsBpi2CmTEKSAType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 2])
	syntaxobject = DocsBpkmSAType


class docsBpi2CmTEKDataEncryptAlg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 3])
	syntaxobject = DocsBpkmDataEncryptAlg


class docsBpi2CmTEKDataAuthentAlg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 4])
	syntaxobject = DocsBpkmDataAuthentAlg


class docsBpi2CmTEKState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'start'), Enum(2, 'opWait'), Enum(3, 'opReauthWait'), Enum(4, 'operational'), Enum(5, 'rekeyWait'), Enum(6, 'rekeyReauthWait')]


class docsBpi2CmTEKKeySequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpi2CmTEKExpiresOld(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmTEKExpiresNew(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmTEKKeyRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmTEKKeyReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmTEKKeyRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmTEKInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmTEKAuthPends(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmTEKKeyRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(4, 'unauthorizedSaid')]


class docsBpi2CmTEKKeyRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 15])
	syntaxobject = SnmpAdminString


class docsBpi2CmTEKInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(6, 'invalidKeySequence')]


class docsBpi2CmTEKInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1, 17])
	syntaxobject = SnmpAdminString


class docsBpi2CmIpMulticastIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsBpi2CmIpMulticastAddressType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 2])
	syntaxobject = InetAddressType


class docsBpi2CmIpMulticastAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 3])
	syntaxobject = InetAddress


class docsBpi2CmIpMulticastSAId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 4])
	syntaxobject = DocsSAIdOrZero


class docsBpi2CmIpMulticastSAMapState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'start'), Enum(2, 'mapWait'), Enum(3, 'mapped')]


class docsBpi2CmIpMulticastSAMapRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmIpMulticastSAMapReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmIpMulticastSAMapRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmIpMulticastSAMapRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(9, 'noAuthForRequestedDSFlow'), Enum(10, 'dsFlowNotMappedToSA')]


class docsBpi2CmIpMulticastSAMapRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1, 10])
	syntaxobject = SnmpAdminString


class docsBpi2CmDeviceCmCert(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 4, 1, 1, 1])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class docsBpi2CmDeviceManufCert(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 4, 1, 1, 2])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class docsBpi2CmCryptoSuiteIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsBpi2CmCryptoSuiteDataEncryptAlg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 5, 1, 2])
	syntaxobject = DocsBpkmDataEncryptAlg


class docsBpi2CmCryptoSuiteDataAuthentAlg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 5, 1, 3])
	syntaxobject = DocsBpkmDataAuthentAlg


class docsBpi2CmtsDefaultAuthLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpi2CmtsDefaultTEKLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpi2CmtsDefaultSelfSignedManufCertTrust(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trusted'), Enum(2, 'untrusted')]


class docsBpi2CmtsCheckCertValidityPeriods(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpi2CmtsAuthentInfos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsSAMapRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsSAMapReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsSAMapRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthCmMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsBpi2CmtsAuthCmBpiVersion(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'bpi'), Enum(1, 'bpiPlus')]


class docsBpi2CmtsAuthCmPublicKey(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsBpi2CmtsAuthCmKeySequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpi2CmtsAuthCmExpiresOld(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmtsAuthCmExpiresNew(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmtsAuthCmLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpi2CmtsAuthCmReset(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noResetRequested'), Enum(2, 'invalidateAuth'), Enum(3, 'sendAuthInvalid'), Enum(4, 'invalidateTeks')]


class docsBpi2CmtsAuthCmInfos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthCmRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthCmReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthCmRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthCmInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsAuthRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(4, 'unauthorizedSaid'), Enum(8, 'permanentAuthorizationFailure'), Enum(11, 'timeOfDayNotAcquired')]


class docsBpi2CmtsAuthRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 15])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsAuthInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(5, 'unsolicited'), Enum(6, 'invalidKeySequence'), Enum(7, 'keyRequestAuthenticationFailure')]


class docsBpi2CmtsAuthInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 17])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsAuthPrimarySAId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 18])
	syntaxobject = DocsSAIdOrZero


class docsBpi2CmtsAuthBpkmCmCertValid(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'unknown'), Enum(1, 'validCmChained'), Enum(2, 'validCmTrusted'), Enum(3, 'invalidCmUntrusted'), Enum(4, 'invalidCAUntrusted'), Enum(5, 'invalidCmOther'), Enum(6, 'invalidCAOther')]


class docsBpi2CmtsAuthBpkmCmCert(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 20])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class docsBpi2CmtsAuthCACertIndexPtr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsBpi2CmtsTEKSAId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 1])
	syntaxobject = DocsSAId


class docsBpi2CmtsTEKSAType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 2])
	syntaxobject = DocsBpkmSAType


class docsBpi2CmtsTEKDataEncryptAlg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 3])
	syntaxobject = DocsBpkmDataEncryptAlg


class docsBpi2CmtsTEKDataAuthentAlg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 4])
	syntaxobject = DocsBpkmDataAuthentAlg


class docsBpi2CmtsTEKLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpi2CmtsTEKKeySequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpi2CmtsTEKExpiresOld(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmtsTEKExpiresNew(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpi2CmtsTEKReset(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpi2CmtsKeyRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsKeyReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsKeyRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsTEKInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsKeyRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(4, 'unauthorizedSaid')]


class docsBpi2CmtsKeyRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 15])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsTEKInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(6, 'invalidKeySequence')]


class docsBpi2CmtsTEKInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1, 17])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsIpMulticastIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsBpi2CmtsIpMulticastAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 2])
	syntaxobject = InetAddressType


class docsBpi2CmtsIpMulticastAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 3])
	syntaxobject = InetAddress


class docsBpi2CmtsIpMulticastMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 4])
	syntaxobject = InetAddress


class docsBpi2CmtsIpMulticastSAId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 5])
	syntaxobject = DocsSAIdOrZero


class docsBpi2CmtsIpMulticastSAType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 6])
	syntaxobject = DocsBpkmSAType


class docsBpi2CmtsIpMulticastDataEncryptAlg(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 7])
	syntaxobject = DocsBpkmDataEncryptAlg


class docsBpi2CmtsIpMulticastDataAuthentAlg(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 8])
	syntaxobject = DocsBpkmDataAuthentAlg


class docsBpi2CmtsIpMulticastSAMapRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsIpMulticastSAMapReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsIpMulticastSAMapRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpi2CmtsIpMulticastSAMapRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(9, 'noAuthForRequestedDSFlow'), Enum(10, 'dsFlowNotMappedToSA')]


class docsBpi2CmtsIpMulticastSAMapRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 13])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsIpMulticastMapControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsBpi2CmtsIpMulticastMapStorageType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class docsBpi2CmtsMulticastAuthSAId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 2, 1, 1])
	syntaxobject = DocsSAId


class docsBpi2CmtsMulticastAuthCmMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsBpi2CmtsMulticastAuthControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsBpi2CmtsProvisionedCmCertMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsBpi2CmtsProvisionedCmCertTrust(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trusted'), Enum(2, 'untrusted')]


class docsBpi2CmtsProvisionedCmCertSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'snmp'), Enum(2, 'configurationFile'), Enum(3, 'externalDatabase'), Enum(4, 'other')]


class docsBpi2CmtsProvisionedCmCertStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsBpi2CmtsProvisionedCmCert(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 1, 1, 5])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class docsBpi2CmtsCACertIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsBpi2CmtsCACertSubject(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 2])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsCACertIssuer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 3])
	syntaxobject = SnmpAdminString


class docsBpi2CmtsCACertSerialNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsBpi2CmtsCACertTrust(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trusted'), Enum(2, 'untrusted'), Enum(3, 'chained'), Enum(4, 'root')]


class docsBpi2CmtsCACertSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'snmp'), Enum(2, 'configurationFile'), Enum(3, 'externalDatabase'), Enum(4, 'other'), Enum(5, 'authentInfo'), Enum(6, 'compiledIntoCode')]


class docsBpi2CmtsCACertStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsBpi2CmtsCACert(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 8])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class docsBpi2CmtsCACertThumbprint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


# rows 
class docsBpi2CmBaseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 1, 1])
	access = 2
	columns = {'docsBpi2CmPrivacyEnable': docsBpi2CmPrivacyEnable, 'docsBpi2CmPublicKey': docsBpi2CmPublicKey, 'docsBpi2CmAuthState': docsBpi2CmAuthState, 'docsBpi2CmAuthKeySequenceNumber': docsBpi2CmAuthKeySequenceNumber, 'docsBpi2CmAuthExpiresOld': docsBpi2CmAuthExpiresOld, 'docsBpi2CmAuthExpiresNew': docsBpi2CmAuthExpiresNew, 'docsBpi2CmAuthReset': docsBpi2CmAuthReset, 'docsBpi2CmAuthGraceTime': docsBpi2CmAuthGraceTime, 'docsBpi2CmTEKGraceTime': docsBpi2CmTEKGraceTime, 'docsBpi2CmAuthWaitTimeout': docsBpi2CmAuthWaitTimeout, 'docsBpi2CmReauthWaitTimeout': docsBpi2CmReauthWaitTimeout, 'docsBpi2CmOpWaitTimeout': docsBpi2CmOpWaitTimeout, 'docsBpi2CmRekeyWaitTimeout': docsBpi2CmRekeyWaitTimeout, 'docsBpi2CmAuthRejectWaitTimeout': docsBpi2CmAuthRejectWaitTimeout, 'docsBpi2CmSAMapWaitTimeout': docsBpi2CmSAMapWaitTimeout, 'docsBpi2CmSAMapMaxRetries': docsBpi2CmSAMapMaxRetries, 'docsBpi2CmAuthentInfos': docsBpi2CmAuthentInfos, 'docsBpi2CmAuthRequests': docsBpi2CmAuthRequests, 'docsBpi2CmAuthReplies': docsBpi2CmAuthReplies, 'docsBpi2CmAuthRejects': docsBpi2CmAuthRejects, 'docsBpi2CmAuthInvalids': docsBpi2CmAuthInvalids, 'docsBpi2CmAuthRejectErrorCode': docsBpi2CmAuthRejectErrorCode, 'docsBpi2CmAuthRejectErrorString': docsBpi2CmAuthRejectErrorString, 'docsBpi2CmAuthInvalidErrorCode': docsBpi2CmAuthInvalidErrorCode, 'docsBpi2CmAuthInvalidErrorString': docsBpi2CmAuthInvalidErrorString}


class docsBpi2CmTEKEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmTEKSAId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 2, 1])
	access = 2
	columns = {'docsBpi2CmTEKSAId': docsBpi2CmTEKSAId, 'docsBpi2CmTEKSAType': docsBpi2CmTEKSAType, 'docsBpi2CmTEKDataEncryptAlg': docsBpi2CmTEKDataEncryptAlg, 'docsBpi2CmTEKDataAuthentAlg': docsBpi2CmTEKDataAuthentAlg, 'docsBpi2CmTEKState': docsBpi2CmTEKState, 'docsBpi2CmTEKKeySequenceNumber': docsBpi2CmTEKKeySequenceNumber, 'docsBpi2CmTEKExpiresOld': docsBpi2CmTEKExpiresOld, 'docsBpi2CmTEKExpiresNew': docsBpi2CmTEKExpiresNew, 'docsBpi2CmTEKKeyRequests': docsBpi2CmTEKKeyRequests, 'docsBpi2CmTEKKeyReplies': docsBpi2CmTEKKeyReplies, 'docsBpi2CmTEKKeyRejects': docsBpi2CmTEKKeyRejects, 'docsBpi2CmTEKInvalids': docsBpi2CmTEKInvalids, 'docsBpi2CmTEKAuthPends': docsBpi2CmTEKAuthPends, 'docsBpi2CmTEKKeyRejectErrorCode': docsBpi2CmTEKKeyRejectErrorCode, 'docsBpi2CmTEKKeyRejectErrorString': docsBpi2CmTEKKeyRejectErrorString, 'docsBpi2CmTEKInvalidErrorCode': docsBpi2CmTEKInvalidErrorCode, 'docsBpi2CmTEKInvalidErrorString': docsBpi2CmTEKInvalidErrorString}


class docsBpi2CmIpMulticastMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmIpMulticastIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 3, 1, 1])
	access = 2
	columns = {'docsBpi2CmIpMulticastIndex': docsBpi2CmIpMulticastIndex, 'docsBpi2CmIpMulticastAddressType': docsBpi2CmIpMulticastAddressType, 'docsBpi2CmIpMulticastAddress': docsBpi2CmIpMulticastAddress, 'docsBpi2CmIpMulticastSAId': docsBpi2CmIpMulticastSAId, 'docsBpi2CmIpMulticastSAMapState': docsBpi2CmIpMulticastSAMapState, 'docsBpi2CmIpMulticastSAMapRequests': docsBpi2CmIpMulticastSAMapRequests, 'docsBpi2CmIpMulticastSAMapReplies': docsBpi2CmIpMulticastSAMapReplies, 'docsBpi2CmIpMulticastSAMapRejects': docsBpi2CmIpMulticastSAMapRejects, 'docsBpi2CmIpMulticastSAMapRejectErrorCode': docsBpi2CmIpMulticastSAMapRejectErrorCode, 'docsBpi2CmIpMulticastSAMapRejectErrorString': docsBpi2CmIpMulticastSAMapRejectErrorString}


class docsBpi2CmDeviceCertEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 4, 1, 1])
	access = 2
	columns = {'docsBpi2CmDeviceCmCert': docsBpi2CmDeviceCmCert, 'docsBpi2CmDeviceManufCert': docsBpi2CmDeviceManufCert}


class docsBpi2CmCryptoSuiteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmCryptoSuiteIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 1, 5, 1])
	access = 2
	columns = {'docsBpi2CmCryptoSuiteIndex': docsBpi2CmCryptoSuiteIndex, 'docsBpi2CmCryptoSuiteDataEncryptAlg': docsBpi2CmCryptoSuiteDataEncryptAlg, 'docsBpi2CmCryptoSuiteDataAuthentAlg': docsBpi2CmCryptoSuiteDataAuthentAlg}


class docsBpi2CmtsBaseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 1, 1])
	access = 2
	columns = {'docsBpi2CmtsDefaultAuthLifetime': docsBpi2CmtsDefaultAuthLifetime, 'docsBpi2CmtsDefaultTEKLifetime': docsBpi2CmtsDefaultTEKLifetime, 'docsBpi2CmtsDefaultSelfSignedManufCertTrust': docsBpi2CmtsDefaultSelfSignedManufCertTrust, 'docsBpi2CmtsCheckCertValidityPeriods': docsBpi2CmtsCheckCertValidityPeriods, 'docsBpi2CmtsAuthentInfos': docsBpi2CmtsAuthentInfos, 'docsBpi2CmtsAuthRequests': docsBpi2CmtsAuthRequests, 'docsBpi2CmtsAuthReplies': docsBpi2CmtsAuthReplies, 'docsBpi2CmtsAuthRejects': docsBpi2CmtsAuthRejects, 'docsBpi2CmtsAuthInvalids': docsBpi2CmtsAuthInvalids, 'docsBpi2CmtsSAMapRequests': docsBpi2CmtsSAMapRequests, 'docsBpi2CmtsSAMapReplies': docsBpi2CmtsSAMapReplies, 'docsBpi2CmtsSAMapRejects': docsBpi2CmtsSAMapRejects}


class docsBpi2CmtsAuthEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmtsAuthCmMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 2, 1])
	access = 2
	columns = {'docsBpi2CmtsAuthCmMacAddress': docsBpi2CmtsAuthCmMacAddress, 'docsBpi2CmtsAuthCmBpiVersion': docsBpi2CmtsAuthCmBpiVersion, 'docsBpi2CmtsAuthCmPublicKey': docsBpi2CmtsAuthCmPublicKey, 'docsBpi2CmtsAuthCmKeySequenceNumber': docsBpi2CmtsAuthCmKeySequenceNumber, 'docsBpi2CmtsAuthCmExpiresOld': docsBpi2CmtsAuthCmExpiresOld, 'docsBpi2CmtsAuthCmExpiresNew': docsBpi2CmtsAuthCmExpiresNew, 'docsBpi2CmtsAuthCmLifetime': docsBpi2CmtsAuthCmLifetime, 'docsBpi2CmtsAuthCmReset': docsBpi2CmtsAuthCmReset, 'docsBpi2CmtsAuthCmInfos': docsBpi2CmtsAuthCmInfos, 'docsBpi2CmtsAuthCmRequests': docsBpi2CmtsAuthCmRequests, 'docsBpi2CmtsAuthCmReplies': docsBpi2CmtsAuthCmReplies, 'docsBpi2CmtsAuthCmRejects': docsBpi2CmtsAuthCmRejects, 'docsBpi2CmtsAuthCmInvalids': docsBpi2CmtsAuthCmInvalids, 'docsBpi2CmtsAuthRejectErrorCode': docsBpi2CmtsAuthRejectErrorCode, 'docsBpi2CmtsAuthRejectErrorString': docsBpi2CmtsAuthRejectErrorString, 'docsBpi2CmtsAuthInvalidErrorCode': docsBpi2CmtsAuthInvalidErrorCode, 'docsBpi2CmtsAuthInvalidErrorString': docsBpi2CmtsAuthInvalidErrorString, 'docsBpi2CmtsAuthPrimarySAId': docsBpi2CmtsAuthPrimarySAId, 'docsBpi2CmtsAuthBpkmCmCertValid': docsBpi2CmtsAuthBpkmCmCertValid, 'docsBpi2CmtsAuthBpkmCmCert': docsBpi2CmtsAuthBpkmCmCert, 'docsBpi2CmtsAuthCACertIndexPtr': docsBpi2CmtsAuthCACertIndexPtr}


class docsBpi2CmtsTEKEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmtsTEKSAId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 3, 1])
	access = 2
	columns = {'docsBpi2CmtsTEKSAId': docsBpi2CmtsTEKSAId, 'docsBpi2CmtsTEKSAType': docsBpi2CmtsTEKSAType, 'docsBpi2CmtsTEKDataEncryptAlg': docsBpi2CmtsTEKDataEncryptAlg, 'docsBpi2CmtsTEKDataAuthentAlg': docsBpi2CmtsTEKDataAuthentAlg, 'docsBpi2CmtsTEKLifetime': docsBpi2CmtsTEKLifetime, 'docsBpi2CmtsTEKKeySequenceNumber': docsBpi2CmtsTEKKeySequenceNumber, 'docsBpi2CmtsTEKExpiresOld': docsBpi2CmtsTEKExpiresOld, 'docsBpi2CmtsTEKExpiresNew': docsBpi2CmtsTEKExpiresNew, 'docsBpi2CmtsTEKReset': docsBpi2CmtsTEKReset, 'docsBpi2CmtsKeyRequests': docsBpi2CmtsKeyRequests, 'docsBpi2CmtsKeyReplies': docsBpi2CmtsKeyReplies, 'docsBpi2CmtsKeyRejects': docsBpi2CmtsKeyRejects, 'docsBpi2CmtsTEKInvalids': docsBpi2CmtsTEKInvalids, 'docsBpi2CmtsKeyRejectErrorCode': docsBpi2CmtsKeyRejectErrorCode, 'docsBpi2CmtsKeyRejectErrorString': docsBpi2CmtsKeyRejectErrorString, 'docsBpi2CmtsTEKInvalidErrorCode': docsBpi2CmtsTEKInvalidErrorCode, 'docsBpi2CmtsTEKInvalidErrorString': docsBpi2CmtsTEKInvalidErrorString}


class docsBpi2CmtsIpMulticastMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmtsIpMulticastIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 1, 1])
	access = 2
	rowstatus = docsBpi2CmtsIpMulticastMapControl
	columns = {'docsBpi2CmtsIpMulticastIndex': docsBpi2CmtsIpMulticastIndex, 'docsBpi2CmtsIpMulticastAddressType': docsBpi2CmtsIpMulticastAddressType, 'docsBpi2CmtsIpMulticastAddress': docsBpi2CmtsIpMulticastAddress, 'docsBpi2CmtsIpMulticastMask': docsBpi2CmtsIpMulticastMask, 'docsBpi2CmtsIpMulticastSAId': docsBpi2CmtsIpMulticastSAId, 'docsBpi2CmtsIpMulticastSAType': docsBpi2CmtsIpMulticastSAType, 'docsBpi2CmtsIpMulticastDataEncryptAlg': docsBpi2CmtsIpMulticastDataEncryptAlg, 'docsBpi2CmtsIpMulticastDataAuthentAlg': docsBpi2CmtsIpMulticastDataAuthentAlg, 'docsBpi2CmtsIpMulticastSAMapRequests': docsBpi2CmtsIpMulticastSAMapRequests, 'docsBpi2CmtsIpMulticastSAMapReplies': docsBpi2CmtsIpMulticastSAMapReplies, 'docsBpi2CmtsIpMulticastSAMapRejects': docsBpi2CmtsIpMulticastSAMapRejects, 'docsBpi2CmtsIpMulticastSAMapRejectErrorCode': docsBpi2CmtsIpMulticastSAMapRejectErrorCode, 'docsBpi2CmtsIpMulticastSAMapRejectErrorString': docsBpi2CmtsIpMulticastSAMapRejectErrorString, 'docsBpi2CmtsIpMulticastMapControl': docsBpi2CmtsIpMulticastMapControl, 'docsBpi2CmtsIpMulticastMapStorageType': docsBpi2CmtsIpMulticastMapStorageType}


class docsBpi2CmtsMulticastAuthEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpi2CmtsMulticastAuthSAId, docsBpi2CmtsMulticastAuthCmMacAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 4, 2, 1])
	access = 2
	rowstatus = docsBpi2CmtsMulticastAuthControl
	columns = {'docsBpi2CmtsMulticastAuthSAId': docsBpi2CmtsMulticastAuthSAId, 'docsBpi2CmtsMulticastAuthCmMacAddress': docsBpi2CmtsMulticastAuthCmMacAddress, 'docsBpi2CmtsMulticastAuthControl': docsBpi2CmtsMulticastAuthControl}


class docsBpi2CmtsProvisionedCmCertEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([docsBpi2CmtsProvisionedCmCertMacAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 1, 1])
	access = 2
	rowstatus = docsBpi2CmtsProvisionedCmCertStatus
	columns = {'docsBpi2CmtsProvisionedCmCertMacAddress': docsBpi2CmtsProvisionedCmCertMacAddress, 'docsBpi2CmtsProvisionedCmCertTrust': docsBpi2CmtsProvisionedCmCertTrust, 'docsBpi2CmtsProvisionedCmCertSource': docsBpi2CmtsProvisionedCmCertSource, 'docsBpi2CmtsProvisionedCmCertStatus': docsBpi2CmtsProvisionedCmCertStatus, 'docsBpi2CmtsProvisionedCmCert': docsBpi2CmtsProvisionedCmCert}


class docsBpi2CmtsCACertEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([docsBpi2CmtsCACertIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 1, 2, 5, 2, 1])
	access = 2
	rowstatus = docsBpi2CmtsCACertStatus
	columns = {'docsBpi2CmtsCACertIndex': docsBpi2CmtsCACertIndex, 'docsBpi2CmtsCACertSubject': docsBpi2CmtsCACertSubject, 'docsBpi2CmtsCACertIssuer': docsBpi2CmtsCACertIssuer, 'docsBpi2CmtsCACertSerialNumber': docsBpi2CmtsCACertSerialNumber, 'docsBpi2CmtsCACertTrust': docsBpi2CmtsCACertTrust, 'docsBpi2CmtsCACertSource': docsBpi2CmtsCACertSource, 'docsBpi2CmtsCACertStatus': docsBpi2CmtsCACertStatus, 'docsBpi2CmtsCACert': docsBpi2CmtsCACert, 'docsBpi2CmtsCACertThumbprint': docsBpi2CmtsCACertThumbprint}


# notifications (traps) 
# groups 
class docsBpi2CmGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 2, 2, 1])
	group = [docsBpi2CmPrivacyEnable, docsBpi2CmPublicKey, docsBpi2CmAuthState, docsBpi2CmAuthKeySequenceNumber, docsBpi2CmAuthExpiresOld, docsBpi2CmAuthExpiresNew, docsBpi2CmAuthReset, docsBpi2CmAuthGraceTime, docsBpi2CmTEKGraceTime, docsBpi2CmAuthWaitTimeout, docsBpi2CmReauthWaitTimeout, docsBpi2CmOpWaitTimeout, docsBpi2CmRekeyWaitTimeout, docsBpi2CmAuthRejectWaitTimeout, docsBpi2CmSAMapWaitTimeout, docsBpi2CmSAMapMaxRetries, docsBpi2CmAuthentInfos, docsBpi2CmAuthRequests, docsBpi2CmAuthReplies, docsBpi2CmAuthRejects, docsBpi2CmAuthInvalids, docsBpi2CmAuthRejectErrorCode, docsBpi2CmAuthRejectErrorString, docsBpi2CmAuthInvalidErrorCode, docsBpi2CmAuthInvalidErrorString, docsBpi2CmTEKSAType, docsBpi2CmTEKDataEncryptAlg, docsBpi2CmTEKDataAuthentAlg, docsBpi2CmTEKState, docsBpi2CmTEKKeySequenceNumber, docsBpi2CmTEKExpiresOld, docsBpi2CmTEKExpiresNew, docsBpi2CmTEKKeyRequests, docsBpi2CmTEKKeyReplies, docsBpi2CmTEKKeyRejects, docsBpi2CmTEKInvalids, docsBpi2CmTEKAuthPends, docsBpi2CmTEKKeyRejectErrorCode, docsBpi2CmTEKKeyRejectErrorString, docsBpi2CmTEKInvalidErrorCode, docsBpi2CmTEKInvalidErrorString, docsBpi2CmIpMulticastAddressType, docsBpi2CmIpMulticastAddress, docsBpi2CmIpMulticastSAId, docsBpi2CmIpMulticastSAMapState, docsBpi2CmIpMulticastSAMapRequests, docsBpi2CmIpMulticastSAMapReplies, docsBpi2CmIpMulticastSAMapRejects, docsBpi2CmIpMulticastSAMapRejectErrorCode, docsBpi2CmIpMulticastSAMapRejectErrorString, docsBpi2CmDeviceCmCert, docsBpi2CmDeviceManufCert, docsBpi2CmCryptoSuiteDataEncryptAlg, docsBpi2CmCryptoSuiteDataAuthentAlg]

class docsBpi2CmtsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 2, 2, 2])
	group = [docsBpi2CmtsDefaultAuthLifetime, docsBpi2CmtsDefaultTEKLifetime, docsBpi2CmtsDefaultSelfSignedManufCertTrust, docsBpi2CmtsCheckCertValidityPeriods, docsBpi2CmtsAuthentInfos, docsBpi2CmtsAuthRequests, docsBpi2CmtsAuthReplies, docsBpi2CmtsAuthRejects, docsBpi2CmtsAuthInvalids, docsBpi2CmtsSAMapRequests, docsBpi2CmtsSAMapReplies, docsBpi2CmtsSAMapRejects, docsBpi2CmtsAuthCmBpiVersion, docsBpi2CmtsAuthCmPublicKey, docsBpi2CmtsAuthCmKeySequenceNumber, docsBpi2CmtsAuthCmExpiresOld, docsBpi2CmtsAuthCmExpiresNew, docsBpi2CmtsAuthCmLifetime, docsBpi2CmtsAuthCmReset, docsBpi2CmtsAuthCmInfos, docsBpi2CmtsAuthCmRequests, docsBpi2CmtsAuthCmReplies, docsBpi2CmtsAuthCmRejects, docsBpi2CmtsAuthCmInvalids, docsBpi2CmtsAuthRejectErrorCode, docsBpi2CmtsAuthRejectErrorString, docsBpi2CmtsAuthInvalidErrorCode, docsBpi2CmtsAuthInvalidErrorString, docsBpi2CmtsAuthPrimarySAId, docsBpi2CmtsAuthBpkmCmCertValid, docsBpi2CmtsAuthBpkmCmCert, docsBpi2CmtsAuthCACertIndexPtr, docsBpi2CmtsTEKSAType, docsBpi2CmtsTEKDataEncryptAlg, docsBpi2CmtsTEKDataAuthentAlg, docsBpi2CmtsTEKLifetime, docsBpi2CmtsTEKKeySequenceNumber, docsBpi2CmtsTEKExpiresOld, docsBpi2CmtsTEKExpiresNew, docsBpi2CmtsTEKReset, docsBpi2CmtsKeyRequests, docsBpi2CmtsKeyReplies, docsBpi2CmtsKeyRejects, docsBpi2CmtsTEKInvalids, docsBpi2CmtsKeyRejectErrorCode, docsBpi2CmtsKeyRejectErrorString, docsBpi2CmtsTEKInvalidErrorCode, docsBpi2CmtsTEKInvalidErrorString, docsBpi2CmtsIpMulticastAddressType, docsBpi2CmtsIpMulticastAddress, docsBpi2CmtsIpMulticastMask, docsBpi2CmtsIpMulticastSAId, docsBpi2CmtsIpMulticastSAType, docsBpi2CmtsIpMulticastDataEncryptAlg, docsBpi2CmtsIpMulticastDataAuthentAlg, docsBpi2CmtsIpMulticastSAMapRequests, docsBpi2CmtsIpMulticastSAMapReplies, docsBpi2CmtsIpMulticastSAMapRejects, docsBpi2CmtsIpMulticastSAMapRejectErrorCode, docsBpi2CmtsIpMulticastSAMapRejectErrorString, docsBpi2CmtsIpMulticastMapControl, docsBpi2CmtsIpMulticastMapStorageType, docsBpi2CmtsMulticastAuthControl, docsBpi2CmtsProvisionedCmCertTrust, docsBpi2CmtsProvisionedCmCertSource, docsBpi2CmtsProvisionedCmCertStatus, docsBpi2CmtsProvisionedCmCert, docsBpi2CmtsCACertSubject, docsBpi2CmtsCACertIssuer, docsBpi2CmtsCACertSerialNumber, docsBpi2CmtsCACertTrust, docsBpi2CmtsCACertSource, docsBpi2CmtsCACertStatus, docsBpi2CmtsCACert, docsBpi2CmtsCACertThumbprint]

class docsBpi2CodeDownloadGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 126, 2, 2, 3])
	group = [docsBpi2CodeDownloadStatusCode, docsBpi2CodeDownloadStatusString, docsBpi2CodeMfgOrgName, docsBpi2CodeMfgCodeAccessStart, docsBpi2CodeMfgCvcAccessStart, docsBpi2CodeCoSignerOrgName, docsBpi2CodeCoSignerCodeAccessStart, docsBpi2CodeCoSignerCvcAccessStart, docsBpi2CodeCvcUpdate]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
