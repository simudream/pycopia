# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import OBJECT_TYPE, Counter32, Gauge32, MODULE_IDENTITY, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TimeStamp, TEXTUAL_CONVENTION
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class NETWORK_SERVICES_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/NETWORK-SERVICES-MIB'
	conformance = 5
	name = 'NETWORK-SERVICES-MIB'
	language = 2
	description = 'The MIB module describing network service applications'

# nodes
class application(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27])
	name = 'application'

class applConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3])
	name = 'applConformance'

class applGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3, 1])
	name = 'applGroups'

class applCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3, 2])
	name = 'applCompliances'

class applTCPProtoID(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 4])
	name = 'applTCPProtoID'

class applUDPProtoID(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 5])
	name = 'applUDPProtoID'


# macros
# types 

class DistinguishedName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))
	format = '255a'


class URLString(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))
	format = '255a'

# scalars 
# columns
class applIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class applName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 2])
	syntaxobject = SnmpAdminString


class applDirectoryName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 3])
	syntaxobject = DistinguishedName


class applVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 4])
	syntaxobject = SnmpAdminString


class applUptime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class applOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'halted'), Enum(4, 'congested'), Enum(5, 'restarting'), Enum(6, 'quiescing')]


class applLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class applInboundAssociations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class applOutboundAssociations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class applAccumulatedInboundAssociations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class applAccumulatedOutboundAssociations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class applLastInboundActivity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class applLastOutboundActivity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class applRejectedInboundAssociations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class applFailedOutboundAssociations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class applDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 16])
	syntaxobject = SnmpAdminString


class applURL(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1, 17])
	syntaxobject = URLString


class assocIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class assocRemoteApplication(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 2, 1, 2])
	syntaxobject = SnmpAdminString


class assocApplicationProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class assocApplicationType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'uainitiator'), Enum(2, 'uaresponder'), Enum(3, 'peerinitiator'), Enum(4, 'peerresponder')]


class assocDuration(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# rows 
class applEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 1, 1])
	access = 2
	columns = {'applIndex': applIndex, 'applName': applName, 'applDirectoryName': applDirectoryName, 'applVersion': applVersion, 'applUptime': applUptime, 'applOperStatus': applOperStatus, 'applLastChange': applLastChange, 'applInboundAssociations': applInboundAssociations, 'applOutboundAssociations': applOutboundAssociations, 'applAccumulatedInboundAssociations': applAccumulatedInboundAssociations, 'applAccumulatedOutboundAssociations': applAccumulatedOutboundAssociations, 'applLastInboundActivity': applLastInboundActivity, 'applLastOutboundActivity': applLastOutboundActivity, 'applRejectedInboundAssociations': applRejectedInboundAssociations, 'applFailedOutboundAssociations': applFailedOutboundAssociations, 'applDescription': applDescription, 'applURL': applURL}


class assocEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, assocIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 2, 1])
	access = 2
	columns = {'assocIndex': assocIndex, 'assocRemoteApplication': assocRemoteApplication, 'assocApplicationProtocol': assocApplicationProtocol, 'assocApplicationType': assocApplicationType, 'assocDuration': assocDuration}


# notifications (traps) 
# groups 
class applRFC2248Group(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3, 1, 3])
	group = [applName, applVersion, applUptime, applOperStatus, applLastChange, applInboundAssociations, applOutboundAssociations, applAccumulatedInboundAssociations, applAccumulatedOutboundAssociations, applLastInboundActivity, applLastOutboundActivity, applRejectedInboundAssociations, applFailedOutboundAssociations, applDescription, applURL]

class assocRFC2248Group(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3, 1, 4])
	group = [assocRemoteApplication, assocApplicationProtocol, assocApplicationType, assocDuration]

class applRFC2788Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3, 1, 5])
	group = [applName, applDirectoryName, applVersion, applUptime, applOperStatus, applLastChange, applInboundAssociations, applOutboundAssociations, applAccumulatedInboundAssociations, applAccumulatedOutboundAssociations, applLastInboundActivity, applLastOutboundActivity, applRejectedInboundAssociations, applFailedOutboundAssociations, applDescription, applURL]

class assocRFC2788Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 27, 3, 1, 6])
	group = [assocRemoteApplication, assocApplicationProtocol, assocApplicationType, assocDuration]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
