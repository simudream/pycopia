# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, mib_2, Integer32, Counter32, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, RowStatus, StorageType, TimeStamp
from IF_MIB import ifIndex
from IANA_ADDRESS_FAMILY_NUMBERS_MIB import AddressFamilyNumbers

class NHRP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/NHRP-MIB'
	conformance = 132
	name = 'NHRP-MIB'
	language = 2
	description = 'This MIB contains managed object definitions for the Next\nHop Resolution Procol, NHRP, as defined in RFC 2332 [17].'

# nodes
class nhrpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71])
	name = 'nhrpMIB'

class nhrpObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1])
	name = 'nhrpObjects'

class nhrpGeneralObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1])
	name = 'nhrpGeneralObjects'

class nhrpClientObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2])
	name = 'nhrpClientObjects'

class nhrpServerObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3])
	name = 'nhrpServerObjects'

class nhrpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 2])
	name = 'nhrpConformance'

class nhrpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 2, 1])
	name = 'nhrpCompliances'

class nhrpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 2, 2])
	name = 'nhrpGroups'


# macros
# types 

class NhrpGenAddr(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 64))

# scalars 
class nhrpNextIndex(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# columns
class nhrpCacheInternetworkAddrType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 1])
	syntaxobject = AddressFamilyNumbers


class nhrpCacheInternetworkAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 2])
	syntaxobject = NhrpGenAddr


class nhrpCacheIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpCachePrefixLength(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpCacheNextHopInternetworkAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 5])
	syntaxobject = NhrpGenAddr


class nhrpCacheNbmaAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 6])
	syntaxobject = AddressFamilyNumbers


class nhrpCacheNbmaAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 7])
	syntaxobject = NhrpGenAddr


class nhrpCacheNbmaSubaddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 8])
	syntaxobject = NhrpGenAddr


class nhrpCacheType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'register'), Enum(3, 'resolveAuthoritative'), Enum(4, 'resoveNonauthoritative'), Enum(5, 'transit'), Enum(6, 'administrativelyAdded'), Enum(7, 'atmarp'), Enum(8, 'scsp')]


class nhrpCacheState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'incomplete'), Enum(2, 'ackReply'), Enum(3, 'nakReply')]


class nhrpCacheHoldingTimeValid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class nhrpCacheHoldingTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class nhrpCacheNegotiatedMtu(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpCachePreference(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpCacheStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class nhrpCacheRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpPurgeIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpPurgeCacheIdentifier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpPurgePrefixLength(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpPurgeRequestID(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpPurgeReplyExpected(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class nhrpPurgeRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpClientIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpClientInternetworkAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 2])
	syntaxobject = AddressFamilyNumbers


class nhrpClientInternetworkAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 3])
	syntaxobject = NhrpGenAddr


class nhrpClientNbmaAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 4])
	syntaxobject = AddressFamilyNumbers


class nhrpClientNbmaAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 5])
	syntaxobject = NhrpGenAddr


class nhrpClientNbmaSubaddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 6])
	syntaxobject = NhrpGenAddr


class nhrpClientInitialRequestTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class nhrpClientRegistrationRequestRetries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpClientResolutionRequestRetries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpClientPurgeRequestRetries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpClientDefaultMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpClientHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class nhrpClientRequestID(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpClientStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class nhrpClientRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpClientRegIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpClientRegUniqueness(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'requestUnique'), Enum(2, 'requestNotUnique')]


class nhrpClientRegState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'registering'), Enum(3, 'ackRegisterReply'), Enum(4, 'nakRegisterReply')]


class nhrpClientRegRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpClientNhsIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpClientNhsInternetworkAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 2])
	syntaxobject = AddressFamilyNumbers


class nhrpClientNhsInternetworkAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 3])
	syntaxobject = NhrpGenAddr


class nhrpClientNhsNbmaAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 4])
	syntaxobject = AddressFamilyNumbers


class nhrpClientNhsNbmaAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 5])
	syntaxobject = NhrpGenAddr


class nhrpClientNhsNbmaSubaddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 6])
	syntaxobject = NhrpGenAddr


class nhrpClientNhsInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class nhrpClientNhsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpClientStatTxResolveReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxResolveReplyAck(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxResolveReplyNakProhibited(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxResolveReplyNakInsufResources(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxResolveReplyNakNoBinding(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxResolveReplyNakNotUnique(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatTxRegisterReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxRegisterAck(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxRegisterNakProhibited(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxRegisterNakInsufResources(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxRegisterNakAlreadyReg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxPurgeReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatTxPurgeReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxPurgeReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatTxPurgeReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatTxErrorIndication(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrUnrecognizedExtension(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrLoopDetected(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrProtoAddrUnreachable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrProtoError(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrSduSizeExceeded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrInvalidExtension(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrAuthenticationFailure(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatRxErrHopCountExceeded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpClientStatDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class nhrpServerIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpServerInternetworkAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 2])
	syntaxobject = AddressFamilyNumbers


class nhrpServerInternetworkAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 3])
	syntaxobject = NhrpGenAddr


class nhrpServerNbmaAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 4])
	syntaxobject = AddressFamilyNumbers


class nhrpServerNbmaAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 5])
	syntaxobject = NhrpGenAddr


class nhrpServerNbmaSubaddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 6])
	syntaxobject = NhrpGenAddr


class nhrpServerStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class nhrpServerRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpServerCacheAuthoritative(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class nhrpServerCacheUniqueness(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class nhrpServerNhcIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nhrpServerNhcPrefixLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nhrpServerNhcInternetworkAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 3])
	syntaxobject = AddressFamilyNumbers


class nhrpServerNhcInternetworkAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 4])
	syntaxobject = NhrpGenAddr


class nhrpServerNhcNbmaAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 5])
	syntaxobject = AddressFamilyNumbers


class nhrpServerNhcNbmaAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 6])
	syntaxobject = NhrpGenAddr


class nhrpServerNhcNbmaSubaddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 7])
	syntaxobject = NhrpGenAddr


class nhrpServerNhcInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class nhrpServerNhcRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nhrpServerStatRxResolveReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxResolveReplyAck(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxResolveReplyNakProhibited(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxResolveReplyNakInsufResources(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxResolveReplyNakNoBinding(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxResolveReplyNakNotUnique(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxRegisterReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxRegisterAck(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxRegisterNakProhibited(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxRegisterNakInsufResources(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxRegisterNakAlreadyReg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxPurgeReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxPurgeReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxPurgeReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxPurgeReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrUnrecognizedExtension(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrLoopDetected(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrProtoAddrUnreachable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrProtoError(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrSduSizeExceeded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrInvalidExtension(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrInvalidResReplyReceived(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrAuthenticationFailure(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatRxErrHopCountExceeded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrUnrecognizedExtension(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrLoopDetected(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrProtoAddrUnreachable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrProtoError(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrSduSizeExceeded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrInvalidExtension(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrAuthenticationFailure(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatTxErrHopCountExceeded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwResolveReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwResolveReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwRegisterReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwRegisterReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwPurgeReq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwPurgeReply(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatFwErrorIndication(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nhrpServerStatDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# rows 
class nhrpCacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpCacheInternetworkAddrType, nhrpCacheInternetworkAddr, ifIndex, nhrpCacheIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1])
	access = 2
	rowstatus = nhrpCacheRowStatus
	columns = {'nhrpCacheInternetworkAddrType': nhrpCacheInternetworkAddrType, 'nhrpCacheInternetworkAddr': nhrpCacheInternetworkAddr, 'nhrpCacheIndex': nhrpCacheIndex, 'nhrpCachePrefixLength': nhrpCachePrefixLength, 'nhrpCacheNextHopInternetworkAddr': nhrpCacheNextHopInternetworkAddr, 'nhrpCacheNbmaAddrType': nhrpCacheNbmaAddrType, 'nhrpCacheNbmaAddr': nhrpCacheNbmaAddr, 'nhrpCacheNbmaSubaddr': nhrpCacheNbmaSubaddr, 'nhrpCacheType': nhrpCacheType, 'nhrpCacheState': nhrpCacheState, 'nhrpCacheHoldingTimeValid': nhrpCacheHoldingTimeValid, 'nhrpCacheHoldingTime': nhrpCacheHoldingTime, 'nhrpCacheNegotiatedMtu': nhrpCacheNegotiatedMtu, 'nhrpCachePreference': nhrpCachePreference, 'nhrpCacheStorageType': nhrpCacheStorageType, 'nhrpCacheRowStatus': nhrpCacheRowStatus}


class nhrpPurgeReqEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpPurgeIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1])
	access = 2
	rowstatus = nhrpPurgeRowStatus
	columns = {'nhrpPurgeIndex': nhrpPurgeIndex, 'nhrpPurgeCacheIdentifier': nhrpPurgeCacheIdentifier, 'nhrpPurgePrefixLength': nhrpPurgePrefixLength, 'nhrpPurgeRequestID': nhrpPurgeRequestID, 'nhrpPurgeReplyExpected': nhrpPurgeReplyExpected, 'nhrpPurgeRowStatus': nhrpPurgeRowStatus}


class nhrpClientEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpClientIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1])
	access = 2
	rowstatus = nhrpClientRowStatus
	columns = {'nhrpClientIndex': nhrpClientIndex, 'nhrpClientInternetworkAddrType': nhrpClientInternetworkAddrType, 'nhrpClientInternetworkAddr': nhrpClientInternetworkAddr, 'nhrpClientNbmaAddrType': nhrpClientNbmaAddrType, 'nhrpClientNbmaAddr': nhrpClientNbmaAddr, 'nhrpClientNbmaSubaddr': nhrpClientNbmaSubaddr, 'nhrpClientInitialRequestTimeout': nhrpClientInitialRequestTimeout, 'nhrpClientRegistrationRequestRetries': nhrpClientRegistrationRequestRetries, 'nhrpClientResolutionRequestRetries': nhrpClientResolutionRequestRetries, 'nhrpClientPurgeRequestRetries': nhrpClientPurgeRequestRetries, 'nhrpClientDefaultMtu': nhrpClientDefaultMtu, 'nhrpClientHoldTime': nhrpClientHoldTime, 'nhrpClientRequestID': nhrpClientRequestID, 'nhrpClientStorageType': nhrpClientStorageType, 'nhrpClientRowStatus': nhrpClientRowStatus}


class nhrpClientRegistrationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpClientIndex, nhrpClientRegIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1])
	access = 2
	rowstatus = nhrpClientRegRowStatus
	columns = {'nhrpClientRegIndex': nhrpClientRegIndex, 'nhrpClientRegUniqueness': nhrpClientRegUniqueness, 'nhrpClientRegState': nhrpClientRegState, 'nhrpClientRegRowStatus': nhrpClientRegRowStatus}


class nhrpClientNhsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpClientIndex, nhrpClientNhsIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1])
	access = 2
	rowstatus = nhrpClientNhsRowStatus
	columns = {'nhrpClientNhsIndex': nhrpClientNhsIndex, 'nhrpClientNhsInternetworkAddrType': nhrpClientNhsInternetworkAddrType, 'nhrpClientNhsInternetworkAddr': nhrpClientNhsInternetworkAddr, 'nhrpClientNhsNbmaAddrType': nhrpClientNhsNbmaAddrType, 'nhrpClientNhsNbmaAddr': nhrpClientNhsNbmaAddr, 'nhrpClientNhsNbmaSubaddr': nhrpClientNhsNbmaSubaddr, 'nhrpClientNhsInUse': nhrpClientNhsInUse, 'nhrpClientNhsRowStatus': nhrpClientNhsRowStatus}


class nhrpClientStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpClientIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1])
	access = 2
	columns = {'nhrpClientStatTxResolveReq': nhrpClientStatTxResolveReq, 'nhrpClientStatRxResolveReplyAck': nhrpClientStatRxResolveReplyAck, 'nhrpClientStatRxResolveReplyNakProhibited': nhrpClientStatRxResolveReplyNakProhibited, 'nhrpClientStatRxResolveReplyNakInsufResources': nhrpClientStatRxResolveReplyNakInsufResources, 'nhrpClientStatRxResolveReplyNakNoBinding': nhrpClientStatRxResolveReplyNakNoBinding, 'nhrpClientStatRxResolveReplyNakNotUnique': nhrpClientStatRxResolveReplyNakNotUnique, 'nhrpClientStatTxRegisterReq': nhrpClientStatTxRegisterReq, 'nhrpClientStatRxRegisterAck': nhrpClientStatRxRegisterAck, 'nhrpClientStatRxRegisterNakProhibited': nhrpClientStatRxRegisterNakProhibited, 'nhrpClientStatRxRegisterNakInsufResources': nhrpClientStatRxRegisterNakInsufResources, 'nhrpClientStatRxRegisterNakAlreadyReg': nhrpClientStatRxRegisterNakAlreadyReg, 'nhrpClientStatRxPurgeReq': nhrpClientStatRxPurgeReq, 'nhrpClientStatTxPurgeReq': nhrpClientStatTxPurgeReq, 'nhrpClientStatRxPurgeReply': nhrpClientStatRxPurgeReply, 'nhrpClientStatTxPurgeReply': nhrpClientStatTxPurgeReply, 'nhrpClientStatTxErrorIndication': nhrpClientStatTxErrorIndication, 'nhrpClientStatRxErrUnrecognizedExtension': nhrpClientStatRxErrUnrecognizedExtension, 'nhrpClientStatRxErrLoopDetected': nhrpClientStatRxErrLoopDetected, 'nhrpClientStatRxErrProtoAddrUnreachable': nhrpClientStatRxErrProtoAddrUnreachable, 'nhrpClientStatRxErrProtoError': nhrpClientStatRxErrProtoError, 'nhrpClientStatRxErrSduSizeExceeded': nhrpClientStatRxErrSduSizeExceeded, 'nhrpClientStatRxErrInvalidExtension': nhrpClientStatRxErrInvalidExtension, 'nhrpClientStatRxErrAuthenticationFailure': nhrpClientStatRxErrAuthenticationFailure, 'nhrpClientStatRxErrHopCountExceeded': nhrpClientStatRxErrHopCountExceeded, 'nhrpClientStatDiscontinuityTime': nhrpClientStatDiscontinuityTime}


class nhrpServerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpServerIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1])
	access = 2
	rowstatus = nhrpServerRowStatus
	columns = {'nhrpServerIndex': nhrpServerIndex, 'nhrpServerInternetworkAddrType': nhrpServerInternetworkAddrType, 'nhrpServerInternetworkAddr': nhrpServerInternetworkAddr, 'nhrpServerNbmaAddrType': nhrpServerNbmaAddrType, 'nhrpServerNbmaAddr': nhrpServerNbmaAddr, 'nhrpServerNbmaSubaddr': nhrpServerNbmaSubaddr, 'nhrpServerStorageType': nhrpServerStorageType, 'nhrpServerRowStatus': nhrpServerRowStatus}


class nhrpServerCacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpCacheInternetworkAddrType, nhrpCacheInternetworkAddr, ifIndex, nhrpCacheIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 2, 1])
	access = 2
	columns = {'nhrpServerCacheAuthoritative': nhrpServerCacheAuthoritative, 'nhrpServerCacheUniqueness': nhrpServerCacheUniqueness}


class nhrpServerNhcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpServerIndex, nhrpServerNhcIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1])
	access = 2
	rowstatus = nhrpServerNhcRowStatus
	columns = {'nhrpServerNhcIndex': nhrpServerNhcIndex, 'nhrpServerNhcPrefixLength': nhrpServerNhcPrefixLength, 'nhrpServerNhcInternetworkAddrType': nhrpServerNhcInternetworkAddrType, 'nhrpServerNhcInternetworkAddr': nhrpServerNhcInternetworkAddr, 'nhrpServerNhcNbmaAddrType': nhrpServerNhcNbmaAddrType, 'nhrpServerNhcNbmaAddr': nhrpServerNhcNbmaAddr, 'nhrpServerNhcNbmaSubaddr': nhrpServerNhcNbmaSubaddr, 'nhrpServerNhcInUse': nhrpServerNhcInUse, 'nhrpServerNhcRowStatus': nhrpServerNhcRowStatus}


class nhrpServerStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nhrpServerIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1])
	access = 2
	columns = {'nhrpServerStatRxResolveReq': nhrpServerStatRxResolveReq, 'nhrpServerStatTxResolveReplyAck': nhrpServerStatTxResolveReplyAck, 'nhrpServerStatTxResolveReplyNakProhibited': nhrpServerStatTxResolveReplyNakProhibited, 'nhrpServerStatTxResolveReplyNakInsufResources': nhrpServerStatTxResolveReplyNakInsufResources, 'nhrpServerStatTxResolveReplyNakNoBinding': nhrpServerStatTxResolveReplyNakNoBinding, 'nhrpServerStatTxResolveReplyNakNotUnique': nhrpServerStatTxResolveReplyNakNotUnique, 'nhrpServerStatRxRegisterReq': nhrpServerStatRxRegisterReq, 'nhrpServerStatTxRegisterAck': nhrpServerStatTxRegisterAck, 'nhrpServerStatTxRegisterNakProhibited': nhrpServerStatTxRegisterNakProhibited, 'nhrpServerStatTxRegisterNakInsufResources': nhrpServerStatTxRegisterNakInsufResources, 'nhrpServerStatTxRegisterNakAlreadyReg': nhrpServerStatTxRegisterNakAlreadyReg, 'nhrpServerStatRxPurgeReq': nhrpServerStatRxPurgeReq, 'nhrpServerStatTxPurgeReq': nhrpServerStatTxPurgeReq, 'nhrpServerStatRxPurgeReply': nhrpServerStatRxPurgeReply, 'nhrpServerStatTxPurgeReply': nhrpServerStatTxPurgeReply, 'nhrpServerStatRxErrUnrecognizedExtension': nhrpServerStatRxErrUnrecognizedExtension, 'nhrpServerStatRxErrLoopDetected': nhrpServerStatRxErrLoopDetected, 'nhrpServerStatRxErrProtoAddrUnreachable': nhrpServerStatRxErrProtoAddrUnreachable, 'nhrpServerStatRxErrProtoError': nhrpServerStatRxErrProtoError, 'nhrpServerStatRxErrSduSizeExceeded': nhrpServerStatRxErrSduSizeExceeded, 'nhrpServerStatRxErrInvalidExtension': nhrpServerStatRxErrInvalidExtension, 'nhrpServerStatRxErrInvalidResReplyReceived': nhrpServerStatRxErrInvalidResReplyReceived, 'nhrpServerStatRxErrAuthenticationFailure': nhrpServerStatRxErrAuthenticationFailure, 'nhrpServerStatRxErrHopCountExceeded': nhrpServerStatRxErrHopCountExceeded, 'nhrpServerStatTxErrUnrecognizedExtension': nhrpServerStatTxErrUnrecognizedExtension, 'nhrpServerStatTxErrLoopDetected': nhrpServerStatTxErrLoopDetected, 'nhrpServerStatTxErrProtoAddrUnreachable': nhrpServerStatTxErrProtoAddrUnreachable, 'nhrpServerStatTxErrProtoError': nhrpServerStatTxErrProtoError, 'nhrpServerStatTxErrSduSizeExceeded': nhrpServerStatTxErrSduSizeExceeded, 'nhrpServerStatTxErrInvalidExtension': nhrpServerStatTxErrInvalidExtension, 'nhrpServerStatTxErrAuthenticationFailure': nhrpServerStatTxErrAuthenticationFailure, 'nhrpServerStatTxErrHopCountExceeded': nhrpServerStatTxErrHopCountExceeded, 'nhrpServerStatFwResolveReq': nhrpServerStatFwResolveReq, 'nhrpServerStatFwResolveReply': nhrpServerStatFwResolveReply, 'nhrpServerStatFwRegisterReq': nhrpServerStatFwRegisterReq, 'nhrpServerStatFwRegisterReply': nhrpServerStatFwRegisterReply, 'nhrpServerStatFwPurgeReq': nhrpServerStatFwPurgeReq, 'nhrpServerStatFwPurgeReply': nhrpServerStatFwPurgeReply, 'nhrpServerStatFwErrorIndication': nhrpServerStatFwErrorIndication, 'nhrpServerStatDiscontinuityTime': nhrpServerStatDiscontinuityTime}


# notifications (traps) 
# groups 
class nhrpGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 2, 2, 1])
	group = [nhrpNextIndex, nhrpCachePrefixLength, nhrpCacheNextHopInternetworkAddr, nhrpCacheNbmaAddrType, nhrpCacheNbmaAddr, nhrpCacheNbmaSubaddr, nhrpCacheType, nhrpCacheState, nhrpCacheHoldingTimeValid, nhrpCacheHoldingTime, nhrpCacheNegotiatedMtu, nhrpCachePreference, nhrpCacheStorageType, nhrpCacheRowStatus, nhrpPurgeCacheIdentifier, nhrpPurgePrefixLength, nhrpPurgeRequestID, nhrpPurgeReplyExpected, nhrpPurgeRowStatus]

class nhrpClientGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 2, 2, 2])
	group = [nhrpClientInternetworkAddrType, nhrpClientInternetworkAddr, nhrpClientNbmaAddrType, nhrpClientNbmaAddr, nhrpClientNbmaSubaddr, nhrpClientInitialRequestTimeout, nhrpClientRegistrationRequestRetries, nhrpClientResolutionRequestRetries, nhrpClientPurgeRequestRetries, nhrpClientDefaultMtu, nhrpClientHoldTime, nhrpClientRequestID, nhrpClientStorageType, nhrpClientRowStatus, nhrpClientRegUniqueness, nhrpClientRegState, nhrpClientRegRowStatus, nhrpClientNhsInternetworkAddrType, nhrpClientNhsInternetworkAddr, nhrpClientNhsNbmaAddrType, nhrpClientNhsNbmaAddr, nhrpClientNhsNbmaSubaddr, nhrpClientNhsInUse, nhrpClientNhsRowStatus, nhrpClientStatTxResolveReq, nhrpClientStatRxResolveReplyAck, nhrpClientStatRxResolveReplyNakProhibited, nhrpClientStatRxResolveReplyNakInsufResources, nhrpClientStatRxResolveReplyNakNoBinding, nhrpClientStatRxResolveReplyNakNotUnique, nhrpClientStatTxRegisterReq, nhrpClientStatRxRegisterAck, nhrpClientStatRxRegisterNakProhibited, nhrpClientStatRxRegisterNakInsufResources, nhrpClientStatRxRegisterNakAlreadyReg, nhrpClientStatRxPurgeReq, nhrpClientStatTxPurgeReq, nhrpClientStatRxPurgeReply, nhrpClientStatTxPurgeReply, nhrpClientStatTxErrorIndication, nhrpClientStatRxErrUnrecognizedExtension, nhrpClientStatRxErrLoopDetected, nhrpClientStatRxErrProtoAddrUnreachable, nhrpClientStatRxErrProtoError, nhrpClientStatRxErrSduSizeExceeded, nhrpClientStatRxErrInvalidExtension, nhrpClientStatRxErrAuthenticationFailure, nhrpClientStatRxErrHopCountExceeded, nhrpClientStatDiscontinuityTime]

class nhrpServerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 71, 2, 2, 3])
	group = [nhrpServerInternetworkAddrType, nhrpServerInternetworkAddr, nhrpServerNbmaAddrType, nhrpServerNbmaAddr, nhrpServerNbmaSubaddr, nhrpServerStorageType, nhrpServerRowStatus, nhrpServerCacheAuthoritative, nhrpServerCacheUniqueness, nhrpServerNhcPrefixLength, nhrpServerNhcInternetworkAddrType, nhrpServerNhcInternetworkAddr, nhrpServerNhcNbmaAddrType, nhrpServerNhcNbmaAddr, nhrpServerNhcNbmaSubaddr, nhrpServerNhcInUse, nhrpServerNhcRowStatus, nhrpServerStatRxResolveReq, nhrpServerStatTxResolveReplyAck, nhrpServerStatTxResolveReplyNakProhibited, nhrpServerStatTxResolveReplyNakInsufResources, nhrpServerStatTxResolveReplyNakNoBinding, nhrpServerStatTxResolveReplyNakNotUnique, nhrpServerStatRxRegisterReq, nhrpServerStatTxRegisterAck, nhrpServerStatTxRegisterNakProhibited, nhrpServerStatTxRegisterNakInsufResources, nhrpServerStatTxRegisterNakAlreadyReg, nhrpServerStatRxPurgeReq, nhrpServerStatTxPurgeReq, nhrpServerStatRxPurgeReply, nhrpServerStatTxPurgeReply, nhrpServerStatRxErrUnrecognizedExtension, nhrpServerStatRxErrLoopDetected, nhrpServerStatRxErrProtoAddrUnreachable, nhrpServerStatRxErrProtoError, nhrpServerStatRxErrSduSizeExceeded, nhrpServerStatRxErrInvalidExtension, nhrpServerStatRxErrInvalidResReplyReceived, nhrpServerStatRxErrAuthenticationFailure, nhrpServerStatRxErrHopCountExceeded, nhrpServerStatTxErrUnrecognizedExtension, nhrpServerStatTxErrLoopDetected, nhrpServerStatTxErrProtoAddrUnreachable, nhrpServerStatTxErrProtoError, nhrpServerStatTxErrSduSizeExceeded, nhrpServerStatTxErrInvalidExtension, nhrpServerStatTxErrAuthenticationFailure, nhrpServerStatTxErrHopCountExceeded, nhrpServerStatFwResolveReq, nhrpServerStatFwResolveReply, nhrpServerStatFwRegisterReq, nhrpServerStatFwRegisterReply, nhrpServerStatFwPurgeReq, nhrpServerStatFwPurgeReply, nhrpServerStatFwErrorIndication, nhrpServerStatDiscontinuityTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
