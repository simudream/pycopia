# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, transmission
from SNMPv2_TC import TimeInterval, DisplayString

class COFFEE_POT_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/COFFEE-POT-MIB'
	conformance = 3
	name = 'COFFEE-POT-MIB'
	language = 2
	description = 'The MIB Module for coffee vending devices.'

# nodes
class coffee(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132])
	name = 'coffee'

class potMonitor(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6])
	name = 'potMonitor'


# macros
# types 
# scalars 
class potName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class potCapacity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class potType(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'automatic-drip'), Enum(2, 'percolator'), Enum(3, 'french-press'), Enum(4, 'espresso')]


class potLocation(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class potOperStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'brewing'), Enum(3, 'holding'), Enum(4, 'other'), Enum(5, 'waiting')]


class potLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class potMetric(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'espresso'), Enum(2, 'demi-tasse'), Enum(3, 'cup'), Enum(4, 'mug'), Enum(5, 'bucket')]


class potStartTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lastStartTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class potTemperature(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 132, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'degrees Centigrade'


# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
