# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_IDENTITY, TimeTicks, mib_2
from SNMPv2_TC import TEXTUAL_CONVENTION

class ATM_TC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ATM-TC-MIB'
	conformance = 3
	name = 'ATM-TC-MIB'
	language = 2
	description = 'This MIB Module provides Textual Conventions\nand OBJECT-IDENTITY Objects to be used by\nATM systems.'

# nodes
class atmTrafficDescriptorTypes(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1])
	name = 'atmTrafficDescriptorTypes'

class atmNoTrafficDescriptor(NodeObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 1])
	name = 'atmNoTrafficDescriptor'

class atmNoClpNoScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 2])
	name = 'atmNoClpNoScr'

class atmClpNoTaggingNoScr(NodeObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 3])
	name = 'atmClpNoTaggingNoScr'

class atmClpTaggingNoScr(NodeObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 4])
	name = 'atmClpTaggingNoScr'

class atmNoClpScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 5])
	name = 'atmNoClpScr'

class atmClpNoTaggingScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 6])
	name = 'atmClpNoTaggingScr'

class atmClpTaggingScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 7])
	name = 'atmClpTaggingScr'

class atmClpNoTaggingMcr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 8])
	name = 'atmClpNoTaggingMcr'

class atmClpTransparentNoScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 9])
	name = 'atmClpTransparentNoScr'

class atmClpTransparentScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 10])
	name = 'atmClpTransparentScr'

class atmNoClpTaggingNoScr(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 11])
	name = 'atmNoClpTaggingNoScr'

class atmNoClpNoScrCdvt(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 12])
	name = 'atmNoClpNoScrCdvt'

class atmNoClpScrCdvt(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 13])
	name = 'atmNoClpScrCdvt'

class atmClpNoTaggingScrCdvt(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 14])
	name = 'atmClpNoTaggingScrCdvt'

class atmClpTaggingScrCdvt(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 1, 15])
	name = 'atmClpTaggingScrCdvt'

class atmTCMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 3])
	name = 'atmTCMIB'

class atmObjectIdentities(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 3, 1])
	name = 'atmObjectIdentities'


# macros
# types 

class AtmAddr(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 40))
	format = '1x'


class AtmConnCastType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'p2p'), Enum(2, 'p2mpRoot'), Enum(3, 'p2mpLeaf')]


class AtmConnKind(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svcIncoming'), Enum(3, 'svcOutgoing'), Enum(4, 'spvcInitiator'), Enum(5, 'spvcTarget')]


class AtmIlmiNetworkPrefix(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8), Range(13, 13))


class AtmInterfaceType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'autoConfig'), Enum(3, 'ituDss2'), Enum(4, 'atmfUni3Dot0'), Enum(5, 'atmfUni3Dot1'), Enum(6, 'atmfUni4Dot0'), Enum(7, 'atmfIispUni3Dot0'), Enum(8, 'atmfIispUni3Dot1'), Enum(9, 'atmfIispUni4Dot0'), Enum(10, 'atmfPnni1Dot0'), Enum(11, 'atmfBici2Dot0'), Enum(12, 'atmfUniPvcOnly'), Enum(13, 'atmfNniPvcOnly')]


class AtmServiceCategory(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'cbr'), Enum(3, 'rtVbr'), Enum(4, 'nrtVbr'), Enum(5, 'abr'), Enum(6, 'ubr')]


class AtmSigDescrParamIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))


class AtmTrafficDescrParamIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))


class AtmVcIdentifier(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 65535))


class AtmVpIdentifier(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 4095))


class AtmVorXAdminStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class AtmVorXLastChange(pycopia.SMI.Basetypes.TimeTicks):
	status = 1


class AtmVorXOperStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'unknown')]

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
