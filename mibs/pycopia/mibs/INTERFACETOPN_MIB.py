# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Gauge32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import RowStatus, TimeStamp, TruthValue
from HCNUM_TC import CounterBasedGauge64
from RMON_MIB import rmon, OwnerString

class INTERFACETOPN_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/INTERFACETOPN-MIB'
	conformance = 3
	name = 'INTERFACETOPN-MIB'
	language = 2
	description = 'The MIB module for sorting device interfaces for RMON and\nSMON monitoring in a multiple device implementation.'

# nodes
class interfaceTopNMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27])
	name = 'interfaceTopNMIB'

class interfaceTopNObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1])
	name = 'interfaceTopNObjects'

class interfaceTopNNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 2])
	name = 'interfaceTopNNotifications'

class interfaceTopNConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 3])
	name = 'interfaceTopNConformance'

class interfaceTopNCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 3, 1])
	name = 'interfaceTopNCompliances'

class interfaceTopNGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 3, 2])
	name = 'interfaceTopNGroups'


# macros
# types 
# scalars 
class interfaceTopNCaps(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


# columns
class interfaceTopNControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNObjectVariable(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'ifInOctets'), Enum(1, 'ifInUcastPkts'), Enum(2, 'ifInNUcastPkts'), Enum(3, 'ifInDiscards'), Enum(4, 'ifInErrors'), Enum(5, 'ifInUnknownProtos'), Enum(6, 'ifOutOctets'), Enum(7, 'ifOutUcastPkts'), Enum(8, 'ifOutNUcastPkts'), Enum(9, 'ifOutDiscards'), Enum(10, 'ifOutErrors'), Enum(11, 'ifInMulticastPkts'), Enum(12, 'ifInBroadcastPkts'), Enum(13, 'ifOutMulticastPkts'), Enum(14, 'ifOutBroadcastPkts'), Enum(15, 'ifHCInOctets'), Enum(16, 'ifHCInUcastPkts'), Enum(17, 'ifHCInMulticastPkts'), Enum(18, 'ifHCInBroadcastPkts'), Enum(19, 'ifHCOutOctets'), Enum(20, 'ifHCOutUcastPkts'), Enum(21, 'ifHCOutMulticastPkts'), Enum(22, 'ifHCOutBroadcastPkts'), Enum(23, 'dot3StatsAlignmentErrors'), Enum(24, 'dot3StatsFCSErrors'), Enum(25, 'dot3StatsSingleCollisionFrames'), Enum(26, 'dot3StatsMultipleCollisionFrames'), Enum(27, 'dot3StatsSQETestErrors'), Enum(28, 'dot3StatsDeferredTransmissions'), Enum(29, 'dot3StatsLateCollisions'), Enum(30, 'dot3StatsExcessiveCollisions'), Enum(31, 'dot3StatsInternalMacTxErrors'), Enum(32, 'dot3StatsCarrierSenseErrors'), Enum(33, 'dot3StatsFrameTooLongs'), Enum(34, 'dot3StatsInternalMacRxErrors'), Enum(35, 'dot3StatsSymbolErrors'), Enum(36, 'dot3InPauseFrames'), Enum(37, 'dot3OutPauseFrames'), Enum(38, 'dot5StatsLineErrors'), Enum(39, 'dot5StatsBurstErrors'), Enum(40, 'dot5StatsACErrors'), Enum(41, 'dot5StatsAbortTransErrors'), Enum(42, 'dot5StatsInternalErrors'), Enum(43, 'dot5StatsLostFrameErrors'), Enum(44, 'dot5StatsReceiveCongestions'), Enum(45, 'dot5StatsFrameCopiedErrors'), Enum(46, 'dot5StatsTokenErrors'), Enum(47, 'dot5StatsSoftErrors'), Enum(48, 'dot5StatsHardErrors'), Enum(49, 'dot5StatsSignalLoss'), Enum(50, 'dot5StatsTransmitBeacons'), Enum(51, 'dot5StatsRecoverys'), Enum(52, 'dot5StatsLobeWires'), Enum(53, 'dot5StatsRemoves'), Enum(54, 'dot5StatsSingles'), Enum(55, 'dot5StatsFreqErrors'), Enum(56, 'etherStatsDropEvents'), Enum(57, 'etherStatsOctets'), Enum(58, 'etherStatsPkts'), Enum(59, 'etherStatsBroadcastPkts'), Enum(60, 'etherStatsMulticastPkts'), Enum(61, 'etherStatsCRCAlignErrors'), Enum(62, 'etherStatsUndersizePkts'), Enum(63, 'etherStatsOversizePkts'), Enum(64, 'etherStatsFragments'), Enum(65, 'etherStatsJabbers'), Enum(66, 'etherStatsCollisions'), Enum(67, 'etherStatsPkts64Octets'), Enum(68, 'etherStatsPkts65to127Octets'), Enum(69, 'etherStatsPkts128to255Octets'), Enum(70, 'etherStatsPkts256to511Octets'), Enum(71, 'etherStatsPkts512to1023Octets'), Enum(72, 'etherStatsPkts1024to1518Octets'), Enum(73, 'dot1dTpPortInFrames'), Enum(74, 'dot1dTpPortOutFrames'), Enum(75, 'dot1dTpPortInDiscards')]


class interfaceTopNObjectSampleType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'absoluteValue'), Enum(2, 'deltaValue'), Enum(3, 'bandwidthPercentage')]


class interfaceTopNNormalizationReq(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class interfaceTopNNormalizationFactor(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNTimeRemaining(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNDuration(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNRequestedSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNGrantedSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class interfaceTopNOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 11])
	syntaxobject = OwnerString


class interfaceTopNLastCompletionTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class interfaceTopNRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class interfaceTopNIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNDataSourceIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class interfaceTopNValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class interfaceTopNValue64(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 3, 1, 4])
	syntaxobject = CounterBasedGauge64


# rows 
class interfaceTopNControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([interfaceTopNControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 2, 1])
	access = 2
	rowstatus = interfaceTopNRowStatus
	columns = {'interfaceTopNControlIndex': interfaceTopNControlIndex, 'interfaceTopNObjectVariable': interfaceTopNObjectVariable, 'interfaceTopNObjectSampleType': interfaceTopNObjectSampleType, 'interfaceTopNNormalizationReq': interfaceTopNNormalizationReq, 'interfaceTopNNormalizationFactor': interfaceTopNNormalizationFactor, 'interfaceTopNTimeRemaining': interfaceTopNTimeRemaining, 'interfaceTopNDuration': interfaceTopNDuration, 'interfaceTopNRequestedSize': interfaceTopNRequestedSize, 'interfaceTopNGrantedSize': interfaceTopNGrantedSize, 'interfaceTopNStartTime': interfaceTopNStartTime, 'interfaceTopNOwner': interfaceTopNOwner, 'interfaceTopNLastCompletionTime': interfaceTopNLastCompletionTime, 'interfaceTopNRowStatus': interfaceTopNRowStatus}


class interfaceTopNEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([interfaceTopNControlIndex, interfaceTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 1, 3, 1])
	access = 2
	columns = {'interfaceTopNIndex': interfaceTopNIndex, 'interfaceTopNDataSourceIndex': interfaceTopNDataSourceIndex, 'interfaceTopNValue': interfaceTopNValue, 'interfaceTopNValue64': interfaceTopNValue64}


# notifications (traps) 
# groups 
class interfaceTopNGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 27, 3, 2, 1])
	group = [interfaceTopNCaps, interfaceTopNObjectVariable, interfaceTopNObjectSampleType, interfaceTopNNormalizationReq, interfaceTopNNormalizationFactor, interfaceTopNTimeRemaining, interfaceTopNDuration, interfaceTopNRequestedSize, interfaceTopNGrantedSize, interfaceTopNStartTime, interfaceTopNOwner, interfaceTopNLastCompletionTime, interfaceTopNRowStatus, interfaceTopNDataSourceIndex, interfaceTopNValue, interfaceTopNValue64]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
