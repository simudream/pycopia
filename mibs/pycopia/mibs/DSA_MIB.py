# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from RFC1213_MIB import mib_2
from SNMPv2_TC import DisplayString, TimeStamp, TEXTUAL_CONVENTION
from NETWORK_SERVICES_MIB import applIndex, DistinguishedName

class DSA_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DSA-MIB'
	conformance = 2
	name = 'DSA-MIB'
	language = 2
	description = ' The MIB module for monitoring Directory System Agents.'

# nodes
class dsaMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29])
	name = 'dsaMIB'

class dsaConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 4])
	name = 'dsaConformance'

class dsaGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 4, 1])
	name = 'dsaGroups'

class dsaCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 4, 2])
	name = 'dsaCompliances'


# macros
# types 
# scalars 
# columns
class dsaAnonymousBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaUnauthBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaSimpleAuthBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaStrongAuthBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaBindSecurityErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaInOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaReadOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaCompareOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaAddEntryOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaRemoveEntryOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaModifyEntryOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaModifyRDNOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaListOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaSearchOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaOneLevelSearchOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaWholeTreeSearchOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaReferrals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaChainings(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaSecurityErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaMasterEntries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsaCopyEntries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsaCacheEntries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsaCacheHits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaSlaveHits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaIntIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsaName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 2])
	syntaxobject = DistinguishedName


class dsaTimeOfCreation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsaTimeOfLastAttempt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsaTimeOfLastSuccess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsaFailuresSinceLastSuccess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsaSuccesses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class dsaOpsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 1, 1])
	access = 2
	columns = {'dsaAnonymousBinds': dsaAnonymousBinds, 'dsaUnauthBinds': dsaUnauthBinds, 'dsaSimpleAuthBinds': dsaSimpleAuthBinds, 'dsaStrongAuthBinds': dsaStrongAuthBinds, 'dsaBindSecurityErrors': dsaBindSecurityErrors, 'dsaInOps': dsaInOps, 'dsaReadOps': dsaReadOps, 'dsaCompareOps': dsaCompareOps, 'dsaAddEntryOps': dsaAddEntryOps, 'dsaRemoveEntryOps': dsaRemoveEntryOps, 'dsaModifyEntryOps': dsaModifyEntryOps, 'dsaModifyRDNOps': dsaModifyRDNOps, 'dsaListOps': dsaListOps, 'dsaSearchOps': dsaSearchOps, 'dsaOneLevelSearchOps': dsaOneLevelSearchOps, 'dsaWholeTreeSearchOps': dsaWholeTreeSearchOps, 'dsaReferrals': dsaReferrals, 'dsaChainings': dsaChainings, 'dsaSecurityErrors': dsaSecurityErrors, 'dsaErrors': dsaErrors}


class dsaEntriesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 2, 1])
	access = 2
	columns = {'dsaMasterEntries': dsaMasterEntries, 'dsaCopyEntries': dsaCopyEntries, 'dsaCacheEntries': dsaCacheEntries, 'dsaCacheHits': dsaCacheHits, 'dsaSlaveHits': dsaSlaveHits}


class dsaIntEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, dsaIntIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 3, 1])
	access = 2
	columns = {'dsaIntIndex': dsaIntIndex, 'dsaName': dsaName, 'dsaTimeOfCreation': dsaTimeOfCreation, 'dsaTimeOfLastAttempt': dsaTimeOfLastAttempt, 'dsaTimeOfLastSuccess': dsaTimeOfLastSuccess, 'dsaFailuresSinceLastSuccess': dsaFailuresSinceLastSuccess, 'dsaFailures': dsaFailures, 'dsaSuccesses': dsaSuccesses}


# notifications (traps) 
# groups 
class dsaOpsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 4, 1, 1])
	group = [dsaAnonymousBinds, dsaUnauthBinds, dsaSimpleAuthBinds, dsaStrongAuthBinds, dsaBindSecurityErrors, dsaInOps, dsaReadOps, dsaCompareOps, dsaAddEntryOps, dsaRemoveEntryOps, dsaModifyEntryOps, dsaModifyRDNOps, dsaListOps, dsaSearchOps, dsaOneLevelSearchOps, dsaWholeTreeSearchOps, dsaReferrals, dsaChainings, dsaSecurityErrors, dsaErrors]

class dsaEntryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 4, 1, 2])
	group = [dsaMasterEntries, dsaCopyEntries, dsaCacheEntries, dsaCacheHits, dsaSlaveHits]

class dsaIntGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 29, 4, 1, 3])
	group = [dsaName, dsaTimeOfCreation, dsaTimeOfLastAttempt, dsaTimeOfLastSuccess, dsaFailuresSinceLastSuccess, dsaFailures, dsaSuccesses]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
