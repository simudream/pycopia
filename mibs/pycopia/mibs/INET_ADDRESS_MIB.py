# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, mib_2, Unsigned32
from SNMPv2_TC import TEXTUAL_CONVENTION

class INET_ADDRESS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/INET-ADDRESS-MIB'
	conformance = 5
	name = 'INET-ADDRESS-MIB'
	language = 2
	description = 'This MIB module defines textual conventions for\nrepresenting Internet addresses.  An Internet\naddress can be an IPv4 address, an IPv6 address,\nor a DNS domain name.  This module also defines\ntextual conventions for Internet port numbers,\nautonomous system numbers, and the length of an\nInternet address prefix.\n\nCopyright (C) The Internet Society (2005).  This version\nof this MIB module is part of RFC 4001, see the RFC\nitself for full legal notices.'

# nodes
class inetAddressMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 76])
	name = 'inetAddressMIB'


# macros
# types 

class InetAddressType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'unknown'), Enum(1, 'ipv4'), Enum(2, 'ipv6'), Enum(3, 'ipv4z'), Enum(4, 'ipv6z'), Enum(16, 'dns')]


class InetAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))


class InetAddressIPv4(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(4, 4))
	format = '1d.1d.1d.1d'


class InetAddressIPv6(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(16, 16))
	format = '2x:2x:2x:2x:2x:2x:2x:2x'


class InetAddressIPv4z(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8))
	format = '1d.1d.1d.1d%4d'


class InetAddressIPv6z(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(20, 20))
	format = '2x:2x:2x:2x:2x:2x:2x:2x%4d'


class InetAddressDNS(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 255))
	format = '255a'


class InetAddressPrefixLength(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 2040))
	format = 'd'


class InetPortNumber(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 65535))
	format = 'd'


class InetAutonomousSystemNumber(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	format = 'd'


class InetScopeType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'interfaceLocal'), Enum(2, 'linkLocal'), Enum(3, 'subnetLocal'), Enum(4, 'adminLocal'), Enum(5, 'siteLocal'), Enum(8, 'organizationLocal'), Enum(14, 'global')]


class InetZoneIndex(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	format = 'd'


class InetVersion(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'unknown'), Enum(1, 'ipv4'), Enum(2, 'ipv6')]

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
