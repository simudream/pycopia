# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_SMI import MODULE_IDENTITY, Counter32, Gauge32, OBJECT_TYPE
from RMON2_MIB import ZeroBasedCounter32
from NETWORK_SERVICES_MIB import applIndex, DistinguishedName, URLString
from RFC1213_MIB import mib_2
from SNMPv2_TC import DisplayString, TimeStamp

class DIRECTORY_SERVER_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DIRECTORY-SERVER-MIB'
	conformance = 5
	name = 'DIRECTORY-SERVER-MIB'
	language = 2
	description = ' The MIB module for monitoring Directory Services.'

# nodes
class dsMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66])
	name = 'dsMIB'

class dsConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 4])
	name = 'dsConformance'

class dsGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 4, 1])
	name = 'dsGroups'

class dsCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 4, 2])
	name = 'dsCompliances'


# macros
# types 
# scalars 
# columns
class dsServerType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class dsServerDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsMasterEntries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsCopyEntries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsCacheEntries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsCacheHits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsSlaveHits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfProtocolIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsApplIfProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class dsApplIfUnauthBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfSimpleAuthBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfStrongAuthBinds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfBindSecurityErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfInOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfReadOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfCompareOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfAddEntryOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfRemoveEntryOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfModifyEntryOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfModifyRDNOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfListOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfSearchOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfOneLevelSearchOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfWholeSubtreeSearchOps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfReferrals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfChainings(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfSecurityErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfReplicationUpdatesIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfReplicationUpdatesOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfInBytes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsApplIfOutBytes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dsIntEntIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsIntEntDirectoryName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 2])
	syntaxobject = DistinguishedName


class dsIntEntTimeOfCreation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsIntEntTimeOfLastAttempt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsIntEntTimeOfLastSuccess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsIntEntFailuresSinceLastSuccess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dsIntEntFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 7])
	syntaxobject = ZeroBasedCounter32


class dsIntEntSuccesses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 8])
	syntaxobject = ZeroBasedCounter32


class dsIntEntURL(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1, 9])
	syntaxobject = URLString


# rows 
class dsTableEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 1, 1])
	access = 2
	columns = {'dsServerType': dsServerType, 'dsServerDescription': dsServerDescription, 'dsMasterEntries': dsMasterEntries, 'dsCopyEntries': dsCopyEntries, 'dsCacheEntries': dsCacheEntries, 'dsCacheHits': dsCacheHits, 'dsSlaveHits': dsSlaveHits}


class dsApplIfOpsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, dsApplIfProtocolIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 2, 1])
	access = 2
	columns = {'dsApplIfProtocolIndex': dsApplIfProtocolIndex, 'dsApplIfProtocol': dsApplIfProtocol, 'dsApplIfUnauthBinds': dsApplIfUnauthBinds, 'dsApplIfSimpleAuthBinds': dsApplIfSimpleAuthBinds, 'dsApplIfStrongAuthBinds': dsApplIfStrongAuthBinds, 'dsApplIfBindSecurityErrors': dsApplIfBindSecurityErrors, 'dsApplIfInOps': dsApplIfInOps, 'dsApplIfReadOps': dsApplIfReadOps, 'dsApplIfCompareOps': dsApplIfCompareOps, 'dsApplIfAddEntryOps': dsApplIfAddEntryOps, 'dsApplIfRemoveEntryOps': dsApplIfRemoveEntryOps, 'dsApplIfModifyEntryOps': dsApplIfModifyEntryOps, 'dsApplIfModifyRDNOps': dsApplIfModifyRDNOps, 'dsApplIfListOps': dsApplIfListOps, 'dsApplIfSearchOps': dsApplIfSearchOps, 'dsApplIfOneLevelSearchOps': dsApplIfOneLevelSearchOps, 'dsApplIfWholeSubtreeSearchOps': dsApplIfWholeSubtreeSearchOps, 'dsApplIfReferrals': dsApplIfReferrals, 'dsApplIfChainings': dsApplIfChainings, 'dsApplIfSecurityErrors': dsApplIfSecurityErrors, 'dsApplIfErrors': dsApplIfErrors, 'dsApplIfReplicationUpdatesIn': dsApplIfReplicationUpdatesIn, 'dsApplIfReplicationUpdatesOut': dsApplIfReplicationUpdatesOut, 'dsApplIfInBytes': dsApplIfInBytes, 'dsApplIfOutBytes': dsApplIfOutBytes}


class dsIntEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, dsIntEntIndex, dsApplIfProtocolIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 3, 1])
	access = 2
	columns = {'dsIntEntIndex': dsIntEntIndex, 'dsIntEntDirectoryName': dsIntEntDirectoryName, 'dsIntEntTimeOfCreation': dsIntEntTimeOfCreation, 'dsIntEntTimeOfLastAttempt': dsIntEntTimeOfLastAttempt, 'dsIntEntTimeOfLastSuccess': dsIntEntTimeOfLastSuccess, 'dsIntEntFailuresSinceLastSuccess': dsIntEntFailuresSinceLastSuccess, 'dsIntEntFailures': dsIntEntFailures, 'dsIntEntSuccesses': dsIntEntSuccesses, 'dsIntEntURL': dsIntEntURL}


# notifications (traps) 
# groups 
class dsEntryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 4, 1, 1])
	group = [dsServerType, dsServerDescription, dsMasterEntries, dsCopyEntries, dsCacheEntries, dsCacheHits, dsSlaveHits]

class dsOpsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 4, 1, 2])
	group = [dsApplIfProtocolIndex, dsApplIfProtocol, dsApplIfUnauthBinds, dsApplIfSimpleAuthBinds, dsApplIfStrongAuthBinds, dsApplIfBindSecurityErrors, dsApplIfInOps, dsApplIfReadOps, dsApplIfCompareOps, dsApplIfAddEntryOps, dsApplIfRemoveEntryOps, dsApplIfModifyEntryOps, dsApplIfModifyRDNOps, dsApplIfListOps, dsApplIfSearchOps, dsApplIfOneLevelSearchOps, dsApplIfWholeSubtreeSearchOps, dsApplIfReferrals, dsApplIfChainings, dsApplIfSecurityErrors, dsApplIfErrors, dsApplIfReplicationUpdatesIn, dsApplIfReplicationUpdatesOut, dsApplIfInBytes, dsApplIfOutBytes]

class dsIntGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 66, 4, 1, 3])
	group = [dsIntEntDirectoryName, dsIntEntTimeOfCreation, dsIntEntTimeOfLastAttempt, dsIntEntTimeOfLastSuccess, dsIntEntFailuresSinceLastSuccess, dsIntEntFailures, dsIntEntSuccesses, dsIntEntURL]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
