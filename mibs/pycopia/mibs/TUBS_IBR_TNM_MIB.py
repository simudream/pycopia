# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32, Unsigned32
from TUBS_SMI import ibr
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, RowStatus, DateAndTime, TruthValue, TimeStamp, TAddress

class TUBS_IBR_TNM_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/tubs/TUBS-IBR-TNM-MIB'
	conformance = 4
	name = 'TUBS-IBR-TNM-MIB'
	language = 2
	description = 'Experimental MIB modules for tnm based agents.'

# nodes
class tnmMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1])
	name = 'tnmMIB'

class tnmStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1])
	name = 'tnmStatus'

class tnmDownload(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 2])
	name = 'tnmDownload'

class tnmPeers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3])
	name = 'tnmPeers'

class tnmElection(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 4])
	name = 'tnmElection'

class tnmEval(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5])
	name = 'tnmEval'


# macros
# types 

class URL(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))
	format = '255a'

# scalars 
class tnmVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmTclVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmTclCmdCount(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tnmDate(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class tnmTrapDst(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmTrapMsg(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmHttpProxy(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmHttpSource(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 2, 2])
	syntaxobject = URL


class tnmHttpError(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmElectionIndex(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class tnmElectionPanic(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tnmElectionMaster(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class tnmEvalSlot(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class tnmPeerTAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class tnmPeerAuth(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class tnmPeerState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class tnmPeerLastChecked(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class tnmPeerStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class tnmEvalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tnmEvalString(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmEvalValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tnmEvalStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class tnmPeerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tnmPeerTAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 3, 1, 1])
	access = 2
	rowstatus = tnmPeerStatus
	columns = {'tnmPeerTAddress': tnmPeerTAddress, 'tnmPeerAuth': tnmPeerAuth, 'tnmPeerState': tnmPeerState, 'tnmPeerLastChecked': tnmPeerLastChecked, 'tnmPeerStatus': tnmPeerStatus}


class tnmEvalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tnmEvalIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 1, 5, 2, 1])
	access = 2
	rowstatus = tnmEvalStatus
	columns = {'tnmEvalIndex': tnmEvalIndex, 'tnmEvalString': tnmEvalString, 'tnmEvalValue': tnmEvalValue, 'tnmEvalStatus': tnmEvalStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
