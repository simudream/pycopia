# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Gauge32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TruthValue, DisplayString
from IF_MIB import ifIndex

class CISCO_ATM_SWITCH_CUG_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-ATM-SWITCH-CUG-MIB'
	conformance = 1
	name = 'CISCO-ATM-SWITCH-CUG-MIB'
	language = 2
	description = 'This MIB module is for closed user group support (virtual private \nnetworks).'

# nodes
class csCugMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89])
	name = 'csCugMIB'

class csCugMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1])
	name = 'csCugMIBObjects'

class csCugMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 3])
	name = 'csCugMIBConformance'

class csCugMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 3, 1])
	name = 'csCugMIBCompliances'

class csCugMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 3, 2])
	name = 'csCugMIBGroups'


# macros
# types 

class CsCugInterlockCode(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(4, 4), Range(24, 24))

Unsigned32 = pycopia.SMI.Basetypes.Unsigned32
# scalars 
# columns
class csCugInterlockCode(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 1, 1, 1])
	syntaxobject = CsCugInterlockCode


class csCugInterlockCodeAliasName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class csCugInterlockCodeRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class csCugIfAccessEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class csCugIfPermitUnknownCugsToUser(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class csCugIfPermitUnknownCugsFromUser(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deny'), Enum(2, 'permitPerCall'), Enum(3, 'permitPermanently')]


class csCugIfRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class csCugIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class csCugPreferential(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class csCugDenySameGroupToUser(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class csCugDenySameGroupFromUser(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class csCugRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class csCugInterlockCodeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([csCugInterlockCode], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 1, 1])
	access = 2
	rowstatus = csCugInterlockCodeRowStatus
	columns = {'csCugInterlockCode': csCugInterlockCode, 'csCugInterlockCodeAliasName': csCugInterlockCodeAliasName, 'csCugInterlockCodeRowStatus': csCugInterlockCodeRowStatus}


class csCugIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 2, 1])
	access = 2
	rowstatus = csCugIfRowStatus
	columns = {'csCugIfAccessEnable': csCugIfAccessEnable, 'csCugIfPermitUnknownCugsToUser': csCugIfPermitUnknownCugsToUser, 'csCugIfPermitUnknownCugsFromUser': csCugIfPermitUnknownCugsFromUser, 'csCugIfRowStatus': csCugIfRowStatus}


class csCugEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, csCugInterlockCode], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 1, 3, 1])
	access = 2
	rowstatus = csCugRowStatus
	columns = {'csCugIndex': csCugIndex, 'csCugPreferential': csCugPreferential, 'csCugDenySameGroupToUser': csCugDenySameGroupToUser, 'csCugDenySameGroupFromUser': csCugDenySameGroupFromUser, 'csCugRowStatus': csCugRowStatus}


# notifications (traps) 
# groups 
class csCugMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 89, 3, 2, 1])
	group = [csCugInterlockCodeAliasName, csCugInterlockCodeRowStatus, csCugIfAccessEnable, csCugIfPermitUnknownCugsToUser, csCugIfPermitUnknownCugsFromUser, csCugIfRowStatus, csCugIndex, csCugPreferential, csCugDenySameGroupToUser, csCugDenySameGroupFromUser, csCugRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
