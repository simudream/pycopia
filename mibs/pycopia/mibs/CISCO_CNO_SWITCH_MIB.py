# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoExperiment
from SNMPv2_TC import DisplayString
from RFC1213_MIB import ifIndex

class CISCO_CNO_SWITCH_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-CNO-SWITCH-MIB'
	conformance = 2
	name = 'CISCO-CNO-SWITCH-MIB'
	language = 2
	description = 'The MIB module for the management of Cisco\nNetwork Office (CNO) switch products.'

# nodes
class ciscoCNOSwitchMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43])
	name = 'ciscoCNOSwitchMIB'

class ciscoCNOSwitchMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1])
	name = 'ciscoCNOSwitchMIBObjects'

class cnosSysInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1])
	name = 'cnosSysInfo'

class cnosSysConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2])
	name = 'cnosSysConfig'

class cnosPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3])
	name = 'cnosPort'

class cnosVlan(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4])
	name = 'cnosVlan'

class ciscoCNOSwitchNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 2])
	name = 'ciscoCNOSwitchNotifications'

class ciscoCNOSwitchNotificationsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 2, 0])
	name = 'ciscoCNOSwitchNotificationsPrefix'

class ciscoCNOSwitchMIBComformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3])
	name = 'ciscoCNOSwitchMIBComformance'

class ciscoCNOSwitchMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 1])
	name = 'ciscoCNOSwitchMIBCompliances'

class ciscoCNOSwitchMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2])
	name = 'ciscoCNOSwitchMIBGroups'


# macros
# types 
# scalars 
class cnosSysInfoSerialNo(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cnosSysInfoBoardRevision(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cnosSysInfoBootVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cnosSysInfoAddrCapacity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cnosSysConfigReset(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noReset'), Enum(2, 'reset')]


class cnosSysConfigDefaultReset(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noReset'), Enum(2, 'reset')]


class cnosSysConfigMonitor(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class cnosSysConfigMonitorPort(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class cnosPortControllerRevision(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cnosPortName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cnosPortDuplexAdmin(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fullDuplex'), Enum(2, 'halfDuplex'), Enum(3, 'autoNegotiate')]


class cnosPortDuplexStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fullDuplex'), Enum(2, 'halfDuplex')]


class cnosPortSpeedAdmin(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tenMbps'), Enum(2, 'oneHundredMbps'), Enum(3, 'autoNegotiate')]


class cnosPortSpeedStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tenMbps'), Enum(2, 'oneHundredMbps')]


class cnosPortMonitoring(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class cnosPortLinkStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'link'), Enum(2, 'noLink')]


class cnosPortSTPPortFastMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class cnosPortVlanMember(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'vlan1'), Enum(2, 'vlan2'), Enum(3, 'vlan3'), Enum(4, 'vlan4'), Enum(5, 'all')]


class cnosVlanIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cnosVlanSTPState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


# rows 
class cnosPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1])
	access = 2
	columns = {'cnosPortControllerRevision': cnosPortControllerRevision, 'cnosPortName': cnosPortName, 'cnosPortDuplexAdmin': cnosPortDuplexAdmin, 'cnosPortDuplexStatus': cnosPortDuplexStatus, 'cnosPortSpeedAdmin': cnosPortSpeedAdmin, 'cnosPortSpeedStatus': cnosPortSpeedStatus, 'cnosPortMonitoring': cnosPortMonitoring, 'cnosPortLinkStatus': cnosPortLinkStatus, 'cnosPortSTPPortFastMode': cnosPortSTPPortFastMode, 'cnosPortVlanMember': cnosPortVlanMember}


class cnosVlanEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cnosVlanIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1, 1])
	access = 2
	columns = {'cnosVlanIndex': cnosVlanIndex, 'cnosVlanSTPState': cnosVlanSTPState}


# notifications (traps) 
# groups 
class ciscoCNOSwitchSysInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 1])
	group = [cnosSysInfoSerialNo, cnosSysInfoBoardRevision, cnosSysInfoBootVersion, cnosSysInfoAddrCapacity]

class ciscoCNOSwitchConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 2])
	group = [cnosSysConfigReset, cnosSysConfigDefaultReset]

class ciscoCNOSwitchPortGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 3])
	group = [cnosPortName, cnosPortControllerRevision, cnosPortDuplexAdmin, cnosPortDuplexStatus, cnosPortSpeedAdmin, cnosPortSpeedStatus, cnosPortLinkStatus, cnosPortSTPPortFastMode]

class ciscoCNOSwitchMonitorPortGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 4])
	group = [cnosSysConfigMonitor, cnosSysConfigMonitorPort, cnosPortMonitoring]

class ciscoCNOSwitchVlanGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 5])
	group = [cnosPortVlanMember, cnosVlanSTPState]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
