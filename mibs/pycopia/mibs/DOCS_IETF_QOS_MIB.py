# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE
from IF_MIB import ifIndex, InterfaceIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Counter32, Unsigned32, Counter64, mib_2
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetPortNumber
from SNMPv2_TC import TEXTUAL_CONVENTION, MacAddress, RowStatus, TruthValue, TimeStamp, StorageType
from DIFFSERV_DSCP_TC import DscpOrAny

class DOCS_IETF_QOS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DOCS-IETF-QOS-MIB'
	conformance = 132
	name = 'DOCS-IETF-QOS-MIB'
	language = 2
	description = 'This is the management information for\nQuality Of Service (QOS) for DOCSIS 1.1 and 2.0.\n\n\n\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4323; see the RFC itself for\nfull legal notices.'

# nodes
class docsIetfQosMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127])
	name = 'docsIetfQosMIB'

class docsIetfQosNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 0])
	name = 'docsIetfQosNotifications'

class docsIetfQosMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1])
	name = 'docsIetfQosMIBObjects'

class docsIetfQosConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2])
	name = 'docsIetfQosConformance'

class docsIetfQosGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 1])
	name = 'docsIetfQosGroups'

class docsIetfQosCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 2])
	name = 'docsIetfQosCompliances'


# macros
# types 

class DocsIetfQosRfMacIfDirection(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'downstream'), Enum(2, 'upstream')]


class DocsIetfQosBitRate(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	format = 'd'


class DocsIetfQosSchedulingType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'undefined'), Enum(2, 'bestEffort'), Enum(3, 'nonRealTimePollingService'), Enum(4, 'realTimePollingService'), Enum(5, 'unsolictedGrantServiceWithAD'), Enum(6, 'unsolictedGrantService')]

# scalars 
# columns
class docsIetfQosPktClassId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosPktClassDirection(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 2])
	syntaxobject = DocsIetfQosRfMacIfDirection


class docsIetfQosPktClassPriority(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPktClassIpTosLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosPktClassIpTosHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosPktClassIpTosMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosPktClassIpProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPktClassInetAddressType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 8])
	syntaxobject = InetAddressType


class docsIetfQosPktClassInetSourceAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 9])
	syntaxobject = InetAddress


class docsIetfQosPktClassInetSourceMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 10])
	syntaxobject = InetAddress


class docsIetfQosPktClassInetDestAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 11])
	syntaxobject = InetAddress


class docsIetfQosPktClassInetDestMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 12])
	syntaxobject = InetAddress


class docsIetfQosPktClassSourcePortStart(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 13])
	syntaxobject = InetPortNumber


class docsIetfQosPktClassSourcePortEnd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 14])
	syntaxobject = InetPortNumber


class docsIetfQosPktClassDestPortStart(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 15])
	syntaxobject = InetPortNumber


class docsIetfQosPktClassDestPortEnd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 16])
	syntaxobject = InetPortNumber


class docsIetfQosPktClassDestMacAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsIetfQosPktClassDestMacMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsIetfQosPktClassSourceMacAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsIetfQosPktClassEnetProtocolType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'ethertype'), Enum(2, 'dsap'), Enum(3, 'mac'), Enum(4, 'all')]


class docsIetfQosPktClassEnetProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPktClassUserPriLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPktClassUserPriHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPktClassVlanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPktClassStateActive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsIetfQosPktClassPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class docsIetfQosPktClassBitMap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class docsIetfQosParamSetServiceClassName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class docsIetfQosParamSetPriority(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosParamSetMaxTrafficRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 3])
	syntaxobject = DocsIetfQosBitRate


class docsIetfQosParamSetMaxTrafficBurst(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosParamSetMinReservedRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 5])
	syntaxobject = DocsIetfQosBitRate


class docsIetfQosParamSetMinReservedPkt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosParamSetActiveTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsIetfQosParamSetAdmittedTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsIetfQosParamSetMaxConcatBurst(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosParamSetSchedulingType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 10])
	syntaxobject = DocsIetfQosSchedulingType


class docsIetfQosParamSetNomPollInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class docsIetfQosParamSetTolPollJitter(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class docsIetfQosParamSetUnsolicitGrantSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosParamSetNomGrantInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class docsIetfQosParamSetTolGrantJitter(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class docsIetfQosParamSetGrantsPerInterval(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosParamSetTosAndMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosParamSetTosOrMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosParamSetMaxLatency(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'microseconds'


class docsIetfQosParamSetType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'admitted'), Enum(3, 'provisioned')]


class docsIetfQosParamSetRequestPolicyOct(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosParamSetBitMap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class docsIetfQosServiceFlowId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosServiceFlowSID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosServiceFlowDirection(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 3, 1, 3])
	syntaxobject = DocsIetfQosRfMacIfDirection


class docsIetfQosServiceFlowPrimary(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsIetfQosServiceFlowPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class docsIetfQosServiceFlowOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class docsIetfQosServiceFlowTimeCreated(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class docsIetfQosServiceFlowTimeActive(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class docsIetfQosServiceFlowPHSUnknowns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosServiceFlowPolicedDropPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosServiceFlowPolicedDelayPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosSID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosUpstreamFragments(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosUpstreamFragDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosUpstreamConcatBursts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosIfDirection(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 1])
	syntaxobject = DocsIetfQosRfMacIfDirection


class docsIetfQosDSAReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSARsps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSAAcks(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSCReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSCRsps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSCAcks(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSDReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDSDRsps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDynamicAdds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDynamicAddFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDynamicChanges(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDynamicChangeFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDynamicDeletes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDynamicDeleteFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDCCReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDCCRsps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDCCAcks(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDCCs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosDCCFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosServiceFlowLogIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosServiceFlowLogIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 2])
	syntaxobject = InterfaceIndex


class docsIetfQosServiceFlowLogSFID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosServiceFlowLogCmMac(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsIetfQosServiceFlowLogPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class docsIetfQosServiceFlowLogOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class docsIetfQosServiceFlowLogTimeDeleted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class docsIetfQosServiceFlowLogTimeCreated(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class docsIetfQosServiceFlowLogTimeActive(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class docsIetfQosServiceFlowLogDirection(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 10])
	syntaxobject = DocsIetfQosRfMacIfDirection


class docsIetfQosServiceFlowLogPrimary(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsIetfQosServiceFlowLogServiceClassName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 12])
	syntaxobject = SnmpAdminString


class docsIetfQosServiceFlowLogPolicedDropPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosServiceFlowLogPolicedDelayPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsIetfQosServiceFlowLogControl(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(6, 'destroy')]


class docsIetfQosServiceClassName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 1])
	syntaxobject = SnmpAdminString


class docsIetfQosServiceClassStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsIetfQosServiceClassPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosServiceClassMaxTrafficRate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 4])
	syntaxobject = DocsIetfQosBitRate


class docsIetfQosServiceClassMaxTrafficBurst(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosServiceClassMinReservedRate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 6])
	syntaxobject = DocsIetfQosBitRate


class docsIetfQosServiceClassMinReservedPkt(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosServiceClassMaxConcatBurst(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosServiceClassNomPollInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'microseconds'


class docsIetfQosServiceClassTolPollJitter(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'microseconds'


class docsIetfQosServiceClassUnsolicitGrantSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosServiceClassNomGrantInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'microseconds'


class docsIetfQosServiceClassTolGrantJitter(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'microseconds'


class docsIetfQosServiceClassGrantsPerInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosServiceClassMaxLatency(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'microseconds'


class docsIetfQosServiceClassActiveTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsIetfQosServiceClassAdmittedTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsIetfQosServiceClassSchedulingType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 18])
	syntaxobject = DocsIetfQosSchedulingType


class docsIetfQosServiceClassRequestPolicy(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosServiceClassTosAndMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosServiceClassTosOrMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosServiceClassDirection(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 22])
	syntaxobject = DocsIetfQosRfMacIfDirection


class docsIetfQosServiceClassStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class docsIetfQosServiceClassDSCPOverwrite(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1, 24])
	syntaxobject = DscpOrAny


class docsIetfQosServiceClassPolicyIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosServiceClassPolicyName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 9, 1, 2])
	syntaxobject = SnmpAdminString


class docsIetfQosServiceClassPolicyRulePriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosServiceClassPolicyStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsIetfQosServiceClassPolicyStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class docsIetfQosPHSField(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosPHSMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsIetfQosPHSSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosPHSVerify(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsIetfQosPHSIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsIetfQosCmtsCmMac(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsIetfQosCmtsServiceFlowId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class docsIetfQosCmtsIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 11, 1, 3])
	syntaxobject = InterfaceIndex


# rows 
class docsIetfQosPktClassEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosServiceFlowId, docsIetfQosPktClassId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 1, 1])
	access = 2
	columns = {'docsIetfQosPktClassId': docsIetfQosPktClassId, 'docsIetfQosPktClassDirection': docsIetfQosPktClassDirection, 'docsIetfQosPktClassPriority': docsIetfQosPktClassPriority, 'docsIetfQosPktClassIpTosLow': docsIetfQosPktClassIpTosLow, 'docsIetfQosPktClassIpTosHigh': docsIetfQosPktClassIpTosHigh, 'docsIetfQosPktClassIpTosMask': docsIetfQosPktClassIpTosMask, 'docsIetfQosPktClassIpProtocol': docsIetfQosPktClassIpProtocol, 'docsIetfQosPktClassInetAddressType': docsIetfQosPktClassInetAddressType, 'docsIetfQosPktClassInetSourceAddr': docsIetfQosPktClassInetSourceAddr, 'docsIetfQosPktClassInetSourceMask': docsIetfQosPktClassInetSourceMask, 'docsIetfQosPktClassInetDestAddr': docsIetfQosPktClassInetDestAddr, 'docsIetfQosPktClassInetDestMask': docsIetfQosPktClassInetDestMask, 'docsIetfQosPktClassSourcePortStart': docsIetfQosPktClassSourcePortStart, 'docsIetfQosPktClassSourcePortEnd': docsIetfQosPktClassSourcePortEnd, 'docsIetfQosPktClassDestPortStart': docsIetfQosPktClassDestPortStart, 'docsIetfQosPktClassDestPortEnd': docsIetfQosPktClassDestPortEnd, 'docsIetfQosPktClassDestMacAddr': docsIetfQosPktClassDestMacAddr, 'docsIetfQosPktClassDestMacMask': docsIetfQosPktClassDestMacMask, 'docsIetfQosPktClassSourceMacAddr': docsIetfQosPktClassSourceMacAddr, 'docsIetfQosPktClassEnetProtocolType': docsIetfQosPktClassEnetProtocolType, 'docsIetfQosPktClassEnetProtocol': docsIetfQosPktClassEnetProtocol, 'docsIetfQosPktClassUserPriLow': docsIetfQosPktClassUserPriLow, 'docsIetfQosPktClassUserPriHigh': docsIetfQosPktClassUserPriHigh, 'docsIetfQosPktClassVlanId': docsIetfQosPktClassVlanId, 'docsIetfQosPktClassStateActive': docsIetfQosPktClassStateActive, 'docsIetfQosPktClassPkts': docsIetfQosPktClassPkts, 'docsIetfQosPktClassBitMap': docsIetfQosPktClassBitMap}


class docsIetfQosParamSetEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosServiceFlowId, docsIetfQosParamSetType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 2, 1])
	access = 2
	columns = {'docsIetfQosParamSetServiceClassName': docsIetfQosParamSetServiceClassName, 'docsIetfQosParamSetPriority': docsIetfQosParamSetPriority, 'docsIetfQosParamSetMaxTrafficRate': docsIetfQosParamSetMaxTrafficRate, 'docsIetfQosParamSetMaxTrafficBurst': docsIetfQosParamSetMaxTrafficBurst, 'docsIetfQosParamSetMinReservedRate': docsIetfQosParamSetMinReservedRate, 'docsIetfQosParamSetMinReservedPkt': docsIetfQosParamSetMinReservedPkt, 'docsIetfQosParamSetActiveTimeout': docsIetfQosParamSetActiveTimeout, 'docsIetfQosParamSetAdmittedTimeout': docsIetfQosParamSetAdmittedTimeout, 'docsIetfQosParamSetMaxConcatBurst': docsIetfQosParamSetMaxConcatBurst, 'docsIetfQosParamSetSchedulingType': docsIetfQosParamSetSchedulingType, 'docsIetfQosParamSetNomPollInterval': docsIetfQosParamSetNomPollInterval, 'docsIetfQosParamSetTolPollJitter': docsIetfQosParamSetTolPollJitter, 'docsIetfQosParamSetUnsolicitGrantSize': docsIetfQosParamSetUnsolicitGrantSize, 'docsIetfQosParamSetNomGrantInterval': docsIetfQosParamSetNomGrantInterval, 'docsIetfQosParamSetTolGrantJitter': docsIetfQosParamSetTolGrantJitter, 'docsIetfQosParamSetGrantsPerInterval': docsIetfQosParamSetGrantsPerInterval, 'docsIetfQosParamSetTosAndMask': docsIetfQosParamSetTosAndMask, 'docsIetfQosParamSetTosOrMask': docsIetfQosParamSetTosOrMask, 'docsIetfQosParamSetMaxLatency': docsIetfQosParamSetMaxLatency, 'docsIetfQosParamSetType': docsIetfQosParamSetType, 'docsIetfQosParamSetRequestPolicyOct': docsIetfQosParamSetRequestPolicyOct, 'docsIetfQosParamSetBitMap': docsIetfQosParamSetBitMap}


class docsIetfQosServiceFlowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosServiceFlowId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 3, 1])
	access = 2
	columns = {'docsIetfQosServiceFlowId': docsIetfQosServiceFlowId, 'docsIetfQosServiceFlowSID': docsIetfQosServiceFlowSID, 'docsIetfQosServiceFlowDirection': docsIetfQosServiceFlowDirection, 'docsIetfQosServiceFlowPrimary': docsIetfQosServiceFlowPrimary}


class docsIetfQosServiceFlowStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosServiceFlowId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 4, 1])
	access = 2
	columns = {'docsIetfQosServiceFlowPkts': docsIetfQosServiceFlowPkts, 'docsIetfQosServiceFlowOctets': docsIetfQosServiceFlowOctets, 'docsIetfQosServiceFlowTimeCreated': docsIetfQosServiceFlowTimeCreated, 'docsIetfQosServiceFlowTimeActive': docsIetfQosServiceFlowTimeActive, 'docsIetfQosServiceFlowPHSUnknowns': docsIetfQosServiceFlowPHSUnknowns, 'docsIetfQosServiceFlowPolicedDropPkts': docsIetfQosServiceFlowPolicedDropPkts, 'docsIetfQosServiceFlowPolicedDelayPkts': docsIetfQosServiceFlowPolicedDelayPkts}


class docsIetfQosUpstreamStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosSID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 5, 1])
	access = 2
	columns = {'docsIetfQosSID': docsIetfQosSID, 'docsIetfQosUpstreamFragments': docsIetfQosUpstreamFragments, 'docsIetfQosUpstreamFragDiscards': docsIetfQosUpstreamFragDiscards, 'docsIetfQosUpstreamConcatBursts': docsIetfQosUpstreamConcatBursts}


class docsIetfQosDynamicServiceStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosIfDirection], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 6, 1])
	access = 2
	columns = {'docsIetfQosIfDirection': docsIetfQosIfDirection, 'docsIetfQosDSAReqs': docsIetfQosDSAReqs, 'docsIetfQosDSARsps': docsIetfQosDSARsps, 'docsIetfQosDSAAcks': docsIetfQosDSAAcks, 'docsIetfQosDSCReqs': docsIetfQosDSCReqs, 'docsIetfQosDSCRsps': docsIetfQosDSCRsps, 'docsIetfQosDSCAcks': docsIetfQosDSCAcks, 'docsIetfQosDSDReqs': docsIetfQosDSDReqs, 'docsIetfQosDSDRsps': docsIetfQosDSDRsps, 'docsIetfQosDynamicAdds': docsIetfQosDynamicAdds, 'docsIetfQosDynamicAddFails': docsIetfQosDynamicAddFails, 'docsIetfQosDynamicChanges': docsIetfQosDynamicChanges, 'docsIetfQosDynamicChangeFails': docsIetfQosDynamicChangeFails, 'docsIetfQosDynamicDeletes': docsIetfQosDynamicDeletes, 'docsIetfQosDynamicDeleteFails': docsIetfQosDynamicDeleteFails, 'docsIetfQosDCCReqs': docsIetfQosDCCReqs, 'docsIetfQosDCCRsps': docsIetfQosDCCRsps, 'docsIetfQosDCCAcks': docsIetfQosDCCAcks, 'docsIetfQosDCCs': docsIetfQosDCCs, 'docsIetfQosDCCFails': docsIetfQosDCCFails}


class docsIetfQosServiceFlowLogEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([docsIetfQosServiceFlowLogIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 7, 1])
	access = 2
	columns = {'docsIetfQosServiceFlowLogIndex': docsIetfQosServiceFlowLogIndex, 'docsIetfQosServiceFlowLogIfIndex': docsIetfQosServiceFlowLogIfIndex, 'docsIetfQosServiceFlowLogSFID': docsIetfQosServiceFlowLogSFID, 'docsIetfQosServiceFlowLogCmMac': docsIetfQosServiceFlowLogCmMac, 'docsIetfQosServiceFlowLogPkts': docsIetfQosServiceFlowLogPkts, 'docsIetfQosServiceFlowLogOctets': docsIetfQosServiceFlowLogOctets, 'docsIetfQosServiceFlowLogTimeDeleted': docsIetfQosServiceFlowLogTimeDeleted, 'docsIetfQosServiceFlowLogTimeCreated': docsIetfQosServiceFlowLogTimeCreated, 'docsIetfQosServiceFlowLogTimeActive': docsIetfQosServiceFlowLogTimeActive, 'docsIetfQosServiceFlowLogDirection': docsIetfQosServiceFlowLogDirection, 'docsIetfQosServiceFlowLogPrimary': docsIetfQosServiceFlowLogPrimary, 'docsIetfQosServiceFlowLogServiceClassName': docsIetfQosServiceFlowLogServiceClassName, 'docsIetfQosServiceFlowLogPolicedDropPkts': docsIetfQosServiceFlowLogPolicedDropPkts, 'docsIetfQosServiceFlowLogPolicedDelayPkts': docsIetfQosServiceFlowLogPolicedDelayPkts, 'docsIetfQosServiceFlowLogControl': docsIetfQosServiceFlowLogControl}


class docsIetfQosServiceClassEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([docsIetfQosServiceClassName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 8, 1])
	access = 2
	rowstatus = docsIetfQosServiceClassStatus
	columns = {'docsIetfQosServiceClassName': docsIetfQosServiceClassName, 'docsIetfQosServiceClassStatus': docsIetfQosServiceClassStatus, 'docsIetfQosServiceClassPriority': docsIetfQosServiceClassPriority, 'docsIetfQosServiceClassMaxTrafficRate': docsIetfQosServiceClassMaxTrafficRate, 'docsIetfQosServiceClassMaxTrafficBurst': docsIetfQosServiceClassMaxTrafficBurst, 'docsIetfQosServiceClassMinReservedRate': docsIetfQosServiceClassMinReservedRate, 'docsIetfQosServiceClassMinReservedPkt': docsIetfQosServiceClassMinReservedPkt, 'docsIetfQosServiceClassMaxConcatBurst': docsIetfQosServiceClassMaxConcatBurst, 'docsIetfQosServiceClassNomPollInterval': docsIetfQosServiceClassNomPollInterval, 'docsIetfQosServiceClassTolPollJitter': docsIetfQosServiceClassTolPollJitter, 'docsIetfQosServiceClassUnsolicitGrantSize': docsIetfQosServiceClassUnsolicitGrantSize, 'docsIetfQosServiceClassNomGrantInterval': docsIetfQosServiceClassNomGrantInterval, 'docsIetfQosServiceClassTolGrantJitter': docsIetfQosServiceClassTolGrantJitter, 'docsIetfQosServiceClassGrantsPerInterval': docsIetfQosServiceClassGrantsPerInterval, 'docsIetfQosServiceClassMaxLatency': docsIetfQosServiceClassMaxLatency, 'docsIetfQosServiceClassActiveTimeout': docsIetfQosServiceClassActiveTimeout, 'docsIetfQosServiceClassAdmittedTimeout': docsIetfQosServiceClassAdmittedTimeout, 'docsIetfQosServiceClassSchedulingType': docsIetfQosServiceClassSchedulingType, 'docsIetfQosServiceClassRequestPolicy': docsIetfQosServiceClassRequestPolicy, 'docsIetfQosServiceClassTosAndMask': docsIetfQosServiceClassTosAndMask, 'docsIetfQosServiceClassTosOrMask': docsIetfQosServiceClassTosOrMask, 'docsIetfQosServiceClassDirection': docsIetfQosServiceClassDirection, 'docsIetfQosServiceClassStorageType': docsIetfQosServiceClassStorageType, 'docsIetfQosServiceClassDSCPOverwrite': docsIetfQosServiceClassDSCPOverwrite}


class docsIetfQosServiceClassPolicyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([docsIetfQosServiceClassPolicyIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 9, 1])
	access = 2
	rowstatus = docsIetfQosServiceClassPolicyStatus
	columns = {'docsIetfQosServiceClassPolicyIndex': docsIetfQosServiceClassPolicyIndex, 'docsIetfQosServiceClassPolicyName': docsIetfQosServiceClassPolicyName, 'docsIetfQosServiceClassPolicyRulePriority': docsIetfQosServiceClassPolicyRulePriority, 'docsIetfQosServiceClassPolicyStatus': docsIetfQosServiceClassPolicyStatus, 'docsIetfQosServiceClassPolicyStorageType': docsIetfQosServiceClassPolicyStorageType}


class docsIetfQosPHSEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIetfQosServiceFlowId, docsIetfQosPktClassId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 10, 1])
	access = 2
	columns = {'docsIetfQosPHSField': docsIetfQosPHSField, 'docsIetfQosPHSMask': docsIetfQosPHSMask, 'docsIetfQosPHSSize': docsIetfQosPHSSize, 'docsIetfQosPHSVerify': docsIetfQosPHSVerify, 'docsIetfQosPHSIndex': docsIetfQosPHSIndex}


class docsIetfQosCmtsMacToSrvFlowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([docsIetfQosCmtsCmMac, docsIetfQosCmtsServiceFlowId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 1, 11, 1])
	access = 2
	columns = {'docsIetfQosCmtsCmMac': docsIetfQosCmtsCmMac, 'docsIetfQosCmtsServiceFlowId': docsIetfQosCmtsServiceFlowId, 'docsIetfQosCmtsIfIndex': docsIetfQosCmtsIfIndex}


# notifications (traps) 
# groups 
class docsIetfQosBaseGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 1, 1])
	group = [docsIetfQosPktClassDirection, docsIetfQosPktClassPriority, docsIetfQosPktClassIpTosLow, docsIetfQosPktClassIpTosHigh, docsIetfQosPktClassIpTosMask, docsIetfQosPktClassIpProtocol, docsIetfQosPktClassSourcePortStart, docsIetfQosPktClassSourcePortEnd, docsIetfQosPktClassDestPortStart, docsIetfQosPktClassDestPortEnd, docsIetfQosPktClassDestMacAddr, docsIetfQosPktClassDestMacMask, docsIetfQosPktClassSourceMacAddr, docsIetfQosPktClassEnetProtocolType, docsIetfQosPktClassEnetProtocol, docsIetfQosPktClassUserPriLow, docsIetfQosPktClassUserPriHigh, docsIetfQosPktClassVlanId, docsIetfQosPktClassStateActive, docsIetfQosPktClassPkts, docsIetfQosPktClassBitMap, docsIetfQosPktClassInetAddressType, docsIetfQosPktClassInetSourceAddr, docsIetfQosPktClassInetSourceMask, docsIetfQosPktClassInetDestAddr, docsIetfQosPktClassInetDestMask, docsIetfQosServiceFlowSID, docsIetfQosServiceFlowDirection, docsIetfQosServiceFlowPrimary, docsIetfQosServiceFlowPkts, docsIetfQosServiceFlowOctets, docsIetfQosServiceFlowTimeCreated, docsIetfQosServiceFlowTimeActive, docsIetfQosServiceFlowPHSUnknowns, docsIetfQosServiceFlowPolicedDropPkts, docsIetfQosServiceFlowPolicedDelayPkts, docsIetfQosDSAReqs, docsIetfQosDSARsps, docsIetfQosDSAAcks, docsIetfQosDSCReqs, docsIetfQosDSCRsps, docsIetfQosDSCAcks, docsIetfQosDSDReqs, docsIetfQosDSDRsps, docsIetfQosDynamicAdds, docsIetfQosDynamicAddFails, docsIetfQosDynamicChanges, docsIetfQosDynamicChangeFails, docsIetfQosDynamicDeletes, docsIetfQosDynamicDeleteFails, docsIetfQosDCCReqs, docsIetfQosDCCRsps, docsIetfQosDCCAcks, docsIetfQosDCCs, docsIetfQosDCCFails, docsIetfQosPHSField, docsIetfQosPHSMask, docsIetfQosPHSSize, docsIetfQosPHSVerify, docsIetfQosPHSIndex]

class docsIetfQosParamSetGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 1, 2])
	group = [docsIetfQosParamSetServiceClassName, docsIetfQosParamSetPriority, docsIetfQosParamSetMaxTrafficRate, docsIetfQosParamSetMaxTrafficBurst, docsIetfQosParamSetMinReservedRate, docsIetfQosParamSetMinReservedPkt, docsIetfQosParamSetActiveTimeout, docsIetfQosParamSetAdmittedTimeout, docsIetfQosParamSetMaxConcatBurst, docsIetfQosParamSetSchedulingType, docsIetfQosParamSetNomPollInterval, docsIetfQosParamSetTolPollJitter, docsIetfQosParamSetUnsolicitGrantSize, docsIetfQosParamSetNomGrantInterval, docsIetfQosParamSetTolGrantJitter, docsIetfQosParamSetGrantsPerInterval, docsIetfQosParamSetTosAndMask, docsIetfQosParamSetTosOrMask, docsIetfQosParamSetMaxLatency, docsIetfQosParamSetRequestPolicyOct, docsIetfQosParamSetBitMap]

class docsIetfQosCmtsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 1, 3])
	group = [docsIetfQosUpstreamFragments, docsIetfQosUpstreamFragDiscards, docsIetfQosUpstreamConcatBursts, docsIetfQosServiceFlowLogIfIndex, docsIetfQosServiceFlowLogSFID, docsIetfQosServiceFlowLogCmMac, docsIetfQosServiceFlowLogPkts, docsIetfQosServiceFlowLogOctets, docsIetfQosServiceFlowLogTimeDeleted, docsIetfQosServiceFlowLogTimeCreated, docsIetfQosServiceFlowLogTimeActive, docsIetfQosServiceFlowLogDirection, docsIetfQosServiceFlowLogPrimary, docsIetfQosServiceFlowLogServiceClassName, docsIetfQosServiceFlowLogPolicedDropPkts, docsIetfQosServiceFlowLogPolicedDelayPkts, docsIetfQosServiceFlowLogControl, docsIetfQosCmtsIfIndex]

class docsIetfQosSrvClassPolicyGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 1, 4])
	group = [docsIetfQosServiceClassPolicyName, docsIetfQosServiceClassPolicyRulePriority, docsIetfQosServiceClassPolicyStatus, docsIetfQosServiceClassPolicyStorageType]

class docsIetfQosServiceClassGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 127, 2, 1, 5])
	group = [docsIetfQosServiceClassStatus, docsIetfQosServiceClassPriority, docsIetfQosServiceClassMaxTrafficRate, docsIetfQosServiceClassMaxTrafficBurst, docsIetfQosServiceClassMinReservedRate, docsIetfQosServiceClassMinReservedPkt, docsIetfQosServiceClassMaxConcatBurst, docsIetfQosServiceClassNomPollInterval, docsIetfQosServiceClassTolPollJitter, docsIetfQosServiceClassUnsolicitGrantSize, docsIetfQosServiceClassNomGrantInterval, docsIetfQosServiceClassTolGrantJitter, docsIetfQosServiceClassGrantsPerInterval, docsIetfQosServiceClassMaxLatency, docsIetfQosServiceClassActiveTimeout, docsIetfQosServiceClassAdmittedTimeout, docsIetfQosServiceClassSchedulingType, docsIetfQosServiceClassRequestPolicy, docsIetfQosServiceClassTosAndMask, docsIetfQosServiceClassTosOrMask, docsIetfQosServiceClassDirection, docsIetfQosServiceClassStorageType, docsIetfQosServiceClassDSCPOverwrite]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
