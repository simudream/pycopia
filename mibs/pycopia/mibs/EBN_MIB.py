# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from APPN_MIB import SnaControlPointName
from SNMPv2_TC import DisplayString, TEXTUAL_CONVENTION
from SNA_NAU_MIB import snanauMIB

class EBN_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/EBN-MIB'
	conformance = 3
	name = 'EBN-MIB'
	language = 2
	description = ' The MIB Module for Extended Border Node'

# nodes
class ebnMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7])
	name = 'ebnMIB'

class ebnObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1])
	name = 'ebnObjects'

class ebnDir(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 1])
	name = 'ebnDir'

class ebnIsRscv(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 2])
	name = 'ebnIsRscv'

class ebnDirConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 3])
	name = 'ebnDirConfig'

class ebnCOS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 4])
	name = 'ebnCOS'

class ebnSubnetRoutingList(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5])
	name = 'ebnSubnetRoutingList'

class hbn(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 6])
	name = 'hbn'

class ebnConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2])
	name = 'ebnConformance'

class ebnCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 1])
	name = 'ebnCompliances'

class ebnGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2])
	name = 'ebnGroups'


# macros
# types 

class SnaNAUWildcardName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 17))

# scalars 
class ebnSearchCacheTime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'minutes'


class ebnMaxSearchCache(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'entries'


class ebnDefaultSubnetVisitCount(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'topology subnetworks'


# columns
class ebnDirLuName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 1, 1, 1, 1])
	syntaxobject = SnaNAUWildcardName


class ebnDirSubnetAffiliation(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'native'), Enum(2, 'nonNative'), Enum(3, 'subarea')]


class ebnIsRscvCpName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 2, 1, 1, 1])
	syntaxobject = SnaControlPointName


class ebnIsRscvPcid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ebnIsRscvDestinationRoute(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ebnIsRscvDestinationCos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ebnCosMapCpName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 4, 1, 1, 1])
	syntaxobject = SnaNAUWildcardName


class ebnCosMapNonNativeCos(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ebnCosMapNativeCos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ebnSubnetSearchLuName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 1, 1, 1])
	syntaxobject = SnaNAUWildcardName


class ebnSubnetSearchDynamics(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'limited'), Enum(3, 'full')]


class ebnSubnetSearchOrdering(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'priority'), Enum(2, 'defined')]


class ebnSearchLuName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 2, 1, 1])
	syntaxobject = SnaNAUWildcardName


class ebnSearchIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ebnSearchCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ebnSearchSNVC(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hbnIsInFqCpName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 6, 1, 1, 1])
	syntaxobject = SnaControlPointName


class hbnIsInPcid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hbnIsInRtpNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hbnIsInRtpTcid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


# rows 
class ebnDirEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ebnDirLuName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 1, 1, 1])
	access = 2
	columns = {'ebnDirLuName': ebnDirLuName, 'ebnDirSubnetAffiliation': ebnDirSubnetAffiliation}


class ebnIsRscvEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ebnIsRscvCpName, ebnIsRscvPcid], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 2, 1, 1])
	access = 2
	columns = {'ebnIsRscvCpName': ebnIsRscvCpName, 'ebnIsRscvPcid': ebnIsRscvPcid, 'ebnIsRscvDestinationRoute': ebnIsRscvDestinationRoute, 'ebnIsRscvDestinationCos': ebnIsRscvDestinationCos}


class ebnCosMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ebnCosMapCpName, ebnCosMapNonNativeCos], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 4, 1, 1])
	access = 2
	columns = {'ebnCosMapCpName': ebnCosMapCpName, 'ebnCosMapNonNativeCos': ebnCosMapNonNativeCos, 'ebnCosMapNativeCos': ebnCosMapNativeCos}


class ebnSubnetSearchEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ebnSubnetSearchLuName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 1, 1])
	access = 2
	columns = {'ebnSubnetSearchLuName': ebnSubnetSearchLuName, 'ebnSubnetSearchDynamics': ebnSubnetSearchDynamics, 'ebnSubnetSearchOrdering': ebnSubnetSearchOrdering}


class ebnSearchEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ebnSearchLuName, ebnSearchIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 5, 2, 1])
	access = 2
	columns = {'ebnSearchLuName': ebnSearchLuName, 'ebnSearchIndex': ebnSearchIndex, 'ebnSearchCpName': ebnSearchCpName, 'ebnSearchSNVC': ebnSearchSNVC}


class hbnIsInEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hbnIsInFqCpName, hbnIsInPcid], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 1, 6, 1, 1])
	access = 2
	columns = {'hbnIsInFqCpName': hbnIsInFqCpName, 'hbnIsInPcid': hbnIsInPcid, 'hbnIsInRtpNceId': hbnIsInRtpNceId, 'hbnIsInRtpTcid': hbnIsInRtpTcid}


# notifications (traps) 
# groups 
class ebnDirectoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2, 1])
	group = [ebnDirSubnetAffiliation]

class ebnIsRscvGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2, 2])
	group = [ebnIsRscvDestinationRoute, ebnIsRscvDestinationCos]

class ebnDirectoryConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2, 3])
	group = [ebnSearchCacheTime, ebnMaxSearchCache, ebnDefaultSubnetVisitCount]

class ebnCosMappingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2, 4])
	group = [ebnCosMapNativeCos]

class ebnSubnetRoutingListGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2, 5])
	group = [ebnSubnetSearchDynamics, ebnSubnetSearchOrdering, ebnSearchCpName, ebnSearchSNVC]

class hbnIsInGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 7, 2, 2, 6])
	group = [hbnIsInRtpNceId, hbnIsInRtpTcid]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
