# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifGeneralInformationGroup, ifCounterDiscontinuityGroup
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32, zeroDotZero
from MPLS_TC_STD_MIB import mplsStdMIB
from GMPLS_TC_STD_MIB import GmplsSegmentDirectionTC
from MPLS_LSR_STD_MIB import mplsInterfaceIndex, mplsInSegmentIndex, mplsOutSegmentIndex, mplsInterfaceGroup, mplsInSegmentGroup, mplsOutSegmentGroup, mplsXCGroup, mplsPerfGroup, mplsLsrNotificationGroup
from SNMPv2_TC import RowPointer

class GMPLS_LSR_STD_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/GMPLS-LSR-STD-MIB'
	conformance = 4
	name = 'GMPLS-LSR-STD-MIB'
	language = 2
	description = 'Copyright (C) The IETF Trust (2007).  This version of\nthis MIB module is part of RFC 4803; see the RFC itself for\nfull legal notices.\n\nThis MIB module contains managed object definitions for the\nGeneralized Multiprotocol (GMPLS) Label Switching Router as\ndefined in Generalized Multi-Protocol Label Switching (GMPLS)\nArchitecture, Mannie et al., RFC 3945, October 2004.'

# nodes
class gmplsLsrStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15])
	name = 'gmplsLsrStdMIB'

class gmplsLsrObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1])
	name = 'gmplsLsrObjects'

class gmplsLsrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 2])
	name = 'gmplsLsrConformance'

class gmplsLsrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 2, 1])
	name = 'gmplsLsrGroups'

class gmplsLsrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 2, 2])
	name = 'gmplsLsrCompliances'


# macros
# types 
# scalars 
# columns
class gmplsInterfaceSignalingCaps(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class gmplsInterfaceRsvpHelloPeriod(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class gmplsInSegmentDirection(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 2, 1, 1])
	syntaxobject = GmplsSegmentDirectionTC


class gmplsInSegmentExtraParamsPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class gmplsOutSegmentDirection(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 3, 1, 1])
	syntaxobject = GmplsSegmentDirectionTC


class gmplsOutSegmentTTLDecrement(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsOutSegmentExtraParamsPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


# rows 
class gmplsInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInterfaceIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 1, 1])
	access = 2
	columns = {'gmplsInterfaceSignalingCaps': gmplsInterfaceSignalingCaps, 'gmplsInterfaceRsvpHelloPeriod': gmplsInterfaceRsvpHelloPeriod}


class gmplsInSegmentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 2, 1])
	access = 2
	columns = {'gmplsInSegmentDirection': gmplsInSegmentDirection, 'gmplsInSegmentExtraParamsPtr': gmplsInSegmentExtraParamsPtr}


class gmplsOutSegmentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsOutSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 1, 3, 1])
	access = 2
	columns = {'gmplsOutSegmentDirection': gmplsOutSegmentDirection, 'gmplsOutSegmentTTLDecrement': gmplsOutSegmentTTLDecrement, 'gmplsOutSegmentExtraParamsPtr': gmplsOutSegmentExtraParamsPtr}


# notifications (traps) 
# groups 
class gmplsInterfaceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 2, 1, 1])
	group = [gmplsInterfaceSignalingCaps, gmplsInterfaceRsvpHelloPeriod]

class gmplsInSegmentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 2, 1, 2])
	group = [gmplsInSegmentDirection, gmplsInSegmentExtraParamsPtr]

class gmplsOutSegmentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 15, 2, 1, 3])
	group = [gmplsOutSegmentDirection, gmplsOutSegmentTTLDecrement, gmplsOutSegmentExtraParamsPtr]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
