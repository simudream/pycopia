# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from HP_SN_ROOT_MIB import snBgp4
from RFC1155_SMI import Counter, Gauge, IpAddress

class HP_SN_BGP4_GROUP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-BGP4-GROUP-MIB'
	conformance = 2
	name = 'HP-SN-BGP4-GROUP-MIB'
	language = 1

# nodes
class snBgp4Gen(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1])
	name = 'snBgp4Gen'

class snBgp4AddrFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2])
	name = 'snBgp4AddrFilter'

class snBgp4AggregateAddr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3])
	name = 'snBgp4AggregateAddr'

class snBgp4AsPathFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 4])
	name = 'snBgp4AsPathFilter'

class snBgp4CommunityFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5])
	name = 'snBgp4CommunityFilter'

class snBgp4NeighGenCfg(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6])
	name = 'snBgp4NeighGenCfg'

class snBgp4NeighDistGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 7])
	name = 'snBgp4NeighDistGroup'

class snBgp4NeighFilterGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 8])
	name = 'snBgp4NeighFilterGroup'

class snBgp4NeighRouteMap(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 9])
	name = 'snBgp4NeighRouteMap'

class snBgp4Network(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10])
	name = 'snBgp4Network'

class snBgp4Redis(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11])
	name = 'snBgp4Redis'

class snBgp4RouteMapFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 12])
	name = 'snBgp4RouteMapFilter'

class snBgp4RouteMapMatch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13])
	name = 'snBgp4RouteMapMatch'

class snBgp4RouteMapSet(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14])
	name = 'snBgp4RouteMapSet'

class snBgp4NeighOperStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15])
	name = 'snBgp4NeighOperStatus'

class snBgp4RouteOperStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16])
	name = 'snBgp4RouteOperStatus'

class snBgp4NeighborSummary(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17])
	name = 'snBgp4NeighborSummary'

class snBgp4Attribute(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18])
	name = 'snBgp4Attribute'

class snBgp4ClearNeighborCmd(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 19])
	name = 'snBgp4ClearNeighborCmd'


# macros
# types 
# scalars 
class snBgp4GenAlwaysCompareMed(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenAutoSummary(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenDefaultLocalPreference(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenDefaultInfoOriginate(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenFastExternalFallover(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenNextBootNeighbors(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenNextBootRoutes(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenSynchronization(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenKeepAliveTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenHoldTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenRouterId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4GenTableMap(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4GenAdminStat(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenDefaultMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxNeighbors(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMinNeighbors(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxRoutes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMinRoutes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxAddrFilters(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxAggregateAddresses(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxAsPathFilters(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxCommunityFilters(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxNetworks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxRouteMapFilters(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenNeighPrefixMinValue(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenOperNeighbors(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenOperRoutes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenLocalAs(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenRoutesInstalled(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenAsPathInstalled(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4ExternalDistance(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4InternalDistance(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4LocalDistance(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4OperNumOfAttributes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NextBootMaxAttributes(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4ClusterId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4ClientToClientReflection(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4GenTotalNeighbors(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenMaxPaths(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenConfedId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4GenConfedPeers(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


# columns
class snBgp4AddrFilterIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AddrFilterAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]


class snBgp4AddrFilterSourceIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AddrFilterSourceMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AddrFilterDestIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AddrFilterDestMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AddrFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4AggregateAddrIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AggregateAddrMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AggregateAddrOption(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'address'), Enum(2, 'asSet'), Enum(3, 'summaryOnly'), Enum(4, 'suppressMap'), Enum(5, 'advertiseMap'), Enum(6, 'attributeMap')]


class snBgp4AggregateAddrMap(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4AggregateAddrRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4AsPathFilterIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AsPathFilterAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]


class snBgp4AsPathFilterRegExpression(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4AsPathFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4CommunityFilterIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4CommunityFilterAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]


class snBgp4CommunityFilterCommNum(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4CommunityFilterInternet(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4CommunityFilterNoAdvertise(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'false'), Enum(1, 'true')]


class snBgp4CommunityFilterNoExport(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'false'), Enum(1, 'true')]


class snBgp4CommunityFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4CommunityFilterLocalAs(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'false'), Enum(1, 'true')]


class snBgp4NeighGenCfgNeighIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NeighGenCfgAdvertlevel(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgDefOriginate(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgEbgpMultihop(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgMaxPrefix(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgNextHopSelf(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgRemoteAs(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgSendComm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgWeight(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgWeightFilterList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4NeighGenCfgRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify'), Enum(6, 'applyDefault')]


class snBgp4NeighGenCfgUpdateSrcLpbIntf(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgRouteRefClient(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgRemovePrivateAs(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgEbgpMultihopTtl(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgShutdown(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NeighGenCfgKeepAliveTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighGenCfgHoldTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighDistGroupNeighIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NeighDistGroupDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'out'), Enum(1, 'in')]


class snBgp4NeighDistGroupAccessList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4NeighDistGroupRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4NeighFilterGroupNeighIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NeighFilterGroupDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'out'), Enum(1, 'in')]


class snBgp4NeighFilterGroupAccessList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4NeighFilterGroupRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4NeighRouteMapNeighIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NeighRouteMapDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'out'), Enum(1, 'in')]


class snBgp4NeighRouteMapMapName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4NeighRouteMapRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4NetworkIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NetworkSubnetMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NetworkWeight(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NetworkBackdoor(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4NetworkRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4RedisProtocol(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rip'), Enum(2, 'ospf'), Enum(3, 'static'), Enum(4, 'connected')]


class snBgp4RedisMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RedisRouteMap(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RedisWeight(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RedisMatchInternal(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4RedisMatchExternal1(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4RedisMatchExternal2(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4RedisRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4RouteMapFilterMapName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 12, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapFilterSequenceNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 12, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapFilterAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 12, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]


class snBgp4RouteMapFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 12, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snBgp4RouteMapMatchMapName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapMatchSequenceNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapMatchAsPathFilter(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapMatchCommunityFilter(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapMatchAddressFilter(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapMatchMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapMatchNextHopList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapMatchRouteType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'external'), Enum(2, 'externalType1'), Enum(3, 'externalType2'), Enum(4, 'internal'), Enum(5, 'local')]


class snBgp4RouteMapMatchTagList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapMatchRowMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetMapName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapSetSequenceNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetAsPathType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'tag'), Enum(1, 'prepend')]


class snBgp4RouteMapSetAsPathString(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteMapSetAutoTag(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4RouteMapSetCommunityType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'nums'), Enum(3, 'none')]


class snBgp4RouteMapSetCommunityNum(ColumnObject):
	access = 5
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetCommunityAdditive(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snBgp4RouteMapSetLocalPreference(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetNextHop(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4RouteMapSetOrigin(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'igp'), Enum(1, 'egp'), Enum(2, 'incomplete')]


class snBgp4RouteMapSetTag(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetWeight(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetRowMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteMapSetCommunityNums(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4NeighOperStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighOperStatusIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NeighOperStatusRemoteAs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighOperStatusBgpType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'ebgp'), Enum(1, 'ibgp')]


class snBgp4NeighOperStatusState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'noState'), Enum(1, 'idle'), Enum(2, 'connect'), Enum(3, 'active'), Enum(4, 'openSent'), Enum(5, 'openConfirm'), Enum(6, 'established')]


class snBgp4NeighOperStatusKeepAliveTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighOperStatusHoldTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighOperStatusAdvertlevel(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighOperStatusKeepAliveTxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusKeepAliveRxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusUpdateTxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusUpdateRxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusNotifTxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusNotifRxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusOpenTxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4NeighOperStatusOpenRxCounts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snBgp4RouteOperStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteOperStatusIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4RouteOperStatusSubnetMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4RouteOperStatusNextHop(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4RouteOperStatusMetric(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteOperStatusLocalPreference(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteOperStatusWeight(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteOperStatusOrigin(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'igp'), Enum(1, 'egp'), Enum(2, 'incomplete')]


class snBgp4RouteOperStatusStatus(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteOperStatusRouteTag(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4RouteOperStatusCommunityList(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4RouteOperStatusAsPathList(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4NeighborSummaryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighborSummaryIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4NeighborSummaryState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'noState'), Enum(1, 'idle'), Enum(2, 'connect'), Enum(3, 'active'), Enum(4, 'openSent'), Enum(5, 'openConfirm'), Enum(6, 'established')]


class snBgp4NeighborSummaryStateChgTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighborSummaryRouteReceived(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4NeighborSummaryRouteInstalled(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AttributeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AttributeNextHop(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AttributeMetric(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AttributeOrigin(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'igp'), Enum(1, 'egp'), Enum(2, 'incomplete')]


class snBgp4AttributeAggregatorAs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AttributeRouterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AttributeAtomicAggregatePresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'false'), Enum(1, 'true')]


class snBgp4AttributeLocalPreference(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snBgp4AttributeCommunityList(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4AttributeAsPathList(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4AttributeOriginator(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4AttributeClusterList(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snBgp4ClearNeighborCmdIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 19, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snBgp4ClearNeighborCmdElement(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 19, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'valid'), Enum(1, 'lastPacketWithError'), Enum(2, 'notificationErrors'), Enum(3, 'softOutbound'), Enum(4, 'traffic'), Enum(5, 'neighbor')]


# rows 
class snBgp4AddrFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4AddrFilterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 2, 1, 1])
	access = 2
	columns = {'snBgp4AddrFilterIndex': snBgp4AddrFilterIndex, 'snBgp4AddrFilterAction': snBgp4AddrFilterAction, 'snBgp4AddrFilterSourceIp': snBgp4AddrFilterSourceIp, 'snBgp4AddrFilterSourceMask': snBgp4AddrFilterSourceMask, 'snBgp4AddrFilterDestIp': snBgp4AddrFilterDestIp, 'snBgp4AddrFilterDestMask': snBgp4AddrFilterDestMask, 'snBgp4AddrFilterRowStatus': snBgp4AddrFilterRowStatus}


class snBgp4AggregateAddrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4AggregateAddrIp, snBgp4AggregateAddrMask, snBgp4AggregateAddrOption], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 3, 1, 1])
	access = 2
	columns = {'snBgp4AggregateAddrIp': snBgp4AggregateAddrIp, 'snBgp4AggregateAddrMask': snBgp4AggregateAddrMask, 'snBgp4AggregateAddrOption': snBgp4AggregateAddrOption, 'snBgp4AggregateAddrMap': snBgp4AggregateAddrMap, 'snBgp4AggregateAddrRowStatus': snBgp4AggregateAddrRowStatus}


class snBgp4AsPathFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4AsPathFilterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 4, 1, 1])
	access = 2
	columns = {'snBgp4AsPathFilterIndex': snBgp4AsPathFilterIndex, 'snBgp4AsPathFilterAction': snBgp4AsPathFilterAction, 'snBgp4AsPathFilterRegExpression': snBgp4AsPathFilterRegExpression, 'snBgp4AsPathFilterRowStatus': snBgp4AsPathFilterRowStatus}


class snBgp4CommunityFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4CommunityFilterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 5, 1, 1])
	access = 2
	columns = {'snBgp4CommunityFilterIndex': snBgp4CommunityFilterIndex, 'snBgp4CommunityFilterAction': snBgp4CommunityFilterAction, 'snBgp4CommunityFilterCommNum': snBgp4CommunityFilterCommNum, 'snBgp4CommunityFilterInternet': snBgp4CommunityFilterInternet, 'snBgp4CommunityFilterNoAdvertise': snBgp4CommunityFilterNoAdvertise, 'snBgp4CommunityFilterNoExport': snBgp4CommunityFilterNoExport, 'snBgp4CommunityFilterRowStatus': snBgp4CommunityFilterRowStatus, 'snBgp4CommunityFilterLocalAs': snBgp4CommunityFilterLocalAs}


class snBgp4NeighGenCfgEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NeighGenCfgNeighIp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 6, 1, 1])
	access = 2
	columns = {'snBgp4NeighGenCfgNeighIp': snBgp4NeighGenCfgNeighIp, 'snBgp4NeighGenCfgAdvertlevel': snBgp4NeighGenCfgAdvertlevel, 'snBgp4NeighGenCfgDefOriginate': snBgp4NeighGenCfgDefOriginate, 'snBgp4NeighGenCfgEbgpMultihop': snBgp4NeighGenCfgEbgpMultihop, 'snBgp4NeighGenCfgMaxPrefix': snBgp4NeighGenCfgMaxPrefix, 'snBgp4NeighGenCfgNextHopSelf': snBgp4NeighGenCfgNextHopSelf, 'snBgp4NeighGenCfgRemoteAs': snBgp4NeighGenCfgRemoteAs, 'snBgp4NeighGenCfgSendComm': snBgp4NeighGenCfgSendComm, 'snBgp4NeighGenCfgWeight': snBgp4NeighGenCfgWeight, 'snBgp4NeighGenCfgWeightFilterList': snBgp4NeighGenCfgWeightFilterList, 'snBgp4NeighGenCfgRowStatus': snBgp4NeighGenCfgRowStatus, 'snBgp4NeighGenCfgUpdateSrcLpbIntf': snBgp4NeighGenCfgUpdateSrcLpbIntf, 'snBgp4NeighGenCfgRouteRefClient': snBgp4NeighGenCfgRouteRefClient, 'snBgp4NeighGenCfgRemovePrivateAs': snBgp4NeighGenCfgRemovePrivateAs, 'snBgp4NeighGenCfgEbgpMultihopTtl': snBgp4NeighGenCfgEbgpMultihopTtl, 'snBgp4NeighGenCfgShutdown': snBgp4NeighGenCfgShutdown, 'snBgp4NeighGenCfgKeepAliveTime': snBgp4NeighGenCfgKeepAliveTime, 'snBgp4NeighGenCfgHoldTime': snBgp4NeighGenCfgHoldTime}


class snBgp4NeighDistGroupEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NeighDistGroupNeighIp, snBgp4NeighDistGroupDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 7, 1, 1])
	access = 2
	columns = {'snBgp4NeighDistGroupNeighIp': snBgp4NeighDistGroupNeighIp, 'snBgp4NeighDistGroupDir': snBgp4NeighDistGroupDir, 'snBgp4NeighDistGroupAccessList': snBgp4NeighDistGroupAccessList, 'snBgp4NeighDistGroupRowStatus': snBgp4NeighDistGroupRowStatus}


class snBgp4NeighFilterGroupEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NeighFilterGroupNeighIp, snBgp4NeighFilterGroupDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 8, 1, 1])
	access = 2
	columns = {'snBgp4NeighFilterGroupNeighIp': snBgp4NeighFilterGroupNeighIp, 'snBgp4NeighFilterGroupDir': snBgp4NeighFilterGroupDir, 'snBgp4NeighFilterGroupAccessList': snBgp4NeighFilterGroupAccessList, 'snBgp4NeighFilterGroupRowStatus': snBgp4NeighFilterGroupRowStatus}


class snBgp4NeighRouteMapEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NeighRouteMapNeighIp, snBgp4NeighRouteMapDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 9, 1, 1])
	access = 2
	columns = {'snBgp4NeighRouteMapNeighIp': snBgp4NeighRouteMapNeighIp, 'snBgp4NeighRouteMapDir': snBgp4NeighRouteMapDir, 'snBgp4NeighRouteMapMapName': snBgp4NeighRouteMapMapName, 'snBgp4NeighRouteMapRowStatus': snBgp4NeighRouteMapRowStatus}


class snBgp4NetworkEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NetworkIp, snBgp4NetworkSubnetMask], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 10, 1, 1])
	access = 2
	columns = {'snBgp4NetworkIp': snBgp4NetworkIp, 'snBgp4NetworkSubnetMask': snBgp4NetworkSubnetMask, 'snBgp4NetworkWeight': snBgp4NetworkWeight, 'snBgp4NetworkBackdoor': snBgp4NetworkBackdoor, 'snBgp4NetworkRowStatus': snBgp4NetworkRowStatus}


class snBgp4RedisEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4RedisProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 11, 1, 1])
	access = 2
	columns = {'snBgp4RedisProtocol': snBgp4RedisProtocol, 'snBgp4RedisMetric': snBgp4RedisMetric, 'snBgp4RedisRouteMap': snBgp4RedisRouteMap, 'snBgp4RedisWeight': snBgp4RedisWeight, 'snBgp4RedisMatchInternal': snBgp4RedisMatchInternal, 'snBgp4RedisMatchExternal1': snBgp4RedisMatchExternal1, 'snBgp4RedisMatchExternal2': snBgp4RedisMatchExternal2, 'snBgp4RedisRowStatus': snBgp4RedisRowStatus}


class snBgp4RouteMapFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4RouteMapFilterMapName, snBgp4RouteMapFilterSequenceNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 12, 1, 1])
	access = 2
	columns = {'snBgp4RouteMapFilterMapName': snBgp4RouteMapFilterMapName, 'snBgp4RouteMapFilterSequenceNum': snBgp4RouteMapFilterSequenceNum, 'snBgp4RouteMapFilterAction': snBgp4RouteMapFilterAction, 'snBgp4RouteMapFilterRowStatus': snBgp4RouteMapFilterRowStatus}


class snBgp4RouteMapMatchEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4RouteMapMatchMapName, snBgp4RouteMapMatchSequenceNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 13, 1, 1])
	access = 2
	columns = {'snBgp4RouteMapMatchMapName': snBgp4RouteMapMatchMapName, 'snBgp4RouteMapMatchSequenceNum': snBgp4RouteMapMatchSequenceNum, 'snBgp4RouteMapMatchAsPathFilter': snBgp4RouteMapMatchAsPathFilter, 'snBgp4RouteMapMatchCommunityFilter': snBgp4RouteMapMatchCommunityFilter, 'snBgp4RouteMapMatchAddressFilter': snBgp4RouteMapMatchAddressFilter, 'snBgp4RouteMapMatchMetric': snBgp4RouteMapMatchMetric, 'snBgp4RouteMapMatchNextHopList': snBgp4RouteMapMatchNextHopList, 'snBgp4RouteMapMatchRouteType': snBgp4RouteMapMatchRouteType, 'snBgp4RouteMapMatchTagList': snBgp4RouteMapMatchTagList, 'snBgp4RouteMapMatchRowMask': snBgp4RouteMapMatchRowMask}


class snBgp4RouteMapSetEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4RouteMapSetMapName, snBgp4RouteMapSetSequenceNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 14, 1, 1])
	access = 2
	columns = {'snBgp4RouteMapSetMapName': snBgp4RouteMapSetMapName, 'snBgp4RouteMapSetSequenceNum': snBgp4RouteMapSetSequenceNum, 'snBgp4RouteMapSetAsPathType': snBgp4RouteMapSetAsPathType, 'snBgp4RouteMapSetAsPathString': snBgp4RouteMapSetAsPathString, 'snBgp4RouteMapSetAutoTag': snBgp4RouteMapSetAutoTag, 'snBgp4RouteMapSetCommunityType': snBgp4RouteMapSetCommunityType, 'snBgp4RouteMapSetCommunityNum': snBgp4RouteMapSetCommunityNum, 'snBgp4RouteMapSetCommunityAdditive': snBgp4RouteMapSetCommunityAdditive, 'snBgp4RouteMapSetLocalPreference': snBgp4RouteMapSetLocalPreference, 'snBgp4RouteMapSetMetric': snBgp4RouteMapSetMetric, 'snBgp4RouteMapSetNextHop': snBgp4RouteMapSetNextHop, 'snBgp4RouteMapSetOrigin': snBgp4RouteMapSetOrigin, 'snBgp4RouteMapSetTag': snBgp4RouteMapSetTag, 'snBgp4RouteMapSetWeight': snBgp4RouteMapSetWeight, 'snBgp4RouteMapSetRowMask': snBgp4RouteMapSetRowMask, 'snBgp4RouteMapSetCommunityNums': snBgp4RouteMapSetCommunityNums}


class snBgp4NeighOperStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NeighOperStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 15, 1, 1])
	access = 2
	columns = {'snBgp4NeighOperStatusIndex': snBgp4NeighOperStatusIndex, 'snBgp4NeighOperStatusIp': snBgp4NeighOperStatusIp, 'snBgp4NeighOperStatusRemoteAs': snBgp4NeighOperStatusRemoteAs, 'snBgp4NeighOperStatusBgpType': snBgp4NeighOperStatusBgpType, 'snBgp4NeighOperStatusState': snBgp4NeighOperStatusState, 'snBgp4NeighOperStatusKeepAliveTime': snBgp4NeighOperStatusKeepAliveTime, 'snBgp4NeighOperStatusHoldTime': snBgp4NeighOperStatusHoldTime, 'snBgp4NeighOperStatusAdvertlevel': snBgp4NeighOperStatusAdvertlevel, 'snBgp4NeighOperStatusKeepAliveTxCounts': snBgp4NeighOperStatusKeepAliveTxCounts, 'snBgp4NeighOperStatusKeepAliveRxCounts': snBgp4NeighOperStatusKeepAliveRxCounts, 'snBgp4NeighOperStatusUpdateTxCounts': snBgp4NeighOperStatusUpdateTxCounts, 'snBgp4NeighOperStatusUpdateRxCounts': snBgp4NeighOperStatusUpdateRxCounts, 'snBgp4NeighOperStatusNotifTxCounts': snBgp4NeighOperStatusNotifTxCounts, 'snBgp4NeighOperStatusNotifRxCounts': snBgp4NeighOperStatusNotifRxCounts, 'snBgp4NeighOperStatusOpenTxCounts': snBgp4NeighOperStatusOpenTxCounts, 'snBgp4NeighOperStatusOpenRxCounts': snBgp4NeighOperStatusOpenRxCounts}


class snBgp4RouteOperStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4RouteOperStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 16, 1, 1])
	access = 2
	columns = {'snBgp4RouteOperStatusIndex': snBgp4RouteOperStatusIndex, 'snBgp4RouteOperStatusIp': snBgp4RouteOperStatusIp, 'snBgp4RouteOperStatusSubnetMask': snBgp4RouteOperStatusSubnetMask, 'snBgp4RouteOperStatusNextHop': snBgp4RouteOperStatusNextHop, 'snBgp4RouteOperStatusMetric': snBgp4RouteOperStatusMetric, 'snBgp4RouteOperStatusLocalPreference': snBgp4RouteOperStatusLocalPreference, 'snBgp4RouteOperStatusWeight': snBgp4RouteOperStatusWeight, 'snBgp4RouteOperStatusOrigin': snBgp4RouteOperStatusOrigin, 'snBgp4RouteOperStatusStatus': snBgp4RouteOperStatusStatus, 'snBgp4RouteOperStatusRouteTag': snBgp4RouteOperStatusRouteTag, 'snBgp4RouteOperStatusCommunityList': snBgp4RouteOperStatusCommunityList, 'snBgp4RouteOperStatusAsPathList': snBgp4RouteOperStatusAsPathList}


class snBgp4NeighborSummaryEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4NeighborSummaryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 17, 1, 1])
	access = 2
	columns = {'snBgp4NeighborSummaryIndex': snBgp4NeighborSummaryIndex, 'snBgp4NeighborSummaryIp': snBgp4NeighborSummaryIp, 'snBgp4NeighborSummaryState': snBgp4NeighborSummaryState, 'snBgp4NeighborSummaryStateChgTime': snBgp4NeighborSummaryStateChgTime, 'snBgp4NeighborSummaryRouteReceived': snBgp4NeighborSummaryRouteReceived, 'snBgp4NeighborSummaryRouteInstalled': snBgp4NeighborSummaryRouteInstalled}


class snBgp4AttributeEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4AttributeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 18, 1, 1])
	access = 2
	columns = {'snBgp4AttributeIndex': snBgp4AttributeIndex, 'snBgp4AttributeNextHop': snBgp4AttributeNextHop, 'snBgp4AttributeMetric': snBgp4AttributeMetric, 'snBgp4AttributeOrigin': snBgp4AttributeOrigin, 'snBgp4AttributeAggregatorAs': snBgp4AttributeAggregatorAs, 'snBgp4AttributeRouterId': snBgp4AttributeRouterId, 'snBgp4AttributeAtomicAggregatePresent': snBgp4AttributeAtomicAggregatePresent, 'snBgp4AttributeLocalPreference': snBgp4AttributeLocalPreference, 'snBgp4AttributeCommunityList': snBgp4AttributeCommunityList, 'snBgp4AttributeAsPathList': snBgp4AttributeAsPathList, 'snBgp4AttributeOriginator': snBgp4AttributeOriginator, 'snBgp4AttributeClusterList': snBgp4AttributeClusterList}


class snBgp4ClearNeighborCmdEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snBgp4ClearNeighborCmdIp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 11, 19, 1, 1])
	access = 2
	columns = {'snBgp4ClearNeighborCmdIp': snBgp4ClearNeighborCmdIp, 'snBgp4ClearNeighborCmdElement': snBgp4ClearNeighborCmdElement}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
