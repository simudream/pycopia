# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import Counter32, Integer32, NOTIFICATION_TYPE, MODULE_IDENTITY, OBJECT_TYPE
from PerfHist_TC_MIB import PerfCurrentCount, PerfIntervalCount
from SNMPv2_TC import TEXTUAL_CONVENTION
from ADSL_TC_MIB import AdslPerfCurrDayCount, AdslPerfPrevDayCount
from ADSL_LINE_MIB import adslLineAlarmConfProfileEntry, adslLineConfProfileEntry, adslAturIntervalEntry, adslAturPerfDataEntry, adslAtucIntervalEntry, adslAtucPerfDataEntry, adslLineEntry, adslMIB

class ADSL_LINE_EXT_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ADSL-LINE-EXT-MIB'
	conformance = 4
	name = 'ADSL-LINE-EXT-MIB'
	language = 2
	description = 'Copyright (C) The Internet Society (2002). This version of\nthis MIB module is part of RFC 3440; see the RFC itself for\nfull legal notices.\n\nThis MIB Module is a supplement to the ADSL-LINE-MIB\n[RFC2662].'

# nodes
class adslExtMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3])
	name = 'adslExtMIB'

class adslExtMibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1])
	name = 'adslExtMibObjects'

class adslExtTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24])
	name = 'adslExtTraps'

class adslExtAtucTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1])
	name = 'adslExtAtucTraps'

class adslExtAtucTrapsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0])
	name = 'adslExtAtucTrapsPrefix'

class adslExtAturTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2])
	name = 'adslExtAturTraps'

class adslExtAturTrapsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2, 0])
	name = 'adslExtAturTrapsPrefix'

class adslExtConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2])
	name = 'adslExtConformance'

class adslExtGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1])
	name = 'adslExtGroups'

class adslExtCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 2])
	name = 'adslExtCompliances'


# macros
# types 

class AdslTransmissionModeType(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'ansit1413'), Enum(1, 'etsi'), Enum(2, 'q9921PotsNonOverlapped'), Enum(3, 'q9921PotsOverlapped'), Enum(4, 'q9921IsdnNonOverlapped'), Enum(5, 'q9921isdnOverlapped'), Enum(6, 'q9921tcmIsdnNonOverlapped'), Enum(7, 'q9921tcmIsdnOverlapped'), Enum(8, 'q9922potsNonOverlapeed'), Enum(9, 'q9922potsOverlapped'), Enum(10, 'q9922tcmIsdnNonOverlapped'), Enum(11, 'q9922tcmIsdnOverlapped'), Enum(12, 'q9921tcmIsdnSymmetric')]

# scalars 
# columns
class adslLineTransAtucCap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 1])
	syntaxobject = AdslTransmissionModeType


class adslLineTransAtucConfig(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 2])
	syntaxobject = AdslTransmissionModeType


class adslLineTransAtucActual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 3])
	syntaxobject = AdslTransmissionModeType


class adslLineGlitePowerState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'l0'), Enum(3, 'l1'), Enum(4, 'l3')]


class adslLineConfProfileDualLite(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 5])
	syntaxobject = SnmpAdminString


class adslAtucPerfStatFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'line retrains'


class adslAtucPerfStatFailedFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'line retrains'


class adslAtucPerfStatSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class adslAtucPerfStatUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class adslAtucPerfCurr15MinFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 5])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr15MinFailedFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 6])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr15MinSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 7])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr15MinUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 8])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr1DayFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 9])
	syntaxobject = AdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr1DayFailedFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 10])
	syntaxobject = AdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr1DaySesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 11])
	syntaxobject = AdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfCurr1DayUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 12])
	syntaxobject = AdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfPrev1DayFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 13])
	syntaxobject = AdslPerfPrevDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfPrev1DayFailedFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 14])
	syntaxobject = AdslPerfPrevDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfPrev1DaySesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 15])
	syntaxobject = AdslPerfPrevDayCount
	access = 4
	units = 'seconds'


class adslAtucPerfPrev1DayUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 16])
	syntaxobject = AdslPerfPrevDayCount
	access = 4
	units = 'seconds'


class adslAtucIntervalFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 1])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class adslAtucIntervalFailedFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 2])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class adslAtucIntervalSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 3])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class adslAtucIntervalUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 4])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class adslAturPerfStatSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class adslAturPerfStatUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class adslAturPerfCurr15MinSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 3])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class adslAturPerfCurr15MinUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 4])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class adslAturPerfCurr1DaySesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 5])
	syntaxobject = AdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class adslAturPerfCurr1DayUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 6])
	syntaxobject = AdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class adslAturPerfPrev1DaySesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 7])
	syntaxobject = AdslPerfPrevDayCount
	access = 4
	units = 'seconds'


class adslAturPerfPrev1DayUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 8])
	syntaxobject = AdslPerfPrevDayCount
	access = 4
	units = 'seconds'


class adslAturIntervalSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21, 1, 1])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class adslAturIntervalUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21, 1, 2])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class adslConfProfileLineType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 22, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noChannel'), Enum(2, 'fastOnly'), Enum(3, 'interleavedOnly'), Enum(4, 'fastOrInterleaved'), Enum(5, 'fastAndInterleaved')]


class adslAtucThreshold15MinFailedFastR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class adslAtucThreshold15MinSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class adslAtucThreshold15MinUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class adslAturThreshold15MinSesL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class adslAturThreshold15MinUasL(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


# rows 
from IF_MIB import ifIndex
class adslLineExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1])
	access = 2
	columns = {'adslLineTransAtucCap': adslLineTransAtucCap, 'adslLineTransAtucConfig': adslLineTransAtucConfig, 'adslLineTransAtucActual': adslLineTransAtucActual, 'adslLineGlitePowerState': adslLineGlitePowerState, 'adslLineConfProfileDualLite': adslLineConfProfileDualLite}


from IF_MIB import ifIndex
class adslAtucPerfDataExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1])
	access = 2
	columns = {'adslAtucPerfStatFastR': adslAtucPerfStatFastR, 'adslAtucPerfStatFailedFastR': adslAtucPerfStatFailedFastR, 'adslAtucPerfStatSesL': adslAtucPerfStatSesL, 'adslAtucPerfStatUasL': adslAtucPerfStatUasL, 'adslAtucPerfCurr15MinFastR': adslAtucPerfCurr15MinFastR, 'adslAtucPerfCurr15MinFailedFastR': adslAtucPerfCurr15MinFailedFastR, 'adslAtucPerfCurr15MinSesL': adslAtucPerfCurr15MinSesL, 'adslAtucPerfCurr15MinUasL': adslAtucPerfCurr15MinUasL, 'adslAtucPerfCurr1DayFastR': adslAtucPerfCurr1DayFastR, 'adslAtucPerfCurr1DayFailedFastR': adslAtucPerfCurr1DayFailedFastR, 'adslAtucPerfCurr1DaySesL': adslAtucPerfCurr1DaySesL, 'adslAtucPerfCurr1DayUasL': adslAtucPerfCurr1DayUasL, 'adslAtucPerfPrev1DayFastR': adslAtucPerfPrev1DayFastR, 'adslAtucPerfPrev1DayFailedFastR': adslAtucPerfPrev1DayFailedFastR, 'adslAtucPerfPrev1DaySesL': adslAtucPerfPrev1DaySesL, 'adslAtucPerfPrev1DayUasL': adslAtucPerfPrev1DayUasL}


from IF_MIB import ifIndex
from ADSL_LINE_MIB import adslAtucIntervalNumber
class adslAtucIntervalExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, adslAtucIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1])
	access = 2
	columns = {'adslAtucIntervalFastR': adslAtucIntervalFastR, 'adslAtucIntervalFailedFastR': adslAtucIntervalFailedFastR, 'adslAtucIntervalSesL': adslAtucIntervalSesL, 'adslAtucIntervalUasL': adslAtucIntervalUasL}


from IF_MIB import ifIndex
class adslAturPerfDataExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1])
	access = 2
	columns = {'adslAturPerfStatSesL': adslAturPerfStatSesL, 'adslAturPerfStatUasL': adslAturPerfStatUasL, 'adslAturPerfCurr15MinSesL': adslAturPerfCurr15MinSesL, 'adslAturPerfCurr15MinUasL': adslAturPerfCurr15MinUasL, 'adslAturPerfCurr1DaySesL': adslAturPerfCurr1DaySesL, 'adslAturPerfCurr1DayUasL': adslAturPerfCurr1DayUasL, 'adslAturPerfPrev1DaySesL': adslAturPerfPrev1DaySesL, 'adslAturPerfPrev1DayUasL': adslAturPerfPrev1DayUasL}


from IF_MIB import ifIndex
from ADSL_LINE_MIB import adslAturIntervalNumber
class adslAturIntervalExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, adslAturIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21, 1])
	access = 2
	columns = {'adslAturIntervalSesL': adslAturIntervalSesL, 'adslAturIntervalUasL': adslAturIntervalUasL}


from ADSL_LINE_MIB import adslLineConfProfileName
class adslConfProfileExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([adslLineConfProfileName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 22, 1])
	access = 2
	columns = {'adslConfProfileLineType': adslConfProfileLineType}


from ADSL_LINE_MIB import adslLineAlarmConfProfileName
class adslAlarmConfProfileExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([adslLineAlarmConfProfileName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1])
	access = 2
	columns = {'adslAtucThreshold15MinFailedFastR': adslAtucThreshold15MinFailedFastR, 'adslAtucThreshold15MinSesL': adslAtucThreshold15MinSesL, 'adslAtucThreshold15MinUasL': adslAtucThreshold15MinUasL, 'adslAturThreshold15MinSesL': adslAturThreshold15MinSesL, 'adslAturThreshold15MinUasL': adslAturThreshold15MinUasL}


# notifications (traps) 
class adslAtucFailedFastRThreshTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0, 1])

class adslAtucSesLThreshTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0, 2])

class adslAtucUasLThreshTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0, 3])

class adslAturSesLThreshTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2, 0, 1])

class adslAturUasLThreshTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2, 0, 2])

# groups 
class adslExtLineGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 1])
	group = [adslLineConfProfileDualLite, adslLineTransAtucCap, adslLineTransAtucConfig, adslLineTransAtucActual, adslLineGlitePowerState]

class adslExtAtucPhysPerfCounterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 2])
	group = [adslAtucPerfStatFastR, adslAtucPerfStatFailedFastR, adslAtucPerfCurr15MinFastR, adslAtucPerfCurr15MinFailedFastR, adslAtucPerfCurr1DayFastR, adslAtucPerfCurr1DayFailedFastR, adslAtucPerfPrev1DayFastR, adslAtucPerfPrev1DayFailedFastR, adslAtucPerfStatSesL, adslAtucPerfStatUasL, adslAtucPerfCurr15MinSesL, adslAtucPerfCurr15MinUasL, adslAtucPerfCurr1DaySesL, adslAtucPerfCurr1DayUasL, adslAtucPerfPrev1DaySesL, adslAtucPerfPrev1DayUasL, adslAtucIntervalFastR, adslAtucIntervalFailedFastR, adslAtucIntervalSesL, adslAtucIntervalUasL]

class adslExtAturPhysPerfCounterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 3])
	group = [adslAturPerfStatSesL, adslAturPerfStatUasL, adslAturPerfCurr15MinSesL, adslAturPerfCurr15MinUasL, adslAturPerfCurr1DaySesL, adslAturPerfCurr1DayUasL, adslAturPerfPrev1DaySesL, adslAturPerfPrev1DayUasL, adslAturIntervalSesL, adslAturIntervalUasL]

class adslExtLineConfProfileControlGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 4])
	group = [adslConfProfileLineType]

class adslExtLineAlarmConfProfileGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 5])
	group = [adslAtucThreshold15MinFailedFastR, adslAtucThreshold15MinSesL, adslAtucThreshold15MinUasL, adslAturThreshold15MinSesL, adslAturThreshold15MinUasL]

class adslExtNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 6])
	group = [adslAtucFailedFastRThreshTrap, adslAtucSesLThreshTrap, adslAtucUasLThreshTrap, adslAturSesLThreshTrap, adslAturUasLThreshTrap]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
