# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1213_MIB import DisplayString
from RFC1155_SMI import enterprises, IpAddress, Gauge, TimeTicks
from RFC_1215 import TRAP_TYPE

class PowerNet_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/PowerNet-MIB'
	conformance = 2
	name = 'PowerNet-MIB'
	language = 1

# nodes
class apc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318])
	name = 'apc'

class products(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1])
	name = 'products'

class hardware(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1])
	name = 'hardware'

class ups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1])
	name = 'ups'

class upsIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1])
	name = 'upsIdent'

class upsBasicIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 1])
	name = 'upsBasicIdent'

class upsAdvIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2])
	name = 'upsAdvIdent'

class upsBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2])
	name = 'upsBattery'

class upsBasicBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1])
	name = 'upsBasicBattery'

class upsAdvBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2])
	name = 'upsAdvBattery'

class upsInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3])
	name = 'upsInput'

class upsBasicInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 1])
	name = 'upsBasicInput'

class upsAdvInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2])
	name = 'upsAdvInput'

class upsOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4])
	name = 'upsOutput'

class upsBasicOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 1])
	name = 'upsBasicOutput'

class upsAdvOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2])
	name = 'upsAdvOutput'

class upsConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5])
	name = 'upsConfig'

class upsBasicConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1])
	name = 'upsBasicConfig'

class upsAdvConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2])
	name = 'upsAdvConfig'

class upsControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6])
	name = 'upsControl'

class upsBasicControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 1])
	name = 'upsBasicControl'

class upsAdvControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2])
	name = 'upsAdvControl'

class upsTest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7])
	name = 'upsTest'

class upsBasicTest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 1])
	name = 'upsBasicTest'

class upsAdvTest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2])
	name = 'upsAdvTest'

class upsComm(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 8])
	name = 'upsComm'

class upsPhase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9])
	name = 'upsPhase'

class upsPhaseResetValues(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 1])
	name = 'upsPhaseResetValues'

class upsPhaseInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2])
	name = 'upsPhaseInput'

class upsPhaseOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3])
	name = 'upsPhaseOutput'

class upsSyncCtrlGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10])
	name = 'upsSyncCtrlGroup'

class upsSyncCtrlGroupConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1])
	name = 'upsSyncCtrlGroupConfig'

class upsSyncCtrlGroupStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2])
	name = 'upsSyncCtrlGroupStatus'

class upsState(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11])
	name = 'upsState'

class upsBasicState(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 1])
	name = 'upsBasicState'

class upsAdvState(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2])
	name = 'upsAdvState'

class upsOutletGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12])
	name = 'upsOutletGroups'

class upsOutletGroupStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1])
	name = 'upsOutletGroupStatus'

class upsOutletGroupConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2])
	name = 'upsOutletGroupConfig'

class upsOutletGroupControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3])
	name = 'upsOutletGroupControl'

class upsDiagnostics(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13])
	name = 'upsDiagnostics'

class upsDiagnosticIM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1])
	name = 'upsDiagnosticIM'

class upsDiagnosticPowerModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2])
	name = 'upsDiagnosticPowerModules'

class upsDiagnosticBatteries(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3])
	name = 'upsDiagnosticBatteries'

class upsDiagnosticSubsystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4])
	name = 'upsDiagnosticSubsystem'

class upsDiagnosticExternalDevices(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5])
	name = 'upsDiagnosticExternalDevices'

class upsDiagSwitchGear(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1])
	name = 'upsDiagSwitchGear'

class upsDiagMCCBBox(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 2])
	name = 'upsDiagMCCBBox'

class upsDiagTransformer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 3])
	name = 'upsDiagTransformer'

class upsDiagnosticComBus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6])
	name = 'upsDiagnosticComBus'

class measureUps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2])
	name = 'measureUps'

class mUpsEnviron(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1])
	name = 'mUpsEnviron'

class mUpsContact(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2])
	name = 'mUpsContact'

class miniSNMPadapter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3])
	name = 'miniSNMPadapter'

class serialPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1])
	name = 'serialPort'

class serialPort1(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 1])
	name = 'serialPort1'

class serialPort2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 2])
	name = 'serialPort2'

class serialPort2Config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 2, 1])
	name = 'serialPort2Config'

class serialPort2Control(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 2, 2])
	name = 'serialPort2Control'

class masterswitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4])
	name = 'masterswitch'

class sPDUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1])
	name = 'sPDUIdent'

class sPDUMasterControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2])
	name = 'sPDUMasterControl'

class sPDUMasterConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3])
	name = 'sPDUMasterConfig'

class sPDUOutletControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4])
	name = 'sPDUOutletControl'

class sPDUOutletConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5])
	name = 'sPDUOutletConfig'

class masterswitchVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5])
	name = 'masterswitchVM'

class sPDUIdentVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1])
	name = 'sPDUIdentVM'

class sPDUMasterControlVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2])
	name = 'sPDUMasterControlVM'

class sPDUMasterConfigVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3])
	name = 'sPDUMasterConfigVM'

class sPDUMasterStatusVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4])
	name = 'sPDUMasterStatusVM'

class sPDUOutletControlVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5])
	name = 'sPDUOutletControlVM'

class sPDUOutletConfigVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6])
	name = 'sPDUOutletConfigVM'

class sPDUOutletStatusVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7])
	name = 'sPDUOutletStatusVM'

class masterswitchMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6])
	name = 'masterswitchMSP'

class sPDUIdentMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1])
	name = 'sPDUIdentMSP'

class sPDUMasterControlMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2])
	name = 'sPDUMasterControlMSP'

class sPDUMasterConfigMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3])
	name = 'sPDUMasterConfigMSP'

class sPDUMasterStatusMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4])
	name = 'sPDUMasterStatusMSP'

class sPDUOutletControlMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5])
	name = 'sPDUOutletControlMSP'

class sPDUOutletConfigMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6])
	name = 'sPDUOutletConfigMSP'

class sPDUOutletConfigMSPall(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1])
	name = 'sPDUOutletConfigMSPall'

class sPDUOutletConfigMSPgs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2])
	name = 'sPDUOutletConfigMSPgs'

class sPDUOutletConfigMSPannun(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3])
	name = 'sPDUOutletConfigMSPannun'

class sPDUOutletConfigMSPmups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4])
	name = 'sPDUOutletConfigMSPmups'

class sPDUOutletStatusMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7])
	name = 'sPDUOutletStatusMSP'

class dcDM3(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7])
	name = 'dcDM3'

class dm3Ident(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1])
	name = 'dm3Ident'

class dm3IdentSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1])
	name = 'dm3IdentSystem'

class dm3Config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2])
	name = 'dm3Config'

class dm3ConfigSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1])
	name = 'dm3ConfigSystem'

class dm3ConfigLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2])
	name = 'dm3ConfigLVD'

class dm3ConfigBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3])
	name = 'dm3ConfigBattery'

class dm3ConfigPowerModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4])
	name = 'dm3ConfigPowerModules'

class dm3ConfigRectifier(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1])
	name = 'dm3ConfigRectifier'

class dm3ConfigRectThresh(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1])
	name = 'dm3ConfigRectThresh'

class dm3ConfigRectAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2])
	name = 'dm3ConfigRectAlarms'

class dm3ConfigConverter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2])
	name = 'dm3ConfigConverter'

class dm3ConfigConvThresh(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1])
	name = 'dm3ConfigConvThresh'

class dm3ConfigConvAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2])
	name = 'dm3ConfigConvAlarms'

class dm3ConfigRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5])
	name = 'dm3ConfigRelays'

class dm3ConfigOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1])
	name = 'dm3ConfigOutputRelays'

class dm3ConfigInputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2])
	name = 'dm3ConfigInputRelays'

class dm3ConfigDistribution(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6])
	name = 'dm3ConfigDistribution'

class dm3ConfigBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1])
	name = 'dm3ConfigBreakers'

class dm3ConfigFuses(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2])
	name = 'dm3ConfigFuses'

class dm3Status(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3])
	name = 'dm3Status'

class dm3StatusSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1])
	name = 'dm3StatusSystem'

class dm3StatusAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2])
	name = 'dm3StatusAlarms'

class dm3StatusBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3])
	name = 'dm3StatusBattery'

class dm3StatusOEM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4])
	name = 'dm3StatusOEM'

class dm3StatusLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5])
	name = 'dm3StatusLVD'

class dm3StatusPowerModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6])
	name = 'dm3StatusPowerModules'

class dm3StatusRectifier(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1])
	name = 'dm3StatusRectifier'

class dm3StatusConverter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2])
	name = 'dm3StatusConverter'

class dm3StatusRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7])
	name = 'dm3StatusRelays'

class dm3StatusOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1])
	name = 'dm3StatusOutputRelays'

class dm3StatusInputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2])
	name = 'dm3StatusInputRelays'

class dm3StatusDistribution(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8])
	name = 'dm3StatusDistribution'

class dm3StatusBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1])
	name = 'dm3StatusBreakers'

class dm3StatusFuses(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2])
	name = 'dm3StatusFuses'

class automaticTransferSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8])
	name = 'automaticTransferSwitch'

class atsIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1])
	name = 'atsIdent'

class atsCalibration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2])
	name = 'atsCalibration'

class atsCalibrationInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1])
	name = 'atsCalibrationInput'

class atsCalibrationPowerSupply(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2])
	name = 'atsCalibrationPowerSupply'

class atsCalibrationOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3])
	name = 'atsCalibrationOutput'

class atsControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 3])
	name = 'atsControl'

class atsConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4])
	name = 'atsConfig'

class atsStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5])
	name = 'atsStatus'

class atsStatusDeviceStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1])
	name = 'atsStatusDeviceStatus'

class atsStatusResetValues(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 2])
	name = 'atsStatusResetValues'

class atsStatusInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3])
	name = 'atsStatusInput'

class atsStatusOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4])
	name = 'atsStatusOutput'

class dc2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9])
	name = 'dc2'

class dcmim2Ident(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 1])
	name = 'dcmim2Ident'

class dcmim2IdentSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 1, 1])
	name = 'dcmim2IdentSystem'

class dcmim2Control(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2])
	name = 'dcmim2Control'

class dcmim2ControlSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2, 1])
	name = 'dcmim2ControlSystem'

class dcmim2Config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3])
	name = 'dcmim2Config'

class dcmim2ConfigSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1])
	name = 'dcmim2ConfigSystem'

class dcmim2ConfigBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2])
	name = 'dcmim2ConfigBattery'

class dcmim2ConfigLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3])
	name = 'dcmim2ConfigLVD'

class dcmim2Status(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4])
	name = 'dcmim2Status'

class dcmim2StatusSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1])
	name = 'dcmim2StatusSystem'

class dcmim2StatusRectifier(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2])
	name = 'dcmim2StatusRectifier'

class dcmim2StatusBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3])
	name = 'dcmim2StatusBattery'

class dcmim2StatusLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4])
	name = 'dcmim2StatusLVD'

class dcmim2StatusAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5])
	name = 'dcmim2StatusAlarms'

class environmentalMonitor(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10])
	name = 'environmentalMonitor'

class external(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1])
	name = 'external'

class emIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 1])
	name = 'emIdent'

class emConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2])
	name = 'emConfig'

class emStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3])
	name = 'emStatus'

class integrated(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2])
	name = 'integrated'

class iemIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 1])
	name = 'iemIdent'

class iemConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2])
	name = 'iemConfig'

class iemStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3])
	name = 'iemStatus'

class envMgtSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3])
	name = 'envMgtSystem'

class emsIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1])
	name = 'emsIdent'

class emsOutputRelayControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2])
	name = 'emsOutputRelayControl'

class emsOutletControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3])
	name = 'emsOutletControl'

class emsSensorControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4])
	name = 'emsSensorControl'

class emsAlarmDeviceControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5])
	name = 'emsAlarmDeviceControl'

class emsConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 6])
	name = 'emsConfig'

class emsProbeConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7])
	name = 'emsProbeConfig'

class emsInputContactConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8])
	name = 'emsInputContactConfig'

class emsOutputRelayConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9])
	name = 'emsOutputRelayConfig'

class emsOutletConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10])
	name = 'emsOutletConfig'

class emsSensorConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11])
	name = 'emsSensorConfig'

class emsStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12])
	name = 'emsStatus'

class emsProbeStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13])
	name = 'emsProbeStatus'

class emsInputContactStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14])
	name = 'emsInputContactStatus'

class emsOutputRelayStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15])
	name = 'emsOutputRelayStatus'

class emsOutletStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16])
	name = 'emsOutletStatus'

class emsAlarmDeviceStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17])
	name = 'emsAlarmDeviceStatus'

class emsSensorStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18])
	name = 'emsSensorStatus'

class netlock(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 11])
	name = 'netlock'

class nlIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 11, 1])
	name = 'nlIdent'

class nlStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 11, 2])
	name = 'nlStatus'

class rPDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12])
	name = 'rPDU'

class rPDUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1])
	name = 'rPDUIdent'

class rPDULoad(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2])
	name = 'rPDULoad'

class rPDULoadDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1])
	name = 'rPDULoadDevice'

class rPDULoadConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2])
	name = 'rPDULoadConfig'

class rPDULoadStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3])
	name = 'rPDULoadStatus'

class rPDUOutlet(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3])
	name = 'rPDUOutlet'

class rPDUOutletDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1])
	name = 'rPDUOutletDevice'

class rPDUOutletPhase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2])
	name = 'rPDUOutletPhase'

class rPDUOutletControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3])
	name = 'rPDUOutletControl'

class rPDUOutletConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4])
	name = 'rPDUOutletConfig'

class rPDUOutletStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5])
	name = 'rPDUOutletStatus'

class rPDUPowerSupply(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4])
	name = 'rPDUPowerSupply'

class rPDUPowerSupplyDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1])
	name = 'rPDUPowerSupplyDevice'

class airConditioners(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13])
	name = 'airConditioners'

class airFM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1])
	name = 'airFM'

class airFMIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1])
	name = 'airFMIdent'

class airFMStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2])
	name = 'airFMStatus'

class airPA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2])
	name = 'airPA'

class airPAIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1])
	name = 'airPAIdent'

class airPAStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2])
	name = 'airPAStatus'

class rARU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14])
	name = 'rARU'

class rARUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1])
	name = 'rARUIdent'

class rARUConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2])
	name = 'rARUConfig'

class rARUStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3])
	name = 'rARUStatus'

class xPDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15])
	name = 'xPDU'

class xPDUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1])
	name = 'xPDUIdent'

class xPDUDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2])
	name = 'xPDUDevice'

class xPDUACMonitoringPoint(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3])
	name = 'xPDUACMonitoringPoint'

class xPDUMainInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1])
	name = 'xPDUMainInput'

class xPDUBypassInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2])
	name = 'xPDUBypassInput'

class xPDUUPSInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3])
	name = 'xPDUUPSInput'

class xPDUSystemOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4])
	name = 'xPDUSystemOutput'

class xPDUGroundMonitorPoint(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 5])
	name = 'xPDUGroundMonitorPoint'

class xPDUCircuitBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4])
	name = 'xPDUCircuitBreakers'

class xPDUSystemBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1])
	name = 'xPDUSystemBreakers'

class xPDUBranchBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2])
	name = 'xPDUBranchBreakers'

class xPDUInputContacts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5])
	name = 'xPDUInputContacts'

class xPDUOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6])
	name = 'xPDUOutputRelays'

class xPDUMiscGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7])
	name = 'xPDUMiscGroup'

class software(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2])
	name = 'software'

class powerNetSubAgent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1])
	name = 'powerNetSubAgent'

class powerNetSoftwareSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1])
	name = 'powerNetSoftwareSystem'

class powerNetSoftwareConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2])
	name = 'powerNetSoftwareConfig'

class system(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3])
	name = 'system'

class backUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 1])
	name = 'backUPS'

class smartUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2])
	name = 'smartUPS'

class smartUPS250(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 1])
	name = 'smartUPS250'

class smartUPS400(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 2])
	name = 'smartUPS400'

class smartUPS600(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 3])
	name = 'smartUPS600'

class smartUPS900(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 4])
	name = 'smartUPS900'

class smartUPS1250(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 5])
	name = 'smartUPS1250'

class smartUPS2000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 6])
	name = 'smartUPS2000'

class smartUPS450(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 7])
	name = 'smartUPS450'

class smartUPS700(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 8])
	name = 'smartUPS700'

class smartUPS1000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 9])
	name = 'smartUPS1000'

class smartUPS1400(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 10])
	name = 'smartUPS1400'

class smartUPS2200(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 11])
	name = 'smartUPS2200'

class smartUPS3000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 12])
	name = 'smartUPS3000'

class smartUPS5000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 13])
	name = 'smartUPS5000'

class smartUPS7500(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 14])
	name = 'smartUPS7500'

class smartUPS10000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 15])
	name = 'smartUPS10000'

class matrixUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 3])
	name = 'matrixUPS'

class matrixUPS3000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 3, 1])
	name = 'matrixUPS3000'

class matrixUPS5000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 3, 2])
	name = 'matrixUPS5000'

class masterSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4])
	name = 'masterSwitch'

class masterSwitchV1(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 1])
	name = 'masterSwitchV1'

class masterSwitchV2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 2])
	name = 'masterSwitchV2'

class masterSwitchVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 3])
	name = 'masterSwitchVM'

class masterSwitchMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 4])
	name = 'masterSwitchMSP'

class masterSwitchrPDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 5])
	name = 'masterSwitchrPDU'

class symmetraUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5])
	name = 'symmetraUPS'

class symmetraUPS4kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 1])
	name = 'symmetraUPS4kVA'

class symmetraUPS8kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 2])
	name = 'symmetraUPS8kVA'

class symmetraUPS12kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 3])
	name = 'symmetraUPS12kVA'

class symmetraUPS16kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 4])
	name = 'symmetraUPS16kVA'

class dp100E(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 6])
	name = 'dp100E'

class dp300E(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 7])
	name = 'dp300E'

class monitors(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8])
	name = 'monitors'

class environmental(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 1])
	name = 'environmental'

class environmentalMgtSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 2])
	name = 'environmentalMgtSystem'

class emu2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 3])
	name = 'emu2'

class redundantSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 9])
	name = 'redundantSwitch'

class dcPower(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 10])
	name = 'dcPower'

class dm3(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 10, 1])
	name = 'dm3'

class dcmim2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 10, 2])
	name = 'dcmim2'

class automaticXferSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 11])
	name = 'automaticXferSwitch'

class netLock(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 12])
	name = 'netLock'

class symmetra3PhaseUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13])
	name = 'symmetra3PhaseUPS'

class symmetra3PhaseUPS40kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 1])
	name = 'symmetra3PhaseUPS40kVA'

class symmetra3PhaseUPS60kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 2])
	name = 'symmetra3PhaseUPS60kVA'

class symmetra3PhaseUPS80kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 3])
	name = 'symmetra3PhaseUPS80kVA'

class symmetra3PhaseUPS20kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 4])
	name = 'symmetra3PhaseUPS20kVA'

class networkAir(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14])
	name = 'networkAir'

class airFMSeries(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14, 1])
	name = 'airFMSeries'

class rackAirRemovalUnit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14, 2])
	name = 'rackAirRemovalUnit'

class airPASeries(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14, 3])
	name = 'airPASeries'

class infraXurePDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 15])
	name = 'infraXurePDU'

class experimental(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 4])
	name = 'experimental'

class apcmgmt(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2])
	name = 'apcmgmt'

class mconfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1])
	name = 'mconfig'

class mconfigClock(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 6])
	name = 'mconfigClock'

class mcontrol(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 2])
	name = 'mcontrol'

class mtrapargs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3])
	name = 'mtrapargs'

class mfiletransfer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4])
	name = 'mfiletransfer'

class mfiletransferStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 1])
	name = 'mfiletransferStatus'

class mfiletransferConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2])
	name = 'mfiletransferConfig'

class mfiletransferConfigSettings(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 1])
	name = 'mfiletransferConfigSettings'

class mfiletransferConfigTFTP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 2])
	name = 'mfiletransferConfigTFTP'

class mfiletransferConfigFTP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3])
	name = 'mfiletransferConfigFTP'

class mfiletransferControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 3])
	name = 'mfiletransferControl'


# macros
# types 
# scalars 
class upsBasicIdentModel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsBasicIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvIdentFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsBasicBatteryStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'batteryNormal'), Enum(3, 'batteryLow')]


class upsBasicBatteryTimeOnBattery(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsBasicBatteryLastReplaceDate(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvBatteryCapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvBatteryTemperature(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvBatteryRunTimeRemaining(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvBatteryReplaceIndicator(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noBatteryNeedsReplacing'), Enum(2, 'batteryNeedsReplacing')]


class upsAdvBatteryNumOfBattPacks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvBatteryNumOfBadBattPacks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsBasicInputPhase(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvInputLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputMaxLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputMinLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputLineFailCause(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTransfer'), Enum(2, 'highLineVoltage'), Enum(3, 'brownout'), Enum(4, 'blackout'), Enum(5, 'smallMomentarySag'), Enum(6, 'deepMomentarySag'), Enum(7, 'smallMomentarySpike'), Enum(8, 'largeMomentarySpike'), Enum(9, 'selfTest'), Enum(10, 'rateOfVoltageChnage')]


class upsBasicOutputStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'onLine'), Enum(3, 'onBattery'), Enum(4, 'onSmartBoost'), Enum(5, 'timedSleeping'), Enum(6, 'softwareBypass'), Enum(7, 'off'), Enum(8, 'rebooting'), Enum(9, 'switchedBypass'), Enum(10, 'hardwareFailureBypass'), Enum(11, 'sleepingUntilPowerReturn'), Enum(12, 'onSmartTrim')]


class upsBasicOutputPhase(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvOutputVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputLoad(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsBasicConfigNumDevices(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigRatedOutputVoltage(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigHighTransferVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigLowTransferVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'timed'), Enum(2, 'atLowBattery'), Enum(3, 'never')]


class upsAdvConfigAlarmTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigMinReturnCapacity(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigSensitivity(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto'), Enum(2, 'low'), Enum(3, 'medium'), Enum(4, 'high')]


class upsAdvConfigLowBatteryRunTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigReturnDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigShutoffDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigUpsSleepTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigSetEEPROMDefaults(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noSetEEPROMDefaults'), Enum(2, 'setEEPROMDefaults')]


class upsAdvConfigBattExhaustThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigPassword(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvConfigBattCabAmpHour(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigPositionSelector(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'rack'), Enum(3, 'tower')]


class upsAdvConfigOutputFreqRange(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'freqRangeAUTO'), Enum(3, 'freqRange60Var1'), Enum(4, 'freqRange60Var3'), Enum(5, 'freqRange50Var1'), Enum(6, 'freqRange50Var3'), Enum(7, 'freqRange60Var10'), Enum(8, 'freqRange50Var10')]


class upsAdvConfigUPSFail(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'gotoBypass'), Enum(3, 'dropLoad')]


class upsAdvConfigAlarmRedundancy(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigAlarmLoadOver(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigAlarmRuntimeUnder(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigVoutReporting(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'voutAUTO'), Enum(3, 'vout208'), Enum(4, 'vout240')]


class upsBasicControlConserveBattery(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTurnOffUps'), Enum(2, 'turnOffUpsToConserveBattery')]


class upsAdvControlUpsOff(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTurnUpsOff'), Enum(2, 'turnUpsOff'), Enum(3, 'turnUpsOffGracefully'), Enum(4, 'turnUpsSyncGroupOff'), Enum(5, 'turnUpsSyncGroupOffAfterDelay'), Enum(6, 'turnUpsSyncGroupOffGracefully')]


class upsAdvControlRebootUps(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noRebootUps'), Enum(2, 'rebootUps'), Enum(3, 'rebootUpsGracefully'), Enum(4, 'rebootSyncGroupUps'), Enum(5, 'rebootSyncGroupUpsGracefully')]


class upsAdvControlUpsSleep(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPutUpsToSleep'), Enum(2, 'putUpsToSleep'), Enum(3, 'putUpsToSleepGracefully'), Enum(4, 'putUpsSyncGroupToSleep'), Enum(5, 'putUpsSyncGroupToSleepGracefully')]


class upsAdvControlSimulatePowerFail(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noSimulatePowerFailure'), Enum(2, 'simulatePowerFailure')]


class upsAdvControlFlashAndBeep(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noFlashAndBeep'), Enum(2, 'flashAndBeep'), Enum(3, 'flashAndBeepSyncGroup')]


class upsAdvControlTurnOnUPS(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTurnOnUPS'), Enum(2, 'turnOnUPS'), Enum(3, 'turnOnUPSSyncGroup')]


class upsAdvControlBypassSwitch(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noBypassSwitch'), Enum(2, 'switchToBypass'), Enum(3, 'switchOutOfBypass')]


class upsAdvTestDiagnosticSchedule(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'biweekly'), Enum(3, 'weekly'), Enum(4, 'atTurnOn'), Enum(5, 'never')]


class upsAdvTestDiagnostics(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTestDiagnostics'), Enum(2, 'testDiagnostics')]


class upsAdvTestDiagnosticsResults(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'failed'), Enum(3, 'invalidTest'), Enum(4, 'testInProgress')]


class upsAdvTestLastDiagnosticsDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvTestRuntimeCalibration(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPerformCalibration'), Enum(2, 'performCalibration'), Enum(3, 'cancelCurrentCalibration')]


class upsAdvTestCalibrationResults(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'invalidCalibration'), Enum(3, 'calibrationInProgress')]


class upsAdvTestCalibrationDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'noComm')]


class upsPhaseResetMaxMinValues(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class upsPhaseNumInputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseNumOutputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGMembershipGroupNumber(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGActiveMembershipStatus(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledSCG'), Enum(2, 'disabledSCG')]


class upsSCGPowerSynchronizationDelayTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGReturnBatteryCapacityOffset(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGMultiCastIP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class upsSCGNumOfGroupMembers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsBasicStateOutputState(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvStateAbnormalConditions(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvStateSymmetra3PhaseSpecificFaults(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvStateDP300ESpecificFaults(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupControlTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagIMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagPMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagBatteryTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysFrameTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysIntBypSwitchTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysBattMonitorTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalSwitchGearTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDisplayInterfaceCardTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDCCircuitBreakerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysSystemPowerSupplyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysXRCommunicationCardTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalPowerFrameBoardTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysChargerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSwitchGearStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'fail'), Enum(5, 'lostComm'), Enum(6, 'overtemp')]


class upsDiagSwitchGearInputSwitchStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagSwitchGearOutputSwitchStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagSwitchGearBypassSwitchStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagMCCBBoxStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagTransformerStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'fail'), Enum(5, 'lostComm'), Enum(6, 'overtemp'), Enum(7, 'opened'), Enum(8, 'closed')]


class upsDiagComBusInternalMIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusInternalRIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusMIMtoRIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusExternalMIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusExternalRIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class mUpsEnvironAmbientTemperature(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsEnvironRelativeHumidity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsEnvironAmbientTemperature2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsEnvironRelativeHumidity2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsContactNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlSwitch(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'turnAllOnNow'), Enum(2, 'turnAllOnSequence'), Enum(3, 'turnAllOffNow'), Enum(4, 'rebootAllNow'), Enum(5, 'rebootAllSequence'), Enum(6, 'noCommand'), Enum(7, 'turnAllOffSequence')]


class sPDUMasterState(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterPending(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterConfigPowerOn(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigReboot(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigPDUName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysDescriptionTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysModel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysCntrlRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysFWVersion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysDescriptionTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysHighTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysHighTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigSysLowTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysLowTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigSysHardwareTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigSysRemoteAccess(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'accessEnabled'), Enum(2, 'accessDisabled')]


class dm3ConfigLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattFloatVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattMaxRecharge(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattDischargeThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattDischargeAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattHighVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattHighVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattLowVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattLowVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattHighTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattHighTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattLowTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattLowTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattAmpHour(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigCompMethod(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tempcompOn'), Enum(2, 'tempcompOff')]


class dm3ConfigCompTempCoeff(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigHighKneeTemp(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLowKneeTemp(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattHwCurrentAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattHwTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectHighVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectLowVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectFailSafe(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectFailComm(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectHighVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectLowVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectConfigAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRect1ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRect2ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectDiagAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectImbalanceAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectCurrLimitAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectStandbyAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectFanFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectHwVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvHighVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvLowVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailSafe(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvSetPoint(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailMax(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailMin(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailComm(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvHighVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvLowVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvConfigAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConv1ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConv2ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvDiagAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvImbalanceAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvCurrLimitAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvStandbyAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvFanFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvHwVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigOutRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigInRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBreakersTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigFusesTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSystemTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSystemStart(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusSysRemoteAccess(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'accessEnabled'), Enum(2, 'accessDisabled')]


class dm3StatusSysSecurityLevel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysTempSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusSysAlarmState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmMinor'), Enum(2, 'alarmMajor'), Enum(3, 'alarmBoth'), Enum(4, 'alarmNone')]


class dm3StatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class dm3StatusAlarmsTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBattCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBattTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBattCurrentSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusBattTempSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusOEMrectOffset(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMrectGain(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMconvOffset(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMconvGain(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMshuntOffset(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMshuntGain(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysRectVoltSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusSysRectAvailable(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusSysRectType(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysRectVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysRectCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysConvVoltSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusSysConvAvailable(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusSysConvType(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysConvVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysConvCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOutRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusInRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBreakersTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusFusesTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentFirmwareDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentNominalLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsIdentNominalLineFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumInputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumInputPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationPowerSupplyVoltages(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumOutputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumOutputPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsControlResetATS(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class atsControlClearAllAlarms(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'clear')]


class atsConfigProductName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsConfigPreferredSource(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceA'), Enum(2, 'sourceB'), Enum(3, 'none')]


class atsConfigFrontPanelLockout(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableFrontPanel'), Enum(2, 'enableFrontPanel')]


class atsConfigVoltageSensitivity(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'high'), Enum(2, 'low')]


class atsConfigTransferVoltageRange(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'wide'), Enum(2, 'medium'), Enum(3, 'narrow')]


class atsConfigCurrentLimit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsConfigResetValues(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class atsStatusCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsNeverDiscovered'), Enum(2, 'atsCommEstablished'), Enum(3, 'atsCommLost')]


class atsStatusSelectedSource(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceA'), Enum(2, 'sourceB')]


class atsStatusRedundancyState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsRedundancyLost'), Enum(2, 'atsFullyRedundant')]


class atsStatusOverCurrentState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsOverCurrent'), Enum(2, 'atsCurrentOK')]


class atsStatus5VPowerSupply(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsPowerSupplyFailure'), Enum(2, 'atsPowerSupplyOK')]


class atsStatus24VPowerSupply(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsPowerSupplyFailure'), Enum(2, 'atsPowerSupplyOK')]


class atsStatusResetMaxMinValues(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class atsNumInputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsNumOutputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2IdentSysFWVersion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ControlRunFunctBatteryTest(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'battTestOff'), Enum(2, 'battTestOn')]


class dcmim2ControlRunCapacityBatteryTest(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'battTestOff'), Enum(2, 'battTestOn')]


class dcmim2ConfigSysHighTempTrip(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigSysHighTempReset(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigSysLowTempTrip(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigSysLowTempReset(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattFloatVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattMaxRecharge(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattMfgCapacity(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattType(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattFunctTestDuration(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattFunctTestThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattCapacityTestPercent(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattCapacityTestEndThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattCapacityTestCurrent(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysRectCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysLoadCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysBusVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysAmbientTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysUpTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dcmim2StatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class dcmim2StatusRectTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattFloatVolt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattMfgCapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattTestCapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattFunctTestResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'functTestNotPerformed'), Enum(2, 'functTestInProcess'), Enum(3, 'functTestInterrupted'), Enum(4, 'functTestPass'), Enum(5, 'functTestFail')]


class dcmim2StatusBattCapacityTestResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'capacityTestNotPerformed'), Enum(2, 'capacityTestInProcess'), Enum(3, 'capacityTestInterrupted'), Enum(4, 'capacityTestPass'), Enum(5, 'capacityTestFail')]


class dcmim2StatusLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusAlarmsTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emIdentFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noComm'), Enum(2, 'comm'), Enum(3, 'commLost')]


class emStatusProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemIdentHardwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusRelaysNumRelays(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsIdentEMSName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentProductNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsConfigName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsConfigCheckLogLight(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lightDisabled'), Enum(2, 'lightOnInformational'), Enum(3, 'lightOnWarning'), Enum(4, 'lightOnSevere')]


class emsStatusEMSName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsStatusCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noComm'), Enum(2, 'comm'), Enum(3, 'commLost')]


class emsStatusProbeCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusInputContactCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusOutputRelayCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusOutletCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusSensorCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusAlinkAruDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusAlinkProbeDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusAlarmDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class emsStatusCheckLogLight(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lightOff'), Enum(2, 'lightOn')]


class rPDUIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDULoadDevMaxPhaseLoad(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevNumPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletDevCommand(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandAll'), Enum(2, 'immediateAllOn'), Enum(3, 'immediateAllOff'), Enum(4, 'immediateAllReboot'), Enum(5, 'delayedAllOn'), Enum(6, 'delayedAllOff'), Enum(7, 'delayedAllReboot'), Enum(8, 'cancelAllPendingCommands')]


class rPDUOutletDevColdstartDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletDevNumCntrlOutlets(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUPowerSupply1Status(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerSupply1Ok'), Enum(2, 'powerSupply1Failed')]


class rPDUPowerSupply2Status(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerSupply2Ok'), Enum(2, 'powerSupply2Failed')]


class airFMIdentName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemOn(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOn'), Enum(2, 'statusOff')]


class airFMStatusSystemAverageRetTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemAverageRetTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemAverageRetHum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemActionTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemActionTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemActionHum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteHighTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteHighTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteAvgTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteAvgTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteAvgHum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteLowTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteLowTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemCoolingEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusSystemReheatingEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusSystemHumidifyEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusSystemDehumidifyEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusModuleTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPAIdentName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPAModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPADateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPASerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPAFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPAHardwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPASystemPower(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerON'), Enum(2, 'powerOFF')]


class airPAOperatingMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeOFF'), Enum(2, 'modeVENTING'), Enum(3, 'modeCOOLING')]


class airPASetpoint(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPABlowerSpeed(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'speedLOW'), Enum(2, 'speedHIGH')]


class airPACompressor(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusON'), Enum(2, 'statusOFF')]


class airPACondenserFan(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusON'), Enum(2, 'statusOFF')]


class airPACondensatePump(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusON'), Enum(2, 'statusOFF')]


class airPASupplyTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPASupplyTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPAReturnTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPAReturnTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPARemoteTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPARemoteTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPARemoteHumidity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class xPDUIdentProductName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUDeviceNominalMainInputVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDeviceServiceType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'delta'), Enum(2, 'wye')]


class xPDUDeviceNominalOutputVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDeviceMainInputBreakerRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDevicePanelBreakerRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDeviceTransformerPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUIdentCallibrationDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUDeviceLoadTieBreakerPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceLoadTestPortPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceFusesPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceFansPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceBypassInputPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceCrossTieOutputPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceEarthGroundMonitorPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceInfraXureType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'typeB'), Enum(2, 'typeC')]


class xPDUMainInputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputVoltageTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltageTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUUPSInputVoltageTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputNeutralCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTotalPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTotalVoltAmps(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTotalPowerFactor(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputFrequencyTolerance(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputMaxKWPower(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputOverCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputOverCurrentNeutralThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputUnderCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUGroundCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUGroundCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemBreakerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUNumOfBranchBreakers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUOutputRelaysNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUOutputRelaysTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUEPOMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'armed'), Enum(2, 'disarmed')]


class xPDUTransformTempStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'overtemp')]


class xPDUCoolingFanStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'failed')]


class powerNetSoftwareSystemDescription(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class powerNetSoftwareOid(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class powerNetSoftwareSystemUpTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class powerNetSoftwareTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mconfigNumTrapReceivers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mconfigBOOTPEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class mconfigTFTPServerIP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class newCodeAuthentViaTFTP(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'validNewAgentCodeImage'), Enum(3, 'sameAgentCodeImage'), Enum(4, 'invalidAgentCodeImage')]


class mconfigClockDate(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mconfigClockTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mcontrolRestartAgent(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'restartCurrentAgent'), Enum(2, 'continueCurrentAgent'), Enum(3, 'loadAndExecuteNewAgent'), Enum(4, 'restartWithoutAgent'), Enum(5, 'resetNetworkAndRestart')]


class mtrapargsInteger(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsIpAddress(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mtrapargsString(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsGauge(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mtrapargsTimeTicks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mtrapargsInteger02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsInteger03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsIpAddress02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mtrapargsIpAddress03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mtrapargsString02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsString03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsGauge02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mtrapargsGauge03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mtrapargsTimeTicks02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mtrapargsTimeTicks03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mfiletransferStatusLastTransferResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lastFileTransferResultSuccessful'), Enum(2, 'lastFileTransferResultNotAvailable'), Enum(3, 'lastFileTransferResultFailureUnknown'), Enum(4, 'lastFileTransferResultFailureServerInaccessible'), Enum(5, 'lastFileTransferResultFailureServerAccessDenied'), Enum(6, 'lastFileTransferResultFailureFileNotFound'), Enum(7, 'lastFileTransferResultFailureFileTypeUnknown'), Enum(8, 'lastFileTransferResultFailureFileCorrupted')]


class mfiletransferConfigSettingsFilename(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigTFTPServerAddress(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigFTPServerAddress(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigFTPServerUser(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigFTPServerPassword(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferControlInitiateFileTransfer(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'doNotInitiateFileTransfer'), Enum(2, 'initiateFileTransferDownloadViaTFTP'), Enum(3, 'initiateFileTransferDownloadViaFTP')]


# columns
class deviceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class deviceName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vaRating(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class acceptThisDevice(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class dipSwitchIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dipSwitchStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off')]


class apcUpsConfigFieldIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apcUpsConfigFieldOID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class apcUpsConfigFieldValueRange(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsPhaseInputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseNumInputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class upsPhaseInputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'main'), Enum(3, 'bypass')]


class upsPhaseInputName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsPhaseInputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMaxVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMinVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseNumOutputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class upsPhaseOutputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGStatusTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGMemberIP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class upsSCGACInputStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'acInGood'), Enum(2, 'acInBad')]


class upsSCGACOutputStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'acOutOn'), Enum(2, 'acOutOff')]


class upsOutletGroupStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupStatusName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupStatusGroupState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'upsOutletGroupStatusOn'), Enum(2, 'upsOutletGroupStatusOff'), Enum(3, 'upsOutletGroupStatusUnknown')]


class upsOutletGroupStatusCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'upsOutletGroupCommandPending'), Enum(2, 'upsOutletGroupNoCommandPending')]


class upsOutletGroupConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupConfigPowerOnDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigPowerOffDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupControlIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupControlName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupControlCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'upsOutletGroupImmediateOn'), Enum(2, 'upsOutletGroupImmediateOff'), Enum(3, 'upsOutletGroupImmediateReboot'), Enum(4, 'upsOutletGroupDelayedOn'), Enum(5, 'upsOutletGroupDelayedOff'), Enum(6, 'upsOutletGroupDelayedReboot'), Enum(7, 'upsOutletGroupCancelPendingCommand'), Enum(8, 'upsOutletGroupControlUnknown')]


class upsDiagIMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagIMType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'imUnknown'), Enum(2, 'imMIM'), Enum(3, 'imRIM')]


class upsDiagIMStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagIMFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMSlaveFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagPMStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagPMFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagBatteryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagBatteryStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'failed'), Enum(5, 'highTemperature'), Enum(6, 'replaceImmediately'), Enum(7, 'lowCapacity')]


class upsDiagBatterySerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysFrameType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'frameTypeMain'), Enum(4, 'frameTypeXR'), Enum(5, 'frameTypeLXR')]


class upsDiagSubSysFrameFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysIntBypSwitchIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysIntBypSwitchStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysIntBypSwitchFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysBattMonitorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysBattMonitorStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysBattMonitorFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalSwitchGearIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalSwitchGearStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysExternalSwitchGearFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysDisplayInterfaceCardFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDisplayInterfaceCardIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDisplayInterfaceCardStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysDCCircuitBreakerFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDCCircuitBreakerIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDCCircuitBreakerStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagSubSysSystemPowerSupplyFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysSystemPowerSupplyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysSystemPowerSupplyStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysXRCommunicationCardFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysXRCommunicationCardIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysXRCommunicationCardStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysExternalPowerFrameBoardFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalPowerFrameBoardIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalPowerFrameBoardStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysChargerFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysChargerIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysChargerStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class contactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class normalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'open'), Enum(3, 'closed')]


class description(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class monitoringStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'enabled'), Enum(3, 'disabled')]


class currentStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'noFault'), Enum(3, 'fault')]


class sPDUOutletControlIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commandPending'), Enum(2, 'noCommandPending'), Enum(3, 'commandPendingUnknown')]


class sPDUOutletCtl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletOn'), Enum(2, 'outletOff'), Enum(3, 'outletReboot'), Enum(4, 'outletUnknown'), Enum(5, 'outletOnWithDelay'), Enum(6, 'outletOffWithDelay'), Enum(7, 'outletRebootWithDelay')]


class sPDUOutletCtlName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletPowerOnTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletPowerOffTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentNameVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentHardwareRevVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentFirmwareRevVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentDateOfManufactureVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentModelNumberVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentSerialNumberVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlVMCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandAllVM'), Enum(2, 'immediateAllOnVM'), Enum(3, 'immediateAllOffVM'), Enum(4, 'immediateAllRebootVM'), Enum(5, 'delayedAllOnVM'), Enum(6, 'delayedAllOffVM'), Enum(7, 'sequencedAllRebootVM'), Enum(8, 'delayedAllRebootVM'), Enum(9, 'delayedSequenceAllRebootVM'), Enum(10, 'cancelAllPendingCommandsVM'), Enum(11, 'audioAlarmMute')]


class sPDUMasterConfigVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterConfigVMColdstartDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMAudioAlarmActivated(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'audioAlarmActiveNever'), Enum(2, 'audioAlarmActiveOnOverload'), Enum(3, 'audioAlarmActiveOnOverloadImminent')]


class sPDUMasterConfigVMHighLoadWarningThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMLowLoadWarningThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMOverloadRestriction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alwaysAllowTurnON'), Enum(2, 'restrictOnWarning'), Enum(3, 'restrictOnOverload')]


class sPDUMasterStatusVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterStatusVMCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commandPendingMasterTrueVM'), Enum(2, 'commandPendingMasterFalseVM')]


class sPDUMasterStatusVMOverloadCondition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'overloadConditionTrueVM'), Enum(2, 'overloadConditionFalseVM')]


class sPDUMasterStatusVMLowLoadCondition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lowLoadConditionTrueVM'), Enum(2, 'lowLoadConditionFalseVM')]


class sPDUMasterStatusVMCurrentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMOutletCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMRebootDuration(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlVMOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlVMOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlVMOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOnVM'), Enum(2, 'immediateOffVM'), Enum(3, 'immediateRebootVM'), Enum(4, 'delayedOnVM'), Enum(5, 'delayedOffVM'), Enum(6, 'delayedRebootVM'), Enum(7, 'cancelPendingCommandVM')]


class sPDUOutletConfigVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigVMOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigVMPowerOnTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMPowerOffTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusVMOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusVMOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusVMOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusVMOn'), Enum(2, 'outletStatusVMOff')]


class sPDUOutletStatusVMCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusVMCommandPending'), Enum(2, 'outletStatusVMNoCommandPending')]


class sPDUIdentMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentNameMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentHardwareRevMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentFirmwareRevMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentDateOfManufactureMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentModelNumberMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentSerialNumberMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlMSPCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandAllMSP'), Enum(2, 'immediateAllOnMSP'), Enum(3, 'sequencedAllOnMSP'), Enum(4, 'immediateAllOffMSP'), Enum(5, 'gracefulAllRebootMSP'), Enum(6, 'immediateAllRebootMSP'), Enum(7, 'gracefulAllShutdownMSP'), Enum(8, 'overrideAllBatCapThreshMSP'), Enum(9, 'cancelAllPendingCommandsMSP'), Enum(10, 'restoreFactoryDefaultsMSP')]


class sPDUMasterConfigMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigMSPName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterConfigMSPPowerOnTimeDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigMSPManualButton(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'manualButtonDisabled'), Enum(2, 'manualButtonEnabled')]


class sPDUMasterStatusMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterStatusMSPOutletCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlMSPOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlMSPOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlMSPOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOnMSP'), Enum(2, 'delayedOnMSP'), Enum(3, 'immediateOffMSP'), Enum(4, 'gracefulRebootMSP'), Enum(5, 'immediateRebootMSP'), Enum(6, 'gracefulshutdownMSP'), Enum(7, 'overrideBatCapThreshMSP'), Enum(8, 'cancelPendingCommandMSP')]


class sPDUOutletConfigMSPallIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPallName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPallOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPallOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPallOutletCtrlMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class sPDUOutletConfigMSPgsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPgsOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPgsOutletCtrlMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class sPDUOutletConfigMSPgsDeviceConfirm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deviceConfirmNo'), Enum(2, 'deviceConfirmYes')]


class sPDUOutletConfigMSPgsLowBattWarning(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsLowBattMult(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsRestartDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsPowerOnDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsPowerOffDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsBattCapThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPannunIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPannunName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPannunOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPannunOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPannunOutletCtrlMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class sPDUOutletConfigMSPannunInitialState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'initialStateOff'), Enum(2, 'initialStateOn')]


class sPDUOutletConfigMSPannunAlarmActionDly(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPmupsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPmupsName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPmupsOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPmupsOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPmupsZone1(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsZone2(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsZone3(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsZone4(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1LowHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1HiHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1LowTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1HiTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2LowHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2HiHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2LowTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2HiTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletStatusMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusMSPOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusMSPOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusMSPOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusMSPOn'), Enum(2, 'outletStatusMSPOff')]


class sPDUOutletStatusMSPCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusMSPCommandPending'), Enum(2, 'outletStatusMSPNoCommandPending')]


class sPDUOutletStatusMSPOutletCtrlMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class dm3IdentSysDescriptionIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysDescriptionText(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigSysDescriptionIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysDescriptionText(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLVDName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigLVDEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class dm3ConfigLVDTripThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLVDResetThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLVDOpenAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigLVDHWAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigOutRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigOutRlyName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigOutRlyDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigOutRlyAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigInRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigInRlyName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigInRlyDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigInRlyAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBreakersIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBreakersName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigBreakersAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigFusesIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigFusesName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigFusesAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3StatusAlarmsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusAlarmsText(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusLVDName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusLVDState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpened')]


class dm3StatusLVDHwFault(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusFault'), Enum(2, 'statusNofault')]


class dm3StatusRectIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectDesc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusRectCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectCurrentLimit(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectStandby(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectFanFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectDevType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectPhyAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectCfg(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectPcbRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectFwVer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectDiagPass(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectState(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvDesc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusConvCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvCurrentLimit(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvStandby(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvFanFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvDevType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvPhyAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvCfg(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvPcbRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvFwVer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvDiagPass(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvState(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOutRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOutRlyName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusOutRlyStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOn'), Enum(2, 'statusOff')]


class dm3StatusInRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusInRlyName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusInRlyStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOn'), Enum(2, 'statusOff')]


class dm3StatusBreakersIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBreakersName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusBreakersStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpen')]


class dm3StatusFusesIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusFusesName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusFusesStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpen')]


class atsCalibrationInputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationInputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsLineVoltageCalibrationFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationPowerSupplyVoltageTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationPowerSupplyVoltage(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerSupply24V'), Enum(2, 'powerSupply12V'), Enum(3, 'powerSupply')]


class atsPowerSupplyVoltageCalibrationFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationOutputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationOutputPhasesTableIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'neutral')]


class atsOutputCurrentCalibrationFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsNumInputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class atsInputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'main'), Enum(3, 'bypass')]


class atsInputName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsInputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMaxVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMinVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsNumOutputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class atsOutputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'neutral')]


class atsOutputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDTrip(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDReset(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpened')]


class dcmim2StatusRectIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectDevType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectPhyAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dcmim2StatusRectCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusLVDState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpened')]


class dcmim2StatusAlarmsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusAlarmsText(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigProbeHighTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeLowTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class emConfigProbeHighHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeLowHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeHighTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeLowTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeHighHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeLowHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigContactEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emStatusProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusProbeName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emStatusProbeStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disconnected'), Enum(2, 'connected')]


class emStatusProbeCurrentTemp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class emStatusProbeCurrentHumid(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusProbeHighTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highTempViolation'), Enum(3, 'disabled')]


class emStatusProbeLowTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowTempViolation'), Enum(3, 'disabled')]


class emStatusProbeHighHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highHumidViolation'), Enum(3, 'disabled')]


class emStatusProbeLowHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowHumidViolation'), Enum(3, 'disabled')]


class emStatusContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusContactName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emStatusContactStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noFault'), Enum(2, 'fault'), Enum(3, 'disabled')]


class iemConfigProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigProbeHighTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeLowTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class iemConfigProbeHighHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeLowHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeHighTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeLowTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeHighHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeLowHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigContactEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemStatusProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbeName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusProbeStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disconnected'), Enum(2, 'connected')]


class iemStatusProbeCurrentTemp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class iemStatusProbeCurrentHumid(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbeHighTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highTempViolation'), Enum(3, 'disabled')]


class iemStatusProbeLowTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowTempViolation'), Enum(3, 'disabled')]


class iemStatusProbeHighHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highHumidViolation'), Enum(3, 'disabled')]


class iemStatusProbeLowHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowHumidViolation'), Enum(3, 'disabled')]


class iemStatusContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusContactName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusContactStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noFault'), Enum(2, 'fault'), Enum(3, 'disabled')]


class iemStatusRelayNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusRelayName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusRelayStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'faultState'), Enum(2, 'normalState')]


class emsOutputRelayControlOutputRelayIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutputRelayControlOutputRelayName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutputRelayControlOutputRelayCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateCloseEMS'), Enum(2, 'immediateOpenEMS')]


class emsOutletControlOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutletControlOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutletControlOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOnEMS'), Enum(2, 'immediateOffEMS')]


class emsSensorControlSensorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsSensorControlSensorSystemName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorControlSensorUserName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorControlSensorCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandEMS'), Enum(2, 'resetCommandEMS')]


class emsAlarmDeviceControlDeviceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsAlarmDeviceControlDeviceName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsAlarmDeviceControlDeviceCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmDeviceOnEMS'), Enum(2, 'alarmDeviceOffEMS'), Enum(3, 'alarmDeviceNotInstalledEMS')]


class emsProbeConfigProbeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsProbeConfigProbeHighTempThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLowTempThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeHighHumidityThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLowHumidityThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactConfigInputContactIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactConfigInputContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsInputContactConfigInputContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutputRelayConfigOutputRelayIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutputRelayConfigOutputRelayName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutputRelayConfigOutputRelayNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutletConfigOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutletConfigOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutletConfigOutletNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyOnEMS'), Enum(2, 'normallyOffEMS')]


class emsSensorConfigSensorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsSensorConfigSensorSystemName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorConfigSensorUserName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorConfigSensorNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsSensorConfigSensorAlarmDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsProbeStatusProbeTemperature(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeHighTempThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeLowTempThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeHumidity(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeHighHumidityThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeLowHumidityThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeSerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsProbeStatusProbeCommStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commsNeverDiscovered'), Enum(2, 'commsEstablished'), Enum(3, 'commsLost')]


class emsInputContactStatusInputContactIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactStatusInputContactName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsInputContactStatusInputContactState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'contactClosedEMS'), Enum(2, 'contactOpenEMS')]


class emsInputContactStatusInputContactNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutputRelayStatusOutputRelayIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutputRelayStatusOutputRelayName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutputRelayStatusOutputRelayState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'relayClosedEMS'), Enum(2, 'relayOpenEMS')]


class emsOutputRelayStatusOutputRelayNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutletStatusOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutletStatusOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutletStatusOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletOnEMS'), Enum(2, 'outletOffEMS')]


class emsOutletStatusOutletNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyOnEMS'), Enum(2, 'normallyOffEMS')]


class emsAlarmDeviceStatusDeviceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsAlarmDeviceStatusDeviceName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsAlarmDeviceStatusDeviceState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmDeviceOnEMS'), Enum(2, 'alarmDeviceOffEMS'), Enum(3, 'alarmDeviceNotInstalledEMS')]


class emsSensorStatusSensorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsSensorStatusSensorSystemName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorStatusSensorName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorStatusSensorState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sensorFaultedEMS'), Enum(2, 'sensorOKEMS'), Enum(3, 'sensorNotInstalledEMS')]


class emsSensorStatusSensorNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsSensorStatusSensorAlarmDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadConfigIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class rPDULoadConfigLowLoadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadConfigNearOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadConfigOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadStatusIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class rPDULoadStatusPhaseLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class rPDULoadStatusPhaseLoadState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phaseLoadNormal'), Enum(2, 'phaseLoadLow'), Enum(3, 'phaseLoadNearOverload'), Enum(4, 'phaseLoadOverload')]


class rPDUOutletPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class rPDUOutletPhaseOverloadRestriction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alwaysAllowTurnON'), Enum(2, 'restrictOnNearOverload'), Enum(3, 'restrictOnOverload')]


class rPDUOutletControlIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletControlOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletControlOutletPhase(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'phase1-2'), Enum(5, 'phase2-3'), Enum(6, 'phase3-1')]


class rPDUOutletControlOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOn'), Enum(2, 'immediateOff'), Enum(3, 'immediateReboot'), Enum(4, 'delayedOn'), Enum(5, 'delayedOff'), Enum(6, 'delayedReboot'), Enum(7, 'cancelPendingCommand')]


class rPDUOutletConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletConfigOutletPhase(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'phase1-2'), Enum(5, 'phase2-3'), Enum(6, 'phase3-1')]


class rPDUOutletConfigPowerOnTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigPowerOffTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletStatusOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletStatusOutletPhase(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'phase1-2'), Enum(5, 'phase2-3'), Enum(6, 'phase3-1')]


class rPDUOutletStatusOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusOn'), Enum(2, 'outletStatusOff')]


class rPDUOutletStatusCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusCommandPending'), Enum(2, 'outletStatusNoCommandPending')]


class airFMIdentModuleIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMIdentModuleModelNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleDateOfMfg(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleSerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMStatusModuleIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleOutputCapacity(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleSupplyTempC(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleSupplyTempF(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleSupplyHum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleReturnTempC(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleReturnTempF(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleReturnHum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUIdentIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUIdentName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUConfigAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUConfigAruName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUConfigAruRemoteSetpoint(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOff'), Enum(2, 'aru85F-29C'), Enum(3, 'aru90F-32C'), Enum(4, 'aru95F-35C'), Enum(5, 'aru100F-38C'), Enum(6, 'aru7kW'), Enum(7, 'aru5kW'), Enum(8, 'aru3kW'), Enum(9, 'aru2kW')]


class rARUConfigAruTempOvrdEnableDisable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class rARUConfigAruTempOvrdSetpoint(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUStatusAruRemoteSetpoint(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOff'), Enum(2, 'aru85F-29C'), Enum(3, 'aru90F-32C'), Enum(4, 'aru95F-35C'), Enum(5, 'aru100F-38C'), Enum(6, 'aru7kW'), Enum(7, 'aru5kW'), Enum(8, 'aru3kW'), Enum(9, 'aru2kW')]


class rARUStatusAruManualSetpoint(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOff'), Enum(2, 'aru85F-29C'), Enum(3, 'aru90F-32C'), Enum(4, 'aru95F-35C'), Enum(5, 'aru100F-38C'), Enum(6, 'aru7kW'), Enum(7, 'aru5kW'), Enum(8, 'aru3kW'), Enum(9, 'aru2kW'), Enum(10, 'aruRem')]


class rARUStatusAruTemp1(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruTemp2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruTemp3(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruTempOvrdEnableDisable(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class rARUStatusAruTempOvrdSetpoint(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruAlarmState(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUStatusAruCommStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commsNeverDiscovered'), Enum(2, 'commsEstablished'), Enum(3, 'commsLost')]


class xPDUMainInputVoltagePhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUMainInputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltagePhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUUPSInputVoltagePhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUUPSInputVoltageLtoNPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUSystemOutputPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUSystemOutputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputPhaseCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputVoltAmps(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputPowerFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemBreakerTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemBreakerDescription(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUSystemBreakerPosition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xPDUBranchBreakerTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerRating(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerRDPFeed(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'remoteDistribution'), Enum(2, 'noRemoteDistribution')]


class xPDUBranchBreakerTieIndicator(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'breakerTied'), Enum(2, 'breakerUntied')]


class xPDUBranchBreakerCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerOverCurrentThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerUnderCurrentThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xPDUCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xPDUOutputRelayNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUOutputRelayName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUOutputNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xPDUOutputCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class moduleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class moduleName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class moduleVersion(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class moduleDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class trapIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class receiverAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class communityString(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class severity(ColumnObject):
	status = 5
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'information'), Enum(2, 'warning'), Enum(3, 'severe')]


class acceptThisReceiver(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class receiveTrapType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powernet'), Enum(2, 'ietf'), Enum(3, 'both')]


# rows 
class upsBasicConfigDeviceEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([deviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1])
	access = 2
	columns = {'deviceIndex': deviceIndex, 'deviceName': deviceName, 'vaRating': vaRating, 'acceptThisDevice': acceptThisDevice}


class upsAdvConfigDipSwitchEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dipSwitchIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 13, 1])
	access = 2
	columns = {'dipSwitchIndex': dipSwitchIndex, 'dipSwitchStatus': dipSwitchStatus}


class apcUpsConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([apcUpsConfigFieldIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1])
	access = 2
	columns = {'apcUpsConfigFieldIndex': apcUpsConfigFieldIndex, 'apcUpsConfigFieldOID': apcUpsConfigFieldOID, 'apcUpsConfigFieldValueRange': apcUpsConfigFieldValueRange}


class upsPhaseInputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseInputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1])
	access = 2
	columns = {'upsPhaseInputTableIndex': upsPhaseInputTableIndex, 'upsPhaseNumInputPhases': upsPhaseNumInputPhases, 'upsPhaseInputVoltageOrientation': upsPhaseInputVoltageOrientation, 'upsPhaseInputFrequency': upsPhaseInputFrequency, 'upsPhaseInputType': upsPhaseInputType, 'upsPhaseInputName': upsPhaseInputName}


class upsPhaseInputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseInputPhaseTableIndex, upsPhaseInputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1])
	access = 2
	columns = {'upsPhaseInputPhaseTableIndex': upsPhaseInputPhaseTableIndex, 'upsPhaseInputPhaseIndex': upsPhaseInputPhaseIndex, 'upsPhaseInputVoltage': upsPhaseInputVoltage, 'upsPhaseInputMaxVoltage': upsPhaseInputMaxVoltage, 'upsPhaseInputMinVoltage': upsPhaseInputMinVoltage, 'upsPhaseInputCurrent': upsPhaseInputCurrent, 'upsPhaseInputMaxCurrent': upsPhaseInputMaxCurrent, 'upsPhaseInputMinCurrent': upsPhaseInputMinCurrent, 'upsPhaseInputPower': upsPhaseInputPower, 'upsPhaseInputMaxPower': upsPhaseInputMaxPower, 'upsPhaseInputMinPower': upsPhaseInputMinPower}


class upsPhaseOutputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseOutputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1])
	access = 2
	columns = {'upsPhaseOutputTableIndex': upsPhaseOutputTableIndex, 'upsPhaseNumOutputPhases': upsPhaseNumOutputPhases, 'upsPhaseOutputVoltageOrientation': upsPhaseOutputVoltageOrientation, 'upsPhaseOutputFrequency': upsPhaseOutputFrequency}


class upsPhaseOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseOutputPhaseTableIndex, upsPhaseOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1])
	access = 2
	columns = {'upsPhaseOutputPhaseTableIndex': upsPhaseOutputPhaseTableIndex, 'upsPhaseOutputPhaseIndex': upsPhaseOutputPhaseIndex, 'upsPhaseOutputVoltage': upsPhaseOutputVoltage, 'upsPhaseOutputCurrent': upsPhaseOutputCurrent, 'upsPhaseOutputMaxCurrent': upsPhaseOutputMaxCurrent, 'upsPhaseOutputMinCurrent': upsPhaseOutputMinCurrent, 'upsPhaseOutputLoad': upsPhaseOutputLoad, 'upsPhaseOutputMaxLoad': upsPhaseOutputMaxLoad, 'upsPhaseOutputMinLoad': upsPhaseOutputMinLoad, 'upsPhaseOutputPercentLoad': upsPhaseOutputPercentLoad, 'upsPhaseOutputMaxPercentLoad': upsPhaseOutputMaxPercentLoad, 'upsPhaseOutputMinPercentLoad': upsPhaseOutputMinPercentLoad, 'upsPhaseOutputPower': upsPhaseOutputPower, 'upsPhaseOutputMaxPower': upsPhaseOutputMaxPower, 'upsPhaseOutputMinPower': upsPhaseOutputMinPower, 'upsPhaseOutputPercentPower': upsPhaseOutputPercentPower, 'upsPhaseOutputMaxPercentPower': upsPhaseOutputMaxPercentPower, 'upsPhaseOutputMinPercentPower': upsPhaseOutputMinPercentPower}


class upsSCGStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsSCGStatusTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1])
	access = 2
	columns = {'upsSCGStatusTableIndex': upsSCGStatusTableIndex, 'upsSCGMemberIP': upsSCGMemberIP, 'upsSCGACInputStatus': upsSCGACInputStatus, 'upsSCGACOutputStatus': upsSCGACOutputStatus}


class upsOutletGroupStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsOutletGroupStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1])
	access = 2
	columns = {'upsOutletGroupStatusIndex': upsOutletGroupStatusIndex, 'upsOutletGroupStatusName': upsOutletGroupStatusName, 'upsOutletGroupStatusGroupState': upsOutletGroupStatusGroupState, 'upsOutletGroupStatusCommandPending': upsOutletGroupStatusCommandPending}


class upsOutletGroupConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsOutletGroupConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1])
	access = 2
	columns = {'upsOutletGroupConfigIndex': upsOutletGroupConfigIndex, 'upsOutletGroupConfigName': upsOutletGroupConfigName, 'upsOutletGroupConfigPowerOnDelay': upsOutletGroupConfigPowerOnDelay, 'upsOutletGroupConfigPowerOffDelay': upsOutletGroupConfigPowerOffDelay, 'upsOutletGroupConfigRebootDuration': upsOutletGroupConfigRebootDuration}


class upsOutletGroupControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsOutletGroupControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1])
	access = 2
	columns = {'upsOutletGroupControlIndex': upsOutletGroupControlIndex, 'upsOutletGroupControlName': upsOutletGroupControlName, 'upsOutletGroupControlCommand': upsOutletGroupControlCommand}


class upsDiagIMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagIMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1])
	access = 2
	columns = {'upsDiagIMIndex': upsDiagIMIndex, 'upsDiagIMType': upsDiagIMType, 'upsDiagIMStatus': upsDiagIMStatus, 'upsDiagIMFirmwareRev': upsDiagIMFirmwareRev, 'upsDiagIMSlaveFirmwareRev': upsDiagIMSlaveFirmwareRev, 'upsDiagIMHardwareRev': upsDiagIMHardwareRev, 'upsDiagIMSerialNum': upsDiagIMSerialNum, 'upsDiagIMManufactureDate': upsDiagIMManufactureDate}


class upsDiagPMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagPMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1])
	access = 2
	columns = {'upsDiagPMIndex': upsDiagPMIndex, 'upsDiagPMStatus': upsDiagPMStatus, 'upsDiagPMFirmwareRev': upsDiagPMFirmwareRev, 'upsDiagPMHardwareRev': upsDiagPMHardwareRev, 'upsDiagPMSerialNum': upsDiagPMSerialNum, 'upsDiagPMManufactureDate': upsDiagPMManufactureDate}


class upsDiagBatteryEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagBatteryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1])
	access = 2
	columns = {'upsDiagBatteryFrameIndex': upsDiagBatteryFrameIndex, 'upsDiagBatteryIndex': upsDiagBatteryIndex, 'upsDiagBatteryStatus': upsDiagBatteryStatus, 'upsDiagBatterySerialNumber': upsDiagBatterySerialNumber, 'upsDiagBatteryFirmwareRev': upsDiagBatteryFirmwareRev, 'upsDiagBatteryManufactureDate': upsDiagBatteryManufactureDate, 'upsDiagBatteryType': upsDiagBatteryType}


class upsDiagSubSysFrameEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysFrameIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1])
	access = 2
	columns = {'upsDiagSubSysFrameIndex': upsDiagSubSysFrameIndex, 'upsDiagSubSysFrameType': upsDiagSubSysFrameType, 'upsDiagSubSysFrameFirmwareRev': upsDiagSubSysFrameFirmwareRev, 'upsDiagSubSysFrameHardwareRev': upsDiagSubSysFrameHardwareRev, 'upsDiagSubSysFrameSerialNum': upsDiagSubSysFrameSerialNum, 'upsDiagSubSysFrameManufactureDate': upsDiagSubSysFrameManufactureDate}


class upsDiagSubSysIntBypSwitchEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysIntBypSwitchIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1])
	access = 2
	columns = {'upsDiagSubSysIntBypSwitchFrameIndex': upsDiagSubSysIntBypSwitchFrameIndex, 'upsDiagSubSysIntBypSwitchIndex': upsDiagSubSysIntBypSwitchIndex, 'upsDiagSubSysIntBypSwitchStatus': upsDiagSubSysIntBypSwitchStatus, 'upsDiagSubSysIntBypSwitchFirmwareRev': upsDiagSubSysIntBypSwitchFirmwareRev, 'upsDiagSubSysIntBypSwitchHardwareRev': upsDiagSubSysIntBypSwitchHardwareRev, 'upsDiagSubSysIntBypSwitchSerialNum': upsDiagSubSysIntBypSwitchSerialNum, 'upsDiagSubSysIntBypSwitchManufactureDate': upsDiagSubSysIntBypSwitchManufactureDate}


class upsDiagSubSysBattMonitorEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysBattMonitorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1])
	access = 2
	columns = {'upsDiagSubSysBattMonitorFrameIndex': upsDiagSubSysBattMonitorFrameIndex, 'upsDiagSubSysBattMonitorIndex': upsDiagSubSysBattMonitorIndex, 'upsDiagSubSysBattMonitorStatus': upsDiagSubSysBattMonitorStatus, 'upsDiagSubSysBattMonitorFirmwareRev': upsDiagSubSysBattMonitorFirmwareRev, 'upsDiagSubSysBattMonitorHardwareRev': upsDiagSubSysBattMonitorHardwareRev, 'upsDiagSubSysBattMonitorSerialNum': upsDiagSubSysBattMonitorSerialNum, 'upsDiagSubSysBattMonitorManufactureDate': upsDiagSubSysBattMonitorManufactureDate}


class upsDiagSubSysExternalSwitchGearEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysExternalSwitchGearIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1])
	access = 2
	columns = {'upsDiagSubSysExternalSwitchGearFrameIndex': upsDiagSubSysExternalSwitchGearFrameIndex, 'upsDiagSubSysExternalSwitchGearIndex': upsDiagSubSysExternalSwitchGearIndex, 'upsDiagSubSysExternalSwitchGearStatus': upsDiagSubSysExternalSwitchGearStatus, 'upsDiagSubSysExternalSwitchGearFirmwareRev': upsDiagSubSysExternalSwitchGearFirmwareRev, 'upsDiagSubSysExternalSwitchGearHardwareRev': upsDiagSubSysExternalSwitchGearHardwareRev, 'upsDiagSubSysExternalSwitchGearSerialNum': upsDiagSubSysExternalSwitchGearSerialNum, 'upsDiagSubSysExternalSwitchGearManufactureDate': upsDiagSubSysExternalSwitchGearManufactureDate}


class upsDiagSubSysDisplayInterfaceCardEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysDisplayInterfaceCardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1])
	access = 2
	columns = {'upsDiagSubSysDisplayInterfaceCardFrameIndex': upsDiagSubSysDisplayInterfaceCardFrameIndex, 'upsDiagSubSysDisplayInterfaceCardIndex': upsDiagSubSysDisplayInterfaceCardIndex, 'upsDiagSubSysDisplayInterfaceCardStatus': upsDiagSubSysDisplayInterfaceCardStatus}


class upsDiagSubSysDCCircuitBreakerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysDCCircuitBreakerIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1])
	access = 2
	columns = {'upsDiagSubSysDCCircuitBreakerFrameIndex': upsDiagSubSysDCCircuitBreakerFrameIndex, 'upsDiagSubSysDCCircuitBreakerIndex': upsDiagSubSysDCCircuitBreakerIndex, 'upsDiagSubSysDCCircuitBreakerStatus': upsDiagSubSysDCCircuitBreakerStatus}


class upsDiagSubSysSystemPowerSupplyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysSystemPowerSupplyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1])
	access = 2
	columns = {'upsDiagSubSysSystemPowerSupplyFrameIndex': upsDiagSubSysSystemPowerSupplyFrameIndex, 'upsDiagSubSysSystemPowerSupplyIndex': upsDiagSubSysSystemPowerSupplyIndex, 'upsDiagSubSysSystemPowerSupplyStatus': upsDiagSubSysSystemPowerSupplyStatus}


class upsDiagSubSysXRCommunicationCardEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysXRCommunicationCardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1])
	access = 2
	columns = {'upsDiagSubSysXRCommunicationCardFrameIndex': upsDiagSubSysXRCommunicationCardFrameIndex, 'upsDiagSubSysXRCommunicationCardIndex': upsDiagSubSysXRCommunicationCardIndex, 'upsDiagSubSysXRCommunicationCardStatus': upsDiagSubSysXRCommunicationCardStatus}


class upsDiagSubSysExternalPowerFrameBoardEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysExternalPowerFrameBoardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1])
	access = 2
	columns = {'upsDiagSubSysExternalPowerFrameBoardFrameIndex': upsDiagSubSysExternalPowerFrameBoardFrameIndex, 'upsDiagSubSysExternalPowerFrameBoardIndex': upsDiagSubSysExternalPowerFrameBoardIndex, 'upsDiagSubSysExternalPowerFrameBoardStatus': upsDiagSubSysExternalPowerFrameBoardStatus}


class upsDiagSubSysChargerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysChargerIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1])
	access = 2
	columns = {'upsDiagSubSysChargerFrameIndex': upsDiagSubSysChargerFrameIndex, 'upsDiagSubSysChargerIndex': upsDiagSubSysChargerIndex, 'upsDiagSubSysChargerStatus': upsDiagSubSysChargerStatus}


class mUpsContactEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([contactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1])
	access = 2
	columns = {'contactNumber': contactNumber, 'normalState': normalState, 'description': description, 'monitoringStatus': monitoringStatus, 'currentStatus': currentStatus}


class sPDUOutletControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1])
	access = 2
	columns = {'sPDUOutletControlIndex': sPDUOutletControlIndex, 'sPDUOutletPending': sPDUOutletPending, 'sPDUOutletCtl': sPDUOutletCtl, 'sPDUOutletCtlName': sPDUOutletCtlName}


class sPDUOutletConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1])
	access = 2
	columns = {'sPDUOutletConfigIndex': sPDUOutletConfigIndex, 'sPDUOutletPowerOnTime': sPDUOutletPowerOnTime, 'sPDUOutletName': sPDUOutletName, 'sPDUOutletPowerOffTime': sPDUOutletPowerOffTime, 'sPDUOutletRebootDuration': sPDUOutletRebootDuration}


class sPDUIdentVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUIdentVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1])
	access = 2
	columns = {'sPDUIdentVMIndex': sPDUIdentVMIndex, 'sPDUIdentNameVM': sPDUIdentNameVM, 'sPDUIdentHardwareRevVM': sPDUIdentHardwareRevVM, 'sPDUIdentFirmwareRevVM': sPDUIdentFirmwareRevVM, 'sPDUIdentDateOfManufactureVM': sPDUIdentDateOfManufactureVM, 'sPDUIdentModelNumberVM': sPDUIdentModelNumberVM, 'sPDUIdentSerialNumberVM': sPDUIdentSerialNumberVM}


class sPDUMasterControlVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterControlVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1])
	access = 2
	columns = {'sPDUMasterControlVMIndex': sPDUMasterControlVMIndex, 'sPDUMasterControlVMName': sPDUMasterControlVMName, 'sPDUMasterControlVMCommand': sPDUMasterControlVMCommand}


class sPDUMasterConfigVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterConfigVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1])
	access = 2
	columns = {'sPDUMasterConfigVMIndex': sPDUMasterConfigVMIndex, 'sPDUMasterConfigVMName': sPDUMasterConfigVMName, 'sPDUMasterConfigVMColdstartDelay': sPDUMasterConfigVMColdstartDelay, 'sPDUMasterConfigVMAudioAlarmActivated': sPDUMasterConfigVMAudioAlarmActivated, 'sPDUMasterConfigVMHighLoadWarningThreshold': sPDUMasterConfigVMHighLoadWarningThreshold, 'sPDUMasterConfigVMLowLoadWarningThreshold': sPDUMasterConfigVMLowLoadWarningThreshold, 'sPDUMasterConfigVMOverloadRestriction': sPDUMasterConfigVMOverloadRestriction}


class sPDUMasterStatusVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterStatusVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1])
	access = 2
	columns = {'sPDUMasterStatusVMIndex': sPDUMasterStatusVMIndex, 'sPDUMasterStatusVMName': sPDUMasterStatusVMName, 'sPDUMasterStatusVMCommandPending': sPDUMasterStatusVMCommandPending, 'sPDUMasterStatusVMOverloadCondition': sPDUMasterStatusVMOverloadCondition, 'sPDUMasterStatusVMLowLoadCondition': sPDUMasterStatusVMLowLoadCondition, 'sPDUMasterStatusVMCurrentLoad': sPDUMasterStatusVMCurrentLoad, 'sPDUMasterStatusVMMaxLoad': sPDUMasterStatusVMMaxLoad, 'sPDUMasterStatusVMOutletCount': sPDUMasterStatusVMOutletCount, 'sPDUMasterStatusVMRebootDuration': sPDUMasterStatusVMRebootDuration}


class sPDUOutletControlVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletControlVMIndex, sPDUOutletControlVMOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1])
	access = 2
	columns = {'sPDUOutletControlVMIndex': sPDUOutletControlVMIndex, 'sPDUOutletControlVMName': sPDUOutletControlVMName, 'sPDUOutletControlVMOutletIndex': sPDUOutletControlVMOutletIndex, 'sPDUOutletControlVMOutletName': sPDUOutletControlVMOutletName, 'sPDUOutletControlVMOutletCommand': sPDUOutletControlVMOutletCommand}


class sPDUOutletConfigVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigVMIndex, sPDUOutletConfigVMOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigVMIndex': sPDUOutletConfigVMIndex, 'sPDUOutletConfigVMName': sPDUOutletConfigVMName, 'sPDUOutletConfigVMOutletIndex': sPDUOutletConfigVMOutletIndex, 'sPDUOutletConfigVMOutletName': sPDUOutletConfigVMOutletName, 'sPDUOutletConfigVMPowerOnTime': sPDUOutletConfigVMPowerOnTime, 'sPDUOutletConfigVMPowerOffTime': sPDUOutletConfigVMPowerOffTime, 'sPDUOutletConfigVMRebootDuration': sPDUOutletConfigVMRebootDuration}


class sPDUOutletStatusVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletStatusVMIndex, sPDUOutletStatusVMOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1])
	access = 2
	columns = {'sPDUOutletStatusVMIndex': sPDUOutletStatusVMIndex, 'sPDUOutletStatusVMName': sPDUOutletStatusVMName, 'sPDUOutletStatusVMOutletIndex': sPDUOutletStatusVMOutletIndex, 'sPDUOutletStatusVMOutletName': sPDUOutletStatusVMOutletName, 'sPDUOutletStatusVMOutletState': sPDUOutletStatusVMOutletState, 'sPDUOutletStatusVMCommandPending': sPDUOutletStatusVMCommandPending}


class sPDUIdentMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUIdentMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1])
	access = 2
	columns = {'sPDUIdentMSPIndex': sPDUIdentMSPIndex, 'sPDUIdentNameMSP': sPDUIdentNameMSP, 'sPDUIdentHardwareRevMSP': sPDUIdentHardwareRevMSP, 'sPDUIdentFirmwareRevMSP': sPDUIdentFirmwareRevMSP, 'sPDUIdentDateOfManufactureMSP': sPDUIdentDateOfManufactureMSP, 'sPDUIdentModelNumberMSP': sPDUIdentModelNumberMSP, 'sPDUIdentSerialNumberMSP': sPDUIdentSerialNumberMSP}


class sPDUMasterControlMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterControlMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1])
	access = 2
	columns = {'sPDUMasterControlMSPIndex': sPDUMasterControlMSPIndex, 'sPDUMasterControlMSPName': sPDUMasterControlMSPName, 'sPDUMasterControlMSPCommand': sPDUMasterControlMSPCommand}


class sPDUMasterConfigMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterConfigMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1])
	access = 2
	columns = {'sPDUMasterConfigMSPIndex': sPDUMasterConfigMSPIndex, 'sPDUMasterConfigMSPName': sPDUMasterConfigMSPName, 'sPDUMasterConfigMSPPowerOnTimeDelay': sPDUMasterConfigMSPPowerOnTimeDelay, 'sPDUMasterConfigMSPManualButton': sPDUMasterConfigMSPManualButton}


class sPDUMasterStatusMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterStatusMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1])
	access = 2
	columns = {'sPDUMasterStatusMSPIndex': sPDUMasterStatusMSPIndex, 'sPDUMasterStatusMSPName': sPDUMasterStatusMSPName, 'sPDUMasterStatusMSPOutletCount': sPDUMasterStatusMSPOutletCount}


class sPDUOutletControlMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletControlMSPIndex, sPDUOutletControlMSPOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1])
	access = 2
	columns = {'sPDUOutletControlMSPIndex': sPDUOutletControlMSPIndex, 'sPDUOutletControlMSPName': sPDUOutletControlMSPName, 'sPDUOutletControlMSPOutletIndex': sPDUOutletControlMSPOutletIndex, 'sPDUOutletControlMSPOutletName': sPDUOutletControlMSPOutletName, 'sPDUOutletControlMSPOutletCommand': sPDUOutletControlMSPOutletCommand}


class sPDUOutletConfigMSPallEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPallIndex, sPDUOutletConfigMSPallOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPallIndex': sPDUOutletConfigMSPallIndex, 'sPDUOutletConfigMSPallName': sPDUOutletConfigMSPallName, 'sPDUOutletConfigMSPallOutletIndex': sPDUOutletConfigMSPallOutletIndex, 'sPDUOutletConfigMSPallOutletName': sPDUOutletConfigMSPallOutletName, 'sPDUOutletConfigMSPallOutletCtrlMode': sPDUOutletConfigMSPallOutletCtrlMode}


class sPDUOutletConfigMSPgsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPgsIndex, sPDUOutletConfigMSPgsOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPgsIndex': sPDUOutletConfigMSPgsIndex, 'sPDUOutletConfigMSPgsName': sPDUOutletConfigMSPgsName, 'sPDUOutletConfigMSPgsOutletIndex': sPDUOutletConfigMSPgsOutletIndex, 'sPDUOutletConfigMSPgsOutletName': sPDUOutletConfigMSPgsOutletName, 'sPDUOutletConfigMSPgsOutletCtrlMode': sPDUOutletConfigMSPgsOutletCtrlMode, 'sPDUOutletConfigMSPgsDeviceConfirm': sPDUOutletConfigMSPgsDeviceConfirm, 'sPDUOutletConfigMSPgsLowBattWarning': sPDUOutletConfigMSPgsLowBattWarning, 'sPDUOutletConfigMSPgsLowBattMult': sPDUOutletConfigMSPgsLowBattMult, 'sPDUOutletConfigMSPgsRestartDelay': sPDUOutletConfigMSPgsRestartDelay, 'sPDUOutletConfigMSPgsPowerOnDelay': sPDUOutletConfigMSPgsPowerOnDelay, 'sPDUOutletConfigMSPgsPowerOffDelay': sPDUOutletConfigMSPgsPowerOffDelay, 'sPDUOutletConfigMSPgsBattCapThresh': sPDUOutletConfigMSPgsBattCapThresh, 'sPDUOutletConfigMSPgsRebootDuration': sPDUOutletConfigMSPgsRebootDuration}


class sPDUOutletConfigMSPannunEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPannunIndex, sPDUOutletConfigMSPannunOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPannunIndex': sPDUOutletConfigMSPannunIndex, 'sPDUOutletConfigMSPannunName': sPDUOutletConfigMSPannunName, 'sPDUOutletConfigMSPannunOutletIndex': sPDUOutletConfigMSPannunOutletIndex, 'sPDUOutletConfigMSPannunOutletName': sPDUOutletConfigMSPannunOutletName, 'sPDUOutletConfigMSPannunOutletCtrlMode': sPDUOutletConfigMSPannunOutletCtrlMode, 'sPDUOutletConfigMSPannunInitialState': sPDUOutletConfigMSPannunInitialState, 'sPDUOutletConfigMSPannunAlarmActionDly': sPDUOutletConfigMSPannunAlarmActionDly}


class sPDUOutletConfigMSPmupsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPmupsIndex, sPDUOutletConfigMSPmupsOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPmupsIndex': sPDUOutletConfigMSPmupsIndex, 'sPDUOutletConfigMSPmupsName': sPDUOutletConfigMSPmupsName, 'sPDUOutletConfigMSPmupsOutletIndex': sPDUOutletConfigMSPmupsOutletIndex, 'sPDUOutletConfigMSPmupsOutletName': sPDUOutletConfigMSPmupsOutletName, 'sPDUOutletConfigMSPmupsZone1': sPDUOutletConfigMSPmupsZone1, 'sPDUOutletConfigMSPmupsZone2': sPDUOutletConfigMSPmupsZone2, 'sPDUOutletConfigMSPmupsZone3': sPDUOutletConfigMSPmupsZone3, 'sPDUOutletConfigMSPmupsZone4': sPDUOutletConfigMSPmupsZone4, 'sPDUOutletConfigMSPmupsP1LowHum': sPDUOutletConfigMSPmupsP1LowHum, 'sPDUOutletConfigMSPmupsP1HiHum': sPDUOutletConfigMSPmupsP1HiHum, 'sPDUOutletConfigMSPmupsP1LowTemp': sPDUOutletConfigMSPmupsP1LowTemp, 'sPDUOutletConfigMSPmupsP1HiTemp': sPDUOutletConfigMSPmupsP1HiTemp, 'sPDUOutletConfigMSPmupsP2LowHum': sPDUOutletConfigMSPmupsP2LowHum, 'sPDUOutletConfigMSPmupsP2HiHum': sPDUOutletConfigMSPmupsP2HiHum, 'sPDUOutletConfigMSPmupsP2LowTemp': sPDUOutletConfigMSPmupsP2LowTemp, 'sPDUOutletConfigMSPmupsP2HiTemp': sPDUOutletConfigMSPmupsP2HiTemp}


class sPDUOutletStatusMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletStatusMSPIndex, sPDUOutletStatusMSPOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1])
	access = 2
	columns = {'sPDUOutletStatusMSPIndex': sPDUOutletStatusMSPIndex, 'sPDUOutletStatusMSPName': sPDUOutletStatusMSPName, 'sPDUOutletStatusMSPOutletIndex': sPDUOutletStatusMSPOutletIndex, 'sPDUOutletStatusMSPOutletName': sPDUOutletStatusMSPOutletName, 'sPDUOutletStatusMSPOutletState': sPDUOutletStatusMSPOutletState, 'sPDUOutletStatusMSPCommandPending': sPDUOutletStatusMSPCommandPending, 'sPDUOutletStatusMSPOutletCtrlMode': sPDUOutletStatusMSPOutletCtrlMode}


class dm3IdentSysDescriptionEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3IdentSysDescriptionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 2, 1])
	access = 2
	columns = {'dm3IdentSysDescriptionIndex': dm3IdentSysDescriptionIndex, 'dm3IdentSysDescriptionText': dm3IdentSysDescriptionText}


class dm3ConfigSysDescriptionEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigSysDescriptionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 2, 1])
	access = 2
	columns = {'dm3ConfigSysDescriptionIndex': dm3ConfigSysDescriptionIndex, 'dm3ConfigSysDescriptionText': dm3ConfigSysDescriptionText}


class dm3ConfigLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1])
	access = 2
	columns = {'dm3ConfigLVDIndex': dm3ConfigLVDIndex, 'dm3ConfigLVDName': dm3ConfigLVDName, 'dm3ConfigLVDEnable': dm3ConfigLVDEnable, 'dm3ConfigLVDTripThresh': dm3ConfigLVDTripThresh, 'dm3ConfigLVDResetThresh': dm3ConfigLVDResetThresh, 'dm3ConfigLVDOpenAlarm': dm3ConfigLVDOpenAlarm, 'dm3ConfigLVDHWAlarm': dm3ConfigLVDHWAlarm}


class dm3ConfigOutRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigOutRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1])
	access = 2
	columns = {'dm3ConfigOutRlyIndex': dm3ConfigOutRlyIndex, 'dm3ConfigOutRlyName': dm3ConfigOutRlyName, 'dm3ConfigOutRlyDelay': dm3ConfigOutRlyDelay, 'dm3ConfigOutRlyAlarm': dm3ConfigOutRlyAlarm}


class dm3ConfigInRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigInRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1])
	access = 2
	columns = {'dm3ConfigInRlyIndex': dm3ConfigInRlyIndex, 'dm3ConfigInRlyName': dm3ConfigInRlyName, 'dm3ConfigInRlyDelay': dm3ConfigInRlyDelay, 'dm3ConfigInRlyAlarm': dm3ConfigInRlyAlarm}


class dm3ConfigBreakersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigBreakersIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1])
	access = 2
	columns = {'dm3ConfigBreakersIndex': dm3ConfigBreakersIndex, 'dm3ConfigBreakersName': dm3ConfigBreakersName, 'dm3ConfigBreakersAlarm': dm3ConfigBreakersAlarm}


class dm3ConfigFusesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigFusesIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1])
	access = 2
	columns = {'dm3ConfigFusesIndex': dm3ConfigFusesIndex, 'dm3ConfigFusesName': dm3ConfigFusesName, 'dm3ConfigFusesAlarm': dm3ConfigFusesAlarm}


class dm3StatusAlarmsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusAlarmsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 2, 1])
	access = 2
	columns = {'dm3StatusAlarmsIndex': dm3StatusAlarmsIndex, 'dm3StatusAlarmsText': dm3StatusAlarmsText}


class dm3StatusLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1])
	access = 2
	columns = {'dm3StatusLVDIndex': dm3StatusLVDIndex, 'dm3StatusLVDName': dm3StatusLVDName, 'dm3StatusLVDState': dm3StatusLVDState, 'dm3StatusLVDHwFault': dm3StatusLVDHwFault}


class dm3StatusRectEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusRectIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1])
	access = 2
	columns = {'dm3StatusRectIndex': dm3StatusRectIndex, 'dm3StatusRectID': dm3StatusRectID, 'dm3StatusRectDesc': dm3StatusRectDesc, 'dm3StatusRectCurrent': dm3StatusRectCurrent, 'dm3StatusRectCurrentLimit': dm3StatusRectCurrentLimit, 'dm3StatusRectStandby': dm3StatusRectStandby, 'dm3StatusRectFanFail': dm3StatusRectFanFail, 'dm3StatusRectFail': dm3StatusRectFail, 'dm3StatusRectDevType': dm3StatusRectDevType, 'dm3StatusRectPhyAddr': dm3StatusRectPhyAddr, 'dm3StatusRectCfg': dm3StatusRectCfg, 'dm3StatusRectPcbRev': dm3StatusRectPcbRev, 'dm3StatusRectFwVer': dm3StatusRectFwVer, 'dm3StatusRectPresent': dm3StatusRectPresent, 'dm3StatusRectDiagPass': dm3StatusRectDiagPass, 'dm3StatusRectState': dm3StatusRectState}


class dm3StatusConvEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusConvIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1])
	access = 2
	columns = {'dm3StatusConvIndex': dm3StatusConvIndex, 'dm3StatusConvID': dm3StatusConvID, 'dm3StatusConvDesc': dm3StatusConvDesc, 'dm3StatusConvCurrent': dm3StatusConvCurrent, 'dm3StatusConvCurrentLimit': dm3StatusConvCurrentLimit, 'dm3StatusConvStandby': dm3StatusConvStandby, 'dm3StatusConvFanFail': dm3StatusConvFanFail, 'dm3StatusConvFail': dm3StatusConvFail, 'dm3StatusConvDevType': dm3StatusConvDevType, 'dm3StatusConvPhyAddr': dm3StatusConvPhyAddr, 'dm3StatusConvCfg': dm3StatusConvCfg, 'dm3StatusConvPcbRev': dm3StatusConvPcbRev, 'dm3StatusConvFwVer': dm3StatusConvFwVer, 'dm3StatusConvPresent': dm3StatusConvPresent, 'dm3StatusConvDiagPass': dm3StatusConvDiagPass, 'dm3StatusConvState': dm3StatusConvState}


class dm3StatusOutRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusOutRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1])
	access = 2
	columns = {'dm3StatusOutRlyIndex': dm3StatusOutRlyIndex, 'dm3StatusOutRlyName': dm3StatusOutRlyName, 'dm3StatusOutRlyStatus': dm3StatusOutRlyStatus}


class dm3StatusInRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusInRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1])
	access = 2
	columns = {'dm3StatusInRlyIndex': dm3StatusInRlyIndex, 'dm3StatusInRlyName': dm3StatusInRlyName, 'dm3StatusInRlyStatus': dm3StatusInRlyStatus}


class dm3StatusBreakersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusBreakersIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1])
	access = 2
	columns = {'dm3StatusBreakersIndex': dm3StatusBreakersIndex, 'dm3StatusBreakersName': dm3StatusBreakersName, 'dm3StatusBreakersStatus': dm3StatusBreakersStatus}


class dm3StatusFusesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusFusesIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1])
	access = 2
	columns = {'dm3StatusFusesIndex': dm3StatusFusesIndex, 'dm3StatusFusesName': dm3StatusFusesName, 'dm3StatusFusesStatus': dm3StatusFusesStatus}


class atsCalibrationInputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsCalibrationInputTableIndex, atsCalibrationInputPhaseTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1])
	access = 2
	columns = {'atsCalibrationInputTableIndex': atsCalibrationInputTableIndex, 'atsCalibrationInputPhaseTableIndex': atsCalibrationInputPhaseTableIndex, 'atsLineVoltageCalibrationFactor': atsLineVoltageCalibrationFactor}


class atsCalibrationPowerSupplyVoltageEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsCalibrationPowerSupplyVoltageTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1])
	access = 2
	columns = {'atsCalibrationPowerSupplyVoltageTableIndex': atsCalibrationPowerSupplyVoltageTableIndex, 'atsCalibrationPowerSupplyVoltage': atsCalibrationPowerSupplyVoltage, 'atsPowerSupplyVoltageCalibrationFactor': atsPowerSupplyVoltageCalibrationFactor}


class atsCalibrationOutputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsCalibrationOutputTableIndex, atsCalibrationOutputPhasesTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1])
	access = 2
	columns = {'atsCalibrationOutputTableIndex': atsCalibrationOutputTableIndex, 'atsCalibrationOutputPhasesTableIndex': atsCalibrationOutputPhasesTableIndex, 'atsOutputCurrentCalibrationFactor': atsOutputCurrentCalibrationFactor}


class atsInputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsInputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1])
	access = 2
	columns = {'atsInputTableIndex': atsInputTableIndex, 'atsNumInputPhases': atsNumInputPhases, 'atsInputVoltageOrientation': atsInputVoltageOrientation, 'atsInputFrequency': atsInputFrequency, 'atsInputType': atsInputType, 'atsInputName': atsInputName}


class atsInputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsInputPhaseTableIndex, atsInputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1])
	access = 2
	columns = {'atsInputPhaseTableIndex': atsInputPhaseTableIndex, 'atsInputPhaseIndex': atsInputPhaseIndex, 'atsInputVoltage': atsInputVoltage, 'atsInputMaxVoltage': atsInputMaxVoltage, 'atsInputMinVoltage': atsInputMinVoltage, 'atsInputCurrent': atsInputCurrent, 'atsInputMaxCurrent': atsInputMaxCurrent, 'atsInputMinCurrent': atsInputMinCurrent, 'atsInputPower': atsInputPower, 'atsInputMaxPower': atsInputMaxPower, 'atsInputMinPower': atsInputMinPower}


class atsOutputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsOutputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1])
	access = 2
	columns = {'atsOutputTableIndex': atsOutputTableIndex, 'atsNumOutputPhases': atsNumOutputPhases, 'atsOutputVoltageOrientation': atsOutputVoltageOrientation, 'atsOutputFrequency': atsOutputFrequency}


class atsOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsOutputPhaseTableIndex, atsOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1])
	access = 2
	columns = {'atsOutputPhaseTableIndex': atsOutputPhaseTableIndex, 'atsOutputPhaseIndex': atsOutputPhaseIndex, 'atsOutputVoltage': atsOutputVoltage, 'atsOutputCurrent': atsOutputCurrent, 'atsOutputMaxCurrent': atsOutputMaxCurrent, 'atsOutputMinCurrent': atsOutputMinCurrent, 'atsOutputLoad': atsOutputLoad, 'atsOutputMaxLoad': atsOutputMaxLoad, 'atsOutputMinLoad': atsOutputMinLoad, 'atsOutputPercentLoad': atsOutputPercentLoad, 'atsOutputMaxPercentLoad': atsOutputMaxPercentLoad, 'atsOutputMinPercentLoad': atsOutputMinPercentLoad, 'atsOutputPower': atsOutputPower, 'atsOutputMaxPower': atsOutputMaxPower, 'atsOutputMinPower': atsOutputMinPower, 'atsOutputPercentPower': atsOutputPercentPower, 'atsOutputMaxPercentPower': atsOutputMaxPercentPower, 'atsOutputMinPercentPower': atsOutputMinPercentPower}


class dcmim2ConfigLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2ConfigLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1])
	access = 2
	columns = {'dcmim2ConfigLVDIndex': dcmim2ConfigLVDIndex, 'dcmim2ConfigLVDTrip': dcmim2ConfigLVDTrip, 'dcmim2ConfigLVDReset': dcmim2ConfigLVDReset, 'dcmim2ConfigLVDState': dcmim2ConfigLVDState}


class dcmim2StatusRectEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2StatusRectIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1])
	access = 2
	columns = {'dcmim2StatusRectIndex': dcmim2StatusRectIndex, 'dcmim2StatusRectDevType': dcmim2StatusRectDevType, 'dcmim2StatusRectID': dcmim2StatusRectID, 'dcmim2StatusRectPhyAddr': dcmim2StatusRectPhyAddr, 'dcmim2StatusRectFail': dcmim2StatusRectFail, 'dcmim2StatusRectCurrent': dcmim2StatusRectCurrent}


class dcmim2StatusLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2StatusLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 2, 1])
	access = 2
	columns = {'dcmim2StatusLVDIndex': dcmim2StatusLVDIndex, 'dcmim2StatusLVDState': dcmim2StatusLVDState}


class dcmim2StatusAlarmsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2StatusAlarmsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 2, 1])
	access = 2
	columns = {'dcmim2StatusAlarmsIndex': dcmim2StatusAlarmsIndex, 'dcmim2StatusAlarmsText': dcmim2StatusAlarmsText}


class emConfigProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emConfigProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1])
	access = 2
	columns = {'emConfigProbeNumber': emConfigProbeNumber, 'emConfigProbeName': emConfigProbeName, 'emConfigProbeHighTempThreshold': emConfigProbeHighTempThreshold, 'emConfigProbeLowTempThreshold': emConfigProbeLowTempThreshold, 'emConfigProbeTempUnits': emConfigProbeTempUnits, 'emConfigProbeHighHumidThreshold': emConfigProbeHighHumidThreshold, 'emConfigProbeLowHumidThreshold': emConfigProbeLowHumidThreshold, 'emConfigProbeHighTempEnable': emConfigProbeHighTempEnable, 'emConfigProbeLowTempEnable': emConfigProbeLowTempEnable, 'emConfigProbeHighHumidEnable': emConfigProbeHighHumidEnable, 'emConfigProbeLowHumidEnable': emConfigProbeLowHumidEnable}


class emConfigContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emConfigContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1])
	access = 2
	columns = {'emConfigContactNumber': emConfigContactNumber, 'emConfigContactName': emConfigContactName, 'emConfigContactEnable': emConfigContactEnable}


class emStatusProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emStatusProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1])
	access = 2
	columns = {'emStatusProbeNumber': emStatusProbeNumber, 'emStatusProbeName': emStatusProbeName, 'emStatusProbeStatus': emStatusProbeStatus, 'emStatusProbeCurrentTemp': emStatusProbeCurrentTemp, 'emStatusProbeTempUnits': emStatusProbeTempUnits, 'emStatusProbeCurrentHumid': emStatusProbeCurrentHumid, 'emStatusProbeHighTempViolation': emStatusProbeHighTempViolation, 'emStatusProbeLowTempViolation': emStatusProbeLowTempViolation, 'emStatusProbeHighHumidViolation': emStatusProbeHighHumidViolation, 'emStatusProbeLowHumidViolation': emStatusProbeLowHumidViolation}


class emStatusContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emStatusContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1])
	access = 2
	columns = {'emStatusContactNumber': emStatusContactNumber, 'emStatusContactName': emStatusContactName, 'emStatusContactStatus': emStatusContactStatus}


class iemConfigProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemConfigProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1])
	access = 2
	columns = {'iemConfigProbeNumber': iemConfigProbeNumber, 'iemConfigProbeName': iemConfigProbeName, 'iemConfigProbeHighTempThreshold': iemConfigProbeHighTempThreshold, 'iemConfigProbeLowTempThreshold': iemConfigProbeLowTempThreshold, 'iemConfigProbeTempUnits': iemConfigProbeTempUnits, 'iemConfigProbeHighHumidThreshold': iemConfigProbeHighHumidThreshold, 'iemConfigProbeLowHumidThreshold': iemConfigProbeLowHumidThreshold, 'iemConfigProbeHighTempEnable': iemConfigProbeHighTempEnable, 'iemConfigProbeLowTempEnable': iemConfigProbeLowTempEnable, 'iemConfigProbeHighHumidEnable': iemConfigProbeHighHumidEnable, 'iemConfigProbeLowHumidEnable': iemConfigProbeLowHumidEnable}


class iemConfigContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemConfigContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1])
	access = 2
	columns = {'iemConfigContactNumber': iemConfigContactNumber, 'iemConfigContactName': iemConfigContactName, 'iemConfigContactEnable': iemConfigContactEnable}


class iemStatusProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemStatusProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1])
	access = 2
	columns = {'iemStatusProbeNumber': iemStatusProbeNumber, 'iemStatusProbeName': iemStatusProbeName, 'iemStatusProbeStatus': iemStatusProbeStatus, 'iemStatusProbeCurrentTemp': iemStatusProbeCurrentTemp, 'iemStatusProbeTempUnits': iemStatusProbeTempUnits, 'iemStatusProbeCurrentHumid': iemStatusProbeCurrentHumid, 'iemStatusProbeHighTempViolation': iemStatusProbeHighTempViolation, 'iemStatusProbeLowTempViolation': iemStatusProbeLowTempViolation, 'iemStatusProbeHighHumidViolation': iemStatusProbeHighHumidViolation, 'iemStatusProbeLowHumidViolation': iemStatusProbeLowHumidViolation}


class iemStatusContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemStatusContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1])
	access = 2
	columns = {'iemStatusContactNumber': iemStatusContactNumber, 'iemStatusContactName': iemStatusContactName, 'iemStatusContactStatus': iemStatusContactStatus}


class iemStatusRelaysEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemStatusRelayNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1])
	access = 2
	columns = {'iemStatusRelayNumber': iemStatusRelayNumber, 'iemStatusRelayName': iemStatusRelayName, 'iemStatusRelayStatus': iemStatusRelayStatus}


class emsOutputRelayControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutputRelayControlOutputRelayIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1])
	access = 2
	columns = {'emsOutputRelayControlOutputRelayIndex': emsOutputRelayControlOutputRelayIndex, 'emsOutputRelayControlOutputRelayName': emsOutputRelayControlOutputRelayName, 'emsOutputRelayControlOutputRelayCommand': emsOutputRelayControlOutputRelayCommand}


class emsOutletControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutletControlOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1])
	access = 2
	columns = {'emsOutletControlOutletIndex': emsOutletControlOutletIndex, 'emsOutletControlOutletName': emsOutletControlOutletName, 'emsOutletControlOutletCommand': emsOutletControlOutletCommand}


class emsSensorControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsSensorControlSensorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1])
	access = 2
	columns = {'emsSensorControlSensorIndex': emsSensorControlSensorIndex, 'emsSensorControlSensorSystemName': emsSensorControlSensorSystemName, 'emsSensorControlSensorUserName': emsSensorControlSensorUserName, 'emsSensorControlSensorCommand': emsSensorControlSensorCommand}


class emsAlarmDeviceControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsAlarmDeviceControlDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1])
	access = 2
	columns = {'emsAlarmDeviceControlDeviceIndex': emsAlarmDeviceControlDeviceIndex, 'emsAlarmDeviceControlDeviceName': emsAlarmDeviceControlDeviceName, 'emsAlarmDeviceControlDeviceCommand': emsAlarmDeviceControlDeviceCommand}


class emsProbeConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsProbeConfigProbeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1])
	access = 2
	columns = {'emsProbeConfigProbeIndex': emsProbeConfigProbeIndex, 'emsProbeConfigProbeName': emsProbeConfigProbeName, 'emsProbeConfigProbeHighTempThresh': emsProbeConfigProbeHighTempThresh, 'emsProbeConfigProbeLowTempThresh': emsProbeConfigProbeLowTempThresh, 'emsProbeConfigProbeHighHumidityThresh': emsProbeConfigProbeHighHumidityThresh, 'emsProbeConfigProbeLowHumidityThresh': emsProbeConfigProbeLowHumidityThresh}


class emsInputContactConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsInputContactConfigInputContactIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1])
	access = 2
	columns = {'emsInputContactConfigInputContactIndex': emsInputContactConfigInputContactIndex, 'emsInputContactConfigInputContactName': emsInputContactConfigInputContactName, 'emsInputContactConfigInputContactNormalState': emsInputContactConfigInputContactNormalState}


class emsOutputRelayConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutputRelayConfigOutputRelayIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1])
	access = 2
	columns = {'emsOutputRelayConfigOutputRelayIndex': emsOutputRelayConfigOutputRelayIndex, 'emsOutputRelayConfigOutputRelayName': emsOutputRelayConfigOutputRelayName, 'emsOutputRelayConfigOutputRelayNormalState': emsOutputRelayConfigOutputRelayNormalState}


class emsOutletConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutletConfigOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1])
	access = 2
	columns = {'emsOutletConfigOutletIndex': emsOutletConfigOutletIndex, 'emsOutletConfigOutletName': emsOutletConfigOutletName, 'emsOutletConfigOutletNormalState': emsOutletConfigOutletNormalState}


class emsSensorConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsSensorConfigSensorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1])
	access = 2
	columns = {'emsSensorConfigSensorIndex': emsSensorConfigSensorIndex, 'emsSensorConfigSensorSystemName': emsSensorConfigSensorSystemName, 'emsSensorConfigSensorUserName': emsSensorConfigSensorUserName, 'emsSensorConfigSensorNormalState': emsSensorConfigSensorNormalState, 'emsSensorConfigSensorAlarmDelay': emsSensorConfigSensorAlarmDelay}


class emsProbeStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsProbeStatusProbeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1])
	access = 2
	columns = {'emsProbeStatusProbeIndex': emsProbeStatusProbeIndex, 'emsProbeStatusProbeName': emsProbeStatusProbeName, 'emsProbeStatusProbeTemperature': emsProbeStatusProbeTemperature, 'emsProbeStatusProbeHighTempThresh': emsProbeStatusProbeHighTempThresh, 'emsProbeStatusProbeLowTempThresh': emsProbeStatusProbeLowTempThresh, 'emsProbeStatusProbeHumidity': emsProbeStatusProbeHumidity, 'emsProbeStatusProbeHighHumidityThresh': emsProbeStatusProbeHighHumidityThresh, 'emsProbeStatusProbeLowHumidityThresh': emsProbeStatusProbeLowHumidityThresh, 'emsProbeStatusProbeSerialNumber': emsProbeStatusProbeSerialNumber, 'emsProbeStatusProbeCommStatus': emsProbeStatusProbeCommStatus}


class emsInputContactStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsInputContactStatusInputContactIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1])
	access = 2
	columns = {'emsInputContactStatusInputContactIndex': emsInputContactStatusInputContactIndex, 'emsInputContactStatusInputContactName': emsInputContactStatusInputContactName, 'emsInputContactStatusInputContactState': emsInputContactStatusInputContactState, 'emsInputContactStatusInputContactNormalState': emsInputContactStatusInputContactNormalState}


class emsOutputRelayStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutputRelayStatusOutputRelayIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1])
	access = 2
	columns = {'emsOutputRelayStatusOutputRelayIndex': emsOutputRelayStatusOutputRelayIndex, 'emsOutputRelayStatusOutputRelayName': emsOutputRelayStatusOutputRelayName, 'emsOutputRelayStatusOutputRelayState': emsOutputRelayStatusOutputRelayState, 'emsOutputRelayStatusOutputRelayNormalState': emsOutputRelayStatusOutputRelayNormalState}


class emsOutletStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutletStatusOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1])
	access = 2
	columns = {'emsOutletStatusOutletIndex': emsOutletStatusOutletIndex, 'emsOutletStatusOutletName': emsOutletStatusOutletName, 'emsOutletStatusOutletState': emsOutletStatusOutletState, 'emsOutletStatusOutletNormalState': emsOutletStatusOutletNormalState}


class emsAlarmDeviceStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsAlarmDeviceStatusDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1])
	access = 2
	columns = {'emsAlarmDeviceStatusDeviceIndex': emsAlarmDeviceStatusDeviceIndex, 'emsAlarmDeviceStatusDeviceName': emsAlarmDeviceStatusDeviceName, 'emsAlarmDeviceStatusDeviceState': emsAlarmDeviceStatusDeviceState}


class emsSensorStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsSensorStatusSensorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1])
	access = 2
	columns = {'emsSensorStatusSensorIndex': emsSensorStatusSensorIndex, 'emsSensorStatusSensorSystemName': emsSensorStatusSensorSystemName, 'emsSensorStatusSensorName': emsSensorStatusSensorName, 'emsSensorStatusSensorState': emsSensorStatusSensorState, 'emsSensorStatusSensorNormalState': emsSensorStatusSensorNormalState, 'emsSensorStatusSensorAlarmDelay': emsSensorStatusSensorAlarmDelay}


class rPDULoadConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1])
	access = 2
	columns = {'rPDULoadConfigIndex': rPDULoadConfigIndex, 'rPDULoadConfigLowLoadThreshold': rPDULoadConfigLowLoadThreshold, 'rPDULoadConfigNearOverloadThreshold': rPDULoadConfigNearOverloadThreshold, 'rPDULoadConfigOverloadThreshold': rPDULoadConfigOverloadThreshold}


class rPDULoadStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1])
	access = 2
	columns = {'rPDULoadStatusIndex': rPDULoadStatusIndex, 'rPDULoadStatusPhaseLoad': rPDULoadStatusPhaseLoad, 'rPDULoadStatusPhaseLoadState': rPDULoadStatusPhaseLoadState}


class rPDUOutletPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2, 1, 1])
	access = 2
	columns = {'rPDUOutletPhaseIndex': rPDUOutletPhaseIndex, 'rPDUOutletPhaseOverloadRestriction': rPDUOutletPhaseOverloadRestriction}


class rPDUOutletControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1])
	access = 2
	columns = {'rPDUOutletControlIndex': rPDUOutletControlIndex, 'rPDUOutletControlOutletName': rPDUOutletControlOutletName, 'rPDUOutletControlOutletPhase': rPDUOutletControlOutletPhase, 'rPDUOutletControlOutletCommand': rPDUOutletControlOutletCommand}


class rPDUOutletConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1])
	access = 2
	columns = {'rPDUOutletConfigIndex': rPDUOutletConfigIndex, 'rPDUOutletConfigOutletName': rPDUOutletConfigOutletName, 'rPDUOutletConfigOutletPhase': rPDUOutletConfigOutletPhase, 'rPDUOutletConfigPowerOnTime': rPDUOutletConfigPowerOnTime, 'rPDUOutletConfigPowerOffTime': rPDUOutletConfigPowerOffTime, 'rPDUOutletConfigRebootDuration': rPDUOutletConfigRebootDuration}


class rPDUOutletStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1])
	access = 2
	columns = {'rPDUOutletStatusIndex': rPDUOutletStatusIndex, 'rPDUOutletStatusOutletName': rPDUOutletStatusOutletName, 'rPDUOutletStatusOutletPhase': rPDUOutletStatusOutletPhase, 'rPDUOutletStatusOutletState': rPDUOutletStatusOutletState, 'rPDUOutletStatusCommandPending': rPDUOutletStatusCommandPending}


class airFMIdentTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([airFMIdentModuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1])
	access = 2
	columns = {'airFMIdentModuleIndex': airFMIdentModuleIndex, 'airFMIdentModuleModelNumber': airFMIdentModuleModelNumber, 'airFMIdentModuleDateOfMfg': airFMIdentModuleDateOfMfg, 'airFMIdentModuleSerialNumber': airFMIdentModuleSerialNumber, 'airFMIdentModuleFirmwareRev': airFMIdentModuleFirmwareRev, 'airFMIdentModuleHardwareRev': airFMIdentModuleHardwareRev}


class airFMStatusModuleEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([airFMStatusModuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1])
	access = 2
	columns = {'airFMStatusModuleIndex': airFMStatusModuleIndex, 'airFMStatusModuleOutputCapacity': airFMStatusModuleOutputCapacity, 'airFMStatusModuleSupplyTempC': airFMStatusModuleSupplyTempC, 'airFMStatusModuleSupplyTempF': airFMStatusModuleSupplyTempF, 'airFMStatusModuleSupplyHum': airFMStatusModuleSupplyHum, 'airFMStatusModuleReturnTempC': airFMStatusModuleReturnTempC, 'airFMStatusModuleReturnTempF': airFMStatusModuleReturnTempF, 'airFMStatusModuleReturnHum': airFMStatusModuleReturnHum}


class rARUIdentEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUIdentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1, 1, 1])
	access = 2
	columns = {'rARUIdentIndex': rARUIdentIndex, 'rARUIdentName': rARUIdentName}


class rARUConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUConfigAruIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1])
	access = 2
	columns = {'rARUConfigAruIndex': rARUConfigAruIndex, 'rARUConfigAruName': rARUConfigAruName, 'rARUConfigAruRemoteSetpoint': rARUConfigAruRemoteSetpoint, 'rARUConfigAruTempOvrdEnableDisable': rARUConfigAruTempOvrdEnableDisable, 'rARUConfigAruTempOvrdSetpoint': rARUConfigAruTempOvrdSetpoint}


class rARUStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUStatusAruIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1])
	access = 2
	columns = {'rARUStatusAruIndex': rARUStatusAruIndex, 'rARUStatusAruName': rARUStatusAruName, 'rARUStatusAruRemoteSetpoint': rARUStatusAruRemoteSetpoint, 'rARUStatusAruManualSetpoint': rARUStatusAruManualSetpoint, 'rARUStatusAruTemp1': rARUStatusAruTemp1, 'rARUStatusAruTemp2': rARUStatusAruTemp2, 'rARUStatusAruTemp3': rARUStatusAruTemp3, 'rARUStatusAruTempOvrdEnableDisable': rARUStatusAruTempOvrdEnableDisable, 'rARUStatusAruTempOvrdSetpoint': rARUStatusAruTempOvrdSetpoint, 'rARUStatusAruAlarmState': rARUStatusAruAlarmState, 'rARUStatusAruCommStatus': rARUStatusAruCommStatus}


class xPDUMainInputVoltagePhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUMainInputVoltagePhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1])
	access = 2
	columns = {'xPDUMainInputVoltagePhaseIndex': xPDUMainInputVoltagePhaseIndex, 'xPDUMainInputVoltageLtoL': xPDUMainInputVoltageLtoL, 'xPDUMainInputVoltageLtoN': xPDUMainInputVoltageLtoN}


class xPDUBypassInputVoltagePhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUBypassInputVoltagePhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1])
	access = 2
	columns = {'xPDUBypassInputVoltagePhaseIndex': xPDUBypassInputVoltagePhaseIndex, 'xPDUBypassInputVoltageLtoL': xPDUBypassInputVoltageLtoL, 'xPDUBypassInputVoltageLtoN': xPDUBypassInputVoltageLtoN}


class xPDUUPSInputVoltagePhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUUPSInputVoltagePhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 2, 1])
	access = 2
	columns = {'xPDUUPSInputVoltagePhaseIndex': xPDUUPSInputVoltagePhaseIndex, 'xPDUUPSInputVoltageLtoNPresent': xPDUUPSInputVoltageLtoNPresent}


class xPDUSystemOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUSystemOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1])
	access = 2
	columns = {'xPDUSystemOutputPhaseIndex': xPDUSystemOutputPhaseIndex, 'xPDUSystemOutputVoltageLtoL': xPDUSystemOutputVoltageLtoL, 'xPDUSystemOutputVoltageLtoN': xPDUSystemOutputVoltageLtoN, 'xPDUSystemOutputPhaseCurrent': xPDUSystemOutputPhaseCurrent, 'xPDUSystemOutputPower': xPDUSystemOutputPower, 'xPDUSystemOutputVoltAmps': xPDUSystemOutputVoltAmps, 'xPDUSystemOutputPowerFactor': xPDUSystemOutputPowerFactor}


class xPDUSystemBreakerTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUSystemBreakerTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1])
	access = 2
	columns = {'xPDUSystemBreakerTableIndex': xPDUSystemBreakerTableIndex, 'xPDUSystemBreakerDescription': xPDUSystemBreakerDescription, 'xPDUSystemBreakerPosition': xPDUSystemBreakerPosition}


class xPDUBranchBreakerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUBranchBreakerTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1])
	access = 2
	columns = {'xPDUBranchBreakerTableIndex': xPDUBranchBreakerTableIndex, 'xPDUBranchBreakerRating': xPDUBranchBreakerRating, 'xPDUBranchBreakerRDPFeed': xPDUBranchBreakerRDPFeed, 'xPDUBranchBreakerTieIndicator': xPDUBranchBreakerTieIndicator, 'xPDUBranchBreakerCurrent': xPDUBranchBreakerCurrent, 'xPDUBranchBreakerOverCurrentThreshold': xPDUBranchBreakerOverCurrentThreshold, 'xPDUBranchBreakerUnderCurrentThreshold': xPDUBranchBreakerUnderCurrentThreshold}


class xPDUInputContactEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUInputContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1])
	access = 2
	columns = {'xPDUInputContactNumber': xPDUInputContactNumber, 'xPDUInputContactName': xPDUInputContactName, 'xPDUNormalState': xPDUNormalState, 'xPDUCurrentState': xPDUCurrentState}


class xPDUOutputRelayEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUOutputRelayNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1])
	access = 2
	columns = {'xPDUOutputRelayNumber': xPDUOutputRelayNumber, 'xPDUOutputRelayName': xPDUOutputRelayName, 'xPDUOutputNormalState': xPDUOutputNormalState, 'xPDUOutputCurrentState': xPDUOutputCurrentState}


class powerNetSoftwareEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([moduleNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1])
	access = 2
	columns = {'moduleNumber': moduleNumber, 'moduleName': moduleName, 'moduleVersion': moduleVersion, 'moduleDate': moduleDate}


class mconfigTrapReceiverEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([trapIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1])
	access = 2
	columns = {'trapIndex': trapIndex, 'receiverAddr': receiverAddr, 'communityString': communityString, 'severity': severity, 'acceptThisReceiver': acceptThisReceiver, 'receiveTrapType': receiveTrapType}


# notifications (traps) 
class communicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 1])

class upsOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 2])

class upsDiagnosticsFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 3])

class upsDischarged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 4])

class upsOnBattery(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 5])

class smartBoostOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 6])

class lowBattery(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 7])

class communicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 8])

class powerRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 9])

class upsDiagnosticsPassed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 10])

class returnFromLowBattery(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 11])

class upsTurnedOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 12])

class upsSleeping(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 13])

class upsWokeUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 14])

class upsRebootStarted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 15])

class upsDipSwitchChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 16])

class upsBatteryNeedsReplacement(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 17])

class contactFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 18])

class contactFaultResolved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 19])

class hardwareFailureBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 20])

class softwareBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 21])

class switchedBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 22])

class returnFromBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 23])

class bypassPowerSupplyFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 24])

class baseFanFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 25])

class batteryPackCommLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 26])

class batteryPackCommEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 27])

class calibrationStart(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 28])

class restartAgent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 29])

class upsTurnedOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 30])

class smartAvrReducing(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 31])

class codeAuthenticationDone(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 32])

class upsOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 33])

class smartBoostOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 34])

class smartAvrReducingOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 35])

class upsBatteryReplaced(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 36])

class calibrationEnd(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 37])

class dischargeCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 38])

class gracefullShutdown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 39])

class outletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 41])

class outletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 42])

class outletReboot(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 43])

class configChangeSNMP(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 44])

class configChangeOutlet(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 45])

class accessViolationConsole(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 46])

class accessViolationHTTP(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 47])

class passwordChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 48])

class badVoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 49])

class badVoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 50])

class chargerFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 51])

class chargerFailureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 52])

class batteryOverTemperature(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 53])

class batteryOverTemperatureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 54])

class smartRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 55])

class smartRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 56])

class humidityThresholdViolation1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 57])

class humidityThresholdViolationCleared1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 58])

class temperatureThresholdViolation1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 59])

class temperatureThresholdViolationCleared1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 60])

class humidityThresholdViolation2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 61])

class humidityThresholdViolationCleared2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 62])

class temperatureThresholdViolation2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 63])

class temperatureThresholdViolationCleared2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 64])

class mupsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 65])

class mupsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 66])

class batteryIncrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 67])

class batteryDecrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 68])

class powerModuleIncrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 69])

class powerModuleDecrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 70])

class intelligenceModuleInserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 71])

class intelligenceModuleRemoved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 72])

class rintelligenceModuleInserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 73])

class rintelligenceModuleRemoved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 74])

class extBatteryFrameIncease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 75])

class extBatteryFrameDecrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 76])

class abnormalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 77])

class abnormalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 78])

class deviceStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 79])

class noBatteries(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 80])

class noBatteriesCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 81])

class userAdded(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 82])

class userDeleted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 83])

class userModified(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 84])

class msvmCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 85])

class msvmCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 86])

class msvmOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 87])

class msvmOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 88])

class msvmOutletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 89])

class msvmOutletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 90])

class msvmDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 91])

class msvmOutletConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 92])

class msvmLowLoad(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 93])

class msvmLowLoadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 94])

class msvmNearOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 95])

class msvmNearOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 96])

class msvmPowerSupplyStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 97])

class mspCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 98])

class mspCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 99])

class mspOutletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 100])

class mspOutletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 101])

class mspDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 102])

class mspOutletConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 103])

class rsSourceSwitched(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 104])

class rsLostRedundancy(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 105])

class rsRedundancyRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 106])

class rsConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 107])

class rsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 108])

class rsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 109])

class dcCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 110])

class dcCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 111])

class dcPINChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 112])

class dcMajorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 113])

class dcMajorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 114])

class dcMinorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 115])

class dcMinorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 116])

class dcOutputRelayOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 117])

class dcOutputRelayOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 118])

class dcInputRelayOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 119])

class dcInputRelayOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 120])

class logicPowerSuppliesIncreased(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 121])

class logicPowerSuppliesDecreased(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 122])

class externalSwitchGearClosed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 123])

class externalSwitchGearOpened(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 124])

class generalDeviceEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 125])

class atsSourceSwitched(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 126])

class atsLostRedundancy(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 127])

class atsRedundancyRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 128])

class atsConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 129])

class atsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 130])

class atsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 131])

class atsOverCurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 132])

class atsOverCurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 133])

class atsPowerSupplyFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 134])

class atsPowerSupplyFailureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 135])

class dcMainsFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 136])

class dcMainsFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 137])

class dcFanFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 138])

class dcFanFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 139])

class dcRectifierOvertempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 140])

class dcRectifierOvertempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 141])

class dcCurrentLimitAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 142])

class dcCurrentLimitAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 143])

class dcRectifierFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 144])

class dcRectifierFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 145])

class dcMultRectFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 146])

class dcMultRectFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 147])

class dcBatteryBreakerAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 148])

class dcBatteryBreakerAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 149])

class dcRectifierOVPAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 150])

class dcRectifierOVPAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 151])

class dcLVDImminentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 152])

class dcLVDImminentAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 153])

class dcFuseCBAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 154])

class dcFuseCBAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 155])

class dcBatteryTestFail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 156])

class dcTemperatureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 157])

class dcTemperatureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 158])

class dcHumidityAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 159])

class dcHumidityAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 160])

class dcBBCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 161])

class dcBBCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 162])

class iemHighTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 163])

class iemHighTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 164])

class iemLowTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 165])

class iemLowTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 166])

class iemHighHumidThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 167])

class iemHighHumidThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 168])

class iemLowHumidThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 169])

class iemLowHumidThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 170])

class iemProbeDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 171])

class iemProbeConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 172])

class iemContactFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 173])

class iemContactFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 174])

class iemRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 175])

class iemRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 176])

class bmBatManCommEstab(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 177])

class bmBatManCommLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 178])

class bmBatManKneeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 179])

class bmBatManKneeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 180])

class bmBatManChargerAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 181])

class bmBatManChargerAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 182])

class bmBatManBatteryAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 183])

class bmBatManBatteryAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 184])

class bmBatManEnvironmentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 185])

class bmBatManEnvironmentAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 186])

class bmBatManMaintenanceAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 187])

class bmBatManMaintenanceAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 188])

class pduCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 189])

class pduCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 190])

class pduUtilityLineUndervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 191])

class pduUtilityLineUndervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 192])

class pduUtilityLineOvervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 193])

class pduUtilityLineOvervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 194])

class pduGroundOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 195])

class pduGroundOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 196])

class pduCircuitPanelInputUndervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 197])

class pduCircuitPanelInputUndervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 198])

class pduCircuitPanelInputOvervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 199])

class pduCircuitPanelInputOvervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 200])

class pduCircuitPanelInputUndercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 201])

class pduCircuitPanelInputUndercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 202])

class pduCircuitPanelInputOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 203])

class pduCircuitPanelInputOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 204])

class pduCircuitPanelFrequencyOutOfRange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 205])

class pduCircuitPanelFrequencyOutofRangeCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 206])

class pduCircuitPanelNeutralOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 207])

class pduCircuitPanelNeutralOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 208])

class pduSystemOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 209])

class pduOnBatteryMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 210])

class pduMaintenanceBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 211])

class pduAtypicalBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 212])

class pduNoPanelFeedMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 213])

class pduUpsOperationMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 214])

class pduForcedBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 215])

class pduInputTransformerOverTemperature(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 216])

class pduInputTransformerOverTemperatureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 217])

class pduUPSInputVoltageLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 218])

class pduUPSInputVoltageRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 219])

class pduContactFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 220])

class pduContactFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 221])

class rmPDUUndercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 222])

class rmPDUUndercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 223])

class rmPDUOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 224])

class rmPDUOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 225])

class rmPDUOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 226])

class rmPDUOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 227])

class rmPDUCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 228])

class rmPDUCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 229])

class emsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 230])

class emsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 231])

class emsProbeConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 232])

class emsProbeDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 233])

class emsSensorConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 234])

class emsSensorDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 235])

class emsSensorFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 236])

class emsSensorFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 237])

class emsBeaconConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 238])

class emsBeaconDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 239])

class emsBeaconOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 240])

class emsBeaconOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 241])

class emsMajorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 242])

class emsMajorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 243])

class emsMinorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 244])

class emsMinorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 245])

class emsOutletStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 246])

class emsOutletStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 247])

class emsInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 248])

class emsInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 249])

class emsOutputRelayStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 250])

class emsOutputRelayStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 251])

class emsDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 252])

class envHighTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 253])

class envHighTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 254])

class envLowTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 255])

class envLowTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 256])

class envHighHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 257])

class envHighHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 258])

class envLowHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 259])

class envLowHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 260])

class rPDUCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 266])

class rPDUCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 267])

class rPDUOutletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 268])

class rPDUOutletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 269])

class rPDUDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 270])

class rPDUOutletConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 271])

class rPDULowLoad(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 272])

class rPDULowLoadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 273])

class rPDUNearOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 274])

class rPDUNearOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 275])

class rPDUOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 276])

class rPDUOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 277])

class rPDUPowerSupply1Fail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 278])

class rPDUPowerSupply1Ok(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 279])

class rPDUPowerSupply2Fail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 280])

class rPDUPowerSupply2Ok(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 281])

class rPDUPhaseConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 282])

class rPDUCancelPendingCommand(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 283])

class aruAlinkCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 284])

class aruAlinkCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 285])

class aruFanFail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 286])

class aruFanFailCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 287])

class aruSmokeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 288])

class aruSmokeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 289])

class aruHighTemperatureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 290])

class aruHighTemperatureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 291])

class aruExhaustTemperatureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 292])

class aruExhaustTemperatureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 293])

class envAlinkCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 294])

class envAlinkCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 295])

class emsAlinkPowerOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 296])

class emsAlinkPowerOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 297])

class upsOutletGroupTurnedOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 298])

class upsOutletGroupTurnedOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 299])

class smwCriticalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 300])

class smwCriticalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 301])

class smwWarningCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 302])

class smwWarningConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 303])

class smwInformationalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 304])

class smwInformationalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 305])

class airCriticalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 306])

class airCriticalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 307])

class airWarningCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 308])

class airWarningConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 309])

class airInformationalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 310])

class airInformationalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 311])

class xPDUThreePhaseInputVoltageAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 312])

class xPDUThreePhaseInputVoltageNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 313])

class xPDUThreePhaseBypassVoltageAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 314])

class xPDUThreePhaseBypassVoltageNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 315])

class xPDUThreePhaseOutputVoltageAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 316])

class xPDUThreePhaseOutputVoltageNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 317])

class xPDUThreePhaseOutputCurrentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 318])

class xPDUThreePhaseOutputCurrentNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 319])

class xPDUOutputFrequencyAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 320])

class xPDUOutputFrequencyNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 321])

class xPDUSystemGroundCurrentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 322])

class xPDUSystemGroundCurrentNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 323])

class xPDUInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 324])

class xPDUInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 325])

class xPDUOutputRelayStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 326])

class xPDUOutputRelayStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 327])

class xPDUCoolingFanAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 328])

class xPDUCoolingFanAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 329])

class xPDUTransformerTempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 330])

class xPDUTransformerTempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 331])

class xPDUBranchCurrentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 332])

class xPDUBranchCurrentNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 333])

class xPDUBreakerChangeEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 334])

class xPDUInternalCommError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 335])

class xPDUInternalCommEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 336])

class xPDUSystemStateAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 337])

class xPDUSystemStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 338])

class xPDUEpoTestMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 339])

class xPDUEpoArmed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 340])

class xPDUFuseBlownAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 341])

class xPDUFuseBlownAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 342])

class xPDUBreakerPositionAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 343])

class xPDUBreakerPositionAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 344])

# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
