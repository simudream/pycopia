# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Counter32, Gauge32, Integer32, Unsigned32, IpAddress, mib_2, MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import RowStatus, TruthValue, TimeStamp, TEXTUAL_CONVENTION

class MIP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/MIP-MIB'
	conformance = 3
	name = 'MIP-MIB'
	language = 2
	description = 'The MIB Module for the Mobile IP.'

# nodes
class mipMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44])
	name = 'mipMIB'

class mipMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1])
	name = 'mipMIBObjects'

class mipSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 1])
	name = 'mipSystem'

class mipSecurity(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2])
	name = 'mipSecurity'

class mipMN(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3])
	name = 'mipMN'

class mnSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1])
	name = 'mnSystem'

class mnDiscovery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2])
	name = 'mnDiscovery'

class mnRecentAdvReceived(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2])
	name = 'mnRecentAdvReceived'

class mnRegistration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3])
	name = 'mnRegistration'

class mipMA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4])
	name = 'mipMA'

class maAdvertisement(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2])
	name = 'maAdvertisement'

class mipFA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5])
	name = 'mipFA'

class faSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 1])
	name = 'faSystem'

class faAdvertisement(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 2])
	name = 'faAdvertisement'

class faRegistration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3])
	name = 'faRegistration'

class mipHA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6])
	name = 'mipHA'

class haRegistration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3])
	name = 'haRegistration'

class mipMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 2])
	name = 'mipMIBNotificationPrefix'

class mipMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 2, 0])
	name = 'mipMIBNotifications'

class mipMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3])
	name = 'mipMIBConformance'

class mipGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1])
	name = 'mipGroups'

class mipCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 2])
	name = 'mipCompliances'


# macros
# types 

class RegistrationFlags(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'vjCompression'), Enum(1, 'gre'), Enum(2, 'minEnc'), Enum(3, 'decapsulationbyMN'), Enum(4, 'broadcastDatagram'), Enum(5, 'simultaneousBindings')]

# scalars 
class mipEntities(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class mipEnable(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class mipEncapsulationSupported(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class mipSecTotalViolations(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnState(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'home'), Enum(2, 'registered'), Enum(3, 'pending'), Enum(4, 'isolated'), Enum(5, 'unknown')]


class mnHomeAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnAdvSourceAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnAdvSequence(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mnAdvFlags(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class mnAdvMaxRegLifetime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class mnAdvMaxAdvLifetime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class mnAdvTimeReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mnSolicitationsSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnAdvertisementsReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnAdvsDroppedInvalidExtension(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnAdvsIgnoredUnknownExtension(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnMoveFromHAToFA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnMoveFromFAToFA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnMoveFromFAToHA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnGratuitousARPsSend(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnAgentRebootsDectected(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRequestsSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnDeRegRequestsSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRepliesRecieved(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnDeRegRepliesRecieved(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesInvalidHomeAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesUnknownHA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesUnknownFA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesInvalidID(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesDroppedInvalidExtension(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesIgnoredUnknownExtension(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesHAAuthenticationFailure(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRepliesFAAuthenticationFailure(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRequestsAccepted(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRequestsDeniedByHA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRequestsDeniedByFA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRequestsDeniedByHADueToID(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mnRegRequestsWithDirectedBroadcast(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class maAdvertisementsSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class maAdvsSentForSolicitation(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class maSolicitationsReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faIsBusy(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class faRegistrationRequired(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class faRegRequestsReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faRegRequestsRelayed(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faReasonUnspecified(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faAdmProhibited(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faInsufficientResource(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faMNAuthenticationFailure(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faRegLifetimeTooLong(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faPoorlyFormedRequests(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faEncapsulationUnavailable(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faVJCompressionUnavailable(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faHAUnreachable(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faRegRepliesRecieved(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faRegRepliesRelayed(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faHAAuthenticationFailure(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class faPoorlyFormedReplies(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haRegistrationAccepted(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haMultiBindingUnsupported(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haReasonUnspecified(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haAdmProhibited(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haInsufficientResource(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haMNAuthenticationFailure(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haFAAuthenticationFailure(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haIDMismatch(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haPoorlyFormedRequest(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haTooManyBindings(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haUnknownHA(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haGratuitiousARPsSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haProxyARPsSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haRegRequestsReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haDeRegRequestsReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haRegRepliesSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haDeRegRepliesSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class mipSecPeerAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mipSecSPI(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mipSecAlgorithmType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'md5')]


class mipSecAlgorithmMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'prefixSuffix')]


class mipSecKey(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class mipSecReplayMethod(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'timestamps'), Enum(3, 'nonces')]


class mipSecViolatorAddress(ColumnObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mipSecViolationCounter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mipSecRecentViolationSPI(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mipSecRecentViolationTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mipSecRecentViolationIDLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mipSecRecentViolationIDHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mipSecRecentViolationReason(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noMobilitySecurityAssociation'), Enum(2, 'badAuthenticator'), Enum(3, 'badIdentifier'), Enum(4, 'badSPI'), Enum(5, 'missingSecurityExtension'), Enum(6, 'other')]


class mnHAAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnCurrentHA(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class mnHAStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mnFAAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnCOA(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnRegAgentAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnRegCOA(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mnRegFlags(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 3])
	syntaxobject = RegistrationFlags


class mnRegIDLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mnRegIDHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mnRegTimeRequested(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class mnRegTimeRemaining(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class mnRegTimeSent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mnRegIsAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class mnCOAIsLocal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class maInterfaceAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class maAdvMaxRegLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class maAdvPrefixLengthInclusion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class maAdvAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class maAdvMaxInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class maAdvMinInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class maAdvMaxAdvLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class maAdvResponseSolicitationOnly(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class maAdvStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class faSupportedCOA(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class faCOAStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class faVisitorIPAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class faVisitorHomeAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class faVisitorHomeAgentAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class faVisitorTimeGranted(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class faVisitorTimeRemaining(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class faVisitorRegFlags(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 6])
	syntaxobject = RegistrationFlags


class faVisitorRegIDLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class faVisitorRegIDHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class faVisitorRegIsAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class haMobilityBindingMN(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class haMobilityBindingCOA(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class haMobilityBindingSourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class haMobilityBindingRegFlags(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 4])
	syntaxobject = RegistrationFlags


class haMobilityBindingRegIDLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class haMobilityBindingRegIDHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class haMobilityBindingTimeGranted(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class haMobilityBindingTimeRemaining(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class haServiceRequestsAccepted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haServiceRequestsDenied(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class haOverallServiceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class haRecentServiceAcceptedTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class haRecentServiceDeniedTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class haRecentServiceDeniedCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(128, 'reasonUnspecified'), Enum(129, 'admProhibited'), Enum(130, 'insufficientResource'), Enum(131, 'mnAuthenticationFailure'), Enum(132, 'faAuthenticationFailure'), Enum(133, 'idMismatch'), Enum(134, 'poorlyFormedRequest'), Enum(135, 'tooManyBindings'), Enum(136, 'unknownHA')]


# rows 
class mipSecAssocEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mipSecPeerAddress, mipSecSPI], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 1, 1])
	access = 2
	columns = {'mipSecPeerAddress': mipSecPeerAddress, 'mipSecSPI': mipSecSPI, 'mipSecAlgorithmType': mipSecAlgorithmType, 'mipSecAlgorithmMode': mipSecAlgorithmMode, 'mipSecKey': mipSecKey, 'mipSecReplayMethod': mipSecReplayMethod}


class mipSecViolationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mipSecViolatorAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 2, 3, 1])
	access = 2
	columns = {'mipSecViolatorAddress': mipSecViolatorAddress, 'mipSecViolationCounter': mipSecViolationCounter, 'mipSecRecentViolationSPI': mipSecRecentViolationSPI, 'mipSecRecentViolationTime': mipSecRecentViolationTime, 'mipSecRecentViolationIDLow': mipSecRecentViolationIDLow, 'mipSecRecentViolationIDHigh': mipSecRecentViolationIDHigh, 'mipSecRecentViolationReason': mipSecRecentViolationReason}


class mnHAEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mnHAAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 1, 3, 1])
	access = 2
	rowstatus = mnHAStatus
	columns = {'mnHAAddress': mnHAAddress, 'mnCurrentHA': mnCurrentHA, 'mnHAStatus': mnHAStatus}


class mnFAEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mnFAAddress, mnCOA], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 2, 1, 1])
	access = 2
	columns = {'mnFAAddress': mnFAAddress, 'mnCOA': mnCOA}


class mnRegistrationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mnRegAgentAddress, mnRegCOA], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 3, 3, 1, 1])
	access = 2
	columns = {'mnRegAgentAddress': mnRegAgentAddress, 'mnRegCOA': mnRegCOA, 'mnRegFlags': mnRegFlags, 'mnRegIDLow': mnRegIDLow, 'mnRegIDHigh': mnRegIDHigh, 'mnRegTimeRequested': mnRegTimeRequested, 'mnRegTimeRemaining': mnRegTimeRemaining, 'mnRegTimeSent': mnRegTimeSent, 'mnRegIsAccepted': mnRegIsAccepted, 'mnCOAIsLocal': mnCOAIsLocal}


class maAdvConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([maInterfaceAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 4, 2, 1, 1])
	access = 2
	rowstatus = maAdvStatus
	columns = {'maInterfaceAddress': maInterfaceAddress, 'maAdvMaxRegLifetime': maAdvMaxRegLifetime, 'maAdvPrefixLengthInclusion': maAdvPrefixLengthInclusion, 'maAdvAddress': maAdvAddress, 'maAdvMaxInterval': maAdvMaxInterval, 'maAdvMinInterval': maAdvMinInterval, 'maAdvMaxAdvLifetime': maAdvMaxAdvLifetime, 'maAdvResponseSolicitationOnly': maAdvResponseSolicitationOnly, 'maAdvStatus': maAdvStatus}


class faCOAEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([faSupportedCOA], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 1, 1, 1])
	access = 2
	rowstatus = faCOAStatus
	columns = {'faSupportedCOA': faSupportedCOA, 'faCOAStatus': faCOAStatus}


class faVisitorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([faVisitorIPAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 5, 3, 1, 1])
	access = 2
	columns = {'faVisitorIPAddress': faVisitorIPAddress, 'faVisitorHomeAddress': faVisitorHomeAddress, 'faVisitorHomeAgentAddress': faVisitorHomeAgentAddress, 'faVisitorTimeGranted': faVisitorTimeGranted, 'faVisitorTimeRemaining': faVisitorTimeRemaining, 'faVisitorRegFlags': faVisitorRegFlags, 'faVisitorRegIDLow': faVisitorRegIDLow, 'faVisitorRegIDHigh': faVisitorRegIDHigh, 'faVisitorRegIsAccepted': faVisitorRegIsAccepted}


class haMobilityBindingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([haMobilityBindingMN, haMobilityBindingCOA], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 1, 1])
	access = 2
	columns = {'haMobilityBindingMN': haMobilityBindingMN, 'haMobilityBindingCOA': haMobilityBindingCOA, 'haMobilityBindingSourceAddress': haMobilityBindingSourceAddress, 'haMobilityBindingRegFlags': haMobilityBindingRegFlags, 'haMobilityBindingRegIDLow': haMobilityBindingRegIDLow, 'haMobilityBindingRegIDHigh': haMobilityBindingRegIDHigh, 'haMobilityBindingTimeGranted': haMobilityBindingTimeGranted, 'haMobilityBindingTimeRemaining': haMobilityBindingTimeRemaining}


class haCounterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([haMobilityBindingMN], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 1, 6, 3, 2, 1])
	access = 2
	columns = {'haServiceRequestsAccepted': haServiceRequestsAccepted, 'haServiceRequestsDenied': haServiceRequestsDenied, 'haOverallServiceTime': haOverallServiceTime, 'haRecentServiceAcceptedTime': haRecentServiceAcceptedTime, 'haRecentServiceDeniedTime': haRecentServiceDeniedTime, 'haRecentServiceDeniedCode': haRecentServiceDeniedCode}


# notifications (traps) 
class mipAuthFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 2, 0, 1])

# groups 
class mipSystemGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 1])
	group = [mipEntities, mipEnable, mipEncapsulationSupported]

class mipSecAssociationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 2])
	group = [mipSecAlgorithmType, mipSecAlgorithmMode, mipSecKey, mipSecReplayMethod]

class mipSecViolationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 3])
	group = [mipSecTotalViolations, mipSecViolationCounter, mipSecRecentViolationSPI, mipSecRecentViolationTime, mipSecRecentViolationIDLow, mipSecRecentViolationIDHigh, mipSecRecentViolationReason]

class mnSystemGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 4])
	group = [mnState, mnCurrentHA, mnHomeAddress, mnHAStatus]

class mnDiscoveryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 5])
	group = [mnFAAddress, mnCOA, mnAdvSourceAddress, mnAdvSequence, mnAdvFlags, mnAdvMaxRegLifetime, mnAdvMaxAdvLifetime, mnAdvTimeReceived, mnSolicitationsSent, mnAdvertisementsReceived, mnAdvsDroppedInvalidExtension, mnAdvsIgnoredUnknownExtension, mnMoveFromHAToFA, mnMoveFromFAToFA, mnMoveFromFAToHA, mnGratuitousARPsSend, mnAgentRebootsDectected]

class mnRegistrationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 6])
	group = [mnRegAgentAddress, mnRegCOA, mnRegFlags, mnRegIDLow, mnRegIDHigh, mnRegTimeRequested, mnRegTimeRemaining, mnRegTimeSent, mnRegIsAccepted, mnCOAIsLocal, mnRegRequestsSent, mnRegRepliesRecieved, mnDeRegRequestsSent, mnDeRegRepliesRecieved, mnRepliesInvalidHomeAddress, mnRepliesUnknownHA, mnRepliesUnknownFA, mnRepliesInvalidID, mnRepliesDroppedInvalidExtension, mnRepliesIgnoredUnknownExtension, mnRepliesHAAuthenticationFailure, mnRepliesFAAuthenticationFailure, mnRegRequestsAccepted, mnRegRequestsDeniedByHA, mnRegRequestsDeniedByFA, mnRegRequestsDeniedByHADueToID, mnRegRequestsWithDirectedBroadcast]

class maAdvertisementGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 7])
	group = [maAdvMaxRegLifetime, maAdvPrefixLengthInclusion, maAdvAddress, maAdvMaxInterval, maAdvMinInterval, maAdvMaxAdvLifetime, maAdvResponseSolicitationOnly, maAdvStatus, maAdvertisementsSent, maAdvsSentForSolicitation, maSolicitationsReceived]

class faSystemGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 8])
	group = [faCOAStatus]

class faAdvertisementGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 9])
	group = [faIsBusy, faRegistrationRequired]

class faRegistrationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 10])
	group = [faVisitorIPAddress, faVisitorHomeAddress, faVisitorHomeAgentAddress, faVisitorTimeGranted, faVisitorTimeRemaining, faVisitorRegFlags, faVisitorRegIDLow, faVisitorRegIDHigh, faVisitorRegIsAccepted, faRegRequestsReceived, faRegRequestsRelayed, faReasonUnspecified, faAdmProhibited, faInsufficientResource, faMNAuthenticationFailure, faRegLifetimeTooLong, faPoorlyFormedRequests, faEncapsulationUnavailable, faVJCompressionUnavailable, faHAUnreachable, faRegRepliesRecieved, faRegRepliesRelayed, faHAAuthenticationFailure, faPoorlyFormedReplies]

class haRegistrationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 11])
	group = [haMobilityBindingMN, haMobilityBindingCOA, haMobilityBindingSourceAddress, haMobilityBindingRegFlags, haMobilityBindingRegIDLow, haMobilityBindingRegIDHigh, haMobilityBindingTimeGranted, haMobilityBindingTimeRemaining, haRegistrationAccepted, haMultiBindingUnsupported, haReasonUnspecified, haAdmProhibited, haInsufficientResource, haMNAuthenticationFailure, haFAAuthenticationFailure, haIDMismatch, haPoorlyFormedRequest, haTooManyBindings, haUnknownHA, haGratuitiousARPsSent, haProxyARPsSent, haRegRequestsReceived, haDeRegRequestsReceived, haRegRepliesSent, haDeRegRepliesSent]

class haRegNodeCountersGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 12])
	group = [haServiceRequestsAccepted, haServiceRequestsDenied, haOverallServiceTime, haRecentServiceAcceptedTime, haRecentServiceDeniedTime, haRecentServiceDeniedCode]

class mipSecNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 44, 3, 1, 13])
	group = [mipAuthFailure]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
