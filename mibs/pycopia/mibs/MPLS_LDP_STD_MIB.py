# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, NOTIFICATION_TYPE, Integer32, Counter32, Unsigned32
from MPLS_TC_STD_MIB import mplsStdMIB, MplsLabelDistributionMethod, MplsLdpIdentifier, MplsLdpLabelType, MplsLspType, MplsLsrIdentifier, MplsRetentionMode
from INET_ADDRESS_MIB import InetAddressPrefixLength, InetAddressType, InetAddress, InetPortNumber
from MPLS_LSR_STD_MIB import MplsIndexType
from SNMPv2_TC import RowStatus, TimeInterval, TruthValue, TimeStamp, StorageType
from DIFFSERV_MIB import IndexInteger, IndexIntegerNextFree

class MPLS_LDP_STD_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/MPLS-LDP-STD-MIB'
	conformance = 4
	name = 'MPLS-LDP-STD-MIB'
	language = 2
	description = "Copyright (C) The Internet Society (2004). The\ninitial version of this MIB module was published\n\n\n\nin RFC 3815. For full legal notices see the RFC\nitself or see:\nhttp://www.ietf.org/copyrights/ianamib.html\n\nThis MIB contains managed object definitions for the\n'Multiprotocol Label Switching, Label Distribution\nProtocol, LDP' document."

# nodes
class mplsLdpStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4])
	name = 'mplsLdpStdMIB'

class mplsLdpNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 0])
	name = 'mplsLdpNotifications'

class mplsLdpObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1])
	name = 'mplsLdpObjects'

class mplsLdpLsrObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 1])
	name = 'mplsLdpLsrObjects'

class mplsLdpEntityObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2])
	name = 'mplsLdpEntityObjects'

class mplsLdpSessionObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3])
	name = 'mplsLdpSessionObjects'

class mplsLdpHelloAdjacencyObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5])
	name = 'mplsLdpHelloAdjacencyObjects'

class mplsFecObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8])
	name = 'mplsFecObjects'

class mplsLdpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 2])
	name = 'mplsLdpConformance'

class mplsLdpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1])
	name = 'mplsLdpGroups'

class mplsLdpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 2])
	name = 'mplsLdpCompliances'


# macros
# types 
# scalars 
class mplsLdpLsrId(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 1, 1])
	syntaxobject = MplsLsrIdentifier


class mplsLdpLsrLoopDetectionCapable(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'other'), Enum(3, 'hopCount'), Enum(4, 'pathVector'), Enum(5, 'hopCountAndPathVector')]


class mplsLdpEntityLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsLdpEntityIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 2])
	syntaxobject = IndexIntegerNextFree


class mplsLdpPeerLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsFecLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsFecIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 2])
	syntaxobject = IndexIntegerNextFree


class mplsLdpLspFecLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# columns
class mplsLdpEntityLdpId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 1])
	syntaxobject = MplsLdpIdentifier


class mplsLdpEntityIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 2])
	syntaxobject = IndexInteger


class mplsLdpEntityProtocolVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpEntityAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class mplsLdpEntityOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'enabled'), Enum(3, 'disabled')]


class mplsLdpEntityTcpPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 6])
	syntaxobject = InetPortNumber


class mplsLdpEntityUdpDscPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 7])
	syntaxobject = InetPortNumber


class mplsLdpEntityMaxPduLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'octets'


class mplsLdpEntityKeepAliveHoldTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class mplsLdpEntityHelloHoldTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class mplsLdpEntityInitSessionThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLdpEntityLabelDistMethod(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 12])
	syntaxobject = MplsLabelDistributionMethod


class mplsLdpEntityLabelRetentionMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 13])
	syntaxobject = MplsRetentionMode


class mplsLdpEntityPathVectorLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLdpEntityHopCountLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLdpEntityTransportAddrKind(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'interface'), Enum(2, 'loopback')]


class mplsLdpEntityTargetPeer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class mplsLdpEntityTargetPeerAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 18])
	syntaxobject = InetAddressType


class mplsLdpEntityTargetPeerAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 19])
	syntaxobject = InetAddress


class mplsLdpEntityLabelType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 20])
	syntaxobject = MplsLdpLabelType


class mplsLdpEntityDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsLdpEntityStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsLdpEntityRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsLdpEntityStatsSessionAttempts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsSessionRejectedNoHelloErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsSessionRejectedAdErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsSessionRejectedMaxPduErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsSessionRejectedLRErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsBadLdpIdentifierErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsBadPduLengthErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsBadMessageLengthErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsBadTlvLengthErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsMalformedTlvValueErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsKeepAliveTimerExpErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsShutdownReceivedNotifications(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpEntityStatsShutdownSentNotifications(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpPeerLdpId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 1])
	syntaxobject = MplsLdpIdentifier


class mplsLdpPeerLabelDistMethod(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 2])
	syntaxobject = MplsLabelDistributionMethod


class mplsLdpPeerPathVectorLimit(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLdpPeerTransportAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 4])
	syntaxobject = InetAddressType


class mplsLdpPeerTransportAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 5])
	syntaxobject = InetAddress


class mplsLdpSessionStateLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsLdpSessionState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'nonexistent'), Enum(2, 'initialized'), Enum(3, 'openrec'), Enum(4, 'opensent'), Enum(5, 'operational')]


class mplsLdpSessionRole(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'active'), Enum(3, 'passive')]


class mplsLdpSessionProtocolVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpSessionKeepAliveHoldTimeRem(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class mplsLdpSessionKeepAliveTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class mplsLdpSessionMaxPduLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'octets'


class mplsLdpSessionDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsLdpSessionStatsUnknownMesTypeErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpSessionStatsUnknownTlvErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsLdpHelloAdjacencyIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpHelloAdjacencyHoldTimeRem(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval
	access = 4
	units = 'seconds'


class mplsLdpHelloAdjacencyHoldTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpHelloAdjacencyType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'link'), Enum(2, 'targeted')]


class mplsInSegmentLdpLspIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1, 1])
	syntaxobject = MplsIndexType


class mplsInSegmentLdpLspLabelType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1, 2])
	syntaxobject = MplsLdpLabelType


class mplsInSegmentLdpLspType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1, 3])
	syntaxobject = MplsLspType


class mplsOutSegmentLdpLspIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1, 1])
	syntaxobject = MplsIndexType


class mplsOutSegmentLdpLspLabelType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1, 2])
	syntaxobject = MplsLdpLabelType


class mplsOutSegmentLdpLspType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1, 3])
	syntaxobject = MplsLspType


class mplsFecIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 1])
	syntaxobject = IndexInteger


class mplsFecType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'prefix'), Enum(2, 'hostAddress')]


class mplsFecAddrPrefixLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 3])
	syntaxobject = InetAddressPrefixLength


class mplsFecAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 4])
	syntaxobject = InetAddressType


class mplsFecAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 5])
	syntaxobject = InetAddress


class mplsFecStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsFecRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsLdpLspFecSegment(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inSegment'), Enum(2, 'outSegment')]


class mplsLdpLspFecSegmentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 2])
	syntaxobject = MplsIndexType


class mplsLdpLspFecIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 3])
	syntaxobject = IndexInteger


class mplsLdpLspFecStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsLdpLspFecRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsLdpSessionPeerAddrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpSessionPeerNextHopAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1, 2])
	syntaxobject = InetAddressType


class mplsLdpSessionPeerNextHopAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1, 3])
	syntaxobject = InetAddress


# rows 
class mplsLdpEntityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1])
	access = 2
	rowstatus = mplsLdpEntityRowStatus
	columns = {'mplsLdpEntityLdpId': mplsLdpEntityLdpId, 'mplsLdpEntityIndex': mplsLdpEntityIndex, 'mplsLdpEntityProtocolVersion': mplsLdpEntityProtocolVersion, 'mplsLdpEntityAdminStatus': mplsLdpEntityAdminStatus, 'mplsLdpEntityOperStatus': mplsLdpEntityOperStatus, 'mplsLdpEntityTcpPort': mplsLdpEntityTcpPort, 'mplsLdpEntityUdpDscPort': mplsLdpEntityUdpDscPort, 'mplsLdpEntityMaxPduLength': mplsLdpEntityMaxPduLength, 'mplsLdpEntityKeepAliveHoldTimer': mplsLdpEntityKeepAliveHoldTimer, 'mplsLdpEntityHelloHoldTimer': mplsLdpEntityHelloHoldTimer, 'mplsLdpEntityInitSessionThreshold': mplsLdpEntityInitSessionThreshold, 'mplsLdpEntityLabelDistMethod': mplsLdpEntityLabelDistMethod, 'mplsLdpEntityLabelRetentionMode': mplsLdpEntityLabelRetentionMode, 'mplsLdpEntityPathVectorLimit': mplsLdpEntityPathVectorLimit, 'mplsLdpEntityHopCountLimit': mplsLdpEntityHopCountLimit, 'mplsLdpEntityTransportAddrKind': mplsLdpEntityTransportAddrKind, 'mplsLdpEntityTargetPeer': mplsLdpEntityTargetPeer, 'mplsLdpEntityTargetPeerAddrType': mplsLdpEntityTargetPeerAddrType, 'mplsLdpEntityTargetPeerAddr': mplsLdpEntityTargetPeerAddr, 'mplsLdpEntityLabelType': mplsLdpEntityLabelType, 'mplsLdpEntityDiscontinuityTime': mplsLdpEntityDiscontinuityTime, 'mplsLdpEntityStorageType': mplsLdpEntityStorageType, 'mplsLdpEntityRowStatus': mplsLdpEntityRowStatus}


from MPLS_LDP_STD_MIB import mplsLdpEntityLdpId
from MPLS_LDP_STD_MIB import mplsLdpEntityIndex
class mplsLdpEntityStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1])
	access = 2
	columns = {'mplsLdpEntityStatsSessionAttempts': mplsLdpEntityStatsSessionAttempts, 'mplsLdpEntityStatsSessionRejectedNoHelloErrors': mplsLdpEntityStatsSessionRejectedNoHelloErrors, 'mplsLdpEntityStatsSessionRejectedAdErrors': mplsLdpEntityStatsSessionRejectedAdErrors, 'mplsLdpEntityStatsSessionRejectedMaxPduErrors': mplsLdpEntityStatsSessionRejectedMaxPduErrors, 'mplsLdpEntityStatsSessionRejectedLRErrors': mplsLdpEntityStatsSessionRejectedLRErrors, 'mplsLdpEntityStatsBadLdpIdentifierErrors': mplsLdpEntityStatsBadLdpIdentifierErrors, 'mplsLdpEntityStatsBadPduLengthErrors': mplsLdpEntityStatsBadPduLengthErrors, 'mplsLdpEntityStatsBadMessageLengthErrors': mplsLdpEntityStatsBadMessageLengthErrors, 'mplsLdpEntityStatsBadTlvLengthErrors': mplsLdpEntityStatsBadTlvLengthErrors, 'mplsLdpEntityStatsMalformedTlvValueErrors': mplsLdpEntityStatsMalformedTlvValueErrors, 'mplsLdpEntityStatsKeepAliveTimerExpErrors': mplsLdpEntityStatsKeepAliveTimerExpErrors, 'mplsLdpEntityStatsShutdownReceivedNotifications': mplsLdpEntityStatsShutdownReceivedNotifications, 'mplsLdpEntityStatsShutdownSentNotifications': mplsLdpEntityStatsShutdownSentNotifications}


class mplsLdpPeerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1])
	access = 2
	columns = {'mplsLdpPeerLdpId': mplsLdpPeerLdpId, 'mplsLdpPeerLabelDistMethod': mplsLdpPeerLabelDistMethod, 'mplsLdpPeerPathVectorLimit': mplsLdpPeerPathVectorLimit, 'mplsLdpPeerTransportAddrType': mplsLdpPeerTransportAddrType, 'mplsLdpPeerTransportAddr': mplsLdpPeerTransportAddr}


from MPLS_LDP_STD_MIB import mplsLdpEntityLdpId
from MPLS_LDP_STD_MIB import mplsLdpEntityIndex
from MPLS_LDP_STD_MIB import mplsLdpPeerLdpId
class mplsLdpSessionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1])
	access = 2
	columns = {'mplsLdpSessionStateLastChange': mplsLdpSessionStateLastChange, 'mplsLdpSessionState': mplsLdpSessionState, 'mplsLdpSessionRole': mplsLdpSessionRole, 'mplsLdpSessionProtocolVersion': mplsLdpSessionProtocolVersion, 'mplsLdpSessionKeepAliveHoldTimeRem': mplsLdpSessionKeepAliveHoldTimeRem, 'mplsLdpSessionKeepAliveTime': mplsLdpSessionKeepAliveTime, 'mplsLdpSessionMaxPduLength': mplsLdpSessionMaxPduLength, 'mplsLdpSessionDiscontinuityTime': mplsLdpSessionDiscontinuityTime}


from MPLS_LDP_STD_MIB import mplsLdpEntityLdpId
from MPLS_LDP_STD_MIB import mplsLdpEntityIndex
from MPLS_LDP_STD_MIB import mplsLdpPeerLdpId
class mplsLdpSessionStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4, 1])
	access = 2
	columns = {'mplsLdpSessionStatsUnknownMesTypeErrors': mplsLdpSessionStatsUnknownMesTypeErrors, 'mplsLdpSessionStatsUnknownTlvErrors': mplsLdpSessionStatsUnknownTlvErrors}


class mplsLdpHelloAdjacencyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId, mplsLdpHelloAdjacencyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1])
	access = 2
	columns = {'mplsLdpHelloAdjacencyIndex': mplsLdpHelloAdjacencyIndex, 'mplsLdpHelloAdjacencyHoldTimeRem': mplsLdpHelloAdjacencyHoldTimeRem, 'mplsLdpHelloAdjacencyHoldTime': mplsLdpHelloAdjacencyHoldTime, 'mplsLdpHelloAdjacencyType': mplsLdpHelloAdjacencyType}


class mplsInSegmentLdpLspEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId, mplsInSegmentLdpLspIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1])
	access = 2
	columns = {'mplsInSegmentLdpLspIndex': mplsInSegmentLdpLspIndex, 'mplsInSegmentLdpLspLabelType': mplsInSegmentLdpLspLabelType, 'mplsInSegmentLdpLspType': mplsInSegmentLdpLspType}


class mplsOutSegmentLdpLspEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId, mplsOutSegmentLdpLspIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1])
	access = 2
	columns = {'mplsOutSegmentLdpLspIndex': mplsOutSegmentLdpLspIndex, 'mplsOutSegmentLdpLspLabelType': mplsOutSegmentLdpLspLabelType, 'mplsOutSegmentLdpLspType': mplsOutSegmentLdpLspType}


class mplsFecEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsFecIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1])
	access = 2
	rowstatus = mplsFecRowStatus
	columns = {'mplsFecIndex': mplsFecIndex, 'mplsFecType': mplsFecType, 'mplsFecAddrPrefixLength': mplsFecAddrPrefixLength, 'mplsFecAddrType': mplsFecAddrType, 'mplsFecAddr': mplsFecAddr, 'mplsFecStorageType': mplsFecStorageType, 'mplsFecRowStatus': mplsFecRowStatus}


class mplsLdpLspFecEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId, mplsLdpLspFecSegment, mplsLdpLspFecSegmentIndex, mplsLdpLspFecIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1])
	access = 2
	rowstatus = mplsLdpLspFecRowStatus
	columns = {'mplsLdpLspFecSegment': mplsLdpLspFecSegment, 'mplsLdpLspFecSegmentIndex': mplsLdpLspFecSegmentIndex, 'mplsLdpLspFecIndex': mplsLdpLspFecIndex, 'mplsLdpLspFecStorageType': mplsLdpLspFecStorageType, 'mplsLdpLspFecRowStatus': mplsLdpLspFecRowStatus}


class mplsLdpSessionPeerAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId, mplsLdpSessionPeerAddrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1])
	access = 2
	columns = {'mplsLdpSessionPeerAddrIndex': mplsLdpSessionPeerAddrIndex, 'mplsLdpSessionPeerNextHopAddrType': mplsLdpSessionPeerNextHopAddrType, 'mplsLdpSessionPeerNextHopAddr': mplsLdpSessionPeerNextHopAddr}


# notifications (traps) 
class mplsLdpInitSessionThresholdExceeded(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 1])

class mplsLdpPathVectorLimitMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 2])

class mplsLdpSessionUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 3])

class mplsLdpSessionDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 4])

# groups 
class mplsLdpGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1, 1])
	group = [mplsLdpLsrId, mplsLdpLsrLoopDetectionCapable, mplsLdpEntityLastChange, mplsLdpEntityIndexNext, mplsLdpEntityProtocolVersion, mplsLdpEntityAdminStatus, mplsLdpEntityOperStatus, mplsLdpEntityTcpPort, mplsLdpEntityUdpDscPort, mplsLdpEntityMaxPduLength, mplsLdpEntityKeepAliveHoldTimer, mplsLdpEntityHelloHoldTimer, mplsLdpEntityInitSessionThreshold, mplsLdpEntityLabelDistMethod, mplsLdpEntityLabelRetentionMode, mplsLdpEntityPathVectorLimit, mplsLdpEntityHopCountLimit, mplsLdpEntityTransportAddrKind, mplsLdpEntityTargetPeer, mplsLdpEntityTargetPeerAddrType, mplsLdpEntityTargetPeerAddr, mplsLdpEntityLabelType, mplsLdpEntityDiscontinuityTime, mplsLdpEntityStorageType, mplsLdpEntityRowStatus, mplsLdpEntityStatsSessionAttempts, mplsLdpEntityStatsSessionRejectedNoHelloErrors, mplsLdpEntityStatsSessionRejectedAdErrors, mplsLdpEntityStatsSessionRejectedMaxPduErrors, mplsLdpEntityStatsSessionRejectedLRErrors, mplsLdpEntityStatsBadLdpIdentifierErrors, mplsLdpEntityStatsBadPduLengthErrors, mplsLdpEntityStatsBadMessageLengthErrors, mplsLdpEntityStatsBadTlvLengthErrors, mplsLdpEntityStatsMalformedTlvValueErrors, mplsLdpEntityStatsKeepAliveTimerExpErrors, mplsLdpEntityStatsShutdownReceivedNotifications, mplsLdpEntityStatsShutdownSentNotifications, mplsLdpPeerLastChange, mplsLdpPeerLabelDistMethod, mplsLdpPeerPathVectorLimit, mplsLdpPeerTransportAddrType, mplsLdpPeerTransportAddr, mplsLdpHelloAdjacencyHoldTimeRem, mplsLdpHelloAdjacencyHoldTime, mplsLdpHelloAdjacencyType, mplsLdpSessionStateLastChange, mplsLdpSessionState, mplsLdpSessionRole, mplsLdpSessionProtocolVersion, mplsLdpSessionKeepAliveHoldTimeRem, mplsLdpSessionKeepAliveTime, mplsLdpSessionMaxPduLength, mplsLdpSessionDiscontinuityTime, mplsLdpSessionStatsUnknownMesTypeErrors, mplsLdpSessionStatsUnknownTlvErrors, mplsLdpSessionPeerNextHopAddrType, mplsLdpSessionPeerNextHopAddr, mplsFecLastChange, mplsFecIndexNext, mplsFecType, mplsFecAddrType, mplsFecAddr, mplsFecAddrPrefixLength, mplsFecStorageType, mplsFecRowStatus]

class mplsLdpLspGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1, 2])
	group = [mplsInSegmentLdpLspLabelType, mplsInSegmentLdpLspType, mplsOutSegmentLdpLspLabelType, mplsOutSegmentLdpLspType, mplsLdpLspFecLastChange, mplsLdpLspFecStorageType, mplsLdpLspFecRowStatus]

class mplsLdpNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1, 3])
	group = [mplsLdpInitSessionThresholdExceeded, mplsLdpPathVectorLimitMismatch, mplsLdpSessionUp, mplsLdpSessionDown]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
