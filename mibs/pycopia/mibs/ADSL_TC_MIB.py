# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import transmission, MODULE_IDENTITY, Gauge32
from SNMPv2_TC import TEXTUAL_CONVENTION

class ADSL_TC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ADSL-TC-MIB'
	conformance = 4
	name = 'ADSL-TC-MIB'
	language = 2
	description = 'The MIB module which provides a ADSL\nLine Coding Textual Convention to be used\nby ADSL Lines.'

# nodes
class adsltcmib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 94, 2])
	name = 'adsltcmib'


# macros
# types 

class AdslLineCodingType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'dmt'), Enum(3, 'cap'), Enum(4, 'qam')]


class AdslPerfCurrDayCount(pycopia.SMI.Basetypes.Gauge32):
	status = 1


class AdslPerfPrevDayCount(pycopia.SMI.Basetypes.Gauge32):
	status = 1


class AdslPerfTimeElapsed(pycopia.SMI.Basetypes.Gauge32):
	status = 1

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
