# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNA_SDLC_MIB import sdlcLSAddress
from IF_MIB import ifIndex
from SNMPv2_SMI import Counter32, Gauge32, Integer32, TimeTicks, OBJECT_TYPE, MODULE_IDENTITY, NOTIFICATION_TYPE
from CISCO_SMI import ciscoExperiment
from SNMPv2_TC import DisplayString, RowStatus, InstancePointer, TruthValue, TEXTUAL_CONVENTION

class CISCO_DLSW_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-DLSW-MIB'
	conformance = 2
	name = 'CISCO-DLSW-MIB'
	language = 2
	description = 'This MIB module contains objects to manage Data Link\nSwitches.'

# nodes
class ciscoDlswMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9])
	name = 'ciscoDlswMIB'

class ciscoDlswMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1])
	name = 'ciscoDlswMIBObjects'

class ciscoDlswNode(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1])
	name = 'ciscoDlswNode'

class ciscoDlswTrapControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10])
	name = 'ciscoDlswTrapControl'

class ciscoDlswTConn(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2])
	name = 'ciscoDlswTConn'

class ciscoDlswTConnStat(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1])
	name = 'ciscoDlswTConnStat'

class ciscoDlswTConnSpecific(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4])
	name = 'ciscoDlswTConnSpecific'

class ciscoDlswTConnTcp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1])
	name = 'ciscoDlswTConnTcp'

class ciscoDlswInterface(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3])
	name = 'ciscoDlswInterface'

class ciscoDlswDirectory(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4])
	name = 'ciscoDlswDirectory'

class ciscoDlswDirStat(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1])
	name = 'ciscoDlswDirStat'

class ciscoDlswDirCache(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2])
	name = 'ciscoDlswDirCache'

class ciscoDlswDirLocate(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3])
	name = 'ciscoDlswDirLocate'

class ciscoDlswCircuit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5])
	name = 'ciscoDlswCircuit'

class ciscoDlswCircuitStat(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 1])
	name = 'ciscoDlswCircuitStat'

class ciscoDlswSdlc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6])
	name = 'ciscoDlswSdlc'

class ciscoDlswTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7])
	name = 'ciscoDlswTraps'

class ciscoDlswDomains(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 2])
	name = 'ciscoDlswDomains'

class ciscoDlswTCPDomain(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 2, 1])
	name = 'ciscoDlswTCPDomain'

class ciscoDlswConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3])
	name = 'ciscoDlswConformance'

class ciscoDlswCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1])
	name = 'ciscoDlswCompliances'

class ciscoDlswGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2])
	name = 'ciscoDlswGroups'


# macros
# types 

class NBName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 16))

MacAddress = pycopia.SMI.Basetypes.MacAddress
TAddress = pycopia.SMI.Basetypes.TAddress

class DlswTimeStamp(pycopia.SMI.Basetypes.TimeTicks):
	status = 1


class EndStationLocation(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'internal'), Enum(3, 'remote'), Enum(4, 'local')]


class DlcType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'na'), Enum(3, 'llc'), Enum(4, 'sdlc'), Enum(5, 'qllc')]


class LFSize(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(516, 'lfs516'), Enum(635, 'lfs635'), Enum(754, 'lfs754'), Enum(873, 'lfs873'), Enum(993, 'lfs993'), Enum(1112, 'lfs1112'), Enum(1231, 'lfs1231'), Enum(1350, 'lfs1350'), Enum(1470, 'lfs1470'), Enum(1542, 'lfs1542'), Enum(1615, 'lfs1615'), Enum(1688, 'lfs1688'), Enum(1761, 'lfs1761'), Enum(1833, 'lfs1833'), Enum(1906, 'lfs1906'), Enum(1979, 'lfs1979'), Enum(2052, 'lfs2052'), Enum(2345, 'lfs2345'), Enum(2638, 'lfs2638'), Enum(2932, 'lfs2932'), Enum(3225, 'lfs3225'), Enum(3518, 'lfs3518'), Enum(3812, 'lfs3812'), Enum(4105, 'lfs4105'), Enum(4399, 'lfs4399'), Enum(4865, 'lfs4865'), Enum(5331, 'lfs5331'), Enum(5798, 'lfs5798'), Enum(6264, 'lfs6264'), Enum(6730, 'lfs6730'), Enum(7197, 'lfs7197'), Enum(7663, 'lfs7663'), Enum(8130, 'lfs8130'), Enum(8539, 'lfs8539'), Enum(8949, 'lfs8949'), Enum(9358, 'lfs9358'), Enum(9768, 'lfs9768'), Enum(10178, 'lfs10178'), Enum(10587, 'lfs10587'), Enum(10997, 'lfs10997'), Enum(11407, 'lfs11407'), Enum(12199, 'lfs12199'), Enum(12992, 'lfs12992'), Enum(13785, 'lfs13785'), Enum(14578, 'lfs14578'), Enum(15370, 'lfs15370'), Enum(16163, 'lfs16163'), Enum(16956, 'lfs16956'), Enum(17749, 'lfs17749'), Enum(20730, 'lfs20730'), Enum(23711, 'lfs23711'), Enum(26693, 'lfs26693'), Enum(29674, 'lfs29674'), Enum(32655, 'lfs32655'), Enum(38618, 'lfs38618'), Enum(41600, 'lfs41600'), Enum(44591, 'lfs44591'), Enum(47583, 'lfs47583'), Enum(50575, 'lfs50575'), Enum(53567, 'lfs53567'), Enum(56559, 'lfs56559'), Enum(59551, 'lfs59551'), Enum(65535, 'lfs65535')]

# scalars 
class ciscoDlswVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswVendorID(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswVersionString(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoDlswStdPacingSupport(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'adaptiveRcvWindow'), Enum(3, 'fixedRcvWindow')]


class ciscoDlswStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class ciscoDlswUpTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ciscoDlswVirtualSegmentLFSize(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 7])
	syntaxobject = LFSize


class ciscoDlswResourceNBExclusivity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoDlswResourceMacExclusivity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoDlswTrapCntlTConnPartnerReject(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled'), Enum(3, 'partial')]


class ciscoDlswTrapCntlTConnProtViolation(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoDlswTrapCntlTConn(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled'), Enum(3, 'partial')]


class ciscoDlswTrapCntlCircuit(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled'), Enum(3, 'partial')]


class ciscoDlswTConnStatActiveConnections(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswTConnStatCloseIdles(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnStatCloseBusys(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswDirMacEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswDirMacCacheHits(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswDirMacCacheMisses(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswDirNBEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswDirNBCacheHits(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswDirNBCacheMisses(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswActiveCircuits(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswCircuitCreates(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswSdlcLsEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


# columns
class ciscoDlswTConnConfigIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswTConnConfigTDomain(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class ciscoDlswTConnConfigLocalTAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class ciscoDlswTConnConfigRemoteTAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class ciscoDlswTConnConfigLastModifyTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 5])
	syntaxobject = DlswTimeStamp


class ciscoDlswTConnConfigEntryType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'individual'), Enum(2, 'global'), Enum(3, 'group')]


class ciscoDlswTConnConfigGroupDefinition(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoDlswTConnConfigSetupType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'activePersistent'), Enum(3, 'activeOnDemand'), Enum(4, 'passive'), Enum(5, 'excluded')]


class ciscoDlswTConnConfigSapList(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswTConnConfigAdvertiseMacNB(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoDlswTConnConfigInitCirRecvWndw(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'SSP messages'


class ciscoDlswTConnConfigOpens(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnConfigRowStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ciscoDlswTConnOperTDomain(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class ciscoDlswTConnOperLocalTAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class ciscoDlswTConnOperRemoteTAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class ciscoDlswTConnOperEntryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 4])
	syntaxobject = DlswTimeStamp


class ciscoDlswTConnOperConnectTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 5])
	syntaxobject = DlswTimeStamp


class ciscoDlswTConnOperState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'connecting'), Enum(2, 'initCapExchange'), Enum(3, 'connected'), Enum(4, 'quiescing'), Enum(5, 'disconnecting'), Enum(6, 'disconnected')]


class ciscoDlswTConnOperConfigIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswTConnOperFlowCntlMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'undetermined'), Enum(2, 'pacing'), Enum(3, 'other')]


class ciscoDlswTConnOperPartnerVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswTConnOperPartnerVendorID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswTConnOperPartnerVersionStr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoDlswTConnOperPartnerInitPacingWndw(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswTConnOperPartnerSapList(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswTConnOperPartnerNBExcl(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoDlswTConnOperPartnerMacExcl(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoDlswTConnOperPartnerNBInfo(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'partial'), Enum(3, 'complete'), Enum(4, 'notApplicable')]


class ciscoDlswTConnOperPartnerMacInfo(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'partial'), Enum(3, 'complete'), Enum(4, 'notApplicable')]


class ciscoDlswTConnOperDiscTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 18])
	syntaxobject = DlswTimeStamp


class ciscoDlswTConnOperDiscReason(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'capExFailed'), Enum(3, 'transportLayerDisc'), Enum(4, 'operatorCommand'), Enum(5, 'lastCircuitDiscd'), Enum(6, 'protocolError')]


class ciscoDlswTConnOperDiscActiveCir(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswTConnOperInDataPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'SSP messages'


class ciscoDlswTConnOperOutDataPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'SSP messages'


class ciscoDlswTConnOperInDataOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class ciscoDlswTConnOperOutDataOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class ciscoDlswTConnOperInCntlPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'SSP messages'


class ciscoDlswTConnOperOutCntlPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'SSP messages'


class ciscoDlswTConnOperCURexSents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperICRexRcvds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperCURexRcvds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperICRexSents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperNQexSents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperNRexRcvds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperNQexRcvds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperNRexSents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperCirCreates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswTConnOperCircuits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswTConnTcpConfigKeepAliveInt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class ciscoDlswTConnTcpConfigTcpConnections(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswTConnTcpConfigMaxSegmentSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'packets'


class ciscoDlswTConnTcpOperKeepAliveInt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class ciscoDlswTConnTcpOperPrefTcpConnections(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswTConnTcpOperTcpConnections(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswIfRowStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ciscoDlswIfVirtualSegment(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswIfSapList(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswDirMacIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswDirMacMac(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswDirMacMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswDirMacEntryType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'userConfiguredPublic'), Enum(3, 'userConfiguredPrivate'), Enum(4, 'partnerCapExMsg'), Enum(5, 'dynamic')]


class ciscoDlswDirMacLocationType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'local'), Enum(3, 'remote')]


class ciscoDlswDirMacLocation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoDlswDirMacStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'reachable'), Enum(3, 'notReachable')]


class ciscoDlswDirMacLFSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 8])
	syntaxobject = LFSize


class ciscoDlswDirMacRowStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ciscoDlswDirNBIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswDirNBName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 2])
	syntaxobject = NBName


class ciscoDlswDirNBNameType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'individual'), Enum(3, 'group')]


class ciscoDlswDirNBEntryType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'userConfiguredPublic'), Enum(3, 'userConfiguredPrivate'), Enum(4, 'partnerCapExMsg'), Enum(5, 'dynamic')]


class ciscoDlswDirNBLocationType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'local'), Enum(3, 'remote')]


class ciscoDlswDirNBLocation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoDlswDirNBStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'reachable'), Enum(3, 'notReachable')]


class ciscoDlswDirNBLFSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 8])
	syntaxobject = LFSize


class ciscoDlswDirNBRowStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ciscoDlswDirLocateMacMac(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswDirLocateMacMatch(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswDirLocateMacLocation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoDlswDirLocateNBName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1, 1])
	syntaxobject = NBName


class ciscoDlswDirLocateNBMatch(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswDirLocateNBLocation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoDlswCircuitS1Mac(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswCircuitS1Sap(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswCircuitS1IfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswCircuitS1DlcType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 4])
	syntaxobject = DlcType


class ciscoDlswCircuitS1RouteInfo(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswCircuitS1CircuitId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswCircuitS1Dlc(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoDlswCircuitS2Mac(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswCircuitS2Sap(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswCircuitS2Location(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 10])
	syntaxobject = EndStationLocation


class ciscoDlswCircuitS2TDomain(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class ciscoDlswCircuitS2TAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class ciscoDlswCircuitS2CircuitId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswCircuitOrigin(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 's1'), Enum(2, 's2')]


class ciscoDlswCircuitEntryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 15])
	syntaxobject = DlswTimeStamp


class ciscoDlswCircuitStateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 16])
	syntaxobject = DlswTimeStamp


class ciscoDlswCircuitState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disconnected'), Enum(2, 'circuitStart'), Enum(3, 'resolvePending'), Enum(4, 'circuitPending'), Enum(5, 'circuitEstablished'), Enum(6, 'connectPending'), Enum(7, 'contactPending'), Enum(8, 'connected'), Enum(9, 'disconnectPending'), Enum(10, 'haltPending'), Enum(11, 'haltPendingNoack'), Enum(12, 'circuitRestart'), Enum(13, 'restartPending')]


class ciscoDlswCircuitPriority(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'unsupported'), Enum(1, 'low'), Enum(2, 'medium'), Enum(3, 'high'), Enum(4, 'highest')]


class ciscoDlswCircuitFCSendGrantedUnits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswCircuitFCSendCurrentWndw(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswCircuitFCRecvGrantedUnits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswCircuitFCRecvCurrentWndw(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoDlswCircuitFCLargestRecvGranted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswCircuitFCLargestSendGranted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoDlswCircuitFCHalveWndwSents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswCircuitFCResetOpSents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswCircuitFCHalveWndwRcvds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswCircuitFCResetOpRcvds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoDlswCircuitDiscReasonLocal(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'endStationDiscRcvd'), Enum(2, 'endStationDlcError'), Enum(3, 'protocolError'), Enum(4, 'operatorCommand'), Enum(5, 'haltDlRcvd'), Enum(6, 'haltDlNoAckRcvd'), Enum(7, 'transportConnClosed')]


class ciscoDlswCircuitDiscReasonRemote(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'unknown'), Enum(1, 'endStationDiscRcvd'), Enum(2, 'endStationDlcError'), Enum(3, 'protocolError'), Enum(4, 'operatorCommand')]


class ciscoDlswCircuitDiscReasonRemoteData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswSdlcLsLocalMac(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswSdlcLsLocalSap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswSdlcLsLocalBlockNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoDlswSdlcLsLocalIdNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoDlswSdlcLsRemoteMac(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class ciscoDlswSdlcLsRemoteSap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ciscoDlswSdlcLsRowStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class ciscoDlswTConnConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswTConnConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1])
	access = 2
	rowstatus = ciscoDlswTConnConfigRowStatus
	columns = {'ciscoDlswTConnConfigIndex': ciscoDlswTConnConfigIndex, 'ciscoDlswTConnConfigTDomain': ciscoDlswTConnConfigTDomain, 'ciscoDlswTConnConfigLocalTAddr': ciscoDlswTConnConfigLocalTAddr, 'ciscoDlswTConnConfigRemoteTAddr': ciscoDlswTConnConfigRemoteTAddr, 'ciscoDlswTConnConfigLastModifyTime': ciscoDlswTConnConfigLastModifyTime, 'ciscoDlswTConnConfigEntryType': ciscoDlswTConnConfigEntryType, 'ciscoDlswTConnConfigGroupDefinition': ciscoDlswTConnConfigGroupDefinition, 'ciscoDlswTConnConfigSetupType': ciscoDlswTConnConfigSetupType, 'ciscoDlswTConnConfigSapList': ciscoDlswTConnConfigSapList, 'ciscoDlswTConnConfigAdvertiseMacNB': ciscoDlswTConnConfigAdvertiseMacNB, 'ciscoDlswTConnConfigInitCirRecvWndw': ciscoDlswTConnConfigInitCirRecvWndw, 'ciscoDlswTConnConfigOpens': ciscoDlswTConnConfigOpens, 'ciscoDlswTConnConfigRowStatus': ciscoDlswTConnConfigRowStatus}


class ciscoDlswTConnOperEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswTConnOperTDomain, ciscoDlswTConnOperRemoteTAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1])
	access = 2
	columns = {'ciscoDlswTConnOperTDomain': ciscoDlswTConnOperTDomain, 'ciscoDlswTConnOperLocalTAddr': ciscoDlswTConnOperLocalTAddr, 'ciscoDlswTConnOperRemoteTAddr': ciscoDlswTConnOperRemoteTAddr, 'ciscoDlswTConnOperEntryTime': ciscoDlswTConnOperEntryTime, 'ciscoDlswTConnOperConnectTime': ciscoDlswTConnOperConnectTime, 'ciscoDlswTConnOperState': ciscoDlswTConnOperState, 'ciscoDlswTConnOperConfigIndex': ciscoDlswTConnOperConfigIndex, 'ciscoDlswTConnOperFlowCntlMode': ciscoDlswTConnOperFlowCntlMode, 'ciscoDlswTConnOperPartnerVersion': ciscoDlswTConnOperPartnerVersion, 'ciscoDlswTConnOperPartnerVendorID': ciscoDlswTConnOperPartnerVendorID, 'ciscoDlswTConnOperPartnerVersionStr': ciscoDlswTConnOperPartnerVersionStr, 'ciscoDlswTConnOperPartnerInitPacingWndw': ciscoDlswTConnOperPartnerInitPacingWndw, 'ciscoDlswTConnOperPartnerSapList': ciscoDlswTConnOperPartnerSapList, 'ciscoDlswTConnOperPartnerNBExcl': ciscoDlswTConnOperPartnerNBExcl, 'ciscoDlswTConnOperPartnerMacExcl': ciscoDlswTConnOperPartnerMacExcl, 'ciscoDlswTConnOperPartnerNBInfo': ciscoDlswTConnOperPartnerNBInfo, 'ciscoDlswTConnOperPartnerMacInfo': ciscoDlswTConnOperPartnerMacInfo, 'ciscoDlswTConnOperDiscTime': ciscoDlswTConnOperDiscTime, 'ciscoDlswTConnOperDiscReason': ciscoDlswTConnOperDiscReason, 'ciscoDlswTConnOperDiscActiveCir': ciscoDlswTConnOperDiscActiveCir, 'ciscoDlswTConnOperInDataPkts': ciscoDlswTConnOperInDataPkts, 'ciscoDlswTConnOperOutDataPkts': ciscoDlswTConnOperOutDataPkts, 'ciscoDlswTConnOperInDataOctets': ciscoDlswTConnOperInDataOctets, 'ciscoDlswTConnOperOutDataOctets': ciscoDlswTConnOperOutDataOctets, 'ciscoDlswTConnOperInCntlPkts': ciscoDlswTConnOperInCntlPkts, 'ciscoDlswTConnOperOutCntlPkts': ciscoDlswTConnOperOutCntlPkts, 'ciscoDlswTConnOperCURexSents': ciscoDlswTConnOperCURexSents, 'ciscoDlswTConnOperICRexRcvds': ciscoDlswTConnOperICRexRcvds, 'ciscoDlswTConnOperCURexRcvds': ciscoDlswTConnOperCURexRcvds, 'ciscoDlswTConnOperICRexSents': ciscoDlswTConnOperICRexSents, 'ciscoDlswTConnOperNQexSents': ciscoDlswTConnOperNQexSents, 'ciscoDlswTConnOperNRexRcvds': ciscoDlswTConnOperNRexRcvds, 'ciscoDlswTConnOperNQexRcvds': ciscoDlswTConnOperNQexRcvds, 'ciscoDlswTConnOperNRexSents': ciscoDlswTConnOperNRexSents, 'ciscoDlswTConnOperCirCreates': ciscoDlswTConnOperCirCreates, 'ciscoDlswTConnOperCircuits': ciscoDlswTConnOperCircuits}


class ciscoDlswTConnTcpConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswTConnConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1])
	access = 2
	columns = {'ciscoDlswTConnTcpConfigKeepAliveInt': ciscoDlswTConnTcpConfigKeepAliveInt, 'ciscoDlswTConnTcpConfigTcpConnections': ciscoDlswTConnTcpConfigTcpConnections, 'ciscoDlswTConnTcpConfigMaxSegmentSize': ciscoDlswTConnTcpConfigMaxSegmentSize}


class ciscoDlswTConnTcpOperEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswTConnOperTDomain, ciscoDlswTConnOperRemoteTAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1])
	access = 2
	columns = {'ciscoDlswTConnTcpOperKeepAliveInt': ciscoDlswTConnTcpOperKeepAliveInt, 'ciscoDlswTConnTcpOperPrefTcpConnections': ciscoDlswTConnTcpOperPrefTcpConnections, 'ciscoDlswTConnTcpOperTcpConnections': ciscoDlswTConnTcpOperTcpConnections}


class ciscoDlswIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1])
	access = 2
	rowstatus = ciscoDlswIfRowStatus
	columns = {'ciscoDlswIfRowStatus': ciscoDlswIfRowStatus, 'ciscoDlswIfVirtualSegment': ciscoDlswIfVirtualSegment, 'ciscoDlswIfSapList': ciscoDlswIfSapList}


class ciscoDlswDirMacEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswDirMacIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1])
	access = 2
	rowstatus = ciscoDlswDirMacRowStatus
	columns = {'ciscoDlswDirMacIndex': ciscoDlswDirMacIndex, 'ciscoDlswDirMacMac': ciscoDlswDirMacMac, 'ciscoDlswDirMacMask': ciscoDlswDirMacMask, 'ciscoDlswDirMacEntryType': ciscoDlswDirMacEntryType, 'ciscoDlswDirMacLocationType': ciscoDlswDirMacLocationType, 'ciscoDlswDirMacLocation': ciscoDlswDirMacLocation, 'ciscoDlswDirMacStatus': ciscoDlswDirMacStatus, 'ciscoDlswDirMacLFSize': ciscoDlswDirMacLFSize, 'ciscoDlswDirMacRowStatus': ciscoDlswDirMacRowStatus}


class ciscoDlswDirNBEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswDirNBIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1])
	access = 2
	rowstatus = ciscoDlswDirNBRowStatus
	columns = {'ciscoDlswDirNBIndex': ciscoDlswDirNBIndex, 'ciscoDlswDirNBName': ciscoDlswDirNBName, 'ciscoDlswDirNBNameType': ciscoDlswDirNBNameType, 'ciscoDlswDirNBEntryType': ciscoDlswDirNBEntryType, 'ciscoDlswDirNBLocationType': ciscoDlswDirNBLocationType, 'ciscoDlswDirNBLocation': ciscoDlswDirNBLocation, 'ciscoDlswDirNBStatus': ciscoDlswDirNBStatus, 'ciscoDlswDirNBLFSize': ciscoDlswDirNBLFSize, 'ciscoDlswDirNBRowStatus': ciscoDlswDirNBRowStatus}


class ciscoDlswDirLocateMacEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswDirLocateMacMac, ciscoDlswDirLocateMacMatch], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1])
	access = 2
	columns = {'ciscoDlswDirLocateMacMac': ciscoDlswDirLocateMacMac, 'ciscoDlswDirLocateMacMatch': ciscoDlswDirLocateMacMatch, 'ciscoDlswDirLocateMacLocation': ciscoDlswDirLocateMacLocation}


class ciscoDlswDirLocateNBEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswDirLocateNBName, ciscoDlswDirLocateNBMatch], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1])
	access = 2
	columns = {'ciscoDlswDirLocateNBName': ciscoDlswDirLocateNBName, 'ciscoDlswDirLocateNBMatch': ciscoDlswDirLocateNBMatch, 'ciscoDlswDirLocateNBLocation': ciscoDlswDirLocateNBLocation}


class ciscoDlswCircuitEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoDlswCircuitS1Mac, ciscoDlswCircuitS1Sap, ciscoDlswCircuitS2Mac, ciscoDlswCircuitS2Sap], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1])
	access = 2
	columns = {'ciscoDlswCircuitS1Mac': ciscoDlswCircuitS1Mac, 'ciscoDlswCircuitS1Sap': ciscoDlswCircuitS1Sap, 'ciscoDlswCircuitS1IfIndex': ciscoDlswCircuitS1IfIndex, 'ciscoDlswCircuitS1DlcType': ciscoDlswCircuitS1DlcType, 'ciscoDlswCircuitS1RouteInfo': ciscoDlswCircuitS1RouteInfo, 'ciscoDlswCircuitS1CircuitId': ciscoDlswCircuitS1CircuitId, 'ciscoDlswCircuitS1Dlc': ciscoDlswCircuitS1Dlc, 'ciscoDlswCircuitS2Mac': ciscoDlswCircuitS2Mac, 'ciscoDlswCircuitS2Sap': ciscoDlswCircuitS2Sap, 'ciscoDlswCircuitS2Location': ciscoDlswCircuitS2Location, 'ciscoDlswCircuitS2TDomain': ciscoDlswCircuitS2TDomain, 'ciscoDlswCircuitS2TAddress': ciscoDlswCircuitS2TAddress, 'ciscoDlswCircuitS2CircuitId': ciscoDlswCircuitS2CircuitId, 'ciscoDlswCircuitOrigin': ciscoDlswCircuitOrigin, 'ciscoDlswCircuitEntryTime': ciscoDlswCircuitEntryTime, 'ciscoDlswCircuitStateTime': ciscoDlswCircuitStateTime, 'ciscoDlswCircuitState': ciscoDlswCircuitState, 'ciscoDlswCircuitPriority': ciscoDlswCircuitPriority, 'ciscoDlswCircuitFCSendGrantedUnits': ciscoDlswCircuitFCSendGrantedUnits, 'ciscoDlswCircuitFCSendCurrentWndw': ciscoDlswCircuitFCSendCurrentWndw, 'ciscoDlswCircuitFCRecvGrantedUnits': ciscoDlswCircuitFCRecvGrantedUnits, 'ciscoDlswCircuitFCRecvCurrentWndw': ciscoDlswCircuitFCRecvCurrentWndw, 'ciscoDlswCircuitFCLargestRecvGranted': ciscoDlswCircuitFCLargestRecvGranted, 'ciscoDlswCircuitFCLargestSendGranted': ciscoDlswCircuitFCLargestSendGranted, 'ciscoDlswCircuitFCHalveWndwSents': ciscoDlswCircuitFCHalveWndwSents, 'ciscoDlswCircuitFCResetOpSents': ciscoDlswCircuitFCResetOpSents, 'ciscoDlswCircuitFCHalveWndwRcvds': ciscoDlswCircuitFCHalveWndwRcvds, 'ciscoDlswCircuitFCResetOpRcvds': ciscoDlswCircuitFCResetOpRcvds, 'ciscoDlswCircuitDiscReasonLocal': ciscoDlswCircuitDiscReasonLocal, 'ciscoDlswCircuitDiscReasonRemote': ciscoDlswCircuitDiscReasonRemote, 'ciscoDlswCircuitDiscReasonRemoteData': ciscoDlswCircuitDiscReasonRemoteData}


class ciscoDlswSdlcLsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, sdlcLSAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1])
	access = 2
	rowstatus = ciscoDlswSdlcLsRowStatus
	columns = {'ciscoDlswSdlcLsLocalMac': ciscoDlswSdlcLsLocalMac, 'ciscoDlswSdlcLsLocalSap': ciscoDlswSdlcLsLocalSap, 'ciscoDlswSdlcLsLocalBlockNum': ciscoDlswSdlcLsLocalBlockNum, 'ciscoDlswSdlcLsLocalIdNum': ciscoDlswSdlcLsLocalIdNum, 'ciscoDlswSdlcLsRemoteMac': ciscoDlswSdlcLsRemoteMac, 'ciscoDlswSdlcLsRemoteSap': ciscoDlswSdlcLsRemoteSap, 'ciscoDlswSdlcLsRowStatus': ciscoDlswSdlcLsRowStatus}


# notifications (traps) 
class ciscoDlswTrapTConnPartnerReject(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 1])

class ciscoDlswTrapTConnProtViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 2])

class ciscoDlswTrapTConnUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 3])

class ciscoDlswTrapTConnDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 4])

class ciscoDlswTrapCircuitUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 5])

class ciscoDlswTrapCircuitDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 6])

# groups 
class ciscoDlswNodeGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 1])
	group = [ciscoDlswVersion, ciscoDlswVendorID, ciscoDlswVersionString, ciscoDlswStdPacingSupport, ciscoDlswStatus, ciscoDlswUpTime, ciscoDlswVirtualSegmentLFSize, ciscoDlswResourceMacExclusivity, ciscoDlswTrapCntlTConnPartnerReject, ciscoDlswTrapCntlTConnProtViolation, ciscoDlswTrapCntlTConn, ciscoDlswTrapCntlCircuit]

class ciscoDlswNodeNBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 2])
	group = [ciscoDlswResourceNBExclusivity]

class ciscoDlswTConnStatGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 3])
	group = [ciscoDlswTConnStatActiveConnections, ciscoDlswTConnStatCloseIdles, ciscoDlswTConnStatCloseBusys]

class ciscoDlswTConnConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 4])
	group = [ciscoDlswTConnConfigTDomain, ciscoDlswTConnConfigLocalTAddr, ciscoDlswTConnConfigRemoteTAddr, ciscoDlswTConnConfigLastModifyTime, ciscoDlswTConnConfigEntryType, ciscoDlswTConnConfigGroupDefinition, ciscoDlswTConnConfigSetupType, ciscoDlswTConnConfigSapList, ciscoDlswTConnConfigAdvertiseMacNB, ciscoDlswTConnConfigInitCirRecvWndw, ciscoDlswTConnConfigOpens, ciscoDlswTConnConfigRowStatus]

class ciscoDlswTConnOperGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 5])
	group = [ciscoDlswTConnOperLocalTAddr, ciscoDlswTConnOperEntryTime, ciscoDlswTConnOperConnectTime, ciscoDlswTConnOperState, ciscoDlswTConnOperConfigIndex, ciscoDlswTConnOperFlowCntlMode, ciscoDlswTConnOperPartnerVersion, ciscoDlswTConnOperPartnerVendorID, ciscoDlswTConnOperPartnerVersionStr, ciscoDlswTConnOperPartnerInitPacingWndw, ciscoDlswTConnOperPartnerSapList, ciscoDlswTConnOperPartnerMacExcl, ciscoDlswTConnOperPartnerMacInfo, ciscoDlswTConnOperDiscTime, ciscoDlswTConnOperDiscReason, ciscoDlswTConnOperDiscActiveCir, ciscoDlswTConnOperInDataPkts, ciscoDlswTConnOperOutDataPkts, ciscoDlswTConnOperInDataOctets, ciscoDlswTConnOperOutDataOctets, ciscoDlswTConnOperInCntlPkts, ciscoDlswTConnOperOutCntlPkts, ciscoDlswTConnOperCURexSents, ciscoDlswTConnOperICRexRcvds, ciscoDlswTConnOperCURexRcvds, ciscoDlswTConnOperICRexSents, ciscoDlswTConnOperCirCreates, ciscoDlswTConnOperCircuits]

class ciscoDlswTConnNBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 6])
	group = [ciscoDlswTConnOperPartnerNBInfo, ciscoDlswTConnOperPartnerNBExcl, ciscoDlswTConnOperNQexSents, ciscoDlswTConnOperNRexRcvds, ciscoDlswTConnOperNQexRcvds, ciscoDlswTConnOperNRexSents]

class ciscoDlswInterfaceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 7])
	group = [ciscoDlswIfRowStatus, ciscoDlswIfVirtualSegment, ciscoDlswIfSapList]

class ciscoDlswDirGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 8])
	group = [ciscoDlswDirMacEntries, ciscoDlswDirMacCacheHits, ciscoDlswDirMacCacheMisses, ciscoDlswDirMacMac, ciscoDlswDirMacMask, ciscoDlswDirMacEntryType, ciscoDlswDirMacLocationType, ciscoDlswDirMacLocation, ciscoDlswDirMacStatus, ciscoDlswDirMacLFSize, ciscoDlswDirMacRowStatus]

class ciscoDlswDirNBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 9])
	group = [ciscoDlswDirNBEntries, ciscoDlswDirNBCacheHits, ciscoDlswDirNBCacheMisses, ciscoDlswDirNBName, ciscoDlswDirNBNameType, ciscoDlswDirNBEntryType, ciscoDlswDirNBLocationType, ciscoDlswDirNBLocation, ciscoDlswDirNBStatus, ciscoDlswDirNBLFSize, ciscoDlswDirNBRowStatus]

class ciscoDlswDirLocateGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 10])
	group = [ciscoDlswDirLocateMacLocation]

class ciscoDlswDirLocateNBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 11])
	group = [ciscoDlswDirLocateNBLocation]

class ciscoDlswCircuitGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 12])
	group = [ciscoDlswCircuitS1IfIndex, ciscoDlswCircuitS1DlcType, ciscoDlswCircuitS1RouteInfo, ciscoDlswCircuitS1CircuitId, ciscoDlswCircuitS1Dlc, ciscoDlswCircuitS2Location, ciscoDlswCircuitS2TDomain, ciscoDlswCircuitS2TAddress, ciscoDlswCircuitS2CircuitId, ciscoDlswCircuitOrigin, ciscoDlswCircuitEntryTime, ciscoDlswCircuitStateTime, ciscoDlswCircuitState, ciscoDlswCircuitPriority, ciscoDlswCircuitFCSendGrantedUnits, ciscoDlswCircuitFCSendCurrentWndw, ciscoDlswCircuitFCRecvGrantedUnits, ciscoDlswCircuitFCRecvCurrentWndw, ciscoDlswCircuitFCLargestRecvGranted, ciscoDlswCircuitFCLargestSendGranted, ciscoDlswCircuitFCHalveWndwSents, ciscoDlswCircuitFCResetOpSents, ciscoDlswCircuitFCHalveWndwRcvds, ciscoDlswCircuitFCResetOpRcvds, ciscoDlswCircuitDiscReasonLocal, ciscoDlswCircuitDiscReasonRemote, ciscoDlswCircuitDiscReasonRemoteData]

class ciscoDlswSdlcGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 13])
	group = [ciscoDlswSdlcLsEntries, ciscoDlswSdlcLsLocalMac, ciscoDlswSdlcLsLocalSap, ciscoDlswSdlcLsLocalBlockNum, ciscoDlswSdlcLsLocalIdNum, ciscoDlswSdlcLsRemoteMac, ciscoDlswSdlcLsRemoteSap, ciscoDlswSdlcLsRowStatus]

class ciscoDlswTConnTcpConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 15])
	group = [ciscoDlswTConnTcpConfigKeepAliveInt, ciscoDlswTConnTcpConfigTcpConnections, ciscoDlswTConnTcpConfigMaxSegmentSize]

class ciscoDlswTConnTcpOperGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 16])
	group = [ciscoDlswTConnTcpOperKeepAliveInt, ciscoDlswTConnTcpOperPrefTcpConnections, ciscoDlswTConnTcpOperTcpConnections]

class ciscoDlswCircuitStatGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 17])
	group = [ciscoDlswActiveCircuits, ciscoDlswCircuitCreates]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
