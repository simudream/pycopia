# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from APPN_MIB import SnaControlPointName
from SNMPv2_TC import DisplayString, RowStatus, TEXTUAL_CONVENTION
from HPR_MIB import hprObjects, hprCompliances, hprGroups

class HPR_IP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/HPR-IP-MIB'
	conformance = 3
	name = 'HPR-IP-MIB'
	language = 2
	description = 'The MIB module for HPR over IP.  This module contains two\ngroups:\n\n -  the HPR over IP Monitoring Group provides a count of the UDP\n    packets sent by a link station for each APPN traffic type.\n\n -  the HPR over IP Configuration Group provides for reading and\n    setting the mappings between APPN traffic types and TOS\n    Precedence settings in the IP header.  These mappings are\n    configured at the APPN port level, and are inherited by the\n    APPN connection networks and link stations associated with an\n    APPN port.  A port-level mapping can, however, be overridden\n    for a particular connection network or link station.'

# nodes
class hprIp(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5])
	name = 'hprIp'


# macros
# types 

class AppnTrafficType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'low'), Enum(2, 'medium'), Enum(3, 'high'), Enum(4, 'network'), Enum(5, 'llcAndFnRoutedNlp')]


class AppnTOSPrecedence(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(3, 3))

# scalars 
# columns
class hprIpActiveLsLsName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hprIpActiveLsAppnTrafficType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 1, 1, 2])
	syntaxobject = AppnTrafficType


class hprIpActiveLsUdpPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hprIpAppnPortName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hprIpAppnPortAppnTrafficType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 2, 1, 2])
	syntaxobject = AppnTrafficType


class hprIpAppnPortTOSPrecedence(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 2, 1, 3])
	syntaxobject = AppnTOSPrecedence


class hprIpLsLsName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hprIpLsAppnTrafficType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 3, 1, 2])
	syntaxobject = AppnTrafficType


class hprIpLsTOSPrecedence(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 3, 1, 3])
	syntaxobject = AppnTOSPrecedence


class hprIpLsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hprIpCnVrnName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 4, 1, 1])
	syntaxobject = SnaControlPointName


class hprIpCnAppnTrafficType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 4, 1, 2])
	syntaxobject = AppnTrafficType


class hprIpCnTOSPrecedence(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 4, 1, 3])
	syntaxobject = AppnTOSPrecedence


class hprIpCnRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class hprIpActiveLsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprIpActiveLsLsName, hprIpActiveLsAppnTrafficType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 1, 1])
	access = 2
	columns = {'hprIpActiveLsLsName': hprIpActiveLsLsName, 'hprIpActiveLsAppnTrafficType': hprIpActiveLsAppnTrafficType, 'hprIpActiveLsUdpPackets': hprIpActiveLsUdpPackets}


class hprIpAppnPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprIpAppnPortName, hprIpAppnPortAppnTrafficType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 2, 1])
	access = 2
	columns = {'hprIpAppnPortName': hprIpAppnPortName, 'hprIpAppnPortAppnTrafficType': hprIpAppnPortAppnTrafficType, 'hprIpAppnPortTOSPrecedence': hprIpAppnPortTOSPrecedence}


class hprIpLsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprIpLsLsName, hprIpLsAppnTrafficType], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 3, 1])
	access = 2
	rowstatus = hprIpLsRowStatus
	columns = {'hprIpLsLsName': hprIpLsLsName, 'hprIpLsAppnTrafficType': hprIpLsAppnTrafficType, 'hprIpLsTOSPrecedence': hprIpLsTOSPrecedence, 'hprIpLsRowStatus': hprIpLsRowStatus}


class hprIpCnEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprIpCnVrnName, hprIpCnAppnTrafficType], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 5, 4, 1])
	access = 2
	rowstatus = hprIpCnRowStatus
	columns = {'hprIpCnVrnName': hprIpCnVrnName, 'hprIpCnAppnTrafficType': hprIpCnAppnTrafficType, 'hprIpCnTOSPrecedence': hprIpCnTOSPrecedence, 'hprIpCnRowStatus': hprIpCnRowStatus}


# notifications (traps) 
# groups 
class hprIpMonitoringGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 5])
	group = [hprIpActiveLsUdpPackets]

class hprIpConfigurationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 6])
	group = [hprIpAppnPortTOSPrecedence, hprIpLsTOSPrecedence, hprIpLsRowStatus, hprIpCnTOSPrecedence, hprIpCnRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
