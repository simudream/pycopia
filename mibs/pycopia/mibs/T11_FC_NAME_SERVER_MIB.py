# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from FC_MGMT_MIB import fcmInstanceIndex, FcPortType, FcAddressIdOrZero, FcClasses, FcNameIdOrZero
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Unsigned32, Counter32, Integer32, mib_2
from T11_FC_FABRIC_ADDR_MGR_MIB import t11FamLocalSwitchWwn
from T11_TC_MIB import T11FabricIndex
from SNMPv2_TC import TruthValue, TEXTUAL_CONVENTION, TimeStamp

class T11_FC_NAME_SERVER_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/T11-FC-NAME-SERVER-MIB'
	name = 'T11-FC-NAME-SERVER-MIB'
	language = 2
	description = 'The MIB module for the management of the functionality,\nwhich realizes the FC-GS-4 requirements for Name\nServer (NS).\n\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4438; see the RFC itself for\nfull legal notices.'

# nodes
class t11FcNameServerMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135])
	name = 't11FcNameServerMIB'

class t11NsNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 0])
	name = 't11NsNotifications'

class t11NsMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1])
	name = 't11NsMIBObjects'

class t11NsStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1])
	name = 't11NsStatus'

class t11NsStatistics(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2])
	name = 't11NsStatistics'

class t11NsMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2])
	name = 't11NsMIBConformance'

class t11NsMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 1])
	name = 't11NsMIBCompliances'

class t11NsMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2])
	name = 't11NsMIBGroups'


# macros
# types 

class T11NsGs4RejectReasonCode(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'none'), Enum(2, 'invalidCmdCode'), Enum(3, 'invalidVerLevel'), Enum(4, 'logicalError'), Enum(5, 'invalidIUSize'), Enum(6, 'logicalBusy'), Enum(7, 'protocolError'), Enum(8, 'unableToPerformCmdReq'), Enum(9, 'cmdNotSupported'), Enum(10, 'serverNotAvailable'), Enum(11, 'couldNotEstabSession'), Enum(12, 'vendorError')]


class T11NsRejReasonCodeExpl(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'noAdditionalExplanation'), Enum(2, 'portIdentifierNotRegistered'), Enum(3, 'portNameNotRegistered'), Enum(4, 'nodeNameNotRegistered'), Enum(5, 'classOfServiceNotRegistered'), Enum(6, 'nodeIpAddressNotRegistered'), Enum(7, 'ipaNotRegistered'), Enum(8, 'fc4TypeNotRegistered'), Enum(9, 'symbolicPortNameNotRegistered'), Enum(10, 'symbolicNodeNameNotRegistered'), Enum(11, 'portTypeNotRegistered'), Enum(12, 'portIpAddressNotRegistered'), Enum(13, 'fabricPortNameNotRegistered'), Enum(14, 'hardAddressNotRegistered'), Enum(15, 'fc4DescriptorNotRegistered'), Enum(16, 'fc4FeaturesNotRegistered'), Enum(17, 'accessDenied'), Enum(18, 'unacceptablePortIdentifier'), Enum(19, 'databaseEmpty'), Enum(20, 'noObjectRegInSpecifiedScope'), Enum(21, 'domainIdNotPresent'), Enum(22, 'portIdNotPresent'), Enum(23, 'noDeviceAttached'), Enum(24, 'authorizationException'), Enum(25, 'authenticationException'), Enum(26, 'databaseFull')]

# scalars 
# columns
class t11NsInfoSubsetIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11NsInfoSubsetSwitchIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11NsInfoSubsetTableLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class t11NsInfoSubsetNumRows(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class t11NsInfoSubsetTotalRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsInfoSubsetRejReqNotfyEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class t11NsRegFabricIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 1])
	syntaxobject = T11FabricIndex


class t11NsRegPortIdentifier(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 2])
	syntaxobject = FcAddressIdOrZero


class t11NsRegPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 3])
	syntaxobject = FcNameIdOrZero


class t11NsRegNodeName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 4])
	syntaxobject = FcNameIdOrZero


class t11NsRegClassOfSvc(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 5])
	syntaxobject = FcClasses


class t11NsRegNodeIpAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRegProcAssoc(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRegFc4Type(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRegPortType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 9])
	syntaxobject = FcPortType


class t11NsRegPortIpAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRegFabricPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 11])
	syntaxobject = FcNameIdOrZero


class t11NsRegHardAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 12])
	syntaxobject = FcAddressIdOrZero


class t11NsRegSymbolicPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 13])
	syntaxobject = SnmpAdminString


class t11NsRegSymbolicNodeName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 14])
	syntaxobject = SnmpAdminString


class t11NsRegFc4Features(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRegFc4TypeValue(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11NsRegFc4Descriptor(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRejectCtCommandString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsRejectReasonCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 4, 1, 2])
	syntaxobject = T11NsGs4RejectReasonCode


class t11NsRejReasonCodeExp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 4, 1, 3])
	syntaxobject = T11NsRejReasonCodeExpl


class t11NsRejReasonVendorCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class t11NsInGetReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsOutGetReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsInRegReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsInDeRegReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsInRscns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsOutRscns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11NsDatabaseFull(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# rows 
class t11NsInfoSubsetEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, t11NsInfoSubsetIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 1, 1])
	access = 2
	columns = {'t11NsInfoSubsetIndex': t11NsInfoSubsetIndex, 't11NsInfoSubsetSwitchIndex': t11NsInfoSubsetSwitchIndex, 't11NsInfoSubsetTableLastChange': t11NsInfoSubsetTableLastChange, 't11NsInfoSubsetNumRows': t11NsInfoSubsetNumRows, 't11NsInfoSubsetTotalRejects': t11NsInfoSubsetTotalRejects, 't11NsInfoSubsetRejReqNotfyEnable': t11NsInfoSubsetRejReqNotfyEnable}


class t11NsRegEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, t11NsInfoSubsetIndex, t11NsRegFabricIndex, t11NsRegPortIdentifier], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 2, 1])
	access = 2
	columns = {'t11NsRegFabricIndex': t11NsRegFabricIndex, 't11NsRegPortIdentifier': t11NsRegPortIdentifier, 't11NsRegPortName': t11NsRegPortName, 't11NsRegNodeName': t11NsRegNodeName, 't11NsRegClassOfSvc': t11NsRegClassOfSvc, 't11NsRegNodeIpAddress': t11NsRegNodeIpAddress, 't11NsRegProcAssoc': t11NsRegProcAssoc, 't11NsRegFc4Type': t11NsRegFc4Type, 't11NsRegPortType': t11NsRegPortType, 't11NsRegPortIpAddress': t11NsRegPortIpAddress, 't11NsRegFabricPortName': t11NsRegFabricPortName, 't11NsRegHardAddress': t11NsRegHardAddress, 't11NsRegSymbolicPortName': t11NsRegSymbolicPortName, 't11NsRegSymbolicNodeName': t11NsRegSymbolicNodeName, 't11NsRegFc4Features': t11NsRegFc4Features}


class t11NsRegFc4DescriptorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, t11NsInfoSubsetIndex, t11NsRegFabricIndex, t11NsRegPortIdentifier, t11NsRegFc4TypeValue], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 3, 1])
	access = 2
	columns = {'t11NsRegFc4TypeValue': t11NsRegFc4TypeValue, 't11NsRegFc4Descriptor': t11NsRegFc4Descriptor}


class t11NsRejectEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, t11NsInfoSubsetIndex, t11NsRegFabricIndex, t11NsRegPortIdentifier], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 1, 4, 1])
	access = 2
	columns = {'t11NsRejectCtCommandString': t11NsRejectCtCommandString, 't11NsRejectReasonCode': t11NsRejectReasonCode, 't11NsRejReasonCodeExp': t11NsRejReasonCodeExp, 't11NsRejReasonVendorCode': t11NsRejReasonVendorCode}


class t11NsStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, t11NsInfoSubsetIndex, t11NsRegFabricIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 1, 2, 1, 1])
	access = 2
	columns = {'t11NsInGetReqs': t11NsInGetReqs, 't11NsOutGetReqs': t11NsOutGetReqs, 't11NsInRegReqs': t11NsInRegReqs, 't11NsInDeRegReqs': t11NsInDeRegReqs, 't11NsInRscns': t11NsInRscns, 't11NsOutRscns': t11NsOutRscns, 't11NsRejects': t11NsRejects, 't11NsDatabaseFull': t11NsDatabaseFull}


# notifications (traps) 
class t11NsRejectRegNotify(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 0, 1])

# groups 
class t11NsDBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2, 1])
	group = [t11NsInfoSubsetSwitchIndex, t11NsInfoSubsetTableLastChange, t11NsInfoSubsetNumRows, t11NsRegPortName, t11NsRegNodeName, t11NsRegClassOfSvc, t11NsRegNodeIpAddress, t11NsRegProcAssoc, t11NsRegFc4Type, t11NsRegPortType, t11NsRegPortIpAddress, t11NsRegFabricPortName, t11NsRegHardAddress, t11NsRegSymbolicPortName, t11NsRegSymbolicNodeName, t11NsRegFc4Features, t11NsRegFc4Descriptor]

class t11NsRequestStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2, 2])
	group = [t11NsInGetReqs, t11NsOutGetReqs, t11NsInRegReqs, t11NsInDeRegReqs, t11NsDatabaseFull]

class t11NsRscnStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2, 3])
	group = [t11NsInRscns, t11NsOutRscns]

class t11NsRejectStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2, 4])
	group = [t11NsInfoSubsetTotalRejects, t11NsRejects]

class t11NsNotifyControlGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2, 5])
	group = [t11NsRejectCtCommandString, t11NsRejectReasonCode, t11NsRejReasonCodeExp, t11NsRejReasonVendorCode, t11NsInfoSubsetRejReqNotfyEnable]

class t11NsNotifyGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 135, 2, 2, 6])
	group = [t11NsRejectRegNotify]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
