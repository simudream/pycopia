# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, experimental, Counter32, Gauge32, TimeTicks, Integer32, IpAddress
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import RowStatus, TruthValue, TimeStamp, DisplayString

class MSDP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/MSDP-MIB'
	conformance = 132
	name = 'MSDP-MIB'
	language = 2
	description = 'An experimental MIB module for MSDP Management and\nMonitoring.\n\n\n\n\nCopyright (C) The Internet Society 2006.  This version of\nthis MIB module is part of RFC 4624; see the RFC itself\nfor full legal notices.'

# nodes
class msdpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92])
	name = 'msdpMIB'

class msdpMIBobjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1])
	name = 'msdpMIBobjects'

class msdp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1])
	name = 'msdp'

class msdpTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 0])
	name = 'msdpTraps'

class msdpMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8])
	name = 'msdpMIBConformance'

class msdpMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 1])
	name = 'msdpMIBCompliances'

class msdpMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2])
	name = 'msdpMIBGroups'


# macros
# types 
# scalars 
class msdpEnabled(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class msdpCacheLifetime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class msdpNumSACacheEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class msdpRPAddress(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


# columns
class msdpRequestsGroupAddress(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpRequestsGroupMask(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpRequestsPeer(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpRequestsStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class msdpPeerRemoteAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpPeerState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'listen'), Enum(3, 'connecting'), Enum(4, 'established'), Enum(5, 'disabled')]


class msdpPeerRPFFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerInSAs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerOutSAs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerInSARequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerOutSARequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerInSAResponses(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerOutSAResponses(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerInControlMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerOutControlMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerInDataPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerOutDataPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerFsmEstablishedTransitions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerFsmEstablishedTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class msdpPeerInMessageTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class msdpPeerLocalAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpPeerConnectRetryInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class msdpPeerHoldTimeConfigured(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class msdpPeerKeepAliveConfigured(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class msdpPeerDataTtl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class msdpPeerProcessRequestsFrom(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class msdpPeerStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class msdpPeerRemotePort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class msdpPeerLocalPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class msdpPeerEncapsulationType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'tcp')]


class msdpPeerConnectionAttempts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerInNotifications(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerOutNotifications(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpPeerLastError(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class msdpPeerDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class msdpSACacheGroupAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpSACacheSourceAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpSACacheOriginRP(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpSACachePeerLearnedFrom(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpSACacheRPFPeer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpSACacheInSAs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpSACacheInDataPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class msdpSACacheUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class msdpSACacheExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class msdpSACacheStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class msdpMeshGroupName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class msdpMeshGroupPeerAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class msdpMeshGroupStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class msdpRequestsEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([msdpRequestsGroupAddress, msdpRequestsGroupMask], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 4, 1])
	access = 2
	rowstatus = msdpRequestsStatus
	columns = {'msdpRequestsGroupAddress': msdpRequestsGroupAddress, 'msdpRequestsGroupMask': msdpRequestsGroupMask, 'msdpRequestsPeer': msdpRequestsPeer, 'msdpRequestsStatus': msdpRequestsStatus}


class msdpPeerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([msdpPeerRemoteAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 5, 1])
	access = 2
	rowstatus = msdpPeerStatus
	columns = {'msdpPeerRemoteAddress': msdpPeerRemoteAddress, 'msdpPeerState': msdpPeerState, 'msdpPeerRPFFailures': msdpPeerRPFFailures, 'msdpPeerInSAs': msdpPeerInSAs, 'msdpPeerOutSAs': msdpPeerOutSAs, 'msdpPeerInSARequests': msdpPeerInSARequests, 'msdpPeerOutSARequests': msdpPeerOutSARequests, 'msdpPeerInSAResponses': msdpPeerInSAResponses, 'msdpPeerOutSAResponses': msdpPeerOutSAResponses, 'msdpPeerInControlMessages': msdpPeerInControlMessages, 'msdpPeerOutControlMessages': msdpPeerOutControlMessages, 'msdpPeerInDataPackets': msdpPeerInDataPackets, 'msdpPeerOutDataPackets': msdpPeerOutDataPackets, 'msdpPeerFsmEstablishedTransitions': msdpPeerFsmEstablishedTransitions, 'msdpPeerFsmEstablishedTime': msdpPeerFsmEstablishedTime, 'msdpPeerInMessageTime': msdpPeerInMessageTime, 'msdpPeerLocalAddress': msdpPeerLocalAddress, 'msdpPeerConnectRetryInterval': msdpPeerConnectRetryInterval, 'msdpPeerHoldTimeConfigured': msdpPeerHoldTimeConfigured, 'msdpPeerKeepAliveConfigured': msdpPeerKeepAliveConfigured, 'msdpPeerDataTtl': msdpPeerDataTtl, 'msdpPeerProcessRequestsFrom': msdpPeerProcessRequestsFrom, 'msdpPeerStatus': msdpPeerStatus, 'msdpPeerRemotePort': msdpPeerRemotePort, 'msdpPeerLocalPort': msdpPeerLocalPort, 'msdpPeerEncapsulationType': msdpPeerEncapsulationType, 'msdpPeerConnectionAttempts': msdpPeerConnectionAttempts, 'msdpPeerInNotifications': msdpPeerInNotifications, 'msdpPeerOutNotifications': msdpPeerOutNotifications, 'msdpPeerLastError': msdpPeerLastError, 'msdpPeerDiscontinuityTime': msdpPeerDiscontinuityTime}


class msdpSACacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([msdpSACacheGroupAddr, msdpSACacheSourceAddr, msdpSACacheOriginRP], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 6, 1])
	access = 2
	columns = {'msdpSACacheGroupAddr': msdpSACacheGroupAddr, 'msdpSACacheSourceAddr': msdpSACacheSourceAddr, 'msdpSACacheOriginRP': msdpSACacheOriginRP, 'msdpSACachePeerLearnedFrom': msdpSACachePeerLearnedFrom, 'msdpSACacheRPFPeer': msdpSACacheRPFPeer, 'msdpSACacheInSAs': msdpSACacheInSAs, 'msdpSACacheInDataPackets': msdpSACacheInDataPackets, 'msdpSACacheUpTime': msdpSACacheUpTime, 'msdpSACacheExpiryTime': msdpSACacheExpiryTime, 'msdpSACacheStatus': msdpSACacheStatus}


class msdpMeshGroupEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([msdpMeshGroupName, msdpMeshGroupPeerAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 12, 1])
	access = 2
	rowstatus = msdpMeshGroupStatus
	columns = {'msdpMeshGroupName': msdpMeshGroupName, 'msdpMeshGroupPeerAddress': msdpMeshGroupPeerAddress, 'msdpMeshGroupStatus': msdpMeshGroupStatus}


# notifications (traps) 
class msdpEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 0, 1])

class msdpBackwardTransition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 0, 2])

# groups 
class msdpMIBGlobalsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 1])
	group = [msdpEnabled]

class msdpMIBPeerGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 2])
	group = [msdpPeerRPFFailures, msdpPeerState, msdpPeerInSAs, msdpPeerOutSAs, msdpPeerInSARequests, msdpPeerOutSARequests, msdpPeerInSAResponses, msdpPeerOutSAResponses, msdpPeerInNotifications, msdpPeerOutNotifications, msdpPeerInControlMessages, msdpPeerOutControlMessages, msdpPeerFsmEstablishedTransitions, msdpPeerFsmEstablishedTime, msdpPeerLocalAddress, msdpPeerRemotePort, msdpPeerLocalPort, msdpPeerConnectRetryInterval, msdpPeerHoldTimeConfigured, msdpPeerKeepAliveConfigured, msdpPeerInMessageTime, msdpPeerProcessRequestsFrom, msdpPeerConnectionAttempts, msdpPeerLastError, msdpPeerStatus, msdpPeerDiscontinuityTime]

class msdpMIBEncapsulationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 3])
	group = [msdpPeerInDataPackets, msdpPeerOutDataPackets, msdpPeerDataTtl, msdpPeerEncapsulationType]

class msdpMIBSACacheGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 4])
	group = [msdpCacheLifetime, msdpNumSACacheEntries, msdpSACachePeerLearnedFrom, msdpSACacheRPFPeer, msdpSACacheInSAs, msdpSACacheInDataPackets, msdpSACacheUpTime, msdpSACacheExpiryTime, msdpSACacheStatus]

class msdpMIBNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 5])
	group = [msdpEstablished, msdpBackwardTransition]

class msdpMIBRequestsGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 6])
	group = [msdpRequestsPeer, msdpRequestsStatus]

class msdpMIBRPGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 7])
	group = [msdpRPAddress]

class msdpMIBMeshGroupGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 8])
	group = [msdpMeshGroupStatus]

class msdpMIBPeerGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 9])
	group = [msdpPeerRPFFailures, msdpPeerState, msdpPeerInSAs, msdpPeerOutSAs, msdpPeerInSARequests, msdpPeerOutSARequests, msdpPeerInControlMessages, msdpPeerOutControlMessages, msdpPeerFsmEstablishedTransitions, msdpPeerFsmEstablishedTime, msdpPeerLocalAddress, msdpPeerRemotePort, msdpPeerLocalPort, msdpPeerConnectRetryInterval, msdpPeerHoldTimeConfigured, msdpPeerKeepAliveConfigured, msdpPeerInMessageTime, msdpPeerConnectionAttempts, msdpPeerStatus, msdpPeerDiscontinuityTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
