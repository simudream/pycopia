# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE, NOTIFICATION_GROUP
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Unsigned32, Integer32, Counter32, mib_2
from TRIP_TC_MIB import TripItad, TripId, TripAppProtocol, TripAddressFamily, TripCommunityId, TripProtocolVersion, TripSendReceiveMode
from NETWORK_SERVICES_MIB import applIndex, applRFC2788Group
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetPortNumber
from SNMPv2_TC import DateAndTime, TimeInterval, TruthValue, TimeStamp, StorageType, RowStatus

class TRIP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/TRIP-MIB'
	conformance = 5
	name = 'TRIP-MIB'
	language = 2
	description = 'The MIB module describing Telephony Routing over IP\n(TRIP). TRIP is a policy driven inter-administrative\ndomain protocol for advertising the reachability of\ntelephony destinations between location servers (LS), and\nfor advertising attributes of the routes to those\ndestinations.\n\nCopyright (C) The Internet Society (2004). This version of\nthis MIB module is part of RFC 3872, see the RFC itself\nfor full legal notices.'

# nodes
class tripMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116])
	name = 'tripMIB'

class tripMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0])
	name = 'tripMIBNotifications'

class tripMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1])
	name = 'tripMIBObjects'

class tripMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2])
	name = 'tripMIBConformance'

class tripMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 1])
	name = 'tripMIBCompliances'

class tripMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2])
	name = 'tripMIBGroups'

class tripMIBNotifObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 3])
	name = 'tripMIBNotifObjects'


# macros
# types 
# scalars 
class tripNotifApplIndex(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tripNotifPeerAddrInetType(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 3, 2])
	syntaxobject = InetAddressType


class tripNotifPeerAddr(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 3, 3])
	syntaxobject = InetAddress


class tripNotifPeerErrCode(ScalarObject):
	status = 1
	access = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'messageHeader'), Enum(2, 'openMessage'), Enum(3, 'updateMessage'), Enum(4, 'holdTimerExpired'), Enum(5, 'finiteStateMachine'), Enum(6, 'cease'), Enum(7, 'tripNotification')]


class tripNotifPeerErrSubcode(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# columns
class tripCfgProtocolVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 1])
	syntaxobject = TripProtocolVersion


class tripCfgItad(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 2])
	syntaxobject = TripItad


class tripCfgIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 3])
	syntaxobject = TripId


class tripCfgAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class tripCfgOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'unknown'), Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'faulty')]


class tripCfgAddrIAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 6])
	syntaxobject = InetAddressType


class tripCfgAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 7])
	syntaxobject = InetAddress


class tripCfgPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 8])
	syntaxobject = InetPortNumber


class tripCfgMinItadOriginationInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripCfgMinRouteAdvertisementInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripCfgMaxPurgeTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripCfgDisableTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripCfgSendReceiveMode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 13])
	syntaxobject = TripSendReceiveMode


class tripCfgStorage(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class tripRouteTypeAddrInetType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 1])
	syntaxobject = InetAddressType


class tripRouteTypeAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 2])
	syntaxobject = InetAddress


class tripRouteTypePort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 3])
	syntaxobject = InetPortNumber


class tripRouteTypeProtocolId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 4])
	syntaxobject = TripAppProtocol


class tripRouteTypeAddrFamilyId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 5])
	syntaxobject = TripAddressFamily


class tripRouteTypePeer(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'local'), Enum(2, 'remote')]


class tripSupportedCommunityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 1])
	syntaxobject = TripCommunityId


class tripSupportedCommunityItad(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 2])
	syntaxobject = TripItad


class tripSupportedCommunityStorage(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class tripSupportedCommunityRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class tripPeerRemoteAddrInetType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 1])
	syntaxobject = InetAddressType


class tripPeerRemoteAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 2])
	syntaxobject = InetAddress


class tripPeerRemotePort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 3])
	syntaxobject = InetPortNumber


class tripPeerIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 4])
	syntaxobject = TripId


class tripPeerState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'idle'), Enum(2, 'connect'), Enum(3, 'active'), Enum(4, 'openSent'), Enum(5, 'openConfirm'), Enum(6, 'established')]


class tripPeerAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class tripPeerNegotiatedVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 7])
	syntaxobject = TripProtocolVersion


class tripPeerSendReceiveMode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 8])
	syntaxobject = TripSendReceiveMode


class tripPeerRemoteItad(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 9])
	syntaxobject = TripItad


class tripPeerConnectRetryInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripPeerMaxRetryInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripPeerHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Seconds'


class tripPeerKeepAlive(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Seconds'


class tripPeerHoldTimeConfigured(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripPeerKeepAliveConfigured(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripPeerMaxPurgeTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripPeerDisableTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class tripPeerLearned(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tripPeerStorage(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class tripPeerRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class tripPeerInUpdates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tripPeerOutUpdates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tripPeerInTotalMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tripPeerOutTotalMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tripPeerFsmEstablishedTransitions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tripPeerFsmEstablishedTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class tripPeerInUpdateElapsedTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class tripPeerStateChangeTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class tripRouteAppProtocol(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 1])
	syntaxobject = TripAppProtocol


class tripRouteAddressFamily(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 2])
	syntaxobject = TripAddressFamily


class tripRouteAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class tripRoutePeer(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 4])
	syntaxobject = TripId


class tripRouteTRIBMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class tripRouteAddressSequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class tripRouteAddressOriginatorId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 7])
	syntaxobject = TripId


class tripRouteNextHopServerIAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 8])
	syntaxobject = InetAddressType


class tripRouteNextHopServer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 9])
	syntaxobject = InetAddress


class tripRouteNextHopServerPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 10])
	syntaxobject = InetPortNumber


class tripRouteNextHopServerItad(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 11])
	syntaxobject = TripItad


class tripRouteMultiExitDisc(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class tripRouteLocalPref(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class tripRouteAdvertisementPath(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class tripRouteRoutedPath(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class tripRouteAtomicAggregate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tripRouteUnknown(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class tripRouteWithdrawn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tripRouteConverted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tripRouteReceivedTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class tripRouteCommunityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 7, 1, 1])
	syntaxobject = TripCommunityId


class tripRouteCommunityItad(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 7, 1, 2])
	syntaxobject = TripItad


class tripItadTopologyOrigId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 8, 1, 1])
	syntaxobject = TripId


class tripItadTopologySeqNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class tripItadTopologyId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 9, 1, 1])
	syntaxobject = TripId


# rows 
class tripCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 1, 1])
	access = 2
	columns = {'tripCfgProtocolVersion': tripCfgProtocolVersion, 'tripCfgItad': tripCfgItad, 'tripCfgIdentifier': tripCfgIdentifier, 'tripCfgAdminStatus': tripCfgAdminStatus, 'tripCfgOperStatus': tripCfgOperStatus, 'tripCfgAddrIAddrType': tripCfgAddrIAddrType, 'tripCfgAddr': tripCfgAddr, 'tripCfgPort': tripCfgPort, 'tripCfgMinItadOriginationInterval': tripCfgMinItadOriginationInterval, 'tripCfgMinRouteAdvertisementInterval': tripCfgMinRouteAdvertisementInterval, 'tripCfgMaxPurgeTime': tripCfgMaxPurgeTime, 'tripCfgDisableTime': tripCfgDisableTime, 'tripCfgSendReceiveMode': tripCfgSendReceiveMode, 'tripCfgStorage': tripCfgStorage}


class tripRouteTypeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripRouteTypeAddrInetType, tripRouteTypeAddr, tripRouteTypePort, tripRouteTypeProtocolId, tripRouteTypeAddrFamilyId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 2, 1])
	access = 2
	columns = {'tripRouteTypeAddrInetType': tripRouteTypeAddrInetType, 'tripRouteTypeAddr': tripRouteTypeAddr, 'tripRouteTypePort': tripRouteTypePort, 'tripRouteTypeProtocolId': tripRouteTypeProtocolId, 'tripRouteTypeAddrFamilyId': tripRouteTypeAddrFamilyId, 'tripRouteTypePeer': tripRouteTypePeer}


class tripSupportedCommunityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripSupportedCommunityId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 3, 1])
	access = 2
	rowstatus = tripSupportedCommunityRowStatus
	columns = {'tripSupportedCommunityId': tripSupportedCommunityId, 'tripSupportedCommunityItad': tripSupportedCommunityItad, 'tripSupportedCommunityStorage': tripSupportedCommunityStorage, 'tripSupportedCommunityRowStatus': tripSupportedCommunityRowStatus}


class tripPeerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripPeerRemoteAddrInetType, tripPeerRemoteAddr, tripPeerRemotePort], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 4, 1])
	access = 2
	rowstatus = tripPeerRowStatus
	columns = {'tripPeerRemoteAddrInetType': tripPeerRemoteAddrInetType, 'tripPeerRemoteAddr': tripPeerRemoteAddr, 'tripPeerRemotePort': tripPeerRemotePort, 'tripPeerIdentifier': tripPeerIdentifier, 'tripPeerState': tripPeerState, 'tripPeerAdminStatus': tripPeerAdminStatus, 'tripPeerNegotiatedVersion': tripPeerNegotiatedVersion, 'tripPeerSendReceiveMode': tripPeerSendReceiveMode, 'tripPeerRemoteItad': tripPeerRemoteItad, 'tripPeerConnectRetryInterval': tripPeerConnectRetryInterval, 'tripPeerMaxRetryInterval': tripPeerMaxRetryInterval, 'tripPeerHoldTime': tripPeerHoldTime, 'tripPeerKeepAlive': tripPeerKeepAlive, 'tripPeerHoldTimeConfigured': tripPeerHoldTimeConfigured, 'tripPeerKeepAliveConfigured': tripPeerKeepAliveConfigured, 'tripPeerMaxPurgeTime': tripPeerMaxPurgeTime, 'tripPeerDisableTime': tripPeerDisableTime, 'tripPeerLearned': tripPeerLearned, 'tripPeerStorage': tripPeerStorage, 'tripPeerRowStatus': tripPeerRowStatus}


from NETWORK_SERVICES_MIB import applIndex
from TRIP_MIB import tripPeerRemoteAddrInetType
from TRIP_MIB import tripPeerRemoteAddr
from TRIP_MIB import tripPeerRemotePort
class tripPeerStatisticsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripPeerRemoteAddrInetType, tripPeerRemoteAddr, tripPeerRemotePort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 5, 1])
	access = 2
	columns = {'tripPeerInUpdates': tripPeerInUpdates, 'tripPeerOutUpdates': tripPeerOutUpdates, 'tripPeerInTotalMessages': tripPeerInTotalMessages, 'tripPeerOutTotalMessages': tripPeerOutTotalMessages, 'tripPeerFsmEstablishedTransitions': tripPeerFsmEstablishedTransitions, 'tripPeerFsmEstablishedTime': tripPeerFsmEstablishedTime, 'tripPeerInUpdateElapsedTime': tripPeerInUpdateElapsedTime, 'tripPeerStateChangeTime': tripPeerStateChangeTime}


class tripRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripRouteAppProtocol, tripRouteAddressFamily, tripRouteAddress, tripRoutePeer], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 6, 1])
	access = 2
	columns = {'tripRouteAppProtocol': tripRouteAppProtocol, 'tripRouteAddressFamily': tripRouteAddressFamily, 'tripRouteAddress': tripRouteAddress, 'tripRoutePeer': tripRoutePeer, 'tripRouteTRIBMask': tripRouteTRIBMask, 'tripRouteAddressSequenceNumber': tripRouteAddressSequenceNumber, 'tripRouteAddressOriginatorId': tripRouteAddressOriginatorId, 'tripRouteNextHopServerIAddrType': tripRouteNextHopServerIAddrType, 'tripRouteNextHopServer': tripRouteNextHopServer, 'tripRouteNextHopServerPort': tripRouteNextHopServerPort, 'tripRouteNextHopServerItad': tripRouteNextHopServerItad, 'tripRouteMultiExitDisc': tripRouteMultiExitDisc, 'tripRouteLocalPref': tripRouteLocalPref, 'tripRouteAdvertisementPath': tripRouteAdvertisementPath, 'tripRouteRoutedPath': tripRouteRoutedPath, 'tripRouteAtomicAggregate': tripRouteAtomicAggregate, 'tripRouteUnknown': tripRouteUnknown, 'tripRouteWithdrawn': tripRouteWithdrawn, 'tripRouteConverted': tripRouteConverted, 'tripRouteReceivedTime': tripRouteReceivedTime}


class tripRouteCommunityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripRouteAppProtocol, tripRouteAddressFamily, tripRouteAddress, tripRoutePeer, tripRouteCommunityId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 7, 1])
	access = 2
	columns = {'tripRouteCommunityId': tripRouteCommunityId, 'tripRouteCommunityItad': tripRouteCommunityItad}


class tripItadTopologyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripItadTopologyOrigId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 8, 1])
	access = 2
	columns = {'tripItadTopologyOrigId': tripItadTopologyOrigId, 'tripItadTopologySeqNum': tripItadTopologySeqNum}


class tripItadTopologyIdEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applIndex, tripItadTopologyOrigId, tripItadTopologyId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 1, 9, 1])
	access = 2
	columns = {'tripItadTopologyId': tripItadTopologyId}


# notifications (traps) 
class tripConnectionEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 1])

class tripConnectionDropped(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 2])

class tripFSM(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 3])

class tripOpenMessageError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 4])

class tripUpdateMessageError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 5])

class tripHoldTimerExpired(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 6])

class tripConnectionCollision(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 7])

class tripCease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 8])

class tripNotificationErr(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 0, 9])

# groups 
class tripConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 1])
	group = [tripCfgProtocolVersion, tripCfgItad, tripCfgIdentifier, tripCfgOperStatus, tripCfgAdminStatus, tripCfgAddrIAddrType, tripCfgAddr, tripCfgPort, tripCfgMinItadOriginationInterval, tripCfgMinRouteAdvertisementInterval, tripCfgMaxPurgeTime, tripCfgDisableTime, tripCfgSendReceiveMode, tripCfgStorage, tripSupportedCommunityItad, tripSupportedCommunityStorage, tripRouteTypePeer, tripSupportedCommunityRowStatus]

class tripPeerTableConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 2])
	group = [tripPeerIdentifier, tripPeerState, tripPeerAdminStatus, tripPeerNegotiatedVersion, tripPeerSendReceiveMode, tripPeerRemoteItad, tripPeerConnectRetryInterval, tripPeerMaxRetryInterval, tripPeerHoldTime, tripPeerKeepAlive, tripPeerHoldTimeConfigured, tripPeerKeepAliveConfigured, tripPeerMaxPurgeTime, tripPeerDisableTime, tripPeerLearned, tripPeerStorage, tripPeerRowStatus]

class tripPeerTableStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 3])
	group = [tripPeerInUpdates, tripPeerOutUpdates, tripPeerInTotalMessages, tripPeerOutTotalMessages, tripPeerFsmEstablishedTransitions, tripPeerFsmEstablishedTime, tripPeerInUpdateElapsedTime, tripPeerStateChangeTime]

class tripRouteGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 4])
	group = [tripRouteTRIBMask, tripRouteAddressSequenceNumber, tripRouteAddressOriginatorId, tripRouteNextHopServerIAddrType, tripRouteNextHopServer, tripRouteNextHopServerPort, tripRouteNextHopServerItad, tripRouteMultiExitDisc, tripRouteLocalPref, tripRouteAdvertisementPath, tripRouteRoutedPath, tripRouteAtomicAggregate, tripRouteUnknown, tripRouteWithdrawn, tripRouteConverted, tripRouteReceivedTime, tripRouteCommunityItad]

class tripItadTopologyGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 5])
	group = [tripItadTopologySeqNum, tripItadTopologyId]

class tripNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 6])
	group = [tripConnectionEstablished, tripConnectionDropped, tripFSM, tripOpenMessageError, tripUpdateMessageError, tripHoldTimerExpired, tripConnectionCollision, tripCease, tripNotificationErr]

class tripNotifObjectGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 116, 2, 2, 7])
	group = [tripNotifApplIndex, tripNotifPeerAddrInetType, tripNotifPeerAddr, tripNotifPeerErrCode, tripNotifPeerErrSubcode]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
