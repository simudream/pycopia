# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex, InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Counter32
from ATM_TC_MIB import AtmTrafficDescrParamIndex
from CISCO_TC import Unsigned32
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TimeStamp

class CISCO_ATM_SWITCH_FR_IWF_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-ATM-SWITCH-FR-IWF-MIB'
	conformance = 3
	name = 'CISCO-ATM-SWITCH-FR-IWF-MIB'
	language = 2
	description = 'A MIB module for managing Frame Relay to ATM interworking\nconnections, and Frame Relay to Frame Relay switched\nconnections via an ATM switching fabric, on a Cisco ATM switch.'

# nodes
class ciscoAtmSwitchFrIwfMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112])
	name = 'ciscoAtmSwitchFrIwfMIB'

class ciscoAtmSwitchFrIwfMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1])
	name = 'ciscoAtmSwitchFrIwfMIBObjects'

class casfFrTraffic(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1])
	name = 'casfFrTraffic'

class casfFrVC(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2])
	name = 'casfFrVC'

class casfFrInterface(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3])
	name = 'casfFrInterface'

class casfFrCounts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4])
	name = 'casfFrCounts'

class casfMapping(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5])
	name = 'casfMapping'

class ciscoAtmSFrIwfMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3])
	name = 'ciscoAtmSFrIwfMIBConformance'

class ciscoAtmSFrIwfMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 1])
	name = 'ciscoAtmSFrIwfMIBCompliances'

class ciscoAtmSFrIwfMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2])
	name = 'ciscoAtmSFrIwfMIBGroups'


# macros
# types 

class CasfTrafficDescrRow(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class DlciValue(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 4194303))


class ConnectionKind(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svcIncoming'), Enum(3, 'svcOutgoing'), Enum(4, 'spvcInitiator'), Enum(5, 'spvcTarget')]


class AtmAddr(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 40))
	format = '1x'

# scalars 
# columns
class casfTrafficDescrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 1])
	syntaxobject = CasfTrafficDescrRow


class casfTrafficDescrCIR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'bits/sec'


class casfTrafficDescrBc(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'bits'


class casfTrafficDescrBe(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'bits'


class casfTrafficDescrPIR(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'bits/sec'


class casfTrafficDescrServCategory(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'vbrNrt'), Enum(2, 'abr'), Enum(3, 'ubr')]


class casfTrafficDescrAtmIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 7])
	syntaxobject = AtmTrafficDescrParamIndex


class casfTrafficDescrRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class casfVcEndptDlci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 1])
	syntaxobject = DlciValue


class casfVcEndptRxTrafficDescrRow(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 2])
	syntaxobject = CasfTrafficDescrRow


class casfVcEndptTxTrafficDescrRow(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 3])
	syntaxobject = CasfTrafficDescrRow


class casfVcEndptRxNegTrafficDescrRow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 4])
	syntaxobject = CasfTrafficDescrRow


class casfVcEndptTxNegTrafficDescrRow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 5])
	syntaxobject = CasfTrafficDescrRow


class casfVcEndptConnKind(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 6])
	syntaxobject = ConnectionKind


class casfVcEndptIwfType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'network'), Enum(2, 'serviceTransparent'), Enum(3, 'serviceTranslation')]


class casfVcEndptClpMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'clpIfDe'), Enum(2, 'clpIsZero'), Enum(3, 'clpIsOne')]


class casfVcEndptDeMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deIfClpOrFrsscsDe'), Enum(2, 'deIfFrsscsDe'), Enum(3, 'deIfClp'), Enum(4, 'deIsZero'), Enum(5, 'deIsOne')]


class casfVcEndptEfciMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'efciIfFecn'), Enum(2, 'efciIsZero')]


class casfVcEndptUpcMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pass'), Enum(2, 'tagDrop')]


class casfVcEndptSpvcRemoteAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 12])
	syntaxobject = AtmAddr


class casfVcEndptSpvcRemoteType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'frameRelay'), Enum(3, 'atm')]


class casfVcEndptSpvcRemoteDlci(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 14])
	syntaxobject = DlciValue


class casfVcEndptSpvcRemoteVpi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfVcEndptSpvcRemoteVci(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfVcEndptCreationTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class casfVcEndptRcvdSigStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deleted'), Enum(2, 'active'), Enum(3, 'inactive'), Enum(4, 'none')]


class casfVcEndptRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class casfFrLmiProtocol(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'lmi'), Enum(3, 'ansiT1617D'), Enum(4, 'ansiT1617B'), Enum(5, 'ccittQ933A')]


class casfFrLmiType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dte'), Enum(2, 'dce'), Enum(3, 'nni')]


class casfFrLmiUserN391(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfFrLmiUserN392(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfFrLmiUserN393(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfFrLmiUserT391(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class casfFrLmiNetN392(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfFrLmiNetN393(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfFrLmiNetT392(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class casfFrLmiEnquiryIns(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class casfFrLmiEnquiryOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class casfFrLmiStatusIns(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class casfFrLmiStatusOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class casfFrLmiStatusTimeouts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfFrLmiStatusEnqTimeouts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfConfIfAtmAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 2, 1, 1])
	syntaxobject = AtmAddr


class casfConfIfUpcIntent(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pass'), Enum(2, 'tagDrop')]


class casfConfIfBcDefault(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bits'


class casfVcCountReceivedFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountReceivedOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class casfVcCountReceivedFECNs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountReceivedBECNs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountReceivedDEs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountInDiscards(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountOutDiscards(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountSentFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountSentOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class casfVcCountSentFECNs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountSentBECNs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountSentDEs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountTaggedFECNs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountTaggedBECNs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcCountTaggedDEs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class casfVcIwfCountInUnknownProts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfVcIwfCountOutUnknownProts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfVcIwfCountReassemblyTimeouts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfVcIwfCountLengthErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfVcIwfCountCrcErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfVcIwfCountTotalDiscardFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class casfFAMapDlci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 1, 1, 1])
	syntaxobject = DlciValue


class casfFAMapInternalAtmInterface(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 1, 1, 2])
	syntaxobject = InterfaceIndex


class casfFAMapInternalAtmVpi(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfFAMapInternalAtmVci(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfAFMapAtmVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfAFMapAtmVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class casfAFMapFrIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 2, 1, 3])
	syntaxobject = InterfaceIndex


class casfAFMapFrDlci(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 2, 1, 4])
	syntaxobject = DlciValue


# rows 
class casfTrafficDescrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([casfTrafficDescrIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 1, 1, 1])
	access = 2
	rowstatus = casfTrafficDescrRowStatus
	columns = {'casfTrafficDescrIndex': casfTrafficDescrIndex, 'casfTrafficDescrCIR': casfTrafficDescrCIR, 'casfTrafficDescrBc': casfTrafficDescrBc, 'casfTrafficDescrBe': casfTrafficDescrBe, 'casfTrafficDescrPIR': casfTrafficDescrPIR, 'casfTrafficDescrServCategory': casfTrafficDescrServCategory, 'casfTrafficDescrAtmIndex': casfTrafficDescrAtmIndex, 'casfTrafficDescrRowStatus': casfTrafficDescrRowStatus}


class casfVcEndptEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, casfVcEndptDlci], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 2, 1, 1])
	access = 2
	rowstatus = casfVcEndptRowStatus
	columns = {'casfVcEndptDlci': casfVcEndptDlci, 'casfVcEndptRxTrafficDescrRow': casfVcEndptRxTrafficDescrRow, 'casfVcEndptTxTrafficDescrRow': casfVcEndptTxTrafficDescrRow, 'casfVcEndptRxNegTrafficDescrRow': casfVcEndptRxNegTrafficDescrRow, 'casfVcEndptTxNegTrafficDescrRow': casfVcEndptTxNegTrafficDescrRow, 'casfVcEndptConnKind': casfVcEndptConnKind, 'casfVcEndptIwfType': casfVcEndptIwfType, 'casfVcEndptClpMode': casfVcEndptClpMode, 'casfVcEndptDeMode': casfVcEndptDeMode, 'casfVcEndptEfciMode': casfVcEndptEfciMode, 'casfVcEndptUpcMode': casfVcEndptUpcMode, 'casfVcEndptSpvcRemoteAddr': casfVcEndptSpvcRemoteAddr, 'casfVcEndptSpvcRemoteType': casfVcEndptSpvcRemoteType, 'casfVcEndptSpvcRemoteDlci': casfVcEndptSpvcRemoteDlci, 'casfVcEndptSpvcRemoteVpi': casfVcEndptSpvcRemoteVpi, 'casfVcEndptSpvcRemoteVci': casfVcEndptSpvcRemoteVci, 'casfVcEndptCreationTime': casfVcEndptCreationTime, 'casfVcEndptRcvdSigStatus': casfVcEndptRcvdSigStatus, 'casfVcEndptRowStatus': casfVcEndptRowStatus}


class casfFrLmiEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 1, 1])
	access = 2
	columns = {'casfFrLmiProtocol': casfFrLmiProtocol, 'casfFrLmiType': casfFrLmiType, 'casfFrLmiUserN391': casfFrLmiUserN391, 'casfFrLmiUserN392': casfFrLmiUserN392, 'casfFrLmiUserN393': casfFrLmiUserN393, 'casfFrLmiUserT391': casfFrLmiUserT391, 'casfFrLmiNetN392': casfFrLmiNetN392, 'casfFrLmiNetN393': casfFrLmiNetN393, 'casfFrLmiNetT392': casfFrLmiNetT392, 'casfFrLmiEnquiryIns': casfFrLmiEnquiryIns, 'casfFrLmiEnquiryOuts': casfFrLmiEnquiryOuts, 'casfFrLmiStatusIns': casfFrLmiStatusIns, 'casfFrLmiStatusOuts': casfFrLmiStatusOuts, 'casfFrLmiStatusTimeouts': casfFrLmiStatusTimeouts, 'casfFrLmiStatusEnqTimeouts': casfFrLmiStatusEnqTimeouts}


class casfConfIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 3, 2, 1])
	access = 2
	columns = {'casfConfIfAtmAddress': casfConfIfAtmAddress, 'casfConfIfUpcIntent': casfConfIfUpcIntent, 'casfConfIfBcDefault': casfConfIfBcDefault}


class casfVcCountEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, casfVcEndptDlci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 1, 1])
	access = 2
	columns = {'casfVcCountReceivedFrames': casfVcCountReceivedFrames, 'casfVcCountReceivedOctets': casfVcCountReceivedOctets, 'casfVcCountReceivedFECNs': casfVcCountReceivedFECNs, 'casfVcCountReceivedBECNs': casfVcCountReceivedBECNs, 'casfVcCountReceivedDEs': casfVcCountReceivedDEs, 'casfVcCountInDiscards': casfVcCountInDiscards, 'casfVcCountOutDiscards': casfVcCountOutDiscards, 'casfVcCountSentFrames': casfVcCountSentFrames, 'casfVcCountSentOctets': casfVcCountSentOctets, 'casfVcCountSentFECNs': casfVcCountSentFECNs, 'casfVcCountSentBECNs': casfVcCountSentBECNs, 'casfVcCountSentDEs': casfVcCountSentDEs, 'casfVcCountTaggedFECNs': casfVcCountTaggedFECNs, 'casfVcCountTaggedBECNs': casfVcCountTaggedBECNs, 'casfVcCountTaggedDEs': casfVcCountTaggedDEs}


class casfVcIwfCountEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, casfVcEndptDlci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 4, 2, 1])
	access = 2
	columns = {'casfVcIwfCountInUnknownProts': casfVcIwfCountInUnknownProts, 'casfVcIwfCountOutUnknownProts': casfVcIwfCountOutUnknownProts, 'casfVcIwfCountReassemblyTimeouts': casfVcIwfCountReassemblyTimeouts, 'casfVcIwfCountLengthErrors': casfVcIwfCountLengthErrors, 'casfVcIwfCountCrcErrors': casfVcIwfCountCrcErrors, 'casfVcIwfCountTotalDiscardFrames': casfVcIwfCountTotalDiscardFrames}


class casfFAMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, casfFAMapDlci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 1, 1])
	access = 2
	columns = {'casfFAMapDlci': casfFAMapDlci, 'casfFAMapInternalAtmInterface': casfFAMapInternalAtmInterface, 'casfFAMapInternalAtmVpi': casfFAMapInternalAtmVpi, 'casfFAMapInternalAtmVci': casfFAMapInternalAtmVci}


class casfAFMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, casfAFMapAtmVpi, casfAFMapAtmVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 1, 5, 2, 1])
	access = 2
	columns = {'casfAFMapAtmVpi': casfAFMapAtmVpi, 'casfAFMapAtmVci': casfAFMapAtmVci, 'casfAFMapFrIndex': casfAFMapFrIndex, 'casfAFMapFrDlci': casfAFMapFrDlci}


# notifications (traps) 
# groups 
class ciscoAtmSFrIwfConfConnGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2, 1])
	group = [casfTrafficDescrCIR, casfTrafficDescrBc, casfTrafficDescrBe, casfTrafficDescrPIR, casfTrafficDescrServCategory, casfTrafficDescrAtmIndex, casfTrafficDescrRowStatus, casfVcEndptRxTrafficDescrRow, casfVcEndptTxTrafficDescrRow, casfVcEndptRxNegTrafficDescrRow, casfVcEndptTxNegTrafficDescrRow, casfVcEndptConnKind, casfVcEndptIwfType, casfVcEndptClpMode, casfVcEndptDeMode, casfVcEndptEfciMode, casfVcEndptUpcMode, casfVcEndptCreationTime, casfVcEndptRcvdSigStatus, casfVcEndptSpvcRemoteAddr, casfVcEndptSpvcRemoteType, casfVcEndptSpvcRemoteDlci, casfVcEndptSpvcRemoteVpi, casfVcEndptSpvcRemoteVci, casfVcEndptRowStatus]

class ciscoAtmSFrIwfLmiGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2, 2])
	group = [casfFrLmiProtocol, casfFrLmiType, casfFrLmiUserN391, casfFrLmiUserN392, casfFrLmiUserN393, casfFrLmiUserT391, casfFrLmiNetN392, casfFrLmiNetN393, casfFrLmiNetT392, casfFrLmiEnquiryIns, casfFrLmiEnquiryOuts, casfFrLmiStatusIns, casfFrLmiStatusOuts, casfFrLmiStatusTimeouts, casfFrLmiStatusEnqTimeouts]

class ciscoAtmSFrIwfConfIfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2, 3])
	group = [casfConfIfAtmAddress, casfConfIfUpcIntent, casfConfIfBcDefault]

class ciscoAtmSFrIwfVcStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2, 4])
	group = [casfVcCountReceivedFrames, casfVcCountReceivedOctets, casfVcCountReceivedFECNs, casfVcCountReceivedBECNs, casfVcCountReceivedDEs, casfVcCountInDiscards, casfVcCountOutDiscards, casfVcCountSentFrames, casfVcCountSentOctets, casfVcCountSentFECNs, casfVcCountSentBECNs, casfVcCountSentDEs, casfVcCountTaggedFECNs, casfVcCountTaggedBECNs, casfVcCountTaggedDEs]

class ciscoAtmSFrIwfVcIwStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2, 5])
	group = [casfVcIwfCountInUnknownProts, casfVcIwfCountOutUnknownProts, casfVcIwfCountReassemblyTimeouts, casfVcIwfCountLengthErrors, casfVcIwfCountCrcErrors, casfVcIwfCountTotalDiscardFrames]

class ciscoAtmSFrIwfMappingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 112, 3, 2, 6])
	group = [casfFAMapInternalAtmInterface, casfFAMapInternalAtmVpi, casfFAMapInternalAtmVci, casfAFMapFrIndex, casfAFMapFrDlci]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
