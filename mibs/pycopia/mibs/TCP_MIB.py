# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, Gauge32, Counter32, Counter64, IpAddress, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddress, InetAddressType, InetPortNumber

class TCP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/TCP-MIB'
	conformance = 5
	name = 'TCP-MIB'
	language = 2
	description = 'The MIB module for managing TCP implementations.\n\nCopyright (C) The Internet Society (2005). This version\nof this MIB module is a part of RFC 4022; see the RFC\nitself for full legal notices.'

# nodes
class tcp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6])
	name = 'tcp'

class tcpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49])
	name = 'tcpMIB'

class tcpMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2])
	name = 'tcpMIBConformance'

class tcpMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 1])
	name = 'tcpMIBCompliances'

class tcpMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 2])
	name = 'tcpMIBGroups'


# macros
# types 
# scalars 
class tcpRtoAlgorithm(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'constant'), Enum(3, 'rsre'), Enum(4, 'vanj'), Enum(5, 'rfc2988')]


class tcpRtoMin(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class tcpRtoMax(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class tcpMaxConn(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tcpActiveOpens(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpPassiveOpens(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpAttemptFails(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpEstabResets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpCurrEstab(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class tcpInSegs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpOutSegs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpRetransSegs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpInErrs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpOutRsts(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tcpHCInSegs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class tcpHCOutSegs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


# columns
class tcpConnState(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'closed'), Enum(2, 'listen'), Enum(3, 'synSent'), Enum(4, 'synReceived'), Enum(5, 'established'), Enum(6, 'finWait1'), Enum(7, 'finWait2'), Enum(8, 'closeWait'), Enum(9, 'lastAck'), Enum(10, 'closing'), Enum(11, 'timeWait'), Enum(12, 'deleteTCB')]


class tcpConnLocalAddress(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tcpConnLocalPort(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tcpConnRemAddress(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tcpConnRemPort(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tcpConnectionLocalAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 1])
	syntaxobject = InetAddressType


class tcpConnectionLocalAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 2])
	syntaxobject = InetAddress


class tcpConnectionLocalPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 3])
	syntaxobject = InetPortNumber


class tcpConnectionRemAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 4])
	syntaxobject = InetAddressType


class tcpConnectionRemAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 5])
	syntaxobject = InetAddress


class tcpConnectionRemPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 6])
	syntaxobject = InetPortNumber


class tcpConnectionState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'closed'), Enum(2, 'listen'), Enum(3, 'synSent'), Enum(4, 'synReceived'), Enum(5, 'established'), Enum(6, 'finWait1'), Enum(7, 'finWait2'), Enum(8, 'closeWait'), Enum(9, 'lastAck'), Enum(10, 'closing'), Enum(11, 'timeWait'), Enum(12, 'deleteTCB')]


class tcpConnectionProcess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class tcpListenerLocalAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 20, 1, 1])
	syntaxobject = InetAddressType


class tcpListenerLocalAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 20, 1, 2])
	syntaxobject = InetAddress


class tcpListenerLocalPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 20, 1, 3])
	syntaxobject = InetPortNumber


class tcpListenerProcess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 20, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# rows 
class tcpConnEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([tcpConnLocalAddress, tcpConnLocalPort, tcpConnRemAddress, tcpConnRemPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 13, 1])
	access = 2
	columns = {'tcpConnState': tcpConnState, 'tcpConnLocalAddress': tcpConnLocalAddress, 'tcpConnLocalPort': tcpConnLocalPort, 'tcpConnRemAddress': tcpConnRemAddress, 'tcpConnRemPort': tcpConnRemPort}


class tcpConnectionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tcpConnectionLocalAddressType, tcpConnectionLocalAddress, tcpConnectionLocalPort, tcpConnectionRemAddressType, tcpConnectionRemAddress, tcpConnectionRemPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 19, 1])
	access = 2
	columns = {'tcpConnectionLocalAddressType': tcpConnectionLocalAddressType, 'tcpConnectionLocalAddress': tcpConnectionLocalAddress, 'tcpConnectionLocalPort': tcpConnectionLocalPort, 'tcpConnectionRemAddressType': tcpConnectionRemAddressType, 'tcpConnectionRemAddress': tcpConnectionRemAddress, 'tcpConnectionRemPort': tcpConnectionRemPort, 'tcpConnectionState': tcpConnectionState, 'tcpConnectionProcess': tcpConnectionProcess}


class tcpListenerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tcpListenerLocalAddressType, tcpListenerLocalAddress, tcpListenerLocalPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 6, 20, 1])
	access = 2
	columns = {'tcpListenerLocalAddressType': tcpListenerLocalAddressType, 'tcpListenerLocalAddress': tcpListenerLocalAddress, 'tcpListenerLocalPort': tcpListenerLocalPort, 'tcpListenerProcess': tcpListenerProcess}


# notifications (traps) 
# groups 
class tcpGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 2, 1])
	group = [tcpRtoAlgorithm, tcpRtoMin, tcpRtoMax, tcpMaxConn, tcpActiveOpens, tcpPassiveOpens, tcpAttemptFails, tcpEstabResets, tcpCurrEstab, tcpInSegs, tcpOutSegs, tcpRetransSegs, tcpConnState, tcpConnLocalAddress, tcpConnLocalPort, tcpConnRemAddress, tcpConnRemPort, tcpInErrs, tcpOutRsts]

class tcpBaseGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 2, 2])
	group = [tcpRtoAlgorithm, tcpRtoMin, tcpRtoMax, tcpMaxConn, tcpActiveOpens, tcpPassiveOpens, tcpAttemptFails, tcpEstabResets, tcpCurrEstab, tcpInSegs, tcpOutSegs, tcpRetransSegs, tcpInErrs, tcpOutRsts]

class tcpConnectionGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 2, 3])
	group = [tcpConnectionState, tcpConnectionProcess]

class tcpListenerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 2, 4])
	group = [tcpListenerProcess]

class tcpHCGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 49, 2, 2, 5])
	group = [tcpHCInSegs, tcpHCOutSegs]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
