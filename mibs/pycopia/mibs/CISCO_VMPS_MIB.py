# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32, IpAddress
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import RowStatus, TimeStamp, MacAddress, TEXTUAL_CONVENTION, DisplayString

class CISCO_VMPS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-VMPS-MIB'
	conformance = 2
	name = 'CISCO-VMPS-MIB'
	language = 2
	description = 'The MIB module for the management of the\nVLAN Membership Policy Server.'

# nodes
class ciscoVmpsMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53])
	name = 'ciscoVmpsMIB'

class ciscoVlanMemberPolicyServerMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1])
	name = 'ciscoVlanMemberPolicyServerMIBObjects'

class vmpsInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1])
	name = 'vmpsInfo'

class vmpsDatabase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2])
	name = 'vmpsDatabase'

class ciscoVlanMemberPolicyServerMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 2])
	name = 'ciscoVlanMemberPolicyServerMIBNotifications'

class ciscoVlanMemberPolicyServerMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 3])
	name = 'ciscoVlanMemberPolicyServerMIBConformance'

class ciscoVlanMemberPolicyServerMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 1])
	name = 'ciscoVlanMemberPolicyServerMIBCompliances'

class ciscoVlanMemberPolicyServerMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2])
	name = 'ciscoVlanMemberPolicyServerMIBGroups'


# macros
# types 

class VlanName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 32))

# scalars 
# columns
class vmpsIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vmpsAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class vmpsDownloadServerAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class vmpsConfigFileName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vmpsTriggerDownload(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noOperation'), Enum(2, 'loadDatabase')]


class vmpsFallbackVlan(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 6])
	syntaxobject = VlanName


class vmpsSecureMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'secure'), Enum(2, 'open')]


class vmpsManagementDomain(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vmpsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class vmpsLastRestart(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class vmpsInConfigReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vmpsInConfigErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vmpsOutConfigFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vmpsLastFailClient(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class vmpsOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive'), Enum(3, 'loading')]


class vmpsMacConfigAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class vmpsMacConfigVlan(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 2])
	syntaxobject = VlanName


class vmpsMacConfigLastAccessed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class vmpsMacConfigLastRequestor(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class vmpsMacConfigLastRequestPortId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vmpsMacConfigLastResponseStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'success'), Enum(2, 'versionNotSupported'), Enum(3, 'insufficientResources'), Enum(4, 'accessDenied'), Enum(5, 'portShutdown'), Enum(6, 'unknownManagementDomain')]


class vmpsMacConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class vmpsVlanName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 1])
	syntaxobject = VlanName


class vmpsDeviceId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class vmpsPortName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vmpsVlanConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class vmpsConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vmpsIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1])
	access = 2
	rowstatus = vmpsRowStatus
	columns = {'vmpsIndex': vmpsIndex, 'vmpsAdminStatus': vmpsAdminStatus, 'vmpsDownloadServerAddress': vmpsDownloadServerAddress, 'vmpsConfigFileName': vmpsConfigFileName, 'vmpsTriggerDownload': vmpsTriggerDownload, 'vmpsFallbackVlan': vmpsFallbackVlan, 'vmpsSecureMode': vmpsSecureMode, 'vmpsManagementDomain': vmpsManagementDomain, 'vmpsRowStatus': vmpsRowStatus}


from CISCO_VMPS_MIB import vmpsIndex
class vmpsStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vmpsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1])
	access = 2
	columns = {'vmpsLastRestart': vmpsLastRestart, 'vmpsInConfigReqs': vmpsInConfigReqs, 'vmpsInConfigErrors': vmpsInConfigErrors, 'vmpsOutConfigFails': vmpsOutConfigFails, 'vmpsLastFailClient': vmpsLastFailClient, 'vmpsOperStatus': vmpsOperStatus}


class vmpsMacConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vmpsIndex, vmpsMacConfigAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1])
	access = 2
	rowstatus = vmpsMacConfigStatus
	columns = {'vmpsMacConfigAddress': vmpsMacConfigAddress, 'vmpsMacConfigVlan': vmpsMacConfigVlan, 'vmpsMacConfigLastAccessed': vmpsMacConfigLastAccessed, 'vmpsMacConfigLastRequestor': vmpsMacConfigLastRequestor, 'vmpsMacConfigLastRequestPortId': vmpsMacConfigLastRequestPortId, 'vmpsMacConfigLastResponseStatus': vmpsMacConfigLastResponseStatus, 'vmpsMacConfigStatus': vmpsMacConfigStatus}


class vmpsVlanConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vmpsIndex, vmpsVlanName, vmpsDeviceId, vmpsPortName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1])
	access = 2
	rowstatus = vmpsVlanConfigStatus
	columns = {'vmpsVlanName': vmpsVlanName, 'vmpsDeviceId': vmpsDeviceId, 'vmpsPortName': vmpsPortName, 'vmpsVlanConfigStatus': vmpsVlanConfigStatus}


# notifications (traps) 
# groups 
class ciscoVlanMemberPolicyServerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2, 1])
	group = [vmpsLastRestart, vmpsInConfigReqs, vmpsInConfigErrors, vmpsOutConfigFails, vmpsLastFailClient, vmpsOperStatus, vmpsAdminStatus, vmpsDownloadServerAddress, vmpsConfigFileName, vmpsTriggerDownload, vmpsFallbackVlan, vmpsSecureMode, vmpsManagementDomain, vmpsRowStatus, vmpsMacConfigVlan, vmpsMacConfigLastAccessed, vmpsMacConfigLastRequestor, vmpsMacConfigLastRequestPortId, vmpsMacConfigLastResponseStatus, vmpsMacConfigStatus, vmpsVlanConfigStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
