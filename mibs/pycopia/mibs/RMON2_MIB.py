# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32, Gauge32, IpAddress, TimeTicks, mib_2
from TOKEN_RING_RMON_MIB import tokenRing, tokenRingMLStatsEntry, tokenRingPStatsEntry, ringStationControlEntry, sourceRoutingStatsEntry
from RMON_MIB import OwnerString, statistics, history, hosts, matrix, filter, etherStatsEntry, historyControlEntry, hostControlEntry, matrixControlEntry, filterEntry, channelEntry
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, DisplayString, TimeStamp

class RMON2_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RMON2-MIB'
	conformance = 3
	name = 'RMON2-MIB'
	language = 2
	description = 'The MIB module for managing remote monitoring\ndevice implementations.  This MIB module\nextends the architecture introduced in the original\nRMON MIB as specified in RFC 2819.\n\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4502;  see the RFC itself for\nfull legal notices.'

# nodes
class rmon(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16])
	name = 'rmon'

class protocolDir(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11])
	name = 'protocolDir'

class protocolDist(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12])
	name = 'protocolDist'

class addressMap(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13])
	name = 'addressMap'

class nlHost(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14])
	name = 'nlHost'

class nlMatrix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15])
	name = 'nlMatrix'

class alHost(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16])
	name = 'alHost'

class alMatrix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17])
	name = 'alMatrix'

class usrHistory(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18])
	name = 'usrHistory'

class probeConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19])
	name = 'probeConfig'

class rmonConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20])
	name = 'rmonConformance'

class rmon2MIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 1])
	name = 'rmon2MIBCompliances'

class rmon2MIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2])
	name = 'rmon2MIBGroups'


# macros
# types 

class ZeroBasedCounter32(pycopia.SMI.Basetypes.Gauge32):
	status = 1


class LastCreateTime(pycopia.SMI.Basetypes.TimeTicks):
	status = 1


class TimeFilter(pycopia.SMI.Basetypes.TimeTicks):
	status = 1


class DataSource(pycopia.SMI.Basetypes.ObjectIdentifier):
	status = 1


class ControlString(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))

# scalars 
class protocolDirLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class addressMapInserts(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class addressMapDeletes(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class addressMapMaxDesiredEntries(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class probeCapabilities(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class probeSoftwareRev(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class probeHardwareRev(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class probeDateTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class probeResetControl(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'running'), Enum(2, 'warmBoot'), Enum(3, 'coldBoot')]


class probeDownloadFile(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class probeDownloadTFTPServer(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 7])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class probeDownloadAction(ScalarObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notDownloading'), Enum(2, 'downloadToPROM'), Enum(3, 'downloadToRAM')]


class probeDownloadStatus(ScalarObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'downloadSuccess'), Enum(2, 'downloadStatusUnknown'), Enum(3, 'downloadGeneralError'), Enum(4, 'downloadNoResponseFromServer'), Enum(5, 'downloadChecksumError'), Enum(6, 'downloadIncompatibleImage'), Enum(7, 'downloadTftpFileNotFound'), Enum(8, 'downloadTftpAccessViolation')]


class netDefaultGateway(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 12])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


# columns
class etherStatsDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class etherStatsCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 4, 1, 2])
	syntaxobject = LastCreateTime


class tokenRingMLStatsDroppedFrames(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingMLStatsCreateTime(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 5, 1, 2])
	syntaxobject = LastCreateTime


class tokenRingPStatsDroppedFrames(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tokenRingPStatsCreateTime(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 6, 1, 2])
	syntaxobject = LastCreateTime


class historyControlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hostControlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hostControlCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 4, 1, 2])
	syntaxobject = LastCreateTime


class matrixControlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class matrixControlCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 4, 1, 2])
	syntaxobject = LastCreateTime


class channelDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class channelCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 3, 1, 2])
	syntaxobject = LastCreateTime


class filterProtocolDirDataLocalIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class filterProtocolDirLocalIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ringStationControlDroppedFrames(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ringStationControlCreateTime(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 7, 1, 2])
	syntaxobject = LastCreateTime


class sourceRoutingStatsDroppedFrames(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class sourceRoutingStatsCreateTime(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 8, 1, 2])
	syntaxobject = LastCreateTime


class protocolDirID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class protocolDirParameters(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class protocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class protocolDirDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class protocolDirType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class protocolDirAddressMapConfig(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notSupported'), Enum(2, 'supportedOff'), Enum(3, 'supportedOn')]


class protocolDirHostConfig(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notSupported'), Enum(2, 'supportedOff'), Enum(3, 'supportedOn')]


class protocolDirMatrixConfig(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notSupported'), Enum(2, 'supportedOff'), Enum(3, 'supportedOn')]


class protocolDirOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 9])
	syntaxobject = OwnerString


class protocolDirStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class protocolDistControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class protocolDistControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 2])
	syntaxobject = DataSource


class protocolDistControlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class protocolDistControlCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 4])
	syntaxobject = LastCreateTime


class protocolDistControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 5])
	syntaxobject = OwnerString


class protocolDistControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class protocolDistStatsPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 2, 1, 1])
	syntaxobject = ZeroBasedCounter32


class protocolDistStatsOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 2, 1, 2])
	syntaxobject = ZeroBasedCounter32


class addressMapControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class addressMapControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 2])
	syntaxobject = DataSource


class addressMapControlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class addressMapControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 4])
	syntaxobject = OwnerString


class addressMapControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class addressMapTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 1])
	syntaxobject = TimeFilter


class addressMapNetworkAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class addressMapSource(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class addressMapPhysicalAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class addressMapLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hlHostControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hlHostControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 2])
	syntaxobject = DataSource


class hlHostControlNlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlHostControlNlInserts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlHostControlNlDeletes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlHostControlNlMaxDesiredEntries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hlHostControlAlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlHostControlAlInserts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlHostControlAlDeletes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlHostControlAlMaxDesiredEntries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hlHostControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 11])
	syntaxobject = OwnerString


class hlHostControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nlHostTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 1])
	syntaxobject = TimeFilter


class nlHostAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlHostInPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 3])
	syntaxobject = ZeroBasedCounter32


class nlHostOutPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 4])
	syntaxobject = ZeroBasedCounter32


class nlHostInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 5])
	syntaxobject = ZeroBasedCounter32


class nlHostOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 6])
	syntaxobject = ZeroBasedCounter32


class nlHostOutMacNonUnicastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 7])
	syntaxobject = ZeroBasedCounter32


class nlHostCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 8])
	syntaxobject = LastCreateTime


class hlMatrixControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hlMatrixControlDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 2])
	syntaxobject = DataSource


class hlMatrixControlNlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlMatrixControlNlInserts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlMatrixControlNlDeletes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlMatrixControlNlMaxDesiredEntries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hlMatrixControlAlDroppedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlMatrixControlAlInserts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlMatrixControlAlDeletes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hlMatrixControlAlMaxDesiredEntries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hlMatrixControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 11])
	syntaxobject = OwnerString


class hlMatrixControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nlMatrixSDTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 1])
	syntaxobject = TimeFilter


class nlMatrixSDSourceAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixSDDestAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixSDPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 4])
	syntaxobject = ZeroBasedCounter32


class nlMatrixSDOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 5])
	syntaxobject = ZeroBasedCounter32


class nlMatrixSDCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 6])
	syntaxobject = LastCreateTime


class nlMatrixDSTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 1])
	syntaxobject = TimeFilter


class nlMatrixDSSourceAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixDSDestAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixDSPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 4])
	syntaxobject = ZeroBasedCounter32


class nlMatrixDSOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 5])
	syntaxobject = ZeroBasedCounter32


class nlMatrixDSCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 6])
	syntaxobject = LastCreateTime


class nlMatrixTopNControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNControlMatrixIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNControlRateBase(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'nlMatrixTopNPkts'), Enum(2, 'nlMatrixTopNOctets'), Enum(3, 'nlMatrixTopNHighCapacityPkts'), Enum(4, 'nlMatrixTopNHighCapacityOctets')]


class nlMatrixTopNControlTimeRemaining(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNControlGeneratedReports(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nlMatrixTopNControlDuration(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNControlRequestedSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNControlGrantedSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNControlStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class nlMatrixTopNControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 10])
	syntaxobject = OwnerString


class nlMatrixTopNControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nlMatrixTopNIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNProtocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNSourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixTopNDestAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixTopNPktRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class nlMatrixTopNReversePktRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class nlMatrixTopNOctetRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class nlMatrixTopNReverseOctetRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class alHostTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 1])
	syntaxobject = TimeFilter


class alHostInPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 2])
	syntaxobject = ZeroBasedCounter32


class alHostOutPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 3])
	syntaxobject = ZeroBasedCounter32


class alHostInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 4])
	syntaxobject = ZeroBasedCounter32


class alHostOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 5])
	syntaxobject = ZeroBasedCounter32


class alHostCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 6])
	syntaxobject = LastCreateTime


class alMatrixSDTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 1])
	syntaxobject = TimeFilter


class alMatrixSDPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 2])
	syntaxobject = ZeroBasedCounter32


class alMatrixSDOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 3])
	syntaxobject = ZeroBasedCounter32


class alMatrixSDCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 4])
	syntaxobject = LastCreateTime


class alMatrixDSTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 1])
	syntaxobject = TimeFilter


class alMatrixDSPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 2])
	syntaxobject = ZeroBasedCounter32


class alMatrixDSOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 3])
	syntaxobject = ZeroBasedCounter32


class alMatrixDSCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 4])
	syntaxobject = LastCreateTime


class alMatrixTopNControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNControlMatrixIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNControlRateBase(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alMatrixTopNTerminalsPkts'), Enum(2, 'alMatrixTopNTerminalsOctets'), Enum(3, 'alMatrixTopNAllPkts'), Enum(4, 'alMatrixTopNAllOctets'), Enum(5, 'alMatrixTopNTerminalsHighCapacityPkts'), Enum(6, 'alMatrixTopNTerminalsHighCapacityOctets'), Enum(7, 'alMatrixTopNAllHighCapacityPkts'), Enum(8, 'alMatrixTopNAllHighCapacityOctets')]


class alMatrixTopNControlTimeRemaining(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNControlGeneratedReports(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alMatrixTopNControlDuration(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNControlRequestedSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNControlGrantedSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNControlStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class alMatrixTopNControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 10])
	syntaxobject = OwnerString


class alMatrixTopNControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class alMatrixTopNIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNProtocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNSourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class alMatrixTopNDestAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class alMatrixTopNAppProtocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNPktRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class alMatrixTopNReversePktRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class alMatrixTopNOctetRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class alMatrixTopNReverseOctetRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class usrHistoryControlIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryControlObjects(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryControlBucketsRequested(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryControlBucketsGranted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryControlInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryControlOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 6])
	syntaxobject = OwnerString


class usrHistoryControlStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class usrHistoryObjectIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryObjectVariable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class usrHistoryObjectSampleType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'absoluteValue'), Enum(2, 'deltaValue')]


class usrHistorySampleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class usrHistoryIntervalStart(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class usrHistoryIntervalEnd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class usrHistoryAbsValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class usrHistoryValStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'valueNotAvailable'), Enum(2, 'valuePositive'), Enum(3, 'valueNegative')]


class serialMode(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'direct'), Enum(2, 'modem')]


class serialProtocol(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'slip'), Enum(3, 'ppp')]


class serialTimeout(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class serialModemInitString(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 4])
	syntaxobject = ControlString


class serialModemHangUpString(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 5])
	syntaxobject = ControlString


class serialModemConnectResp(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class serialModemNoConnectResp(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class serialDialoutTimeout(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class serialStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class netConfigIPAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class netConfigSubnetMask(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class netConfigStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class trapDestIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class trapDestCommunity(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class trapDestProtocol(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ip'), Enum(2, 'ipx')]


class trapDestAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class trapDestOwner(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 5])
	syntaxobject = OwnerString


class trapDestStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class serialConnectIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class serialConnectDestIpAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class serialConnectType(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'direct'), Enum(2, 'modem'), Enum(3, 'switch'), Enum(4, 'modemSwitch')]


class serialConnectDialString(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 4])
	syntaxobject = ControlString


class serialConnectSwitchConnectSeq(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 5])
	syntaxobject = ControlString


class serialConnectSwitchDisconnectSeq(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 6])
	syntaxobject = ControlString


class serialConnectSwitchResetSeq(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 7])
	syntaxobject = ControlString


class serialConnectOwner(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 8])
	syntaxobject = OwnerString


class serialConnectStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
from RMON_MIB import etherStatsIndex
class etherStats2Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([etherStatsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 4, 1])
	access = 2
	columns = {'etherStatsDroppedFrames': etherStatsDroppedFrames, 'etherStatsCreateTime': etherStatsCreateTime}


from TOKEN_RING_RMON_MIB import tokenRingMLStatsIndex
class tokenRingMLStats2Entry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([tokenRingMLStatsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 5, 1])
	access = 2
	columns = {'tokenRingMLStatsDroppedFrames': tokenRingMLStatsDroppedFrames, 'tokenRingMLStatsCreateTime': tokenRingMLStatsCreateTime}


from TOKEN_RING_RMON_MIB import tokenRingPStatsIndex
class tokenRingPStats2Entry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([tokenRingPStatsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 6, 1])
	access = 2
	columns = {'tokenRingPStatsDroppedFrames': tokenRingPStatsDroppedFrames, 'tokenRingPStatsCreateTime': tokenRingPStatsCreateTime}


from RMON_MIB import historyControlIndex
class historyControl2Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([historyControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 5, 1])
	access = 2
	columns = {'historyControlDroppedFrames': historyControlDroppedFrames}


from RMON_MIB import hostControlIndex
class hostControl2Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 4, 1])
	access = 2
	columns = {'hostControlDroppedFrames': hostControlDroppedFrames, 'hostControlCreateTime': hostControlCreateTime}


from RMON_MIB import matrixControlIndex
class matrixControl2Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([matrixControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 4, 1])
	access = 2
	columns = {'matrixControlDroppedFrames': matrixControlDroppedFrames, 'matrixControlCreateTime': matrixControlCreateTime}


from RMON_MIB import channelIndex
class channel2Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([channelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 3, 1])
	access = 2
	columns = {'channelDroppedFrames': channelDroppedFrames, 'channelCreateTime': channelCreateTime}


from RMON_MIB import filterIndex
class filter2Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([filterIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 7, 4, 1])
	access = 2
	columns = {'filterProtocolDirDataLocalIndex': filterProtocolDirDataLocalIndex, 'filterProtocolDirLocalIndex': filterProtocolDirLocalIndex}


from TOKEN_RING_RMON_MIB import ringStationControlIfIndex
class ringStationControl2Entry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([ringStationControlIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 7, 1])
	access = 2
	columns = {'ringStationControlDroppedFrames': ringStationControlDroppedFrames, 'ringStationControlCreateTime': ringStationControlCreateTime}


from TOKEN_RING_RMON_MIB import sourceRoutingStatsIfIndex
class sourceRoutingStats2Entry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([sourceRoutingStatsIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 10, 8, 1])
	access = 2
	columns = {'sourceRoutingStatsDroppedFrames': sourceRoutingStatsDroppedFrames, 'sourceRoutingStatsCreateTime': sourceRoutingStatsCreateTime}


class protocolDirEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([protocolDirID, protocolDirParameters], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 11, 2, 1])
	access = 2
	rowstatus = protocolDirStatus
	columns = {'protocolDirID': protocolDirID, 'protocolDirParameters': protocolDirParameters, 'protocolDirLocalIndex': protocolDirLocalIndex, 'protocolDirDescr': protocolDirDescr, 'protocolDirType': protocolDirType, 'protocolDirAddressMapConfig': protocolDirAddressMapConfig, 'protocolDirHostConfig': protocolDirHostConfig, 'protocolDirMatrixConfig': protocolDirMatrixConfig, 'protocolDirOwner': protocolDirOwner, 'protocolDirStatus': protocolDirStatus}


class protocolDistControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([protocolDistControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 1, 1])
	access = 2
	rowstatus = protocolDistControlStatus
	columns = {'protocolDistControlIndex': protocolDistControlIndex, 'protocolDistControlDataSource': protocolDistControlDataSource, 'protocolDistControlDroppedFrames': protocolDistControlDroppedFrames, 'protocolDistControlCreateTime': protocolDistControlCreateTime, 'protocolDistControlOwner': protocolDistControlOwner, 'protocolDistControlStatus': protocolDistControlStatus}


class protocolDistStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([protocolDistControlIndex, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 2, 1])
	access = 2
	columns = {'protocolDistStatsPkts': protocolDistStatsPkts, 'protocolDistStatsOctets': protocolDistStatsOctets}


class addressMapControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([addressMapControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 4, 1])
	access = 2
	rowstatus = addressMapControlStatus
	columns = {'addressMapControlIndex': addressMapControlIndex, 'addressMapControlDataSource': addressMapControlDataSource, 'addressMapControlDroppedFrames': addressMapControlDroppedFrames, 'addressMapControlOwner': addressMapControlOwner, 'addressMapControlStatus': addressMapControlStatus}


class addressMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([addressMapTimeMark, protocolDirLocalIndex, addressMapNetworkAddress, addressMapSource], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 13, 5, 1])
	access = 2
	columns = {'addressMapTimeMark': addressMapTimeMark, 'addressMapNetworkAddress': addressMapNetworkAddress, 'addressMapSource': addressMapSource, 'addressMapPhysicalAddress': addressMapPhysicalAddress, 'addressMapLastChange': addressMapLastChange}


class hlHostControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlHostControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 1, 1])
	access = 2
	rowstatus = hlHostControlStatus
	columns = {'hlHostControlIndex': hlHostControlIndex, 'hlHostControlDataSource': hlHostControlDataSource, 'hlHostControlNlDroppedFrames': hlHostControlNlDroppedFrames, 'hlHostControlNlInserts': hlHostControlNlInserts, 'hlHostControlNlDeletes': hlHostControlNlDeletes, 'hlHostControlNlMaxDesiredEntries': hlHostControlNlMaxDesiredEntries, 'hlHostControlAlDroppedFrames': hlHostControlAlDroppedFrames, 'hlHostControlAlInserts': hlHostControlAlInserts, 'hlHostControlAlDeletes': hlHostControlAlDeletes, 'hlHostControlAlMaxDesiredEntries': hlHostControlAlMaxDesiredEntries, 'hlHostControlOwner': hlHostControlOwner, 'hlHostControlStatus': hlHostControlStatus}


class nlHostEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlHostControlIndex, nlHostTimeMark, protocolDirLocalIndex, nlHostAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 2, 1])
	access = 2
	columns = {'nlHostTimeMark': nlHostTimeMark, 'nlHostAddress': nlHostAddress, 'nlHostInPkts': nlHostInPkts, 'nlHostOutPkts': nlHostOutPkts, 'nlHostInOctets': nlHostInOctets, 'nlHostOutOctets': nlHostOutOctets, 'nlHostOutMacNonUnicastPkts': nlHostOutMacNonUnicastPkts, 'nlHostCreateTime': nlHostCreateTime}


class hlMatrixControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 1, 1])
	access = 2
	rowstatus = hlMatrixControlStatus
	columns = {'hlMatrixControlIndex': hlMatrixControlIndex, 'hlMatrixControlDataSource': hlMatrixControlDataSource, 'hlMatrixControlNlDroppedFrames': hlMatrixControlNlDroppedFrames, 'hlMatrixControlNlInserts': hlMatrixControlNlInserts, 'hlMatrixControlNlDeletes': hlMatrixControlNlDeletes, 'hlMatrixControlNlMaxDesiredEntries': hlMatrixControlNlMaxDesiredEntries, 'hlMatrixControlAlDroppedFrames': hlMatrixControlAlDroppedFrames, 'hlMatrixControlAlInserts': hlMatrixControlAlInserts, 'hlMatrixControlAlDeletes': hlMatrixControlAlDeletes, 'hlMatrixControlAlMaxDesiredEntries': hlMatrixControlAlMaxDesiredEntries, 'hlMatrixControlOwner': hlMatrixControlOwner, 'hlMatrixControlStatus': hlMatrixControlStatus}


class nlMatrixSDEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, nlMatrixSDTimeMark, protocolDirLocalIndex, nlMatrixSDSourceAddress, nlMatrixSDDestAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 2, 1])
	access = 2
	columns = {'nlMatrixSDTimeMark': nlMatrixSDTimeMark, 'nlMatrixSDSourceAddress': nlMatrixSDSourceAddress, 'nlMatrixSDDestAddress': nlMatrixSDDestAddress, 'nlMatrixSDPkts': nlMatrixSDPkts, 'nlMatrixSDOctets': nlMatrixSDOctets, 'nlMatrixSDCreateTime': nlMatrixSDCreateTime}


class nlMatrixDSEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, nlMatrixDSTimeMark, protocolDirLocalIndex, nlMatrixDSDestAddress, nlMatrixDSSourceAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 3, 1])
	access = 2
	columns = {'nlMatrixDSTimeMark': nlMatrixDSTimeMark, 'nlMatrixDSSourceAddress': nlMatrixDSSourceAddress, 'nlMatrixDSDestAddress': nlMatrixDSDestAddress, 'nlMatrixDSPkts': nlMatrixDSPkts, 'nlMatrixDSOctets': nlMatrixDSOctets, 'nlMatrixDSCreateTime': nlMatrixDSCreateTime}


class nlMatrixTopNControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlMatrixTopNControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 4, 1])
	access = 2
	rowstatus = nlMatrixTopNControlStatus
	columns = {'nlMatrixTopNControlIndex': nlMatrixTopNControlIndex, 'nlMatrixTopNControlMatrixIndex': nlMatrixTopNControlMatrixIndex, 'nlMatrixTopNControlRateBase': nlMatrixTopNControlRateBase, 'nlMatrixTopNControlTimeRemaining': nlMatrixTopNControlTimeRemaining, 'nlMatrixTopNControlGeneratedReports': nlMatrixTopNControlGeneratedReports, 'nlMatrixTopNControlDuration': nlMatrixTopNControlDuration, 'nlMatrixTopNControlRequestedSize': nlMatrixTopNControlRequestedSize, 'nlMatrixTopNControlGrantedSize': nlMatrixTopNControlGrantedSize, 'nlMatrixTopNControlStartTime': nlMatrixTopNControlStartTime, 'nlMatrixTopNControlOwner': nlMatrixTopNControlOwner, 'nlMatrixTopNControlStatus': nlMatrixTopNControlStatus}


class nlMatrixTopNEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlMatrixTopNControlIndex, nlMatrixTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 5, 1])
	access = 2
	columns = {'nlMatrixTopNIndex': nlMatrixTopNIndex, 'nlMatrixTopNProtocolDirLocalIndex': nlMatrixTopNProtocolDirLocalIndex, 'nlMatrixTopNSourceAddress': nlMatrixTopNSourceAddress, 'nlMatrixTopNDestAddress': nlMatrixTopNDestAddress, 'nlMatrixTopNPktRate': nlMatrixTopNPktRate, 'nlMatrixTopNReversePktRate': nlMatrixTopNReversePktRate, 'nlMatrixTopNOctetRate': nlMatrixTopNOctetRate, 'nlMatrixTopNReverseOctetRate': nlMatrixTopNReverseOctetRate}


class alHostEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlHostControlIndex, alHostTimeMark, protocolDirLocalIndex, nlHostAddress, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 1, 1])
	access = 2
	columns = {'alHostTimeMark': alHostTimeMark, 'alHostInPkts': alHostInPkts, 'alHostOutPkts': alHostOutPkts, 'alHostInOctets': alHostInOctets, 'alHostOutOctets': alHostOutOctets, 'alHostCreateTime': alHostCreateTime}


class alMatrixSDEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, alMatrixSDTimeMark, protocolDirLocalIndex, nlMatrixSDSourceAddress, nlMatrixSDDestAddress, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 1, 1])
	access = 2
	columns = {'alMatrixSDTimeMark': alMatrixSDTimeMark, 'alMatrixSDPkts': alMatrixSDPkts, 'alMatrixSDOctets': alMatrixSDOctets, 'alMatrixSDCreateTime': alMatrixSDCreateTime}


class alMatrixDSEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, alMatrixDSTimeMark, protocolDirLocalIndex, nlMatrixDSDestAddress, nlMatrixDSSourceAddress, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 2, 1])
	access = 2
	columns = {'alMatrixDSTimeMark': alMatrixDSTimeMark, 'alMatrixDSPkts': alMatrixDSPkts, 'alMatrixDSOctets': alMatrixDSOctets, 'alMatrixDSCreateTime': alMatrixDSCreateTime}


class alMatrixTopNControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alMatrixTopNControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 3, 1])
	access = 2
	rowstatus = alMatrixTopNControlStatus
	columns = {'alMatrixTopNControlIndex': alMatrixTopNControlIndex, 'alMatrixTopNControlMatrixIndex': alMatrixTopNControlMatrixIndex, 'alMatrixTopNControlRateBase': alMatrixTopNControlRateBase, 'alMatrixTopNControlTimeRemaining': alMatrixTopNControlTimeRemaining, 'alMatrixTopNControlGeneratedReports': alMatrixTopNControlGeneratedReports, 'alMatrixTopNControlDuration': alMatrixTopNControlDuration, 'alMatrixTopNControlRequestedSize': alMatrixTopNControlRequestedSize, 'alMatrixTopNControlGrantedSize': alMatrixTopNControlGrantedSize, 'alMatrixTopNControlStartTime': alMatrixTopNControlStartTime, 'alMatrixTopNControlOwner': alMatrixTopNControlOwner, 'alMatrixTopNControlStatus': alMatrixTopNControlStatus}


class alMatrixTopNEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alMatrixTopNControlIndex, alMatrixTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 4, 1])
	access = 2
	columns = {'alMatrixTopNIndex': alMatrixTopNIndex, 'alMatrixTopNProtocolDirLocalIndex': alMatrixTopNProtocolDirLocalIndex, 'alMatrixTopNSourceAddress': alMatrixTopNSourceAddress, 'alMatrixTopNDestAddress': alMatrixTopNDestAddress, 'alMatrixTopNAppProtocolDirLocalIndex': alMatrixTopNAppProtocolDirLocalIndex, 'alMatrixTopNPktRate': alMatrixTopNPktRate, 'alMatrixTopNReversePktRate': alMatrixTopNReversePktRate, 'alMatrixTopNOctetRate': alMatrixTopNOctetRate, 'alMatrixTopNReverseOctetRate': alMatrixTopNReverseOctetRate}


class usrHistoryControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([usrHistoryControlIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 1, 1])
	access = 2
	rowstatus = usrHistoryControlStatus
	columns = {'usrHistoryControlIndex': usrHistoryControlIndex, 'usrHistoryControlObjects': usrHistoryControlObjects, 'usrHistoryControlBucketsRequested': usrHistoryControlBucketsRequested, 'usrHistoryControlBucketsGranted': usrHistoryControlBucketsGranted, 'usrHistoryControlInterval': usrHistoryControlInterval, 'usrHistoryControlOwner': usrHistoryControlOwner, 'usrHistoryControlStatus': usrHistoryControlStatus}


class usrHistoryObjectEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([usrHistoryControlIndex, usrHistoryObjectIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 2, 1])
	access = 2
	columns = {'usrHistoryObjectIndex': usrHistoryObjectIndex, 'usrHistoryObjectVariable': usrHistoryObjectVariable, 'usrHistoryObjectSampleType': usrHistoryObjectSampleType}


class usrHistoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([usrHistoryControlIndex, usrHistorySampleIndex, usrHistoryObjectIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 3, 1])
	access = 2
	columns = {'usrHistorySampleIndex': usrHistorySampleIndex, 'usrHistoryIntervalStart': usrHistoryIntervalStart, 'usrHistoryIntervalEnd': usrHistoryIntervalEnd, 'usrHistoryAbsValue': usrHistoryAbsValue, 'usrHistoryValStatus': usrHistoryValStatus}


class serialConfigEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 10, 1])
	access = 2
	rowstatus = serialStatus
	columns = {'serialMode': serialMode, 'serialProtocol': serialProtocol, 'serialTimeout': serialTimeout, 'serialModemInitString': serialModemInitString, 'serialModemHangUpString': serialModemHangUpString, 'serialModemConnectResp': serialModemConnectResp, 'serialModemNoConnectResp': serialModemNoConnectResp, 'serialDialoutTimeout': serialDialoutTimeout, 'serialStatus': serialStatus}


class netConfigEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 11, 1])
	access = 2
	rowstatus = netConfigStatus
	columns = {'netConfigIPAddress': netConfigIPAddress, 'netConfigSubnetMask': netConfigSubnetMask, 'netConfigStatus': netConfigStatus}


class trapDestEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([trapDestIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 13, 1])
	access = 2
	rowstatus = trapDestStatus
	columns = {'trapDestIndex': trapDestIndex, 'trapDestCommunity': trapDestCommunity, 'trapDestProtocol': trapDestProtocol, 'trapDestAddress': trapDestAddress, 'trapDestOwner': trapDestOwner, 'trapDestStatus': trapDestStatus}


class serialConnectionEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([serialConnectIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 14, 1])
	access = 2
	rowstatus = serialConnectStatus
	columns = {'serialConnectIndex': serialConnectIndex, 'serialConnectDestIpAddress': serialConnectDestIpAddress, 'serialConnectType': serialConnectType, 'serialConnectDialString': serialConnectDialString, 'serialConnectSwitchConnectSeq': serialConnectSwitchConnectSeq, 'serialConnectSwitchDisconnectSeq': serialConnectSwitchDisconnectSeq, 'serialConnectSwitchResetSeq': serialConnectSwitchResetSeq, 'serialConnectOwner': serialConnectOwner, 'serialConnectStatus': serialConnectStatus}


# notifications (traps) 
# groups 
class protocolDirectoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 1])
	group = [protocolDirLastChange, protocolDirLocalIndex, protocolDirDescr, protocolDirType, protocolDirAddressMapConfig, protocolDirHostConfig, protocolDirMatrixConfig, protocolDirOwner, protocolDirStatus]

class protocolDistributionGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 2])
	group = [protocolDistControlDataSource, protocolDistControlDroppedFrames, protocolDistControlCreateTime, protocolDistControlOwner, protocolDistControlStatus, protocolDistStatsPkts, protocolDistStatsOctets]

class addressMapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 3])
	group = [addressMapInserts, addressMapDeletes, addressMapMaxDesiredEntries, addressMapControlDataSource, addressMapControlDroppedFrames, addressMapControlOwner, addressMapControlStatus, addressMapPhysicalAddress, addressMapLastChange]

class nlHostGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 4])
	group = [hlHostControlDataSource, hlHostControlNlDroppedFrames, hlHostControlNlInserts, hlHostControlNlDeletes, hlHostControlNlMaxDesiredEntries, hlHostControlAlDroppedFrames, hlHostControlAlInserts, hlHostControlAlDeletes, hlHostControlAlMaxDesiredEntries, hlHostControlOwner, hlHostControlStatus, nlHostInPkts, nlHostOutPkts, nlHostInOctets, nlHostOutOctets, nlHostOutMacNonUnicastPkts, nlHostCreateTime]

class nlMatrixGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 5])
	group = [hlMatrixControlDataSource, hlMatrixControlNlDroppedFrames, hlMatrixControlNlInserts, hlMatrixControlNlDeletes, hlMatrixControlNlMaxDesiredEntries, hlMatrixControlAlDroppedFrames, hlMatrixControlAlInserts, hlMatrixControlAlDeletes, hlMatrixControlAlMaxDesiredEntries, hlMatrixControlOwner, hlMatrixControlStatus, nlMatrixSDPkts, nlMatrixSDOctets, nlMatrixSDCreateTime, nlMatrixDSPkts, nlMatrixDSOctets, nlMatrixDSCreateTime, nlMatrixTopNControlMatrixIndex, nlMatrixTopNControlRateBase, nlMatrixTopNControlTimeRemaining, nlMatrixTopNControlGeneratedReports, nlMatrixTopNControlDuration, nlMatrixTopNControlRequestedSize, nlMatrixTopNControlGrantedSize, nlMatrixTopNControlStartTime, nlMatrixTopNControlOwner, nlMatrixTopNControlStatus, nlMatrixTopNProtocolDirLocalIndex, nlMatrixTopNSourceAddress, nlMatrixTopNDestAddress, nlMatrixTopNPktRate, nlMatrixTopNReversePktRate, nlMatrixTopNOctetRate, nlMatrixTopNReverseOctetRate]

class alHostGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 6])
	group = [alHostInPkts, alHostOutPkts, alHostInOctets, alHostOutOctets, alHostCreateTime]

class alMatrixGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 7])
	group = [alMatrixSDPkts, alMatrixSDOctets, alMatrixSDCreateTime, alMatrixDSPkts, alMatrixDSOctets, alMatrixDSCreateTime, alMatrixTopNControlMatrixIndex, alMatrixTopNControlRateBase, alMatrixTopNControlTimeRemaining, alMatrixTopNControlGeneratedReports, alMatrixTopNControlDuration, alMatrixTopNControlRequestedSize, alMatrixTopNControlGrantedSize, alMatrixTopNControlStartTime, alMatrixTopNControlOwner, alMatrixTopNControlStatus, alMatrixTopNProtocolDirLocalIndex, alMatrixTopNSourceAddress, alMatrixTopNDestAddress, alMatrixTopNAppProtocolDirLocalIndex, alMatrixTopNPktRate, alMatrixTopNReversePktRate, alMatrixTopNOctetRate, alMatrixTopNReverseOctetRate]

class usrHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 8])
	group = [usrHistoryControlObjects, usrHistoryControlBucketsRequested, usrHistoryControlBucketsGranted, usrHistoryControlInterval, usrHistoryControlOwner, usrHistoryControlStatus, usrHistoryObjectVariable, usrHistoryObjectSampleType, usrHistoryIntervalStart, usrHistoryIntervalEnd, usrHistoryAbsValue, usrHistoryValStatus]

class probeInformationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 9])
	group = [probeCapabilities, probeSoftwareRev, probeHardwareRev, probeDateTime]

class probeConfigurationGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 10])
	group = [probeResetControl, probeDownloadFile, probeDownloadTFTPServer, probeDownloadAction, probeDownloadStatus, serialMode, serialProtocol, serialTimeout, serialModemInitString, serialModemHangUpString, serialModemConnectResp, serialModemNoConnectResp, serialDialoutTimeout, serialStatus, netConfigIPAddress, netConfigSubnetMask, netConfigStatus, netDefaultGateway, trapDestCommunity, trapDestProtocol, trapDestAddress, trapDestOwner, trapDestStatus, serialConnectDestIpAddress, serialConnectType, serialConnectDialString, serialConnectSwitchConnectSeq, serialConnectSwitchDisconnectSeq, serialConnectSwitchResetSeq, serialConnectOwner, serialConnectStatus]

class rmon1EnhancementGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 11])
	group = [historyControlDroppedFrames, hostControlDroppedFrames, hostControlCreateTime, matrixControlDroppedFrames, matrixControlCreateTime, channelDroppedFrames, channelCreateTime, filterProtocolDirDataLocalIndex, filterProtocolDirLocalIndex]

class rmon1EthernetEnhancementGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 12])
	group = [etherStatsDroppedFrames, etherStatsCreateTime]

class rmon1TokenRingEnhancementGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 2, 13])
	group = [tokenRingMLStatsDroppedFrames, tokenRingMLStatsCreateTime, tokenRingPStatsDroppedFrames, tokenRingPStatsCreateTime, ringStationControlDroppedFrames, ringStationControlCreateTime, sourceRoutingStatsDroppedFrames, sourceRoutingStatsCreateTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
