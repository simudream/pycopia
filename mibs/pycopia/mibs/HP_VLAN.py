# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32
from HP_ICF_OID import hpSwitch
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, PhysAddress, RowStatus
from HP_ICF_TC import ConfigStatus

class HP_VLAN(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-VLAN'
	conformance = 5
	name = 'HP-VLAN'
	language = 2
	description = 'This MIB module describes management objects\nused to model virtual LANs (VLANs).'

# nodes
class hpVLAN(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3])
	name = 'hpVLAN'

class hpVlanLevelOne(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1])
	name = 'hpVlanLevelOne'

class hpVlanObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1])
	name = 'hpVlanObjects'

class hpVlanTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 2])
	name = 'hpVlanTraps'

class hpVlanConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3])
	name = 'hpVlanConformance'

class hpVlanGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1])
	name = 'hpVlanGroups'

class hpVlanCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 2])
	name = 'hpVlanCompliances'


# macros
# types 

class VlanID(pycopia.SMI.Basetypes.Integer32):
	status = 2
	ranges = Ranges(Range(1, 65535))
	format = 'd'

# scalars 
class hpVlanNumber(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpVlanIdentConfigStatus(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 7])
	syntaxobject = ConfigStatus


# columns
class hpVlanIdentIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 1])
	syntaxobject = VlanID


class hpVlanIdentName(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hpVlanIdentMode(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'port'), Enum(2, 'mac')]


class hpVlanIdentStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpVlanDot1QID(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpVlanIdentState(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class hpVlanIdentType(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'dynamic')]


class hpVlanMemberIfIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5, 1, 1])
	syntaxobject = InterfaceIndex


class hpVlanMemberIndex(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5, 1, 2])
	syntaxobject = VlanID


class hpVlanAddrIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6, 1, 1])
	syntaxobject = VlanID


class hpVlanAddrPhysAddress(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class hpVlanMemberTagged2(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tagged'), Enum(2, 'untagged'), Enum(3, 'no'), Enum(4, 'auto')]


# rows 
class hpVlanIdentEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([hpVlanIdentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1])
	access = 2
	rowstatus = hpVlanIdentStatus
	columns = {'hpVlanIdentIndex': hpVlanIdentIndex, 'hpVlanIdentName': hpVlanIdentName, 'hpVlanIdentMode': hpVlanIdentMode, 'hpVlanIdentStatus': hpVlanIdentStatus, 'hpVlanDot1QID': hpVlanDot1QID, 'hpVlanIdentState': hpVlanIdentState, 'hpVlanIdentType': hpVlanIdentType}


class hpVlanMemberEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([hpVlanMemberIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5, 1])
	access = 2
	columns = {'hpVlanMemberIfIndex': hpVlanMemberIfIndex, 'hpVlanMemberIndex': hpVlanMemberIndex}


class hpVlanAddrEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([hpVlanAddrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6, 1])
	access = 2
	columns = {'hpVlanAddrIndex': hpVlanAddrIndex, 'hpVlanAddrPhysAddress': hpVlanAddrPhysAddress}


class hpVlanMemberEntry2(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([hpVlanIdentIndex, hpVlanMemberIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 8, 1])
	access = 2
	columns = {'hpVlanMemberTagged2': hpVlanMemberTagged2}


# notifications (traps) 
# groups 
class hpVlanGeneralGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 1])
	group = [hpVlanNumber, hpVlanIdentMode, hpVlanIdentName, hpVlanIdentStatus]

class hpVlanAddressGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 2])
	group = [hpVlanAddrPhysAddress]

class hpVlanMemberGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 3])
	group = [hpVlanMemberIndex]

class hpVlanTaggingGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 4])
	group = [hpVlanDot1QID, hpVlanIdentState, hpVlanIdentType, hpVlanIdentConfigStatus, hpVlanMemberTagged2]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
