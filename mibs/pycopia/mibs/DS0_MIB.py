# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, transmission
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import DisplayString, TruthValue
from IF_MIB import ifIndex, InterfaceIndex, InterfaceIndexOrZero

class DS0_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DS0-MIB'
	conformance = 3
	name = 'DS0-MIB'
	language = 2
	description = 'The MIB module to describe\nDS0 interfaces objects.'

# nodes
class ds0(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81])
	name = 'ds0'

class ds0Conformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 2])
	name = 'ds0Conformance'

class ds0Groups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 2, 1])
	name = 'ds0Groups'

class ds0Compliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 2, 2])
	name = 'ds0Compliances'


# macros
# types 
# scalars 
# columns
class dsx0Ds0ChannelNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx0RobbedBitSignalling(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dsx0CircuitIdentifier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx0IdleCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx0SeizedCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx0ReceivedCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx0TransmitCodesEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dsx0Ds0BundleMappedIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1, 8])
	syntaxobject = InterfaceIndexOrZero


class dsx0ChanMappedIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 3, 1, 1])
	syntaxobject = InterfaceIndex


# rows 
class dsx0ConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 1, 1])
	access = 2
	columns = {'dsx0Ds0ChannelNumber': dsx0Ds0ChannelNumber, 'dsx0RobbedBitSignalling': dsx0RobbedBitSignalling, 'dsx0CircuitIdentifier': dsx0CircuitIdentifier, 'dsx0IdleCode': dsx0IdleCode, 'dsx0SeizedCode': dsx0SeizedCode, 'dsx0ReceivedCode': dsx0ReceivedCode, 'dsx0TransmitCodesEnable': dsx0TransmitCodesEnable, 'dsx0Ds0BundleMappedIfIndex': dsx0Ds0BundleMappedIfIndex}


class dsx0ChanMappingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, dsx0Ds0ChannelNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 3, 1])
	access = 2
	columns = {'dsx0ChanMappedIfIndex': dsx0ChanMappedIfIndex}


# notifications (traps) 
# groups 
class ds0ConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 81, 2, 1, 1])
	group = [dsx0Ds0ChannelNumber, dsx0RobbedBitSignalling, dsx0CircuitIdentifier, dsx0IdleCode, dsx0SeizedCode, dsx0ReceivedCode, dsx0TransmitCodesEnable, dsx0Ds0BundleMappedIfIndex, dsx0ChanMappedIfIndex]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
