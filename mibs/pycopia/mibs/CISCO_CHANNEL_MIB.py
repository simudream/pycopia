# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, Counter64, Integer32, IpAddress, TimeTicks
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import DisplayString, TruthValue, TimeStamp, RowStatus

class CISCO_CHANNEL_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-CHANNEL-MIB'
	conformance = 2
	name = 'CISCO-CHANNEL-MIB'
	language = 2
	description = 'This is the MIB module for objects used to manage\nthe Cisco Mainframe Channel Connection (CMCC) cards.'

# nodes
class channel(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20])
	name = 'channel'

class cipCard(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1])
	name = 'cipCard'

class cipCardClaw(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4])
	name = 'cipCardClaw'

class cipCardTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 5])
	name = 'cipCardTraps'

class ciscoChannelMibConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2])
	name = 'ciscoChannelMibConformance'

class ciscoChannelMibCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2, 1])
	name = 'ciscoChannelMibCompliances'

class ciscoChannelMibGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2, 2])
	name = 'ciscoChannelMibGroups'


# macros
# types 
# scalars 
# columns
class cipCardEntryIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardEntryName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cipCardEntryTotalMemory(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'kilo bytes'


class cipCardEntryFreeMemory(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'kilo bytes'


class cipCardEntryCpuUtilization(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardEntryTimeSinceLastReset(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class cipCardEntryMajorSwRevisionNr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardEntryMinorSwRevisionNr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardEntryMajorHwRevisionNr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardEntryMinorHwRevisionNr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardEntryCpuLoad1m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardEntryCpuLoad5m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardEntryCpuLoad60m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardEntryDmaLoad1m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardEntryDmaLoad5m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardEntryDmaLoad60m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardDtrBrdIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardDtrBrdType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'escon'), Enum(2, 'busAndTag')]


class cipCardDtrBrdStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardDtrBrdSignal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardDtrBrdOnline(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class implicitIncidents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class codeViolationErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class linkFailureSignalOrSyncLoss(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class linkFailureNOSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class linkFailureSequenceTimeouts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class linkFailureInvalidSequences(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class linkIncidentTrapCause(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'liOther'), Enum(2, 'liStatus'), Enum(3, 'liImplicitIncidents'), Enum(4, 'liBERthreshold'), Enum(5, 'liSignalOrSyncLoss'), Enum(6, 'liNotOperationalSequence'), Enum(7, 'liSequenceTimeouts'), Enum(8, 'liInvalidSequences')]


class cipCardDtrBrdLastStat(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class cipCardDtrBrdNextStat(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class cipCardDtrBrdChannelLoad1m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardDtrBrdChannelLoad5m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardDtrBrdChannelLoad60m(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'percent'


class cipCardSubChannelIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardSubChannelConnections(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelCancels(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelSelectiveResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelSystemResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelDeviceErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelWriteBlocksDropped(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelLastSenseData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class cipCardSubChannelLastSenseDataTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class cipCardSubChannelCuBusies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelCmdRetries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardSubChannelResetEvent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardSubChannelShortBusy(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardSubChannelCMDRetry(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardSubChannelBufferWait(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardSubChannelStatPending(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardSubChannelSuspend(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardSubChannelFBLWait(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardClawIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardClawConnected(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardClawConfigPath(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class cipCardClawConfigDevice(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class cipCardClawConfigIpAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cipCardClawConfigHostName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cipCardClawConfigRouterName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cipCardClawConfigHostAppl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cipCardClawConfigRouterAppl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cipCardClawConfigBroadcastEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cipCardClawConfigRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class cipCardClawDataXferStatsBlocksRead(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardClawDataXferStatsBlocksWritten(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardClawDataXferStatsBytesRead(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardClawDataXferStatsHCBytesRead(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class cipCardClawDataXferStatsBytesWritten(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardClawDataXferStatsHCBytesWritten(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class cipCardClawDataXferStatsReadBlocksDropped(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardClawDataXferStatsWriteBlocksDropped(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardClawDataXferStatsBufferGetRetryCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cipCardApplicationNameIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cipCardApplicationRevision(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cipCardApplicationCompileInfo(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# rows 
class cipCardEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 1, 1])
	access = 2
	columns = {'cipCardEntryIndex': cipCardEntryIndex, 'cipCardEntryName': cipCardEntryName, 'cipCardEntryTotalMemory': cipCardEntryTotalMemory, 'cipCardEntryFreeMemory': cipCardEntryFreeMemory, 'cipCardEntryCpuUtilization': cipCardEntryCpuUtilization, 'cipCardEntryTimeSinceLastReset': cipCardEntryTimeSinceLastReset, 'cipCardEntryMajorSwRevisionNr': cipCardEntryMajorSwRevisionNr, 'cipCardEntryMinorSwRevisionNr': cipCardEntryMinorSwRevisionNr, 'cipCardEntryMajorHwRevisionNr': cipCardEntryMajorHwRevisionNr, 'cipCardEntryMinorHwRevisionNr': cipCardEntryMinorHwRevisionNr, 'cipCardEntryCpuLoad1m': cipCardEntryCpuLoad1m, 'cipCardEntryCpuLoad5m': cipCardEntryCpuLoad5m, 'cipCardEntryCpuLoad60m': cipCardEntryCpuLoad60m, 'cipCardEntryDmaLoad1m': cipCardEntryDmaLoad1m, 'cipCardEntryDmaLoad5m': cipCardEntryDmaLoad5m, 'cipCardEntryDmaLoad60m': cipCardEntryDmaLoad60m}


class cipCardDaughterBoardEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex, cipCardDtrBrdIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 2, 1])
	access = 2
	columns = {'cipCardDtrBrdIndex': cipCardDtrBrdIndex, 'cipCardDtrBrdType': cipCardDtrBrdType, 'cipCardDtrBrdStatus': cipCardDtrBrdStatus, 'cipCardDtrBrdSignal': cipCardDtrBrdSignal, 'cipCardDtrBrdOnline': cipCardDtrBrdOnline, 'implicitIncidents': implicitIncidents, 'codeViolationErrors': codeViolationErrors, 'linkFailureSignalOrSyncLoss': linkFailureSignalOrSyncLoss, 'linkFailureNOSs': linkFailureNOSs, 'linkFailureSequenceTimeouts': linkFailureSequenceTimeouts, 'linkFailureInvalidSequences': linkFailureInvalidSequences, 'linkIncidentTrapCause': linkIncidentTrapCause, 'cipCardDtrBrdLastStat': cipCardDtrBrdLastStat, 'cipCardDtrBrdNextStat': cipCardDtrBrdNextStat, 'cipCardDtrBrdChannelLoad1m': cipCardDtrBrdChannelLoad1m, 'cipCardDtrBrdChannelLoad5m': cipCardDtrBrdChannelLoad5m, 'cipCardDtrBrdChannelLoad60m': cipCardDtrBrdChannelLoad60m}


class cipCardSubChannelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex, cipCardDtrBrdIndex, cipCardSubChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 3, 1])
	access = 2
	columns = {'cipCardSubChannelIndex': cipCardSubChannelIndex, 'cipCardSubChannelConnections': cipCardSubChannelConnections, 'cipCardSubChannelCancels': cipCardSubChannelCancels, 'cipCardSubChannelSelectiveResets': cipCardSubChannelSelectiveResets, 'cipCardSubChannelSystemResets': cipCardSubChannelSystemResets, 'cipCardSubChannelDeviceErrors': cipCardSubChannelDeviceErrors, 'cipCardSubChannelWriteBlocksDropped': cipCardSubChannelWriteBlocksDropped, 'cipCardSubChannelLastSenseData': cipCardSubChannelLastSenseData, 'cipCardSubChannelLastSenseDataTime': cipCardSubChannelLastSenseDataTime, 'cipCardSubChannelCuBusies': cipCardSubChannelCuBusies, 'cipCardSubChannelCmdRetries': cipCardSubChannelCmdRetries, 'cipCardSubChannelResetEvent': cipCardSubChannelResetEvent, 'cipCardSubChannelShortBusy': cipCardSubChannelShortBusy, 'cipCardSubChannelCMDRetry': cipCardSubChannelCMDRetry, 'cipCardSubChannelBufferWait': cipCardSubChannelBufferWait, 'cipCardSubChannelStatPending': cipCardSubChannelStatPending, 'cipCardSubChannelSuspend': cipCardSubChannelSuspend, 'cipCardSubChannelFBLWait': cipCardSubChannelFBLWait}


class cipCardClawEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex, cipCardDtrBrdIndex, cipCardSubChannelIndex, cipCardClawIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 1, 1])
	access = 2
	columns = {'cipCardClawIndex': cipCardClawIndex, 'cipCardClawConnected': cipCardClawConnected}


class cipCardClawConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex, cipCardDtrBrdIndex, cipCardSubChannelIndex, cipCardClawIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 2, 1])
	access = 2
	rowstatus = cipCardClawConfigRowStatus
	columns = {'cipCardClawConfigPath': cipCardClawConfigPath, 'cipCardClawConfigDevice': cipCardClawConfigDevice, 'cipCardClawConfigIpAddr': cipCardClawConfigIpAddr, 'cipCardClawConfigHostName': cipCardClawConfigHostName, 'cipCardClawConfigRouterName': cipCardClawConfigRouterName, 'cipCardClawConfigHostAppl': cipCardClawConfigHostAppl, 'cipCardClawConfigRouterAppl': cipCardClawConfigRouterAppl, 'cipCardClawConfigBroadcastEnable': cipCardClawConfigBroadcastEnable, 'cipCardClawConfigRowStatus': cipCardClawConfigRowStatus}


class cipCardClawDataXferStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex, cipCardDtrBrdIndex, cipCardSubChannelIndex, cipCardClawIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 4, 3, 1])
	access = 2
	columns = {'cipCardClawDataXferStatsBlocksRead': cipCardClawDataXferStatsBlocksRead, 'cipCardClawDataXferStatsBlocksWritten': cipCardClawDataXferStatsBlocksWritten, 'cipCardClawDataXferStatsBytesRead': cipCardClawDataXferStatsBytesRead, 'cipCardClawDataXferStatsHCBytesRead': cipCardClawDataXferStatsHCBytesRead, 'cipCardClawDataXferStatsBytesWritten': cipCardClawDataXferStatsBytesWritten, 'cipCardClawDataXferStatsHCBytesWritten': cipCardClawDataXferStatsHCBytesWritten, 'cipCardClawDataXferStatsReadBlocksDropped': cipCardClawDataXferStatsReadBlocksDropped, 'cipCardClawDataXferStatsWriteBlocksDropped': cipCardClawDataXferStatsWriteBlocksDropped, 'cipCardClawDataXferStatsBufferGetRetryCount': cipCardClawDataXferStatsBufferGetRetryCount}


class cipCardApplicationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cipCardEntryIndex, cipCardApplicationNameIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 6, 1])
	access = 2
	columns = {'cipCardApplicationNameIndex': cipCardApplicationNameIndex, 'cipCardApplicationRevision': cipCardApplicationRevision, 'cipCardApplicationCompileInfo': cipCardApplicationCompileInfo}


# notifications (traps) 
class cipCardLinkFailure(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 5, 1])

class cipCardDtrBrdLinkFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 1, 5, 2])

# groups 
class ciscoChannelGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2, 2, 1])
	group = [cipCardEntryName, cipCardEntryTotalMemory, cipCardEntryFreeMemory, cipCardEntryCpuUtilization, cipCardEntryTimeSinceLastReset, cipCardEntryMajorSwRevisionNr, cipCardEntryMinorSwRevisionNr, cipCardEntryMajorHwRevisionNr, cipCardEntryMinorHwRevisionNr, cipCardApplicationRevision, cipCardApplicationCompileInfo, cipCardDtrBrdType, cipCardDtrBrdStatus, cipCardDtrBrdSignal, cipCardDtrBrdOnline, implicitIncidents, codeViolationErrors, linkFailureSignalOrSyncLoss, linkFailureNOSs, linkFailureSequenceTimeouts, linkFailureInvalidSequences, linkIncidentTrapCause, cipCardSubChannelIndex, cipCardSubChannelConnections, cipCardSubChannelCancels, cipCardSubChannelSelectiveResets, cipCardSubChannelSystemResets, cipCardSubChannelDeviceErrors, cipCardSubChannelWriteBlocksDropped, cipCardSubChannelLastSenseData, cipCardSubChannelLastSenseDataTime, cipCardSubChannelCuBusies, cipCardClawIndex, cipCardClawConnected, cipCardClawConfigPath, cipCardClawConfigDevice, cipCardClawConfigIpAddr, cipCardClawConfigHostName, cipCardClawConfigRouterName, cipCardClawConfigHostAppl, cipCardClawConfigRouterAppl, cipCardClawDataXferStatsBlocksRead, cipCardClawDataXferStatsBlocksWritten, cipCardClawDataXferStatsBytesRead, cipCardClawDataXferStatsHCBytesRead, cipCardClawDataXferStatsBytesWritten, cipCardClawDataXferStatsHCBytesWritten, cipCardClawDataXferStatsReadBlocksDropped, cipCardClawDataXferStatsWriteBlocksDropped, cipCardClawDataXferStatsBufferGetRetryCount]

class ciscoChannelGroupRev1(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2, 2, 2])
	group = [cipCardEntryName, cipCardEntryTotalMemory, cipCardEntryFreeMemory, cipCardEntryCpuUtilization, cipCardEntryTimeSinceLastReset, cipCardEntryMajorSwRevisionNr, cipCardEntryMinorSwRevisionNr, cipCardEntryMajorHwRevisionNr, cipCardEntryMinorHwRevisionNr, cipCardApplicationRevision, cipCardApplicationCompileInfo, cipCardDtrBrdType, cipCardDtrBrdStatus, cipCardDtrBrdSignal, cipCardDtrBrdOnline, implicitIncidents, codeViolationErrors, linkFailureSignalOrSyncLoss, linkFailureNOSs, linkFailureSequenceTimeouts, linkFailureInvalidSequences, linkIncidentTrapCause, cipCardDtrBrdLastStat, cipCardDtrBrdNextStat, cipCardSubChannelIndex, cipCardSubChannelConnections, cipCardSubChannelCancels, cipCardSubChannelSelectiveResets, cipCardSubChannelSystemResets, cipCardSubChannelDeviceErrors, cipCardSubChannelWriteBlocksDropped, cipCardSubChannelLastSenseData, cipCardSubChannelLastSenseDataTime, cipCardSubChannelCuBusies, cipCardSubChannelCmdRetries, cipCardClawIndex, cipCardClawConnected, cipCardClawConfigPath, cipCardClawConfigDevice, cipCardClawConfigIpAddr, cipCardClawConfigHostName, cipCardClawConfigRouterName, cipCardClawConfigHostAppl, cipCardClawConfigRouterAppl, cipCardClawDataXferStatsBlocksRead, cipCardClawDataXferStatsBlocksWritten, cipCardClawDataXferStatsBytesRead, cipCardClawDataXferStatsHCBytesRead, cipCardClawDataXferStatsBytesWritten, cipCardClawDataXferStatsHCBytesWritten, cipCardClawDataXferStatsReadBlocksDropped, cipCardClawDataXferStatsWriteBlocksDropped, cipCardClawDataXferStatsBufferGetRetryCount]

class ciscoChannelGroupRev2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2, 2, 3])
	group = [cipCardEntryCpuLoad1m, cipCardEntryCpuLoad5m, cipCardEntryCpuLoad60m, cipCardEntryDmaLoad1m, cipCardEntryDmaLoad5m, cipCardEntryDmaLoad60m, cipCardDtrBrdChannelLoad1m, cipCardDtrBrdChannelLoad5m, cipCardDtrBrdChannelLoad60m, cipCardClawConfigBroadcastEnable, cipCardClawConfigRowStatus]

class ciscoChannelGroupRev3(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 20, 2, 2, 4])
	group = [cipCardSubChannelResetEvent, cipCardSubChannelShortBusy, cipCardSubChannelCMDRetry, cipCardSubChannelBufferWait, cipCardSubChannelStatPending, cipCardSubChannelSuspend, cipCardSubChannelFBLWait]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
