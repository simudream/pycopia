# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from FC_MGMT_MIB import FcNameIdOrZero
from IF_MIB import InterfaceIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, Unsigned32, Counter32, mib_2
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetPortNumber
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, RowStatus, TimeStamp

class FCIP_MGMT_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/FCIP-MGMT-MIB'
	conformance = 132
	name = 'FCIP-MGMT-MIB'
	language = 2
	description = 'The module defines management information specific to\nFCIP devices.\n\nCopyright(C) The Internet Society (2006).  This version\nof this MIB module is part of RFC 4404; see the RFC\nitself for full legal notices.'

# nodes
class fcipMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224])
	name = 'fcipMIB'

class fcipObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1])
	name = 'fcipObjects'

class fcipConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1])
	name = 'fcipConfig'

class fcipConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2])
	name = 'fcipConformance'

class fcipCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 1])
	name = 'fcipCompliances'

class fcipGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2])
	name = 'fcipGroups'


# macros
# types 

class FcipDomainIdInOctetForm(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 1))


class FcipEntityMode(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'ePortMode'), Enum(2, 'bPortMode')]


class FcipEntityId(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8))

# scalars 
class fcipDynIpConfType(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'slpv2'), Enum(2, 'none')]


class fcipDeviceWWN(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 2])
	syntaxobject = FcNameIdOrZero


class fcipEntitySACKOption(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


# columns
class fcipEntityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 1])
	syntaxobject = FcipEntityId


class fcipEntityName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 2])
	syntaxobject = SnmpAdminString


class fcipEntityAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 3])
	syntaxobject = InetAddressType


class fcipEntityAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 4])
	syntaxobject = InetAddress


class fcipEntityTcpConnPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 5])
	syntaxobject = InetPortNumber


class fcipEntitySeqNumWrap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcipEntityPHBSupport(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcipEntityStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class fcipLinkIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipLinkIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 2])
	syntaxobject = InterfaceIndex


class fcipLinkCost(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipLinkLocalFcipEntityMode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 4])
	syntaxobject = FcipEntityMode


class fcipLinkLocalFcipEntityAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 5])
	syntaxobject = InetAddressType


class fcipLinkLocalFcipEntityAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 6])
	syntaxobject = InetAddress


class fcipLinkRemFcipEntityWWN(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 7])
	syntaxobject = FcNameIdOrZero


class fcipLinkRemFcipEntityId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 8])
	syntaxobject = FcipEntityId


class fcipLinkRemFcipEntityAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 9])
	syntaxobject = InetAddressType


class fcipLinkRemFcipEntityAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 10])
	syntaxobject = InetAddress


class fcipLinkStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class fcipLinkCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class fcipTcpConnLocalPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 1])
	syntaxobject = InetPortNumber


class fcipTcpConnRemPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 2])
	syntaxobject = InetPortNumber


class fcipTcpConnRWSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipTcpConnMSS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipDynamicRouteDID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 7, 1, 1])
	syntaxobject = FcipDomainIdInOctetForm


class fcipDynamicRouteLinkIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipStaticRouteDID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1, 1])
	syntaxobject = FcipDomainIdInOctetForm


class fcipStaticRouteLinkIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipStaticRouteStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class fcipDiscoveryDomainIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class fcipDiscoveryDomainName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 9, 1, 2])
	syntaxobject = SnmpAdminString


class fcipLinkFcipLossofFcSynchs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipEncapErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipNotReceivedSfResps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipSfRespMismatches(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipSfInvalidNonces(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipReceivedSfDuplicates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipSfInvalidWWNs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipBB2LkaTimeOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkFcipSntpExpiredTimeStamps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkTcpTooManyErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkTcpExcessiveDroppedDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcipLinkTcpSaParamMismatches(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class fcipEntityInstanceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1])
	access = 2
	rowstatus = fcipEntityStatus
	columns = {'fcipEntityId': fcipEntityId, 'fcipEntityName': fcipEntityName, 'fcipEntityAddressType': fcipEntityAddressType, 'fcipEntityAddress': fcipEntityAddress, 'fcipEntityTcpConnPort': fcipEntityTcpConnPort, 'fcipEntitySeqNumWrap': fcipEntitySeqNumWrap, 'fcipEntityPHBSupport': fcipEntityPHBSupport, 'fcipEntityStatus': fcipEntityStatus}


class fcipLinkEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId, fcipLinkIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1])
	access = 2
	rowstatus = fcipLinkStatus
	columns = {'fcipLinkIndex': fcipLinkIndex, 'fcipLinkIfIndex': fcipLinkIfIndex, 'fcipLinkCost': fcipLinkCost, 'fcipLinkLocalFcipEntityMode': fcipLinkLocalFcipEntityMode, 'fcipLinkLocalFcipEntityAddressType': fcipLinkLocalFcipEntityAddressType, 'fcipLinkLocalFcipEntityAddress': fcipLinkLocalFcipEntityAddress, 'fcipLinkRemFcipEntityWWN': fcipLinkRemFcipEntityWWN, 'fcipLinkRemFcipEntityId': fcipLinkRemFcipEntityId, 'fcipLinkRemFcipEntityAddressType': fcipLinkRemFcipEntityAddressType, 'fcipLinkRemFcipEntityAddress': fcipLinkRemFcipEntityAddress, 'fcipLinkStatus': fcipLinkStatus, 'fcipLinkCreateTime': fcipLinkCreateTime}


class fcipTcpConnEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId, fcipLinkIndex, fcipTcpConnLocalPort, fcipTcpConnRemPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1])
	access = 2
	columns = {'fcipTcpConnLocalPort': fcipTcpConnLocalPort, 'fcipTcpConnRemPort': fcipTcpConnRemPort, 'fcipTcpConnRWSize': fcipTcpConnRWSize, 'fcipTcpConnMSS': fcipTcpConnMSS}


class fcipDynamicRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId, fcipDynamicRouteDID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 7, 1])
	access = 2
	columns = {'fcipDynamicRouteDID': fcipDynamicRouteDID, 'fcipDynamicRouteLinkIndex': fcipDynamicRouteLinkIndex}


class fcipStaticRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId, fcipStaticRouteDID], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1])
	access = 2
	rowstatus = fcipStaticRouteStatus
	columns = {'fcipStaticRouteDID': fcipStaticRouteDID, 'fcipStaticRouteLinkIndex': fcipStaticRouteLinkIndex, 'fcipStaticRouteStatus': fcipStaticRouteStatus}


class fcipDiscoveryDomainEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId, fcipDiscoveryDomainIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 9, 1])
	access = 2
	columns = {'fcipDiscoveryDomainIndex': fcipDiscoveryDomainIndex, 'fcipDiscoveryDomainName': fcipDiscoveryDomainName}


class fcipLinkErrorsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcipEntityId, fcipLinkIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1])
	access = 2
	columns = {'fcipLinkFcipLossofFcSynchs': fcipLinkFcipLossofFcSynchs, 'fcipLinkFcipEncapErrors': fcipLinkFcipEncapErrors, 'fcipLinkFcipNotReceivedSfResps': fcipLinkFcipNotReceivedSfResps, 'fcipLinkFcipSfRespMismatches': fcipLinkFcipSfRespMismatches, 'fcipLinkFcipSfInvalidNonces': fcipLinkFcipSfInvalidNonces, 'fcipLinkFcipReceivedSfDuplicates': fcipLinkFcipReceivedSfDuplicates, 'fcipLinkFcipSfInvalidWWNs': fcipLinkFcipSfInvalidWWNs, 'fcipLinkFcipBB2LkaTimeOuts': fcipLinkFcipBB2LkaTimeOuts, 'fcipLinkFcipSntpExpiredTimeStamps': fcipLinkFcipSntpExpiredTimeStamps, 'fcipLinkTcpTooManyErrors': fcipLinkTcpTooManyErrors, 'fcipLinkTcpExcessiveDroppedDatagrams': fcipLinkTcpExcessiveDroppedDatagrams, 'fcipLinkTcpSaParamMismatches': fcipLinkTcpSaParamMismatches}


# notifications (traps) 
# groups 
class fcipEntityScalarGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 1])
	group = [fcipDynIpConfType, fcipDeviceWWN, fcipEntitySACKOption]

class fcipEntityInstanceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 2])
	group = [fcipEntityName, fcipEntityAddressType, fcipEntityAddress, fcipEntityTcpConnPort, fcipEntitySeqNumWrap, fcipEntityPHBSupport, fcipEntityStatus]

class fcipLinkGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 3])
	group = [fcipLinkIfIndex, fcipLinkCost, fcipLinkLocalFcipEntityMode, fcipLinkLocalFcipEntityAddressType, fcipLinkLocalFcipEntityAddress, fcipLinkRemFcipEntityWWN, fcipLinkRemFcipEntityId, fcipLinkRemFcipEntityAddressType, fcipLinkRemFcipEntityAddress, fcipLinkStatus, fcipLinkCreateTime]

class fcipTcpConnGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 4])
	group = [fcipTcpConnRWSize, fcipTcpConnMSS]

class fcipDiscoveryDomainGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 5])
	group = [fcipDiscoveryDomainName]

class fcipLinkErrorsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 6])
	group = [fcipLinkFcipLossofFcSynchs, fcipLinkFcipEncapErrors, fcipLinkFcipNotReceivedSfResps, fcipLinkFcipSfRespMismatches, fcipLinkFcipSfInvalidNonces, fcipLinkFcipReceivedSfDuplicates, fcipLinkFcipSfInvalidWWNs, fcipLinkFcipBB2LkaTimeOuts, fcipLinkFcipSntpExpiredTimeStamps, fcipLinkTcpTooManyErrors, fcipLinkTcpExcessiveDroppedDatagrams, fcipLinkTcpSaParamMismatches]

class fcipDynamicRouteGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 7])
	group = [fcipDynamicRouteLinkIndex]

class fcipStaticRouteGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 224, 2, 2, 8])
	group = [fcipStaticRouteLinkIndex, fcipStaticRouteStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
