# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32, Counter32, Gauge32, Integer32, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, TimeStamp
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class FIBRE_CHANNEL_FE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/FIBRE-CHANNEL-FE-MIB'
	conformance = 5
	name = 'FIBRE-CHANNEL-FE-MIB'
	language = 2
	description = 'The MIB module for Fibre Channel Fabric Element.'

# nodes
class fcFeMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75])
	name = 'fcFeMIB'

class fcFeMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1])
	name = 'fcFeMIBObjects'

class fcFeConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1])
	name = 'fcFeConfig'

class fcFeStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2])
	name = 'fcFeStatus'

class fcFeError(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3])
	name = 'fcFeError'

class fcFeAccounting(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4])
	name = 'fcFeAccounting'

class fcFeCapabilities(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5])
	name = 'fcFeCapabilities'

class fcFeMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2])
	name = 'fcFeMIBConformance'

class fcFeMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 1])
	name = 'fcFeMIBCompliances'

class fcFeMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2])
	name = 'fcFeMIBGroups'


# macros
# types 

class MilliSeconds(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class MicroSeconds(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class FcNameId(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8))


class FcAddressId(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(3, 3))


class FcRxDataFieldSize(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(128, 2112))


class FcBbCredit(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 32767))


class FcphVersion(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 255))


class FcStackedConnMode(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'none'), Enum(2, 'transparent'), Enum(3, 'lockedDown')]


class FcCosCap(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'classF'), Enum(1, 'class1'), Enum(2, 'class2'), Enum(3, 'class3'), Enum(4, 'class4'), Enum(5, 'class5'), Enum(6, 'class6')]


class FcFeModuleCapacity(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class FcFeFxPortCapacity(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class FcFeModuleIndex(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class FcFeFxPortIndex(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class FcFeNxPortIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 126))


class FcBbCreditModel(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'regular'), Enum(2, 'alternate')]

# scalars 
class fcFeFabricName(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 1])
	syntaxobject = FcNameId


class fcFeElementName(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 2])
	syntaxobject = FcNameId


class fcFeModuleCapacity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 3])
	syntaxobject = FcFeModuleCapacity


# columns
class fcFeModuleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 1])
	syntaxobject = FcFeModuleIndex


class fcFeModuleDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 2])
	syntaxobject = SnmpAdminString


class fcFeModuleObjectID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class fcFeModuleOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'online'), Enum(2, 'offline'), Enum(3, 'testing'), Enum(4, 'faulty')]


class fcFeModuleLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class fcFeModuleFxPortCapacity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 6])
	syntaxobject = FcFeFxPortCapacity


class fcFeModuleName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1, 7])
	syntaxobject = FcNameId


class fcFxPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 1])
	syntaxobject = FcFeFxPortIndex


class fcFxPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 2])
	syntaxobject = FcNameId


class fcFxPortFcphVersionHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 3])
	syntaxobject = FcphVersion


class fcFxPortFcphVersionLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 4])
	syntaxobject = FcphVersion


class fcFxPortBbCredit(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 5])
	syntaxobject = FcBbCredit
	access = 4
	units = 'buffers'


class fcFxPortRxBufSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 6])
	syntaxobject = FcRxDataFieldSize
	access = 4
	units = 'bytes'


class fcFxPortRatov(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 7])
	syntaxobject = MilliSeconds
	access = 4
	units = 'milliseconds'


class fcFxPortEdtov(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 8])
	syntaxobject = MilliSeconds
	access = 4
	units = 'milliseconds'


class fcFxPortCosSupported(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 9])
	syntaxobject = FcCosCap


class fcFxPortIntermixSupported(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortStackedConnMode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 11])
	syntaxobject = FcStackedConnMode


class fcFxPortClass2SeqDeliv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortClass3SeqDeliv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1, 14])
	syntaxobject = MicroSeconds
	access = 4
	units = 'microseconds'


class fcFxPortID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 1, 1, 1])
	syntaxobject = FcAddressId


class fcFxPortBbCreditAvailable(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'buffers'


class fcFxPortOperMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'fPort'), Enum(3, 'flPort')]


class fcFxPortAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'fPort'), Enum(3, 'flPort')]


class fcFxPortPhysAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'online'), Enum(2, 'offline'), Enum(3, 'testing')]


class fcFxPortPhysOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'online'), Enum(2, 'offline'), Enum(3, 'testing'), Enum(4, 'linkFailure')]


class fcFxPortPhysLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class fcFxPortPhysRttov(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 2, 1, 4])
	syntaxobject = MilliSeconds
	access = 5
	units = 'milliseconds'


class fcFxPortNxLoginIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 1])
	syntaxobject = FcFeNxPortIndex


class fcFxPortFcphVersionAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 2])
	syntaxobject = FcphVersion


class fcFxPortNxPortBbCredit(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 3])
	syntaxobject = FcBbCredit
	access = 4
	units = 'buffers'


class fcFxPortNxPortRxDataFieldSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 4])
	syntaxobject = FcRxDataFieldSize
	access = 4
	units = 'bytes'


class fcFxPortCosSuppAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 5])
	syntaxobject = FcCosCap


class fcFxPortIntermixSuppAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortStackedConnModeAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 7])
	syntaxobject = FcStackedConnMode


class fcFxPortClass2SeqDelivAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortClass3SeqDelivAgreed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortNxPortName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 10])
	syntaxobject = FcNameId


class fcFxPortConnectedNxPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 11])
	syntaxobject = FcAddressId


class fcFxPortBbCreditModel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1, 12])
	syntaxobject = FcBbCreditModel


class fcFxPortLinkFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortSyncLosses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortSigLosses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortPrimSeqProtoErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortInvalidTxWords(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortInvalidCrcs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortDelimiterErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortAddressIdErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortLinkResetIns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortLinkResetOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortOlsIns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortOlsOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1InFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1OutFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1InOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1OutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1FbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1FrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1InConnections(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1OutConnections(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC1ConnTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1, 10])
	syntaxobject = MilliSeconds
	access = 4
	units = 'milliseconds'


class fcFxPortC2InFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC2OutFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC2InOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC2OutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC2Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC2FbsyFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC2FrjtFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC3InFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC3OutFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC3InOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC3OutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortC3Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fcFxPortCapFcphVersionHigh(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 1])
	syntaxobject = FcphVersion


class fcFxPortCapFcphVersionLow(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 2])
	syntaxobject = FcphVersion


class fcFxPortCapBbCreditMax(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 3])
	syntaxobject = FcBbCredit
	access = 4
	units = 'buffers'


class fcFxPortCapBbCreditMin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 4])
	syntaxobject = FcBbCredit
	access = 4
	units = 'buffers'


class fcFxPortCapRxDataFieldSizeMax(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 5])
	syntaxobject = FcRxDataFieldSize
	access = 4
	units = 'bytes'


class fcFxPortCapRxDataFieldSizeMin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 6])
	syntaxobject = FcRxDataFieldSize
	access = 4
	units = 'bytes'


class fcFxPortCapCos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 7])
	syntaxobject = FcCosCap


class fcFxPortCapIntermix(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortCapStackedConnMode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 9])
	syntaxobject = FcStackedConnMode


class fcFxPortCapClass2SeqDeliv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortCapClass3SeqDeliv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class fcFxPortCapHoldTimeMax(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 12])
	syntaxobject = MicroSeconds
	access = 4
	units = 'microseconds'


class fcFxPortCapHoldTimeMin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1, 13])
	syntaxobject = MicroSeconds
	access = 4
	units = 'microseconds'


# rows 
class fcFeModuleEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 4, 1])
	access = 2
	columns = {'fcFeModuleIndex': fcFeModuleIndex, 'fcFeModuleDescr': fcFeModuleDescr, 'fcFeModuleObjectID': fcFeModuleObjectID, 'fcFeModuleOperStatus': fcFeModuleOperStatus, 'fcFeModuleLastChange': fcFeModuleLastChange, 'fcFeModuleFxPortCapacity': fcFeModuleFxPortCapacity, 'fcFeModuleName': fcFeModuleName}


class fcFxPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 1, 5, 1])
	access = 2
	columns = {'fcFxPortIndex': fcFxPortIndex, 'fcFxPortName': fcFxPortName, 'fcFxPortFcphVersionHigh': fcFxPortFcphVersionHigh, 'fcFxPortFcphVersionLow': fcFxPortFcphVersionLow, 'fcFxPortBbCredit': fcFxPortBbCredit, 'fcFxPortRxBufSize': fcFxPortRxBufSize, 'fcFxPortRatov': fcFxPortRatov, 'fcFxPortEdtov': fcFxPortEdtov, 'fcFxPortCosSupported': fcFxPortCosSupported, 'fcFxPortIntermixSupported': fcFxPortIntermixSupported, 'fcFxPortStackedConnMode': fcFxPortStackedConnMode, 'fcFxPortClass2SeqDeliv': fcFxPortClass2SeqDeliv, 'fcFxPortClass3SeqDeliv': fcFxPortClass3SeqDeliv, 'fcFxPortHoldTime': fcFxPortHoldTime}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 1, 1])
	access = 2
	columns = {'fcFxPortID': fcFxPortID, 'fcFxPortBbCreditAvailable': fcFxPortBbCreditAvailable, 'fcFxPortOperMode': fcFxPortOperMode, 'fcFxPortAdminMode': fcFxPortAdminMode}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortPhysEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 2, 1])
	access = 2
	columns = {'fcFxPortPhysAdminStatus': fcFxPortPhysAdminStatus, 'fcFxPortPhysOperStatus': fcFxPortPhysOperStatus, 'fcFxPortPhysLastChange': fcFxPortPhysLastChange, 'fcFxPortPhysRttov': fcFxPortPhysRttov}


class fcFxLoginEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex, fcFxPortNxLoginIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 2, 3, 1])
	access = 2
	columns = {'fcFxPortNxLoginIndex': fcFxPortNxLoginIndex, 'fcFxPortFcphVersionAgreed': fcFxPortFcphVersionAgreed, 'fcFxPortNxPortBbCredit': fcFxPortNxPortBbCredit, 'fcFxPortNxPortRxDataFieldSize': fcFxPortNxPortRxDataFieldSize, 'fcFxPortCosSuppAgreed': fcFxPortCosSuppAgreed, 'fcFxPortIntermixSuppAgreed': fcFxPortIntermixSuppAgreed, 'fcFxPortStackedConnModeAgreed': fcFxPortStackedConnModeAgreed, 'fcFxPortClass2SeqDelivAgreed': fcFxPortClass2SeqDelivAgreed, 'fcFxPortClass3SeqDelivAgreed': fcFxPortClass3SeqDelivAgreed, 'fcFxPortNxPortName': fcFxPortNxPortName, 'fcFxPortConnectedNxPort': fcFxPortConnectedNxPort, 'fcFxPortBbCreditModel': fcFxPortBbCreditModel}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortErrorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 3, 1, 1])
	access = 2
	columns = {'fcFxPortLinkFailures': fcFxPortLinkFailures, 'fcFxPortSyncLosses': fcFxPortSyncLosses, 'fcFxPortSigLosses': fcFxPortSigLosses, 'fcFxPortPrimSeqProtoErrors': fcFxPortPrimSeqProtoErrors, 'fcFxPortInvalidTxWords': fcFxPortInvalidTxWords, 'fcFxPortInvalidCrcs': fcFxPortInvalidCrcs, 'fcFxPortDelimiterErrors': fcFxPortDelimiterErrors, 'fcFxPortAddressIdErrors': fcFxPortAddressIdErrors, 'fcFxPortLinkResetIns': fcFxPortLinkResetIns, 'fcFxPortLinkResetOuts': fcFxPortLinkResetOuts, 'fcFxPortOlsIns': fcFxPortOlsIns, 'fcFxPortOlsOuts': fcFxPortOlsOuts}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortC1AccountingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 1, 1])
	access = 2
	columns = {'fcFxPortC1InFrames': fcFxPortC1InFrames, 'fcFxPortC1OutFrames': fcFxPortC1OutFrames, 'fcFxPortC1InOctets': fcFxPortC1InOctets, 'fcFxPortC1OutOctets': fcFxPortC1OutOctets, 'fcFxPortC1Discards': fcFxPortC1Discards, 'fcFxPortC1FbsyFrames': fcFxPortC1FbsyFrames, 'fcFxPortC1FrjtFrames': fcFxPortC1FrjtFrames, 'fcFxPortC1InConnections': fcFxPortC1InConnections, 'fcFxPortC1OutConnections': fcFxPortC1OutConnections, 'fcFxPortC1ConnTime': fcFxPortC1ConnTime}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortC2AccountingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 2, 1])
	access = 2
	columns = {'fcFxPortC2InFrames': fcFxPortC2InFrames, 'fcFxPortC2OutFrames': fcFxPortC2OutFrames, 'fcFxPortC2InOctets': fcFxPortC2InOctets, 'fcFxPortC2OutOctets': fcFxPortC2OutOctets, 'fcFxPortC2Discards': fcFxPortC2Discards, 'fcFxPortC2FbsyFrames': fcFxPortC2FbsyFrames, 'fcFxPortC2FrjtFrames': fcFxPortC2FrjtFrames}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortC3AccountingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 4, 3, 1])
	access = 2
	columns = {'fcFxPortC3InFrames': fcFxPortC3InFrames, 'fcFxPortC3OutFrames': fcFxPortC3OutFrames, 'fcFxPortC3InOctets': fcFxPortC3InOctets, 'fcFxPortC3OutOctets': fcFxPortC3OutOctets, 'fcFxPortC3Discards': fcFxPortC3Discards}


from FIBRE_CHANNEL_FE_MIB import fcFeModuleIndex
from FIBRE_CHANNEL_FE_MIB import fcFxPortIndex
class fcFxPortCapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcFeModuleIndex, fcFxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 1, 5, 1, 1])
	access = 2
	columns = {'fcFxPortCapFcphVersionHigh': fcFxPortCapFcphVersionHigh, 'fcFxPortCapFcphVersionLow': fcFxPortCapFcphVersionLow, 'fcFxPortCapBbCreditMax': fcFxPortCapBbCreditMax, 'fcFxPortCapBbCreditMin': fcFxPortCapBbCreditMin, 'fcFxPortCapRxDataFieldSizeMax': fcFxPortCapRxDataFieldSizeMax, 'fcFxPortCapRxDataFieldSizeMin': fcFxPortCapRxDataFieldSizeMin, 'fcFxPortCapCos': fcFxPortCapCos, 'fcFxPortCapIntermix': fcFxPortCapIntermix, 'fcFxPortCapStackedConnMode': fcFxPortCapStackedConnMode, 'fcFxPortCapClass2SeqDeliv': fcFxPortCapClass2SeqDeliv, 'fcFxPortCapClass3SeqDeliv': fcFxPortCapClass3SeqDeliv, 'fcFxPortCapHoldTimeMax': fcFxPortCapHoldTimeMax, 'fcFxPortCapHoldTimeMin': fcFxPortCapHoldTimeMin}


# notifications (traps) 
# groups 
class fcFeConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 1])
	group = [fcFeFabricName, fcFeElementName, fcFeModuleCapacity, fcFeModuleDescr, fcFeModuleObjectID, fcFeModuleOperStatus, fcFeModuleLastChange, fcFeModuleFxPortCapacity, fcFeModuleName, fcFxPortName, fcFxPortFcphVersionHigh, fcFxPortFcphVersionLow, fcFxPortBbCredit, fcFxPortRxBufSize, fcFxPortRatov, fcFxPortEdtov, fcFxPortCosSupported, fcFxPortIntermixSupported, fcFxPortStackedConnMode, fcFxPortClass2SeqDeliv, fcFxPortClass3SeqDeliv, fcFxPortHoldTime]

class fcFeStatusGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 2])
	group = [fcFxPortID, fcFxPortBbCreditAvailable, fcFxPortOperMode, fcFxPortAdminMode, fcFxPortPhysAdminStatus, fcFxPortPhysOperStatus, fcFxPortPhysLastChange, fcFxPortPhysRttov, fcFxPortFcphVersionAgreed, fcFxPortNxPortBbCredit, fcFxPortNxPortRxDataFieldSize, fcFxPortCosSuppAgreed, fcFxPortIntermixSuppAgreed, fcFxPortStackedConnModeAgreed, fcFxPortClass2SeqDelivAgreed, fcFxPortClass3SeqDelivAgreed, fcFxPortNxPortName, fcFxPortConnectedNxPort, fcFxPortBbCreditModel]

class fcFeErrorGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 3])
	group = [fcFxPortLinkFailures, fcFxPortSyncLosses, fcFxPortSigLosses, fcFxPortPrimSeqProtoErrors, fcFxPortInvalidTxWords, fcFxPortInvalidCrcs, fcFxPortDelimiterErrors, fcFxPortAddressIdErrors, fcFxPortLinkResetIns, fcFxPortLinkResetOuts, fcFxPortOlsIns, fcFxPortOlsOuts]

class fcFeClass1AccountingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 4])
	group = [fcFxPortC1InFrames, fcFxPortC1OutFrames, fcFxPortC1InOctets, fcFxPortC1OutOctets, fcFxPortC1Discards, fcFxPortC1FbsyFrames, fcFxPortC1FrjtFrames, fcFxPortC1InConnections, fcFxPortC1OutConnections, fcFxPortC1ConnTime]

class fcFeClass2AccountingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 5])
	group = [fcFxPortC2InFrames, fcFxPortC2OutFrames, fcFxPortC2InOctets, fcFxPortC2OutOctets, fcFxPortC2Discards, fcFxPortC2FbsyFrames, fcFxPortC2FrjtFrames]

class fcFeClass3AccountingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 6])
	group = [fcFxPortC3InFrames, fcFxPortC3OutFrames, fcFxPortC3InOctets, fcFxPortC3OutOctets, fcFxPortC3Discards]

class fcFeCapabilitiesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 75, 2, 2, 7])
	group = [fcFxPortCapFcphVersionHigh, fcFxPortCapFcphVersionLow, fcFxPortCapBbCreditMax, fcFxPortCapBbCreditMin, fcFxPortCapRxDataFieldSizeMax, fcFxPortCapRxDataFieldSizeMin, fcFxPortCapCos, fcFxPortCapIntermix, fcFxPortCapStackedConnMode, fcFxPortCapClass2SeqDeliv, fcFxPortCapClass3SeqDeliv, fcFxPortCapHoldTimeMax, fcFxPortCapHoldTimeMin]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
