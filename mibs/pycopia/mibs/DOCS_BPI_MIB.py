# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Counter32, IpAddress
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE
from SNMPv2_TC import DisplayString, MacAddress, RowStatus, TruthValue, DateAndTime
from IF_MIB import ifIndex
from DOCS_IF_MIB import docsIfMib, docsIfCmServiceId, docsIfCmtsServiceId

class DOCS_BPI_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DOCS-BPI-MIB'
	conformance = 4
	name = 'DOCS-BPI-MIB'
	language = 2
	description = 'This is the MIB Module for the DOCSIS Baseline Privacy Interface\n(BPI) at cable modems (CMs) and cable modem termination systems\n(CMTSs). CableLabs requires the implementation of this MIB in\nDOCSIS 1.0 cable modems that implement the Baseline Privacy\nInterface, as a prerequisite for DOCSIS 1.0 certification.'

# nodes
class docsBpiMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5])
	name = 'docsBpiMIB'

class docsBpiMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1])
	name = 'docsBpiMIBObjects'

class docsBpiCmObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1])
	name = 'docsBpiCmObjects'

class docsBpiCmtsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2])
	name = 'docsBpiCmtsObjects'

class docsBpiMulticastControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4])
	name = 'docsBpiMulticastControl'

class docsBpiNotification(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 2])
	name = 'docsBpiNotification'

class docsBpiConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 3])
	name = 'docsBpiConformance'

class docsBpiCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 1])
	name = 'docsBpiCompliances'

class docsBpiGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2])
	name = 'docsBpiGroups'


# macros
# types 
# scalars 
# columns
class docsBpiCmPrivacyEnable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpiCmPublicKey(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsBpiCmAuthState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'authWait'), Enum(3, 'authorized'), Enum(4, 'reauthWait'), Enum(5, 'authRejectWait')]


class docsBpiCmAuthKeySequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpiCmAuthExpires(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpiCmAuthReset(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpiCmAuthGraceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmTEKGraceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmAuthWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmReauthWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmOpWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmRekeyWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmAuthRejectWaitTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmAuthRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmAuthReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmAuthRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmAuthInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmAuthRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(4, 'unauthorizedSid')]


class docsBpiCmAuthRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmAuthInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(5, 'unsolicited'), Enum(6, 'invalidKeySequence'), Enum(7, 'keyRequestAuthenticationFailure')]


class docsBpiCmAuthInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmTEKPrivacyEnable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpiCmTEKState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'start'), Enum(2, 'opWait'), Enum(3, 'opReauthWait'), Enum(4, 'operational'), Enum(5, 'rekeyWait'), Enum(6, 'rekeyReauthWait')]


class docsBpiCmTEKExpiresOld(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpiCmTEKExpiresNew(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpiCmTEKKeyRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmTEKKeyReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmTEKKeyRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmTEKInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmTEKAuthPends(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmTEKKeyRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(4, 'unauthorizedSid')]


class docsBpiCmTEKKeyRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmTEKInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(6, 'invalidKeySequence')]


class docsBpiCmTEKInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmtsDefaultAuthLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpiCmtsDefaultTEKLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpiCmtsDefaultAuthGraceTime(ColumnObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpiCmtsDefaultTEKGraceTime(ColumnObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpiCmtsAuthRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthCmMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsBpiCmtsAuthCmPublicKey(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class docsBpiCmtsAuthCmKeySequenceNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpiCmtsAuthCmExpires(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpiCmtsAuthCmLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpiCmtsAuthCmGraceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmtsAuthCmReset(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noResetRequested'), Enum(2, 'invalidateAuth'), Enum(3, 'sendAuthInvalid'), Enum(4, 'invalidateTeks')]


class docsBpiCmtsAuthCmRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthCmReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthCmRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthCmInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsAuthRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(4, 'unauthorizedSid')]


class docsBpiCmtsAuthRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmtsAuthInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(3, 'unauthorizedCm'), Enum(5, 'unsolicited'), Enum(6, 'invalidKeySequence'), Enum(7, 'keyRequestAuthenticationFailure')]


class docsBpiCmtsAuthInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmtsTEKLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class docsBpiCmtsTEKGraceTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class docsBpiCmtsTEKExpiresOld(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpiCmtsTEKExpiresNew(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class docsBpiCmtsTEKReset(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class docsBpiCmtsKeyRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsKeyReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsKeyRejects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsTEKInvalids(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class docsBpiCmtsKeyRejectErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(4, 'unauthorizedSid')]


class docsBpiCmtsKeyRejectErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiCmtsTEKInvalidErrorCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'unknown'), Enum(6, 'invalidKeySequence')]


class docsBpiCmtsTEKInvalidErrorString(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class docsBpiIpMulticastAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class docsBpiIpMulticastPrefixLength(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpiIpMulticastServiceId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpiIpMulticastMapControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class docsBpiMulticastServiceId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class docsBpiMulticastCmMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class docsBpiMulticastAuthControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class docsBpiCmBaseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1])
	access = 2
	columns = {'docsBpiCmPrivacyEnable': docsBpiCmPrivacyEnable, 'docsBpiCmPublicKey': docsBpiCmPublicKey, 'docsBpiCmAuthState': docsBpiCmAuthState, 'docsBpiCmAuthKeySequenceNumber': docsBpiCmAuthKeySequenceNumber, 'docsBpiCmAuthExpires': docsBpiCmAuthExpires, 'docsBpiCmAuthReset': docsBpiCmAuthReset, 'docsBpiCmAuthGraceTime': docsBpiCmAuthGraceTime, 'docsBpiCmTEKGraceTime': docsBpiCmTEKGraceTime, 'docsBpiCmAuthWaitTimeout': docsBpiCmAuthWaitTimeout, 'docsBpiCmReauthWaitTimeout': docsBpiCmReauthWaitTimeout, 'docsBpiCmOpWaitTimeout': docsBpiCmOpWaitTimeout, 'docsBpiCmRekeyWaitTimeout': docsBpiCmRekeyWaitTimeout, 'docsBpiCmAuthRejectWaitTimeout': docsBpiCmAuthRejectWaitTimeout, 'docsBpiCmAuthRequests': docsBpiCmAuthRequests, 'docsBpiCmAuthReplies': docsBpiCmAuthReplies, 'docsBpiCmAuthRejects': docsBpiCmAuthRejects, 'docsBpiCmAuthInvalids': docsBpiCmAuthInvalids, 'docsBpiCmAuthRejectErrorCode': docsBpiCmAuthRejectErrorCode, 'docsBpiCmAuthRejectErrorString': docsBpiCmAuthRejectErrorString, 'docsBpiCmAuthInvalidErrorCode': docsBpiCmAuthInvalidErrorCode, 'docsBpiCmAuthInvalidErrorString': docsBpiCmAuthInvalidErrorString}


class docsBpiCmTEKEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIfCmServiceId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1])
	access = 2
	columns = {'docsBpiCmTEKPrivacyEnable': docsBpiCmTEKPrivacyEnable, 'docsBpiCmTEKState': docsBpiCmTEKState, 'docsBpiCmTEKExpiresOld': docsBpiCmTEKExpiresOld, 'docsBpiCmTEKExpiresNew': docsBpiCmTEKExpiresNew, 'docsBpiCmTEKKeyRequests': docsBpiCmTEKKeyRequests, 'docsBpiCmTEKKeyReplies': docsBpiCmTEKKeyReplies, 'docsBpiCmTEKKeyRejects': docsBpiCmTEKKeyRejects, 'docsBpiCmTEKInvalids': docsBpiCmTEKInvalids, 'docsBpiCmTEKAuthPends': docsBpiCmTEKAuthPends, 'docsBpiCmTEKKeyRejectErrorCode': docsBpiCmTEKKeyRejectErrorCode, 'docsBpiCmTEKKeyRejectErrorString': docsBpiCmTEKKeyRejectErrorString, 'docsBpiCmTEKInvalidErrorCode': docsBpiCmTEKInvalidErrorCode, 'docsBpiCmTEKInvalidErrorString': docsBpiCmTEKInvalidErrorString}


class docsBpiCmtsBaseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1])
	access = 2
	columns = {'docsBpiCmtsDefaultAuthLifetime': docsBpiCmtsDefaultAuthLifetime, 'docsBpiCmtsDefaultTEKLifetime': docsBpiCmtsDefaultTEKLifetime, 'docsBpiCmtsDefaultAuthGraceTime': docsBpiCmtsDefaultAuthGraceTime, 'docsBpiCmtsDefaultTEKGraceTime': docsBpiCmtsDefaultTEKGraceTime, 'docsBpiCmtsAuthRequests': docsBpiCmtsAuthRequests, 'docsBpiCmtsAuthReplies': docsBpiCmtsAuthReplies, 'docsBpiCmtsAuthRejects': docsBpiCmtsAuthRejects, 'docsBpiCmtsAuthInvalids': docsBpiCmtsAuthInvalids}


class docsBpiCmtsAuthEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpiCmtsAuthCmMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1])
	access = 2
	columns = {'docsBpiCmtsAuthCmMacAddress': docsBpiCmtsAuthCmMacAddress, 'docsBpiCmtsAuthCmPublicKey': docsBpiCmtsAuthCmPublicKey, 'docsBpiCmtsAuthCmKeySequenceNumber': docsBpiCmtsAuthCmKeySequenceNumber, 'docsBpiCmtsAuthCmExpires': docsBpiCmtsAuthCmExpires, 'docsBpiCmtsAuthCmLifetime': docsBpiCmtsAuthCmLifetime, 'docsBpiCmtsAuthCmGraceTime': docsBpiCmtsAuthCmGraceTime, 'docsBpiCmtsAuthCmReset': docsBpiCmtsAuthCmReset, 'docsBpiCmtsAuthCmRequests': docsBpiCmtsAuthCmRequests, 'docsBpiCmtsAuthCmReplies': docsBpiCmtsAuthCmReplies, 'docsBpiCmtsAuthCmRejects': docsBpiCmtsAuthCmRejects, 'docsBpiCmtsAuthCmInvalids': docsBpiCmtsAuthCmInvalids, 'docsBpiCmtsAuthRejectErrorCode': docsBpiCmtsAuthRejectErrorCode, 'docsBpiCmtsAuthRejectErrorString': docsBpiCmtsAuthRejectErrorString, 'docsBpiCmtsAuthInvalidErrorCode': docsBpiCmtsAuthInvalidErrorCode, 'docsBpiCmtsAuthInvalidErrorString': docsBpiCmtsAuthInvalidErrorString}


class docsBpiCmtsTEKEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsIfCmtsServiceId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1])
	access = 2
	columns = {'docsBpiCmtsTEKLifetime': docsBpiCmtsTEKLifetime, 'docsBpiCmtsTEKGraceTime': docsBpiCmtsTEKGraceTime, 'docsBpiCmtsTEKExpiresOld': docsBpiCmtsTEKExpiresOld, 'docsBpiCmtsTEKExpiresNew': docsBpiCmtsTEKExpiresNew, 'docsBpiCmtsTEKReset': docsBpiCmtsTEKReset, 'docsBpiCmtsKeyRequests': docsBpiCmtsKeyRequests, 'docsBpiCmtsKeyReplies': docsBpiCmtsKeyReplies, 'docsBpiCmtsKeyRejects': docsBpiCmtsKeyRejects, 'docsBpiCmtsTEKInvalids': docsBpiCmtsTEKInvalids, 'docsBpiCmtsKeyRejectErrorCode': docsBpiCmtsKeyRejectErrorCode, 'docsBpiCmtsKeyRejectErrorString': docsBpiCmtsKeyRejectErrorString, 'docsBpiCmtsTEKInvalidErrorCode': docsBpiCmtsTEKInvalidErrorCode, 'docsBpiCmtsTEKInvalidErrorString': docsBpiCmtsTEKInvalidErrorString}


class docsBpiIpMulticastMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpiIpMulticastAddress, docsBpiIpMulticastPrefixLength], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1])
	access = 2
	rowstatus = docsBpiIpMulticastMapControl
	columns = {'docsBpiIpMulticastAddress': docsBpiIpMulticastAddress, 'docsBpiIpMulticastPrefixLength': docsBpiIpMulticastPrefixLength, 'docsBpiIpMulticastServiceId': docsBpiIpMulticastServiceId, 'docsBpiIpMulticastMapControl': docsBpiIpMulticastMapControl}


class docsBpiMulticastAuthEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, docsBpiMulticastServiceId, docsBpiMulticastCmMacAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1])
	access = 2
	rowstatus = docsBpiMulticastAuthControl
	columns = {'docsBpiMulticastServiceId': docsBpiMulticastServiceId, 'docsBpiMulticastCmMacAddress': docsBpiMulticastCmMacAddress, 'docsBpiMulticastAuthControl': docsBpiMulticastAuthControl}


# notifications (traps) 
# groups 
class docsBpiCmGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2, 1])
	group = [docsBpiCmPrivacyEnable, docsBpiCmPublicKey, docsBpiCmAuthState, docsBpiCmAuthKeySequenceNumber, docsBpiCmAuthExpires, docsBpiCmAuthReset, docsBpiCmAuthGraceTime, docsBpiCmTEKGraceTime, docsBpiCmAuthWaitTimeout, docsBpiCmReauthWaitTimeout, docsBpiCmOpWaitTimeout, docsBpiCmRekeyWaitTimeout, docsBpiCmAuthRejectWaitTimeout, docsBpiCmAuthRequests, docsBpiCmAuthReplies, docsBpiCmAuthRejects, docsBpiCmAuthInvalids, docsBpiCmAuthRejectErrorCode, docsBpiCmAuthRejectErrorString, docsBpiCmAuthInvalidErrorCode, docsBpiCmAuthInvalidErrorString, docsBpiCmTEKPrivacyEnable, docsBpiCmTEKState, docsBpiCmTEKExpiresOld, docsBpiCmTEKExpiresNew, docsBpiCmTEKKeyRequests, docsBpiCmTEKKeyReplies, docsBpiCmTEKKeyRejects, docsBpiCmTEKInvalids, docsBpiCmTEKAuthPends, docsBpiCmTEKKeyRejectErrorCode, docsBpiCmTEKKeyRejectErrorString, docsBpiCmTEKInvalidErrorCode, docsBpiCmTEKInvalidErrorString]

class docsBpiCmtsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2, 2])
	group = [docsBpiCmtsDefaultAuthLifetime, docsBpiCmtsDefaultTEKLifetime, docsBpiCmtsAuthRequests, docsBpiCmtsAuthReplies, docsBpiCmtsAuthRejects, docsBpiCmtsAuthInvalids, docsBpiCmtsAuthCmPublicKey, docsBpiCmtsAuthCmKeySequenceNumber, docsBpiCmtsAuthCmExpires, docsBpiCmtsAuthCmLifetime, docsBpiCmtsAuthCmGraceTime, docsBpiCmtsAuthCmReset, docsBpiCmtsAuthCmRequests, docsBpiCmtsAuthCmReplies, docsBpiCmtsAuthCmRejects, docsBpiCmtsAuthCmInvalids, docsBpiCmtsAuthRejectErrorCode, docsBpiCmtsAuthRejectErrorString, docsBpiCmtsAuthInvalidErrorCode, docsBpiCmtsAuthInvalidErrorString, docsBpiCmtsTEKLifetime, docsBpiCmtsTEKGraceTime, docsBpiCmtsTEKExpiresOld, docsBpiCmtsTEKExpiresNew, docsBpiCmtsTEKReset, docsBpiCmtsKeyRequests, docsBpiCmtsKeyReplies, docsBpiCmtsKeyRejects, docsBpiCmtsTEKInvalids, docsBpiCmtsKeyRejectErrorCode, docsBpiCmtsKeyRejectErrorString, docsBpiCmtsTEKInvalidErrorCode, docsBpiCmtsTEKInvalidErrorString, docsBpiIpMulticastServiceId, docsBpiIpMulticastMapControl, docsBpiMulticastAuthControl]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
