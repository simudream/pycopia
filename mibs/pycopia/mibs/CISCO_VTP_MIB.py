# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, IpAddress, Gauge32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, DisplayString, DateAndTime, TruthValue, TestAndIncr
from IF_MIB import InterfaceIndex, ifIndex

class CISCO_VTP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-VTP-MIB'
	conformance = 3
	name = 'CISCO-VTP-MIB'
	language = 2
	description = 'The MIB module for entities implementing the VTP\nprotocol.'

# nodes
class ciscoVtpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46])
	name = 'ciscoVtpMIB'

class vtpMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1])
	name = 'vtpMIBObjects'

class vtpStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1])
	name = 'vtpStatus'

class vlanManagementDomains(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2])
	name = 'vlanManagementDomains'

class vlanInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3])
	name = 'vlanInfo'

class vlanEdit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4])
	name = 'vlanEdit'

class vtpStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5])
	name = 'vtpStats'

class vlanTrunkPorts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6])
	name = 'vlanTrunkPorts'

class vtpNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2])
	name = 'vtpNotifications'

class vtpNotificationsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0])
	name = 'vtpNotificationsPrefix'

class vtpNotificationsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 1])
	name = 'vtpNotificationsObjects'

class vtpMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3])
	name = 'vtpMIBConformance'

class vtpMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1])
	name = 'vtpMIBCompliances'

class vtpMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2])
	name = 'vtpMIBGroups'


# macros
# types 

class VlanIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 4095))


class ManagementDomainIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 255))


class OwnerString(pycopia.SMI.Basetypes.OctetString):
	status = 1


class VlanType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'ethernet'), Enum(2, 'fddi'), Enum(3, 'tokenRing'), Enum(4, 'fddiNet'), Enum(5, 'trNet'), Enum(6, 'deprecated')]


class VlanTypeExt(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 1))

# scalars 
class vtpVersion(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'one'), Enum(2, 'two')]


class vtpMaxVlanStorage(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpNotificationsEnabled(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vlanTrunkPortSetSerialNo(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class vlanTrunkPortsDot1qTag(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vtpVlanPortLocalSegment(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class managementDomainIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 1])
	syntaxobject = ManagementDomainIndex


class managementDomainName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class managementDomainLocalMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'client'), Enum(2, 'server'), Enum(3, 'transparent')]


class managementDomainConfigRevNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class managementDomainLastUpdater(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class managementDomainLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class managementDomainRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class managementDomainTftpServer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class managementDomainTftpPathname(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class managementDomainPruningState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class managementDomainVersionInUse(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'version1'), Enum(2, 'version2')]


class vtpVlanIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 1])
	syntaxobject = VlanIndex


class vtpVlanState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'operational'), Enum(2, 'suspended'), Enum(3, 'mtuTooBigForDevice'), Enum(4, 'mtuTooBigForTrunk')]


class vtpVlanType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 3])
	syntaxobject = VlanType


class vtpVlanName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vtpVlanMtu(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanDot10Said(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vtpVlanRingNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanBridgeNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanStpType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ieee'), Enum(2, 'ibm'), Enum(3, 'hybrid')]


class vtpVlanParentVlan(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 10])
	syntaxobject = VlanIndex


class vtpVlanTranslationalVlan1(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 11])
	syntaxobject = VlanIndex


class vtpVlanTranslationalVlan2(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 12])
	syntaxobject = VlanIndex


class vtpVlanBridgeType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'srt'), Enum(2, 'srb')]


class vtpVlanAreHopCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanSteHopCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanIsCRFBackup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vtpVlanTypeExt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 17])
	syntaxobject = VlanTypeExt


class vtpVlanEditOperation(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'copy'), Enum(3, 'apply'), Enum(4, 'release'), Enum(5, 'restartTimer')]


class vtpVlanApplyStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inProgress'), Enum(2, 'succeeded'), Enum(3, 'configNumberError'), Enum(4, 'inconsistentEdit'), Enum(5, 'tooBig'), Enum(6, 'localNVStoreFail'), Enum(7, 'remoteNVStoreFail'), Enum(8, 'editBufferEmpty'), Enum(9, 'someOtherError')]


class vtpVlanEditBufferOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 3])
	syntaxobject = OwnerString


class vtpVlanEditConfigRevNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class vtpVlanEditIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 1])
	syntaxobject = VlanIndex


class vtpVlanEditState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'operational'), Enum(2, 'suspended')]


class vtpVlanEditType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 3])
	syntaxobject = VlanType


class vtpVlanEditName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vtpVlanEditMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanEditDot10Said(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vtpVlanEditRingNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanEditBridgeNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanEditStpType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ieee'), Enum(2, 'ibm'), Enum(3, 'auto')]


class vtpVlanEditParentVlan(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 10])
	syntaxobject = VlanIndex


class vtpVlanEditRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class vtpVlanEditTranslationalVlan1(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 12])
	syntaxobject = VlanIndex


class vtpVlanEditTranslationalVlan2(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 13])
	syntaxobject = VlanIndex


class vtpVlanEditBridgeType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'srt'), Enum(2, 'srb')]


class vtpVlanEditAreHopCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanEditSteHopCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vtpVlanEditIsCRFBackup(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vtpVlanEditTypeExt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 18])
	syntaxobject = VlanTypeExt


class vtpInSummaryAdverts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpInSubsetAdverts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpInAdvertRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpOutSummaryAdverts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpOutSubsetAdverts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpOutAdvertRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpConfigRevNumberErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vtpConfigDigestErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vlanTrunkPortIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 1])
	syntaxobject = InterfaceIndex


class vlanTrunkPortManagementDomain(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 2])
	syntaxobject = ManagementDomainIndex


class vlanTrunkPortEncapsulationType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'isl'), Enum(2, 'dot10'), Enum(3, 'lane'), Enum(4, 'dot1Q'), Enum(5, 'negotiate')]


class vlanTrunkPortVlansEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortNativeVlan(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 5])
	syntaxobject = VlanIndex


class vlanTrunkPortRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class vlanTrunkPortInJoins(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vlanTrunkPortOutJoins(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vlanTrunkPortOldAdverts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vlanTrunkPortVlansPruningEligible(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansXmitJoined(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansRcvJoined(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortDynamicState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off'), Enum(3, 'desirable'), Enum(4, 'auto'), Enum(5, 'onNoNegotiate')]


class vlanTrunkPortDynamicStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trunking'), Enum(2, 'notTrunking')]


class vlanTrunkPortVtpEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vlanTrunkPortEncapsulationOperType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'isl'), Enum(2, 'dot10'), Enum(3, 'lane'), Enum(4, 'dot1Q'), Enum(5, 'negotiating'), Enum(6, 'notApplicable')]


class vlanTrunkPortVlansEnabled2k(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansEnabled3k(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansEnabled4k(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vtpVlansPruningEligible2k(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vtpVlansPruningEligible3k(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vtpVlansPruningEligible4k(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansXmitJoined2k(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansXmitJoined3k(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansXmitJoined4k(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansRcvJoined2k(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansRcvJoined3k(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortVlansRcvJoined4k(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vlanTrunkPortDot1qTunnel(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trunk'), Enum(2, 'access'), Enum(3, 'disabled')]


# rows 
class managementDomainEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([managementDomainIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1])
	access = 2
	rowstatus = managementDomainRowStatus
	columns = {'managementDomainIndex': managementDomainIndex, 'managementDomainName': managementDomainName, 'managementDomainLocalMode': managementDomainLocalMode, 'managementDomainConfigRevNumber': managementDomainConfigRevNumber, 'managementDomainLastUpdater': managementDomainLastUpdater, 'managementDomainLastChange': managementDomainLastChange, 'managementDomainRowStatus': managementDomainRowStatus, 'managementDomainTftpServer': managementDomainTftpServer, 'managementDomainTftpPathname': managementDomainTftpPathname, 'managementDomainPruningState': managementDomainPruningState, 'managementDomainVersionInUse': managementDomainVersionInUse}


class vtpVlanEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([managementDomainIndex, vtpVlanIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1])
	access = 2
	columns = {'vtpVlanIndex': vtpVlanIndex, 'vtpVlanState': vtpVlanState, 'vtpVlanType': vtpVlanType, 'vtpVlanName': vtpVlanName, 'vtpVlanMtu': vtpVlanMtu, 'vtpVlanDot10Said': vtpVlanDot10Said, 'vtpVlanRingNumber': vtpVlanRingNumber, 'vtpVlanBridgeNumber': vtpVlanBridgeNumber, 'vtpVlanStpType': vtpVlanStpType, 'vtpVlanParentVlan': vtpVlanParentVlan, 'vtpVlanTranslationalVlan1': vtpVlanTranslationalVlan1, 'vtpVlanTranslationalVlan2': vtpVlanTranslationalVlan2, 'vtpVlanBridgeType': vtpVlanBridgeType, 'vtpVlanAreHopCount': vtpVlanAreHopCount, 'vtpVlanSteHopCount': vtpVlanSteHopCount, 'vtpVlanIsCRFBackup': vtpVlanIsCRFBackup, 'vtpVlanTypeExt': vtpVlanTypeExt}


from CISCO_VTP_MIB import managementDomainIndex
class vtpEditControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([managementDomainIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1])
	access = 2
	columns = {'vtpVlanEditOperation': vtpVlanEditOperation, 'vtpVlanApplyStatus': vtpVlanApplyStatus, 'vtpVlanEditBufferOwner': vtpVlanEditBufferOwner, 'vtpVlanEditConfigRevNumber': vtpVlanEditConfigRevNumber}


class vtpVlanEditEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([managementDomainIndex, vtpVlanEditIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1])
	access = 2
	rowstatus = vtpVlanEditRowStatus
	columns = {'vtpVlanEditIndex': vtpVlanEditIndex, 'vtpVlanEditState': vtpVlanEditState, 'vtpVlanEditType': vtpVlanEditType, 'vtpVlanEditName': vtpVlanEditName, 'vtpVlanEditMtu': vtpVlanEditMtu, 'vtpVlanEditDot10Said': vtpVlanEditDot10Said, 'vtpVlanEditRingNumber': vtpVlanEditRingNumber, 'vtpVlanEditBridgeNumber': vtpVlanEditBridgeNumber, 'vtpVlanEditStpType': vtpVlanEditStpType, 'vtpVlanEditParentVlan': vtpVlanEditParentVlan, 'vtpVlanEditRowStatus': vtpVlanEditRowStatus, 'vtpVlanEditTranslationalVlan1': vtpVlanEditTranslationalVlan1, 'vtpVlanEditTranslationalVlan2': vtpVlanEditTranslationalVlan2, 'vtpVlanEditBridgeType': vtpVlanEditBridgeType, 'vtpVlanEditAreHopCount': vtpVlanEditAreHopCount, 'vtpVlanEditSteHopCount': vtpVlanEditSteHopCount, 'vtpVlanEditIsCRFBackup': vtpVlanEditIsCRFBackup, 'vtpVlanEditTypeExt': vtpVlanEditTypeExt}


from CISCO_VTP_MIB import managementDomainIndex
class vtpStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([managementDomainIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1])
	access = 2
	columns = {'vtpInSummaryAdverts': vtpInSummaryAdverts, 'vtpInSubsetAdverts': vtpInSubsetAdverts, 'vtpInAdvertRequests': vtpInAdvertRequests, 'vtpOutSummaryAdverts': vtpOutSummaryAdverts, 'vtpOutSubsetAdverts': vtpOutSubsetAdverts, 'vtpOutAdvertRequests': vtpOutAdvertRequests, 'vtpConfigRevNumberErrors': vtpConfigRevNumberErrors, 'vtpConfigDigestErrors': vtpConfigDigestErrors}


class vlanTrunkPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vlanTrunkPortIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1])
	access = 2
	rowstatus = vlanTrunkPortRowStatus
	columns = {'vlanTrunkPortIfIndex': vlanTrunkPortIfIndex, 'vlanTrunkPortManagementDomain': vlanTrunkPortManagementDomain, 'vlanTrunkPortEncapsulationType': vlanTrunkPortEncapsulationType, 'vlanTrunkPortVlansEnabled': vlanTrunkPortVlansEnabled, 'vlanTrunkPortNativeVlan': vlanTrunkPortNativeVlan, 'vlanTrunkPortRowStatus': vlanTrunkPortRowStatus, 'vlanTrunkPortInJoins': vlanTrunkPortInJoins, 'vlanTrunkPortOutJoins': vlanTrunkPortOutJoins, 'vlanTrunkPortOldAdverts': vlanTrunkPortOldAdverts, 'vlanTrunkPortVlansPruningEligible': vlanTrunkPortVlansPruningEligible, 'vlanTrunkPortVlansXmitJoined': vlanTrunkPortVlansXmitJoined, 'vlanTrunkPortVlansRcvJoined': vlanTrunkPortVlansRcvJoined, 'vlanTrunkPortDynamicState': vlanTrunkPortDynamicState, 'vlanTrunkPortDynamicStatus': vlanTrunkPortDynamicStatus, 'vlanTrunkPortVtpEnabled': vlanTrunkPortVtpEnabled, 'vlanTrunkPortEncapsulationOperType': vlanTrunkPortEncapsulationOperType, 'vlanTrunkPortVlansEnabled2k': vlanTrunkPortVlansEnabled2k, 'vlanTrunkPortVlansEnabled3k': vlanTrunkPortVlansEnabled3k, 'vlanTrunkPortVlansEnabled4k': vlanTrunkPortVlansEnabled4k, 'vtpVlansPruningEligible2k': vtpVlansPruningEligible2k, 'vtpVlansPruningEligible3k': vtpVlansPruningEligible3k, 'vtpVlansPruningEligible4k': vtpVlansPruningEligible4k, 'vlanTrunkPortVlansXmitJoined2k': vlanTrunkPortVlansXmitJoined2k, 'vlanTrunkPortVlansXmitJoined3k': vlanTrunkPortVlansXmitJoined3k, 'vlanTrunkPortVlansXmitJoined4k': vlanTrunkPortVlansXmitJoined4k, 'vlanTrunkPortVlansRcvJoined2k': vlanTrunkPortVlansRcvJoined2k, 'vlanTrunkPortVlansRcvJoined3k': vlanTrunkPortVlansRcvJoined3k, 'vlanTrunkPortVlansRcvJoined4k': vlanTrunkPortVlansRcvJoined4k, 'vlanTrunkPortDot1qTunnel': vlanTrunkPortDot1qTunnel}


# notifications (traps) 
class vtpConfigRevNumberError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 1])

class vtpConfigDigestError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 2])

class vtpServerDisabled(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 3])

class vtpMtuTooBig(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 4])

class vtpVlanRingNumberConfigConflict(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 5])

class vtpVersionOneDeviceDetected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 6])

class vlanTrunkPortDynamicStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 7])

# groups 
class vtpBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 1])
	group = [vtpVersion, vtpMaxVlanStorage, vtpNotificationsEnabled, managementDomainName, managementDomainLocalMode, managementDomainConfigRevNumber, managementDomainLastUpdater, managementDomainLastChange, managementDomainTftpServer, managementDomainTftpPathname, managementDomainRowStatus]

class vtpStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 4])
	group = [vtpInSummaryAdverts, vtpInSubsetAdverts, vtpInAdvertRequests, vtpOutSummaryAdverts, vtpOutSubsetAdverts, vtpOutAdvertRequests, vtpConfigRevNumberErrors, vtpConfigDigestErrors]

class vtpTrunkPortGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 5])
	group = [vlanTrunkPortManagementDomain, vlanTrunkPortEncapsulationType, vlanTrunkPortVlansEnabled, vlanTrunkPortNativeVlan, vlanTrunkPortRowStatus, vlanTrunkPortSetSerialNo]

class vtpTrunkPruningGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 7])
	group = [vlanTrunkPortInJoins, vlanTrunkPortOutJoins, vlanTrunkPortOldAdverts, vlanTrunkPortVlansPruningEligible, vlanTrunkPortVlansXmitJoined, vlanTrunkPortVlansRcvJoined]

class vtpTrunkPruningGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 10])
	group = [managementDomainPruningState]

class vtpTrunkPortGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 11])
	group = [vlanTrunkPortDynamicState, vlanTrunkPortDynamicStatus, vlanTrunkPortVtpEnabled]

class vtpVersion2BasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 12])
	group = [managementDomainVersionInUse]

class vtpVlanInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 13])
	group = [vtpVlanState, vtpVlanType, vtpVlanName, vtpVlanMtu, vtpVlanDot10Said, vtpVlanRingNumber, vtpVlanBridgeNumber, vtpVlanStpType, vtpVlanParentVlan, vtpVlanTranslationalVlan1, vtpVlanTranslationalVlan2, vtpVlanBridgeType, vtpVlanAreHopCount, vtpVlanSteHopCount, vtpVlanIsCRFBackup]

class vtpVlanInfoEditGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 14])
	group = [vtpVlanEditOperation, vtpVlanApplyStatus, vtpVlanEditBufferOwner, vtpVlanEditConfigRevNumber, vtpVlanEditState, vtpVlanEditType, vtpVlanEditName, vtpVlanEditMtu, vtpVlanEditDot10Said, vtpVlanEditRingNumber, vtpVlanEditBridgeNumber, vtpVlanEditStpType, vtpVlanEditParentVlan, vtpVlanEditRowStatus, vtpVlanEditTranslationalVlan1, vtpVlanEditTranslationalVlan2, vtpVlanEditBridgeType, vtpVlanEditAreHopCount, vtpVlanEditSteHopCount, vtpVlanEditIsCRFBackup]

class vtpTrunkPortGroup3(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 15])
	group = [vlanTrunkPortEncapsulationOperType]

class vtp4kVlanGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 16])
	group = [vtpVlanTypeExt, vtpVlanEditTypeExt, vlanTrunkPortVlansEnabled2k, vlanTrunkPortVlansEnabled3k, vlanTrunkPortVlansEnabled4k, vtpVlansPruningEligible2k, vtpVlansPruningEligible3k, vtpVlansPruningEligible4k, vlanTrunkPortVlansXmitJoined2k, vlanTrunkPortVlansXmitJoined3k, vlanTrunkPortVlansXmitJoined4k, vlanTrunkPortVlansRcvJoined2k, vlanTrunkPortVlansRcvJoined3k, vlanTrunkPortVlansRcvJoined4k]

class vtpDot1qTunnelGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 17])
	group = [vlanTrunkPortsDot1qTag, vlanTrunkPortDot1qTunnel]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
