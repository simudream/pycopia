# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TruthValue
from IF_MIB import ifIndex

class CISCO_BSC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-BSC-MIB'
	conformance = 5
	name = 'CISCO-BSC-MIB'
	language = 2
	description = "The MIB module for BSC.\n\nOverview of BSC MIB\n\nMIB description\n\nThe BSC MIB provides the configuration and operational information \non Cisco's Binary Synchronous Communications implementation.  The \nfollowing entities are managed:\n 1) BSC ports (serial interfaces)\n 2) BSC Control Units (stations on a port)\n\nThe BSC ports are identified by the interface index, and additional \ninformation about this interface can be obtained from the Cisco Serial \nInterface MIB.  \nThe BSC Control Units are identified by the Control Unit address; this \nis the address used by BSTUN to route the BSC traffic - it is therefore \nequivalent to the bstunRouteStationAddress in the bstunRouteTable MIB.\n         "

# nodes
class ciscoBscMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36])
	name = 'ciscoBscMIB'

class bscObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1])
	name = 'bscObjects'

class bscPorts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1])
	name = 'bscPorts'

class bscControlUnits(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2])
	name = 'bscControlUnits'

class bscExtAddresses(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3])
	name = 'bscExtAddresses'

class bscMibConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 3])
	name = 'bscMibConformance'

class bscMibCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 1])
	name = 'bscMibCompliances'

class bscMibGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2])
	name = 'bscMibGroups'


# macros
# types 
# scalars 
# columns
class bscPortRole(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'primary'), Enum(2, 'secondary'), Enum(3, 'contention'), Enum(4, 'dialContention')]


class bscPortCodeSet(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ebcdic'), Enum(2, 'ascii')]


class bscPortPause(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscPortServlim(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscPortPollTimeout(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscPortRecoveryRetries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscPortUnknownControlUnitsReceived(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscPortSoftErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscPortHardErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscPortProtocolViolations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscPortHostTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'deciseconds'


class bscPortSpecPoll(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class bscPortVirtualAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscPortContentionDialTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class bscCUAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscCUState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active')]


class bscCUBytesSent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUBytesReceived(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUTotalFramesSent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUTotalFramesReceived(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUDataFramesSent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUDataFramesReceived(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUSoftErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUHardErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscCUProtocolViolations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class bscExtPollAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class bscExtSelectAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class bscPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1])
	access = 2
	columns = {'bscPortRole': bscPortRole, 'bscPortCodeSet': bscPortCodeSet, 'bscPortPause': bscPortPause, 'bscPortServlim': bscPortServlim, 'bscPortPollTimeout': bscPortPollTimeout, 'bscPortRecoveryRetries': bscPortRecoveryRetries, 'bscPortUnknownControlUnitsReceived': bscPortUnknownControlUnitsReceived, 'bscPortSoftErrors': bscPortSoftErrors, 'bscPortHardErrors': bscPortHardErrors, 'bscPortProtocolViolations': bscPortProtocolViolations, 'bscPortHostTimeout': bscPortHostTimeout, 'bscPortSpecPoll': bscPortSpecPoll, 'bscPortVirtualAddress': bscPortVirtualAddress, 'bscPortContentionDialTimeout': bscPortContentionDialTimeout}


class bscCUEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, bscCUAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1])
	access = 2
	columns = {'bscCUAddress': bscCUAddress, 'bscCUState': bscCUState, 'bscCUBytesSent': bscCUBytesSent, 'bscCUBytesReceived': bscCUBytesReceived, 'bscCUTotalFramesSent': bscCUTotalFramesSent, 'bscCUTotalFramesReceived': bscCUTotalFramesReceived, 'bscCUDataFramesSent': bscCUDataFramesSent, 'bscCUDataFramesReceived': bscCUDataFramesReceived, 'bscCUSoftErrors': bscCUSoftErrors, 'bscCUHardErrors': bscCUHardErrors, 'bscCUProtocolViolations': bscCUProtocolViolations}


class bscExtAddressEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, bscExtPollAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1, 1])
	access = 2
	columns = {'bscExtPollAddress': bscExtPollAddress, 'bscExtSelectAddress': bscExtSelectAddress}


# notifications (traps) 
# groups 
class bscControlUnitsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 2])
	group = [bscCUState, bscCUBytesSent, bscCUBytesReceived, bscCUTotalFramesSent, bscCUTotalFramesReceived, bscCUDataFramesSent, bscCUDataFramesReceived, bscCUSoftErrors, bscCUHardErrors, bscCUProtocolViolations]

class bscPortsGroupRev1(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 3])
	group = [bscPortRole, bscPortCodeSet, bscPortPause, bscPortServlim, bscPortPollTimeout, bscPortRecoveryRetries, bscPortUnknownControlUnitsReceived, bscPortSoftErrors, bscPortHardErrors, bscPortProtocolViolations, bscPortHostTimeout, bscPortSpecPoll, bscPortVirtualAddress, bscPortContentionDialTimeout]

class bscExtAddressGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 4])
	group = [bscExtSelectAddress]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
