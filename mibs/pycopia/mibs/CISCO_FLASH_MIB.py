# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, IpAddress, Integer32, Gauge32, Counter32, TimeTicks
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, TruthValue, TimeStamp, InstancePointer, RowStatus

class CISCO_FLASH_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-FLASH-MIB'
	conformance = 2
	name = 'CISCO-FLASH-MIB'
	language = 2
	description = ''

# nodes
class ciscoFlashMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10])
	name = 'ciscoFlashMIB'

class ciscoFlashMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1])
	name = 'ciscoFlashMIBObjects'

class ciscoFlashDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1])
	name = 'ciscoFlashDevice'

class ciscoFlashChips(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3])
	name = 'ciscoFlashChips'

class ciscoFlashPartitions(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4])
	name = 'ciscoFlashPartitions'

class ciscoFlashFiles(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2])
	name = 'ciscoFlashFiles'

class ciscoFlashOps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2])
	name = 'ciscoFlashOps'

class ciscoFlashMIBTrapPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 3])
	name = 'ciscoFlashMIBTrapPrefix'

class ciscoFlashMIBTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 3, 0])
	name = 'ciscoFlashMIBTraps'

class ciscoFlashMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2])
	name = 'ciscoFlashMIBConformance'

class ciscoFlashMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 1])
	name = 'ciscoFlashMIBCompliances'

class ciscoFlashMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2])
	name = 'ciscoFlashMIBGroups'


# macros
# types 

class FlashChipCode(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(2, 2))


class ChecksumString(pycopia.SMI.Basetypes.OctetString):
	status = 1

# scalars 
class ciscoFlashDevicesSupported(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class ciscoFlashDeviceIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashDeviceSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class ciscoFlashDeviceMinPartitionSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class ciscoFlashDeviceMaxPartitions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashDevicePartitions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashDeviceChipCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashDeviceName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashDeviceDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashDeviceController(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashDeviceCard(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.InstancePointer


class ciscoFlashDeviceProgrammingJumper(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'installed'), Enum(2, 'notInstalled'), Enum(3, 'unknown')]


class ciscoFlashDeviceInitTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ciscoFlashDeviceRemovable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoFlashChipIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashChipCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 2])
	syntaxobject = FlashChipCode


class ciscoFlashChipDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashChipWriteRetries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoFlashChipEraseRetries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoFlashChipMaxWriteRetries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashChipMaxEraseRetries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitionIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitionStartChip(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitionEndChip(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitionSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class ciscoFlashPartitionFreeSpace(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes'


class ciscoFlashPartitionFileCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitionChecksumAlgorithm(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'simpleChecksum'), Enum(2, 'undefined'), Enum(3, 'simpleCRC')]


class ciscoFlashPartitionStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'readOnly'), Enum(2, 'runFromFlash'), Enum(3, 'readWrite')]


class ciscoFlashPartitionUpgradeMethod(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'rxbootFLH'), Enum(3, 'direct')]


class ciscoFlashPartitionName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashPartitionNeedErasure(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoFlashPartitionFileNameLength(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashFileIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashFileSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashFileChecksum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2, 1, 1, 3])
	syntaxobject = ChecksumString


class ciscoFlashFileStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deleted'), Enum(2, 'invalidChecksum'), Enum(3, 'valid')]


class ciscoFlashFileName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashCopySerialNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashCopyCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'copyToFlashWithErase'), Enum(2, 'copyToFlashWithoutErase'), Enum(3, 'copyFromFlash'), Enum(4, 'copyFromFlhLog')]


class ciscoFlashCopyProtocol(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tftp'), Enum(2, 'rcp'), Enum(3, 'lex')]


class ciscoFlashCopyServerAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ciscoFlashCopySourceName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashCopyDestinationName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashCopyRemoteUserName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashCopyStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'copyInProgress'), Enum(2, 'copyOperationSuccess'), Enum(3, 'copyInvalidOperation'), Enum(4, 'copyInvalidProtocol'), Enum(5, 'copyInvalidSourceName'), Enum(6, 'copyInvalidDestName'), Enum(7, 'copyInvalidServerAddress'), Enum(8, 'copyDeviceBusy'), Enum(9, 'copyDeviceOpenError'), Enum(10, 'copyDeviceError'), Enum(11, 'copyDeviceNotProgrammable'), Enum(12, 'copyDeviceFull'), Enum(13, 'copyFileOpenError'), Enum(14, 'copyFileTransferError'), Enum(15, 'copyFileChecksumError'), Enum(16, 'copyNoMemory'), Enum(17, 'copyUnknownFailure')]


class ciscoFlashCopyNotifyOnCompletion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoFlashCopyTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ciscoFlashCopyEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ciscoFlashPartitioningSerialNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitioningCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'partition')]


class ciscoFlashPartitioningDestinationName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashPartitioningPartitionCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashPartitioningPartitionSizes(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashPartitioningStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'partitioningInProgress'), Enum(2, 'partitioningOperationSuccess'), Enum(3, 'partitioningInvalidOperation'), Enum(4, 'partitioningInvalidDestName'), Enum(5, 'partitioningInvalidPartitionCount'), Enum(6, 'partitioningInvalidPartitionSizes'), Enum(7, 'partitioningDeviceBusy'), Enum(8, 'partitioningDeviceOpenError'), Enum(9, 'partitioningDeviceError'), Enum(10, 'partitioningNoMemory'), Enum(11, 'partitioningUnknownFailure')]


class ciscoFlashPartitioningNotifyOnCompletion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoFlashPartitioningTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ciscoFlashPartitioningEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ciscoFlashMiscOpSerialNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoFlashMiscOpCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'erase'), Enum(2, 'verify'), Enum(3, 'delete'), Enum(4, 'undelete'), Enum(5, 'squeeze'), Enum(6, 'format')]


class ciscoFlashMiscOpDestinationName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoFlashMiscOpStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'miscOpInProgress'), Enum(2, 'miscOpOperationSuccess'), Enum(3, 'miscOpInvalidOperation'), Enum(4, 'miscOpInvalidDestName'), Enum(5, 'miscOpDeviceBusy'), Enum(6, 'miscOpDeviceOpenError'), Enum(7, 'miscOpDeviceError'), Enum(8, 'miscOpDeviceNotProgrammable'), Enum(9, 'miscOpFileOpenError'), Enum(10, 'miscOpFileDeleteFailure'), Enum(11, 'miscOpFileUndeleteFailure'), Enum(12, 'miscOpFileChecksumError'), Enum(13, 'miscOpNoMemory'), Enum(14, 'miscOpUnknownFailure'), Enum(18, 'miscOpSqueezeFailure'), Enum(19, 'miscOpNoSuchFile'), Enum(20, 'miscOpFormatFailure')]


class ciscoFlashMiscOpNotifyOnCompletion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoFlashMiscOpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ciscoFlashMiscOpEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class ciscoFlashDeviceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 2, 1])
	access = 2
	columns = {'ciscoFlashDeviceIndex': ciscoFlashDeviceIndex, 'ciscoFlashDeviceSize': ciscoFlashDeviceSize, 'ciscoFlashDeviceMinPartitionSize': ciscoFlashDeviceMinPartitionSize, 'ciscoFlashDeviceMaxPartitions': ciscoFlashDeviceMaxPartitions, 'ciscoFlashDevicePartitions': ciscoFlashDevicePartitions, 'ciscoFlashDeviceChipCount': ciscoFlashDeviceChipCount, 'ciscoFlashDeviceName': ciscoFlashDeviceName, 'ciscoFlashDeviceDescr': ciscoFlashDeviceDescr, 'ciscoFlashDeviceController': ciscoFlashDeviceController, 'ciscoFlashDeviceCard': ciscoFlashDeviceCard, 'ciscoFlashDeviceProgrammingJumper': ciscoFlashDeviceProgrammingJumper, 'ciscoFlashDeviceInitTime': ciscoFlashDeviceInitTime, 'ciscoFlashDeviceRemovable': ciscoFlashDeviceRemovable}


class ciscoFlashChipEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashDeviceIndex, ciscoFlashChipIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 3, 1, 1])
	access = 2
	columns = {'ciscoFlashChipIndex': ciscoFlashChipIndex, 'ciscoFlashChipCode': ciscoFlashChipCode, 'ciscoFlashChipDescr': ciscoFlashChipDescr, 'ciscoFlashChipWriteRetries': ciscoFlashChipWriteRetries, 'ciscoFlashChipEraseRetries': ciscoFlashChipEraseRetries, 'ciscoFlashChipMaxWriteRetries': ciscoFlashChipMaxWriteRetries, 'ciscoFlashChipMaxEraseRetries': ciscoFlashChipMaxEraseRetries}


class ciscoFlashPartitionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashDeviceIndex, ciscoFlashPartitionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 1, 1])
	access = 2
	columns = {'ciscoFlashPartitionIndex': ciscoFlashPartitionIndex, 'ciscoFlashPartitionStartChip': ciscoFlashPartitionStartChip, 'ciscoFlashPartitionEndChip': ciscoFlashPartitionEndChip, 'ciscoFlashPartitionSize': ciscoFlashPartitionSize, 'ciscoFlashPartitionFreeSpace': ciscoFlashPartitionFreeSpace, 'ciscoFlashPartitionFileCount': ciscoFlashPartitionFileCount, 'ciscoFlashPartitionChecksumAlgorithm': ciscoFlashPartitionChecksumAlgorithm, 'ciscoFlashPartitionStatus': ciscoFlashPartitionStatus, 'ciscoFlashPartitionUpgradeMethod': ciscoFlashPartitionUpgradeMethod, 'ciscoFlashPartitionName': ciscoFlashPartitionName, 'ciscoFlashPartitionNeedErasure': ciscoFlashPartitionNeedErasure, 'ciscoFlashPartitionFileNameLength': ciscoFlashPartitionFileNameLength}


class ciscoFlashFileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashDeviceIndex, ciscoFlashPartitionIndex, ciscoFlashFileIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 1, 4, 2, 1, 1])
	access = 2
	columns = {'ciscoFlashFileIndex': ciscoFlashFileIndex, 'ciscoFlashFileSize': ciscoFlashFileSize, 'ciscoFlashFileChecksum': ciscoFlashFileChecksum, 'ciscoFlashFileStatus': ciscoFlashFileStatus, 'ciscoFlashFileName': ciscoFlashFileName}


class ciscoFlashCopyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashCopySerialNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 1, 1])
	access = 2
	rowstatus = ciscoFlashCopyEntryStatus
	columns = {'ciscoFlashCopySerialNumber': ciscoFlashCopySerialNumber, 'ciscoFlashCopyCommand': ciscoFlashCopyCommand, 'ciscoFlashCopyProtocol': ciscoFlashCopyProtocol, 'ciscoFlashCopyServerAddress': ciscoFlashCopyServerAddress, 'ciscoFlashCopySourceName': ciscoFlashCopySourceName, 'ciscoFlashCopyDestinationName': ciscoFlashCopyDestinationName, 'ciscoFlashCopyRemoteUserName': ciscoFlashCopyRemoteUserName, 'ciscoFlashCopyStatus': ciscoFlashCopyStatus, 'ciscoFlashCopyNotifyOnCompletion': ciscoFlashCopyNotifyOnCompletion, 'ciscoFlashCopyTime': ciscoFlashCopyTime, 'ciscoFlashCopyEntryStatus': ciscoFlashCopyEntryStatus}


class ciscoFlashPartitioningEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashPartitioningSerialNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 2, 1])
	access = 2
	rowstatus = ciscoFlashPartitioningEntryStatus
	columns = {'ciscoFlashPartitioningSerialNumber': ciscoFlashPartitioningSerialNumber, 'ciscoFlashPartitioningCommand': ciscoFlashPartitioningCommand, 'ciscoFlashPartitioningDestinationName': ciscoFlashPartitioningDestinationName, 'ciscoFlashPartitioningPartitionCount': ciscoFlashPartitioningPartitionCount, 'ciscoFlashPartitioningPartitionSizes': ciscoFlashPartitioningPartitionSizes, 'ciscoFlashPartitioningStatus': ciscoFlashPartitioningStatus, 'ciscoFlashPartitioningNotifyOnCompletion': ciscoFlashPartitioningNotifyOnCompletion, 'ciscoFlashPartitioningTime': ciscoFlashPartitioningTime, 'ciscoFlashPartitioningEntryStatus': ciscoFlashPartitioningEntryStatus}


class ciscoFlashMiscOpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoFlashMiscOpSerialNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 2, 3, 1])
	access = 2
	rowstatus = ciscoFlashMiscOpEntryStatus
	columns = {'ciscoFlashMiscOpSerialNumber': ciscoFlashMiscOpSerialNumber, 'ciscoFlashMiscOpCommand': ciscoFlashMiscOpCommand, 'ciscoFlashMiscOpDestinationName': ciscoFlashMiscOpDestinationName, 'ciscoFlashMiscOpStatus': ciscoFlashMiscOpStatus, 'ciscoFlashMiscOpNotifyOnCompletion': ciscoFlashMiscOpNotifyOnCompletion, 'ciscoFlashMiscOpTime': ciscoFlashMiscOpTime, 'ciscoFlashMiscOpEntryStatus': ciscoFlashMiscOpEntryStatus}


# notifications (traps) 
class ciscoFlashCopyCompletionTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 3, 0, 1])

class ciscoFlashPartitioningCompletionTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 3, 0, 2])

class ciscoFlashMiscOpCompletionTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 3, 0, 3])

class ciscoFlashDeviceChangeTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 1, 3, 0, 4])

# groups 
class ciscoFlashDeviceInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 1])
	group = [ciscoFlashDevicesSupported, ciscoFlashDeviceSize, ciscoFlashDeviceName, ciscoFlashDeviceDescr, ciscoFlashDeviceProgrammingJumper, ciscoFlashDeviceInitTime, ciscoFlashDeviceChipCount, ciscoFlashDeviceRemovable]

class ciscoFlashDeviceOptionalInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 2])
	group = [ciscoFlashDeviceMinPartitionSize, ciscoFlashDeviceMaxPartitions, ciscoFlashDevicePartitions, ciscoFlashDeviceController, ciscoFlashDeviceCard]

class ciscoFlashChipInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 3])
	group = [ciscoFlashChipCode, ciscoFlashChipDescr, ciscoFlashChipWriteRetries, ciscoFlashChipEraseRetries, ciscoFlashChipMaxWriteRetries, ciscoFlashChipMaxEraseRetries]

class ciscoFlashPartitionInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 4])
	group = [ciscoFlashPartitionStartChip, ciscoFlashPartitionEndChip, ciscoFlashPartitionSize, ciscoFlashPartitionFreeSpace, ciscoFlashPartitionFileCount, ciscoFlashPartitionChecksumAlgorithm, ciscoFlashPartitionStatus, ciscoFlashPartitionUpgradeMethod, ciscoFlashPartitionName, ciscoFlashPartitionNeedErasure, ciscoFlashPartitionFileNameLength]

class ciscoFlashFileInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 5])
	group = [ciscoFlashFileSize, ciscoFlashFileChecksum, ciscoFlashFileStatus, ciscoFlashFileName]

class ciscoFlashCopyOpGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 6])
	group = [ciscoFlashCopyCommand, ciscoFlashCopyProtocol, ciscoFlashCopyServerAddress, ciscoFlashCopySourceName, ciscoFlashCopyDestinationName, ciscoFlashCopyRemoteUserName, ciscoFlashCopyStatus, ciscoFlashCopyNotifyOnCompletion, ciscoFlashCopyTime, ciscoFlashCopyEntryStatus]

class ciscoFlashPartitioningOpGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 7])
	group = [ciscoFlashPartitioningCommand, ciscoFlashPartitioningDestinationName, ciscoFlashPartitioningPartitionCount, ciscoFlashPartitioningPartitionSizes, ciscoFlashPartitioningStatus, ciscoFlashPartitioningNotifyOnCompletion, ciscoFlashPartitioningTime, ciscoFlashPartitioningEntryStatus]

class ciscoFlashMiscOpGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 10, 2, 2, 8])
	group = [ciscoFlashMiscOpCommand, ciscoFlashMiscOpDestinationName, ciscoFlashMiscOpStatus, ciscoFlashMiscOpNotifyOnCompletion, ciscoFlashMiscOpTime, ciscoFlashMiscOpEntryStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
