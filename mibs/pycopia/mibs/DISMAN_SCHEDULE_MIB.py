# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Integer32, Unsigned32, Counter32, mib_2, zeroDotZero
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, DateAndTime, RowStatus, StorageType, VariablePointer
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class DISMAN_SCHEDULE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DISMAN-SCHEDULE-MIB'
	name = 'DISMAN-SCHEDULE-MIB'
	language = 2
	description = 'This MIB module defines a MIB which provides mechanisms to\nschedule SNMP set operations periodically or at specific\npoints in time.'

# nodes
class schedMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63])
	name = 'schedMIB'

class schedObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1])
	name = 'schedObjects'

class schedNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 2])
	name = 'schedNotifications'

class schedTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 2, 0])
	name = 'schedTraps'

class schedConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3])
	name = 'schedConformance'

class schedCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3, 1])
	name = 'schedCompliances'

class schedGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3, 2])
	name = 'schedGroups'


# macros
# types 

class SnmpPduErrorStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(-1, 'noResponse'), Enum(0, 'noError'), Enum(1, 'tooBig'), Enum(2, 'noSuchName'), Enum(3, 'badValue'), Enum(4, 'readOnly'), Enum(5, 'genErr'), Enum(6, 'noAccess'), Enum(7, 'wrongType'), Enum(8, 'wrongLength'), Enum(9, 'wrongEncoding'), Enum(10, 'wrongValue'), Enum(11, 'noCreation'), Enum(12, 'inconsistentValue'), Enum(13, 'resourceUnavailable'), Enum(14, 'commitFailed'), Enum(15, 'undoFailed'), Enum(16, 'authorizationError'), Enum(17, 'notWritable'), Enum(18, 'inconsistentName')]

# scalars 
class schedLocalTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# columns
class schedOwner(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class schedName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 2])
	syntaxobject = SnmpAdminString


class schedDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 3])
	syntaxobject = SnmpAdminString


class schedInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class schedWeekDay(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class schedMonth(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class schedDay(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class schedHour(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class schedMinute(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class schedContextName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 10])
	syntaxobject = SnmpAdminString


class schedVariable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.VariablePointer


class schedValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class schedType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'periodic'), Enum(2, 'calendar'), Enum(3, 'oneshot')]


class schedAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class schedOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled'), Enum(3, 'finished')]


class schedFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class schedLastFailure(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 17])
	syntaxobject = SnmpPduErrorStatus


class schedLastFailed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class schedStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class schedRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class schedTriggers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class schedEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([schedOwner, schedName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 1, 2, 1])
	access = 2
	rowstatus = schedRowStatus
	columns = {'schedOwner': schedOwner, 'schedName': schedName, 'schedDescr': schedDescr, 'schedInterval': schedInterval, 'schedWeekDay': schedWeekDay, 'schedMonth': schedMonth, 'schedDay': schedDay, 'schedHour': schedHour, 'schedMinute': schedMinute, 'schedContextName': schedContextName, 'schedVariable': schedVariable, 'schedValue': schedValue, 'schedType': schedType, 'schedAdminStatus': schedAdminStatus, 'schedOperStatus': schedOperStatus, 'schedFailures': schedFailures, 'schedLastFailure': schedLastFailure, 'schedLastFailed': schedLastFailed, 'schedStorageType': schedStorageType, 'schedRowStatus': schedRowStatus, 'schedTriggers': schedTriggers}


# notifications (traps) 
class schedActionFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 2, 0, 1])

# groups 
class schedGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3, 2, 1])
	group = [schedDescr, schedInterval, schedContextName, schedVariable, schedValue, schedType, schedAdminStatus, schedOperStatus, schedFailures, schedLastFailure, schedLastFailed, schedStorageType, schedRowStatus]

class schedCalendarGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3, 2, 2])
	group = [schedLocalTime, schedWeekDay, schedMonth, schedDay, schedHour, schedMinute]

class schedNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3, 2, 3])
	group = [schedActionFailure]

class schedGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 63, 3, 2, 4])
	group = [schedDescr, schedInterval, schedContextName, schedVariable, schedValue, schedType, schedAdminStatus, schedOperStatus, schedFailures, schedLastFailure, schedLastFailed, schedStorageType, schedRowStatus, schedTriggers]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
