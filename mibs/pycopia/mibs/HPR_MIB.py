# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Counter32, Gauge32, Unsigned32, TimeTicks, OBJECT_TYPE, MODULE_IDENTITY
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNA_NAU_MIB import snanauMIB
from SNMPv2_TC import DisplayString, DateAndTime, TimeStamp, TEXTUAL_CONVENTION
from APPN_MIB import SnaControlPointName

class HPR_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/HPR-MIB'
	conformance = 3
	name = 'HPR-MIB'
	language = 2
	description = 'This is the MIB module for objects used to\nmanage network devices with HPR capabilities.'

# nodes
class hprMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6])
	name = 'hprMIB'

class hprObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1])
	name = 'hprObjects'

class hprGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 1])
	name = 'hprGlobal'

class hprAnrRouting(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2])
	name = 'hprAnrRouting'

class hprTransportUser(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 3])
	name = 'hprTransportUser'

class hprRtp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4])
	name = 'hprRtp'

class hprRtpGlobe(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1])
	name = 'hprRtpGlobe'

class hprConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2])
	name = 'hprConformance'

class hprCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 1])
	name = 'hprCompliances'

class hprGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2])
	name = 'hprGroups'


# macros
# types 

class HprNceTypes(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'controlPoint'), Enum(1, 'logicalUnit'), Enum(2, 'boundaryFunction'), Enum(3, 'routeSetup')]


class HprRtpCounter(pycopia.SMI.Basetypes.Counter32):
	status = 1

# scalars 
class hprNodeCpName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 1, 1])
	syntaxobject = SnaControlPointName


class hprOperatorPathSwitchSupport(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notSupported'), Enum(2, 'switchTriggerSupported'), Enum(3, 'switchToPathSupported')]


class hprAnrsAssigned(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'ANR labels'


class hprAnrCounterState(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notActive'), Enum(2, 'active')]


class hprAnrCounterStateTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class hprRtpGlobeConnSetups(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'RTP connection setups'


class hprRtpGlobeCtrState(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notActive'), Enum(2, 'active')]


class hprRtpGlobeCtrStateTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# columns
class hprAnrLabel(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprAnrType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'nce'), Enum(2, 'tg')]


class hprAnrOutTgDest(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hprAnrOutTgNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hprAnrPacketsReceived(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'ANR packets'


class hprAnrCounterDisconTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hprNceId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprNceType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 2])
	syntaxobject = HprNceTypes


class hprNceDefault(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 3])
	syntaxobject = HprNceTypes


class hprNceInstanceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpLocNceId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpLocTcid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpRemCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 3])
	syntaxobject = SnaControlPointName


class hprRtpRemNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpRemTcid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpPathSwitchTrigger(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ready'), Enum(2, 'switchPathNow')]


class hprRtpRscv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpTopic(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hprRtpState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rtpListening'), Enum(2, 'rtpCalling'), Enum(3, 'rtpConnected'), Enum(4, 'rtpPathSwitching'), Enum(5, 'rtpDisconnecting'), Enum(99, 'other')]


class hprRtpUpTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = '1/100ths of a second'


class hprRtpLivenessTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '1/100ths of a second'


class hprRtpShortReqTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '1/100ths of a second'


class hprRtpPathSwTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '1/100ths of a second'


class hprRtpLivenessTimeouts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 14])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'liveness timeouts'


class hprRtpShortReqTimeouts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 15])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'short request timeouts'


class hprRtpMaxSendRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes per second'


class hprRtpMinSendRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes per second'


class hprRtpCurSendRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes per second'


class hprRtpSmRdTripDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = '1/1000ths of a second'


class hprRtpSendPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 20])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'RTP packets'


class hprRtpRecvPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 21])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'RTP packets'


class hprRtpSendBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 22])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'bytes'


class hprRtpRecvBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 23])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'bytes'


class hprRtpRetrPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 24])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'RTP packets'


class hprRtpPacketsDiscarded(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 25])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'RTP packets'


class hprRtpDetectGaps(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 26])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'gaps'


class hprRtpRateReqSends(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 27])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'rate requests'


class hprRtpOkErrPathSws(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 28])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'path switch attempts'


class hprRtpBadErrPathSws(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 29])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'path switch attempts'


class hprRtpOkOpPathSws(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 30])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'path switches'


class hprRtpBadOpPathSws(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 31])
	syntaxobject = HprRtpCounter
	access = 4
	units = 'path switches'


class hprRtpCounterDisconTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hprRtpStatusLocNceId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpStatusLocTcid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpStatusIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hprRtpStatusStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class hprRtpStatusEndTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class hprRtpStatusRemCpName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 6])
	syntaxobject = SnaControlPointName


class hprRtpStatusRemNceId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpStatusRemTcid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpStatusNewRscv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpStatusOldRscv(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hprRtpStatusCause(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'rtpConnFail'), Enum(3, 'locLinkFail'), Enum(4, 'remLinkFail'), Enum(5, 'operRequest')]


class hprRtpStatusLastAttemptResult(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'successful'), Enum(2, 'initiatorMoving'), Enum(3, 'directorySearchFailed'), Enum(4, 'rscvCalculationFailed'), Enum(5, 'negativeRouteSetupReply'), Enum(6, 'backoutRouteSetupReply'), Enum(7, 'timeoutDuringFirstAttempt'), Enum(8, 'otherUnsuccessful')]


# rows 
class hprAnrRoutingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprAnrLabel], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1])
	access = 2
	columns = {'hprAnrLabel': hprAnrLabel, 'hprAnrType': hprAnrType, 'hprAnrOutTgDest': hprAnrOutTgDest, 'hprAnrOutTgNum': hprAnrOutTgNum, 'hprAnrPacketsReceived': hprAnrPacketsReceived, 'hprAnrCounterDisconTime': hprAnrCounterDisconTime}


class hprNceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprNceId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1])
	access = 2
	columns = {'hprNceId': hprNceId, 'hprNceType': hprNceType, 'hprNceDefault': hprNceDefault, 'hprNceInstanceId': hprNceInstanceId}


class hprRtpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprRtpLocNceId, hprRtpLocTcid], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1])
	access = 2
	columns = {'hprRtpLocNceId': hprRtpLocNceId, 'hprRtpLocTcid': hprRtpLocTcid, 'hprRtpRemCpName': hprRtpRemCpName, 'hprRtpRemNceId': hprRtpRemNceId, 'hprRtpRemTcid': hprRtpRemTcid, 'hprRtpPathSwitchTrigger': hprRtpPathSwitchTrigger, 'hprRtpRscv': hprRtpRscv, 'hprRtpTopic': hprRtpTopic, 'hprRtpState': hprRtpState, 'hprRtpUpTime': hprRtpUpTime, 'hprRtpLivenessTimer': hprRtpLivenessTimer, 'hprRtpShortReqTimer': hprRtpShortReqTimer, 'hprRtpPathSwTimer': hprRtpPathSwTimer, 'hprRtpLivenessTimeouts': hprRtpLivenessTimeouts, 'hprRtpShortReqTimeouts': hprRtpShortReqTimeouts, 'hprRtpMaxSendRate': hprRtpMaxSendRate, 'hprRtpMinSendRate': hprRtpMinSendRate, 'hprRtpCurSendRate': hprRtpCurSendRate, 'hprRtpSmRdTripDelay': hprRtpSmRdTripDelay, 'hprRtpSendPackets': hprRtpSendPackets, 'hprRtpRecvPackets': hprRtpRecvPackets, 'hprRtpSendBytes': hprRtpSendBytes, 'hprRtpRecvBytes': hprRtpRecvBytes, 'hprRtpRetrPackets': hprRtpRetrPackets, 'hprRtpPacketsDiscarded': hprRtpPacketsDiscarded, 'hprRtpDetectGaps': hprRtpDetectGaps, 'hprRtpRateReqSends': hprRtpRateReqSends, 'hprRtpOkErrPathSws': hprRtpOkErrPathSws, 'hprRtpBadErrPathSws': hprRtpBadErrPathSws, 'hprRtpOkOpPathSws': hprRtpOkOpPathSws, 'hprRtpBadOpPathSws': hprRtpBadOpPathSws, 'hprRtpCounterDisconTime': hprRtpCounterDisconTime}


class hprRtpStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hprRtpStatusLocNceId, hprRtpStatusLocTcid, hprRtpStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1])
	access = 2
	columns = {'hprRtpStatusLocNceId': hprRtpStatusLocNceId, 'hprRtpStatusLocTcid': hprRtpStatusLocTcid, 'hprRtpStatusIndex': hprRtpStatusIndex, 'hprRtpStatusStartTime': hprRtpStatusStartTime, 'hprRtpStatusEndTime': hprRtpStatusEndTime, 'hprRtpStatusRemCpName': hprRtpStatusRemCpName, 'hprRtpStatusRemNceId': hprRtpStatusRemNceId, 'hprRtpStatusRemTcid': hprRtpStatusRemTcid, 'hprRtpStatusNewRscv': hprRtpStatusNewRscv, 'hprRtpStatusOldRscv': hprRtpStatusOldRscv, 'hprRtpStatusCause': hprRtpStatusCause, 'hprRtpStatusLastAttemptResult': hprRtpStatusLastAttemptResult}


# notifications (traps) 
# groups 
class hprGlobalConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 1])
	group = [hprNodeCpName, hprOperatorPathSwitchSupport]

class hprAnrRoutingConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 2])
	group = [hprAnrsAssigned, hprAnrCounterState, hprAnrCounterStateTime, hprAnrType, hprAnrOutTgDest, hprAnrOutTgNum, hprAnrPacketsReceived, hprAnrCounterDisconTime]

class hprTransportUserConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 3])
	group = [hprNceType, hprNceDefault, hprNceInstanceId]

class hprRtpConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 4])
	group = [hprRtpGlobeConnSetups, hprRtpGlobeCtrState, hprRtpGlobeCtrStateTime, hprRtpRemCpName, hprRtpRemNceId, hprRtpRemTcid, hprRtpPathSwitchTrigger, hprRtpRscv, hprRtpTopic, hprRtpState, hprRtpUpTime, hprRtpLivenessTimer, hprRtpShortReqTimer, hprRtpPathSwTimer, hprRtpLivenessTimeouts, hprRtpShortReqTimeouts, hprRtpMaxSendRate, hprRtpMinSendRate, hprRtpCurSendRate, hprRtpSmRdTripDelay, hprRtpSendPackets, hprRtpRecvPackets, hprRtpSendBytes, hprRtpRecvBytes, hprRtpRetrPackets, hprRtpPacketsDiscarded, hprRtpDetectGaps, hprRtpRateReqSends, hprRtpOkErrPathSws, hprRtpBadErrPathSws, hprRtpOkOpPathSws, hprRtpBadOpPathSws, hprRtpCounterDisconTime, hprRtpStatusStartTime, hprRtpStatusEndTime, hprRtpStatusRemNceId, hprRtpStatusRemTcid, hprRtpStatusRemCpName, hprRtpStatusNewRscv, hprRtpStatusOldRscv, hprRtpStatusCause, hprRtpStatusLastAttemptResult]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
