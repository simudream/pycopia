# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Counter32, IpAddress, mib_2, Unsigned32, Counter64, zeroDotZero
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddress, InetAddressType, InetAddressPrefixLength, InetVersion, InetZoneIndex
from SNMPv2_TC import PhysAddress, TruthValue, TimeStamp, RowPointer, TEXTUAL_CONVENTION, TestAndIncr, RowStatus, StorageType
from IF_MIB import InterfaceIndex

class IP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IP-MIB'
	conformance = 5
	name = 'IP-MIB'
	language = 2
	description = 'The MIB module for managing IP and ICMP implementations, but\nexcluding their management of IP routes.\n\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4293; see the RFC itself for\nfull legal notices.'

# nodes
class ip(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4])
	name = 'ip'

class ipTrafficStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31])
	name = 'ipTrafficStats'

class icmp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5])
	name = 'icmp'

class ipMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48])
	name = 'ipMIB'

class ipMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2])
	name = 'ipMIBConformance'

class ipMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 1])
	name = 'ipMIBCompliances'

class ipMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2])
	name = 'ipMIBGroups'


# macros
# types 

class IpAddressOriginTC(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'manual'), Enum(4, 'dhcp'), Enum(5, 'linklayer'), Enum(6, 'random')]


class IpAddressStatusTC(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'preferred'), Enum(2, 'deprecated'), Enum(3, 'invalid'), Enum(4, 'inaccessible'), Enum(5, 'unknown'), Enum(6, 'tentative'), Enum(7, 'duplicate'), Enum(8, 'optimistic')]


class IpAddressPrefixOriginTC(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'manual'), Enum(3, 'wellknown'), Enum(4, 'dhcp'), Enum(5, 'routeradv')]


class Ipv6AddressIfIdentifierTC(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 8))
	format = '2x:'

# scalars 
class ipForwarding(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'forwarding'), Enum(2, 'notForwarding')]


class ipDefaultTTL(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipInReceives(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipInHdrErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipInAddrErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipForwDatagrams(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipInUnknownProtos(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipInDiscards(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipInDelivers(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipOutRequests(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipOutDiscards(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipOutNoRoutes(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipReasmTimeout(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class ipReasmReqds(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipReasmOKs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipReasmFails(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipFragOKs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipFragFails(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipFragCreates(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipRoutingDiscards(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IpForwarding(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'forwarding'), Enum(2, 'notForwarding')]


class ipv6IpDefaultHopLimit(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipv4InterfaceTableLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 27])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipv6InterfaceTableLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 29])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipIfStatsTableLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipAddressSpinLock(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 33])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class ipv6RouterAdvertSpinLock(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 38])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class icmpInMsgs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInDestUnreachs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInTimeExcds(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInParmProbs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInSrcQuenchs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInRedirects(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInEchos(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInEchoReps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInTimestamps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInTimestampReps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInAddrMasks(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpInAddrMaskReps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutMsgs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutErrors(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutDestUnreachs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutTimeExcds(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutParmProbs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutSrcQuenchs(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutRedirects(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutEchos(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutEchoReps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutTimestamps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutTimestampReps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutAddrMasks(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpOutAddrMaskReps(ScalarObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class ipAdEntAddr(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ipAdEntIfIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 20, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipAdEntNetMask(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 20, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ipAdEntBcastAddr(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 20, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipAdEntReasmMaxSize(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 20, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipNetToMediaIfIndex(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 22, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipNetToMediaPhysAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 22, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class ipNetToMediaNetAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 22, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ipNetToMediaType(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 22, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'invalid'), Enum(3, 'dynamic'), Enum(4, 'static')]


class ipv4InterfaceIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 28, 1, 1])
	syntaxobject = InterfaceIndex


class ipv4InterfaceReasmMaxSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 28, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipv4InterfaceEnableStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 28, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class ipv4InterfaceRetransmitTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 28, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class ipv6InterfaceIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 1])
	syntaxobject = InterfaceIndex


class ipv6InterfaceReasmMaxSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'octets'


class ipv6InterfaceIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 3])
	syntaxobject = Ipv6AddressIfIdentifierTC


class ipv6InterfaceEnableStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class ipv6InterfaceReachableTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class ipv6InterfaceRetransmitTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class ipv6InterfaceForwarding(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'forwarding'), Enum(2, 'notForwarding')]


class ipSystemStatsIPVersion(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 1])
	syntaxobject = InetVersion


class ipSystemStatsInReceives(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInReceives(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsInHdrErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInNoRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInAddrErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInUnknownProtos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInTruncatedPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsReasmReqds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsReasmOKs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsReasmFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsInDelivers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInDelivers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutNoRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsOutForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsOutFragReqds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsOutFragOKs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsOutFragFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsOutFragCreates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsOutTransmits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutTransmits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsInMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsInMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsInBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 42])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCInBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 43])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsOutBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 44])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipSystemStatsHCOutBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 45])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipSystemStatsDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 46])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipSystemStatsRefreshRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1, 47])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milli-seconds'


class ipIfStatsIPVersion(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 1])
	syntaxobject = InetVersion


class ipIfStatsIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 2])
	syntaxobject = InterfaceIndex


class ipIfStatsInReceives(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInReceives(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsInHdrErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInNoRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInAddrErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInUnknownProtos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInTruncatedPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsReasmReqds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsReasmOKs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsReasmFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsInDelivers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInDelivers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutForwDatagrams(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsOutFragReqds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsOutFragOKs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsOutFragFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsOutFragCreates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsOutTransmits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutTransmits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsInMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsInMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutMcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutMcastOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsInBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 42])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCInBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 43])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsOutBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 44])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipIfStatsHCOutBcastPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 45])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class ipIfStatsDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 46])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipIfStatsRefreshRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1, 47])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milli-seconds'


class ipAddressPrefixIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 1])
	syntaxobject = InterfaceIndex


class ipAddressPrefixType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 2])
	syntaxobject = InetAddressType


class ipAddressPrefixPrefix(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 3])
	syntaxobject = InetAddress


class ipAddressPrefixLength(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 4])
	syntaxobject = InetAddressPrefixLength


class ipAddressPrefixOrigin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 5])
	syntaxobject = IpAddressPrefixOriginTC


class ipAddressPrefixOnLinkFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ipAddressPrefixAutonomousFlag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ipAddressPrefixAdvPreferredLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class ipAddressPrefixAdvValidLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class ipAddressAddrType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 1])
	syntaxobject = InetAddressType


class ipAddressAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 2])
	syntaxobject = InetAddress


class ipAddressIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 3])
	syntaxobject = InterfaceIndex


class ipAddressType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unicast'), Enum(2, 'anycast'), Enum(3, 'broadcast')]


class ipAddressPrefix(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class ipAddressOrigin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 6])
	syntaxobject = IpAddressOriginTC


class ipAddressStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 7])
	syntaxobject = IpAddressStatusTC


class ipAddressCreated(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipAddressLastChanged(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipAddressRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipAddressStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipNetToPhysicalIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 1])
	syntaxobject = InterfaceIndex


class ipNetToPhysicalNetAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 2])
	syntaxobject = InetAddressType


class ipNetToPhysicalNetAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 3])
	syntaxobject = InetAddress


class ipNetToPhysicalPhysAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class ipNetToPhysicalLastUpdated(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ipNetToPhysicalType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'invalid'), Enum(3, 'dynamic'), Enum(4, 'static'), Enum(5, 'local')]


class ipNetToPhysicalState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'reachable'), Enum(2, 'stale'), Enum(3, 'delay'), Enum(4, 'probe'), Enum(5, 'invalid'), Enum(6, 'unknown'), Enum(7, 'incomplete')]


class ipNetToPhysicalRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipv6ScopeZoneIndexIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 1])
	syntaxobject = InterfaceIndex


class ipv6ScopeZoneIndexLinkLocal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 2])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndex3(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 3])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexAdminLocal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 4])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexSiteLocal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 5])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndex6(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 6])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndex7(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 7])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexOrganizationLocal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 8])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndex9(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 9])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexA(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 10])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexB(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 11])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexC(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 12])
	syntaxobject = InetZoneIndex


class ipv6ScopeZoneIndexD(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1, 13])
	syntaxobject = InetZoneIndex


class ipDefaultRouterAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 37, 1, 1])
	syntaxobject = InetAddressType


class ipDefaultRouterAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 37, 1, 2])
	syntaxobject = InetAddress


class ipDefaultRouterIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 37, 1, 3])
	syntaxobject = InterfaceIndex


class ipDefaultRouterLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 37, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class ipDefaultRouterPreference(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 37, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(-2, 'reserved'), Enum(-1, 'low'), Enum(0, 'medium'), Enum(1, 'high')]


class ipv6RouterAdvertIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 1])
	syntaxobject = InterfaceIndex


class ipv6RouterAdvertSendAdverts(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ipv6RouterAdvertMaxInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class ipv6RouterAdvertMinInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class ipv6RouterAdvertManagedFlag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ipv6RouterAdvertOtherConfigFlag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ipv6RouterAdvertLinkMTU(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipv6RouterAdvertReachableTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class ipv6RouterAdvertRetransmitTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class ipv6RouterAdvertCurHopLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipv6RouterAdvertDefaultLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class ipv6RouterAdvertRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class icmpStatsIPVersion(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 29, 1, 1])
	syntaxobject = InetVersion


class icmpStatsInMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 29, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpStatsInErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 29, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpStatsOutMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 29, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpStatsOutErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 29, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpMsgStatsIPVersion(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 30, 1, 1])
	syntaxobject = InetVersion


class icmpMsgStatsType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 30, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class icmpMsgStatsInPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 30, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class icmpMsgStatsOutPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 30, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class ipAddrEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([ipAdEntAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 20, 1])
	access = 2
	columns = {'ipAdEntAddr': ipAdEntAddr, 'ipAdEntIfIndex': ipAdEntIfIndex, 'ipAdEntNetMask': ipAdEntNetMask, 'ipAdEntBcastAddr': ipAdEntBcastAddr, 'ipAdEntReasmMaxSize': ipAdEntReasmMaxSize}


class ipNetToMediaEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([ipNetToMediaIfIndex, ipNetToMediaNetAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 22, 1])
	access = 2
	columns = {'ipNetToMediaIfIndex': ipNetToMediaIfIndex, 'ipNetToMediaPhysAddress': ipNetToMediaPhysAddress, 'ipNetToMediaNetAddress': ipNetToMediaNetAddress, 'ipNetToMediaType': ipNetToMediaType}


class ipv4InterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipv4InterfaceIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 28, 1])
	access = 2
	columns = {'ipv4InterfaceIfIndex': ipv4InterfaceIfIndex, 'ipv4InterfaceReasmMaxSize': ipv4InterfaceReasmMaxSize, 'ipv4InterfaceEnableStatus': ipv4InterfaceEnableStatus, 'ipv4InterfaceRetransmitTime': ipv4InterfaceRetransmitTime}


class ipv6InterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipv6InterfaceIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 30, 1])
	access = 2
	columns = {'ipv6InterfaceIfIndex': ipv6InterfaceIfIndex, 'ipv6InterfaceReasmMaxSize': ipv6InterfaceReasmMaxSize, 'ipv6InterfaceIdentifier': ipv6InterfaceIdentifier, 'ipv6InterfaceEnableStatus': ipv6InterfaceEnableStatus, 'ipv6InterfaceReachableTime': ipv6InterfaceReachableTime, 'ipv6InterfaceRetransmitTime': ipv6InterfaceRetransmitTime, 'ipv6InterfaceForwarding': ipv6InterfaceForwarding}


class ipSystemStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipSystemStatsIPVersion], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 1, 1])
	access = 2
	columns = {'ipSystemStatsIPVersion': ipSystemStatsIPVersion, 'ipSystemStatsInReceives': ipSystemStatsInReceives, 'ipSystemStatsHCInReceives': ipSystemStatsHCInReceives, 'ipSystemStatsInOctets': ipSystemStatsInOctets, 'ipSystemStatsHCInOctets': ipSystemStatsHCInOctets, 'ipSystemStatsInHdrErrors': ipSystemStatsInHdrErrors, 'ipSystemStatsInNoRoutes': ipSystemStatsInNoRoutes, 'ipSystemStatsInAddrErrors': ipSystemStatsInAddrErrors, 'ipSystemStatsInUnknownProtos': ipSystemStatsInUnknownProtos, 'ipSystemStatsInTruncatedPkts': ipSystemStatsInTruncatedPkts, 'ipSystemStatsInForwDatagrams': ipSystemStatsInForwDatagrams, 'ipSystemStatsHCInForwDatagrams': ipSystemStatsHCInForwDatagrams, 'ipSystemStatsReasmReqds': ipSystemStatsReasmReqds, 'ipSystemStatsReasmOKs': ipSystemStatsReasmOKs, 'ipSystemStatsReasmFails': ipSystemStatsReasmFails, 'ipSystemStatsInDiscards': ipSystemStatsInDiscards, 'ipSystemStatsInDelivers': ipSystemStatsInDelivers, 'ipSystemStatsHCInDelivers': ipSystemStatsHCInDelivers, 'ipSystemStatsOutRequests': ipSystemStatsOutRequests, 'ipSystemStatsHCOutRequests': ipSystemStatsHCOutRequests, 'ipSystemStatsOutNoRoutes': ipSystemStatsOutNoRoutes, 'ipSystemStatsOutForwDatagrams': ipSystemStatsOutForwDatagrams, 'ipSystemStatsHCOutForwDatagrams': ipSystemStatsHCOutForwDatagrams, 'ipSystemStatsOutDiscards': ipSystemStatsOutDiscards, 'ipSystemStatsOutFragReqds': ipSystemStatsOutFragReqds, 'ipSystemStatsOutFragOKs': ipSystemStatsOutFragOKs, 'ipSystemStatsOutFragFails': ipSystemStatsOutFragFails, 'ipSystemStatsOutFragCreates': ipSystemStatsOutFragCreates, 'ipSystemStatsOutTransmits': ipSystemStatsOutTransmits, 'ipSystemStatsHCOutTransmits': ipSystemStatsHCOutTransmits, 'ipSystemStatsOutOctets': ipSystemStatsOutOctets, 'ipSystemStatsHCOutOctets': ipSystemStatsHCOutOctets, 'ipSystemStatsInMcastPkts': ipSystemStatsInMcastPkts, 'ipSystemStatsHCInMcastPkts': ipSystemStatsHCInMcastPkts, 'ipSystemStatsInMcastOctets': ipSystemStatsInMcastOctets, 'ipSystemStatsHCInMcastOctets': ipSystemStatsHCInMcastOctets, 'ipSystemStatsOutMcastPkts': ipSystemStatsOutMcastPkts, 'ipSystemStatsHCOutMcastPkts': ipSystemStatsHCOutMcastPkts, 'ipSystemStatsOutMcastOctets': ipSystemStatsOutMcastOctets, 'ipSystemStatsHCOutMcastOctets': ipSystemStatsHCOutMcastOctets, 'ipSystemStatsInBcastPkts': ipSystemStatsInBcastPkts, 'ipSystemStatsHCInBcastPkts': ipSystemStatsHCInBcastPkts, 'ipSystemStatsOutBcastPkts': ipSystemStatsOutBcastPkts, 'ipSystemStatsHCOutBcastPkts': ipSystemStatsHCOutBcastPkts, 'ipSystemStatsDiscontinuityTime': ipSystemStatsDiscontinuityTime, 'ipSystemStatsRefreshRate': ipSystemStatsRefreshRate}


class ipIfStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipIfStatsIPVersion, ipIfStatsIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 31, 3, 1])
	access = 2
	columns = {'ipIfStatsIPVersion': ipIfStatsIPVersion, 'ipIfStatsIfIndex': ipIfStatsIfIndex, 'ipIfStatsInReceives': ipIfStatsInReceives, 'ipIfStatsHCInReceives': ipIfStatsHCInReceives, 'ipIfStatsInOctets': ipIfStatsInOctets, 'ipIfStatsHCInOctets': ipIfStatsHCInOctets, 'ipIfStatsInHdrErrors': ipIfStatsInHdrErrors, 'ipIfStatsInNoRoutes': ipIfStatsInNoRoutes, 'ipIfStatsInAddrErrors': ipIfStatsInAddrErrors, 'ipIfStatsInUnknownProtos': ipIfStatsInUnknownProtos, 'ipIfStatsInTruncatedPkts': ipIfStatsInTruncatedPkts, 'ipIfStatsInForwDatagrams': ipIfStatsInForwDatagrams, 'ipIfStatsHCInForwDatagrams': ipIfStatsHCInForwDatagrams, 'ipIfStatsReasmReqds': ipIfStatsReasmReqds, 'ipIfStatsReasmOKs': ipIfStatsReasmOKs, 'ipIfStatsReasmFails': ipIfStatsReasmFails, 'ipIfStatsInDiscards': ipIfStatsInDiscards, 'ipIfStatsInDelivers': ipIfStatsInDelivers, 'ipIfStatsHCInDelivers': ipIfStatsHCInDelivers, 'ipIfStatsOutRequests': ipIfStatsOutRequests, 'ipIfStatsHCOutRequests': ipIfStatsHCOutRequests, 'ipIfStatsOutForwDatagrams': ipIfStatsOutForwDatagrams, 'ipIfStatsHCOutForwDatagrams': ipIfStatsHCOutForwDatagrams, 'ipIfStatsOutDiscards': ipIfStatsOutDiscards, 'ipIfStatsOutFragReqds': ipIfStatsOutFragReqds, 'ipIfStatsOutFragOKs': ipIfStatsOutFragOKs, 'ipIfStatsOutFragFails': ipIfStatsOutFragFails, 'ipIfStatsOutFragCreates': ipIfStatsOutFragCreates, 'ipIfStatsOutTransmits': ipIfStatsOutTransmits, 'ipIfStatsHCOutTransmits': ipIfStatsHCOutTransmits, 'ipIfStatsOutOctets': ipIfStatsOutOctets, 'ipIfStatsHCOutOctets': ipIfStatsHCOutOctets, 'ipIfStatsInMcastPkts': ipIfStatsInMcastPkts, 'ipIfStatsHCInMcastPkts': ipIfStatsHCInMcastPkts, 'ipIfStatsInMcastOctets': ipIfStatsInMcastOctets, 'ipIfStatsHCInMcastOctets': ipIfStatsHCInMcastOctets, 'ipIfStatsOutMcastPkts': ipIfStatsOutMcastPkts, 'ipIfStatsHCOutMcastPkts': ipIfStatsHCOutMcastPkts, 'ipIfStatsOutMcastOctets': ipIfStatsOutMcastOctets, 'ipIfStatsHCOutMcastOctets': ipIfStatsHCOutMcastOctets, 'ipIfStatsInBcastPkts': ipIfStatsInBcastPkts, 'ipIfStatsHCInBcastPkts': ipIfStatsHCInBcastPkts, 'ipIfStatsOutBcastPkts': ipIfStatsOutBcastPkts, 'ipIfStatsHCOutBcastPkts': ipIfStatsHCOutBcastPkts, 'ipIfStatsDiscontinuityTime': ipIfStatsDiscontinuityTime, 'ipIfStatsRefreshRate': ipIfStatsRefreshRate}


class ipAddressPrefixEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAddressPrefixIfIndex, ipAddressPrefixType, ipAddressPrefixPrefix, ipAddressPrefixLength], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 32, 1])
	access = 2
	columns = {'ipAddressPrefixIfIndex': ipAddressPrefixIfIndex, 'ipAddressPrefixType': ipAddressPrefixType, 'ipAddressPrefixPrefix': ipAddressPrefixPrefix, 'ipAddressPrefixLength': ipAddressPrefixLength, 'ipAddressPrefixOrigin': ipAddressPrefixOrigin, 'ipAddressPrefixOnLinkFlag': ipAddressPrefixOnLinkFlag, 'ipAddressPrefixAutonomousFlag': ipAddressPrefixAutonomousFlag, 'ipAddressPrefixAdvPreferredLifetime': ipAddressPrefixAdvPreferredLifetime, 'ipAddressPrefixAdvValidLifetime': ipAddressPrefixAdvValidLifetime}


class ipAddressEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAddressAddrType, ipAddressAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 34, 1])
	access = 2
	rowstatus = ipAddressRowStatus
	columns = {'ipAddressAddrType': ipAddressAddrType, 'ipAddressAddr': ipAddressAddr, 'ipAddressIfIndex': ipAddressIfIndex, 'ipAddressType': ipAddressType, 'ipAddressPrefix': ipAddressPrefix, 'ipAddressOrigin': ipAddressOrigin, 'ipAddressStatus': ipAddressStatus, 'ipAddressCreated': ipAddressCreated, 'ipAddressLastChanged': ipAddressLastChanged, 'ipAddressRowStatus': ipAddressRowStatus, 'ipAddressStorageType': ipAddressStorageType}


class ipNetToPhysicalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipNetToPhysicalIfIndex, ipNetToPhysicalNetAddressType, ipNetToPhysicalNetAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 35, 1])
	access = 2
	rowstatus = ipNetToPhysicalRowStatus
	columns = {'ipNetToPhysicalIfIndex': ipNetToPhysicalIfIndex, 'ipNetToPhysicalNetAddressType': ipNetToPhysicalNetAddressType, 'ipNetToPhysicalNetAddress': ipNetToPhysicalNetAddress, 'ipNetToPhysicalPhysAddress': ipNetToPhysicalPhysAddress, 'ipNetToPhysicalLastUpdated': ipNetToPhysicalLastUpdated, 'ipNetToPhysicalType': ipNetToPhysicalType, 'ipNetToPhysicalState': ipNetToPhysicalState, 'ipNetToPhysicalRowStatus': ipNetToPhysicalRowStatus}


class ipv6ScopeZoneIndexEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipv6ScopeZoneIndexIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 36, 1])
	access = 2
	columns = {'ipv6ScopeZoneIndexIfIndex': ipv6ScopeZoneIndexIfIndex, 'ipv6ScopeZoneIndexLinkLocal': ipv6ScopeZoneIndexLinkLocal, 'ipv6ScopeZoneIndex3': ipv6ScopeZoneIndex3, 'ipv6ScopeZoneIndexAdminLocal': ipv6ScopeZoneIndexAdminLocal, 'ipv6ScopeZoneIndexSiteLocal': ipv6ScopeZoneIndexSiteLocal, 'ipv6ScopeZoneIndex6': ipv6ScopeZoneIndex6, 'ipv6ScopeZoneIndex7': ipv6ScopeZoneIndex7, 'ipv6ScopeZoneIndexOrganizationLocal': ipv6ScopeZoneIndexOrganizationLocal, 'ipv6ScopeZoneIndex9': ipv6ScopeZoneIndex9, 'ipv6ScopeZoneIndexA': ipv6ScopeZoneIndexA, 'ipv6ScopeZoneIndexB': ipv6ScopeZoneIndexB, 'ipv6ScopeZoneIndexC': ipv6ScopeZoneIndexC, 'ipv6ScopeZoneIndexD': ipv6ScopeZoneIndexD}


class ipDefaultRouterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipDefaultRouterAddressType, ipDefaultRouterAddress, ipDefaultRouterIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 37, 1])
	access = 2
	columns = {'ipDefaultRouterAddressType': ipDefaultRouterAddressType, 'ipDefaultRouterAddress': ipDefaultRouterAddress, 'ipDefaultRouterIfIndex': ipDefaultRouterIfIndex, 'ipDefaultRouterLifetime': ipDefaultRouterLifetime, 'ipDefaultRouterPreference': ipDefaultRouterPreference}


class ipv6RouterAdvertEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipv6RouterAdvertIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 4, 39, 1])
	access = 2
	rowstatus = ipv6RouterAdvertRowStatus
	columns = {'ipv6RouterAdvertIfIndex': ipv6RouterAdvertIfIndex, 'ipv6RouterAdvertSendAdverts': ipv6RouterAdvertSendAdverts, 'ipv6RouterAdvertMaxInterval': ipv6RouterAdvertMaxInterval, 'ipv6RouterAdvertMinInterval': ipv6RouterAdvertMinInterval, 'ipv6RouterAdvertManagedFlag': ipv6RouterAdvertManagedFlag, 'ipv6RouterAdvertOtherConfigFlag': ipv6RouterAdvertOtherConfigFlag, 'ipv6RouterAdvertLinkMTU': ipv6RouterAdvertLinkMTU, 'ipv6RouterAdvertReachableTime': ipv6RouterAdvertReachableTime, 'ipv6RouterAdvertRetransmitTime': ipv6RouterAdvertRetransmitTime, 'ipv6RouterAdvertCurHopLimit': ipv6RouterAdvertCurHopLimit, 'ipv6RouterAdvertDefaultLifetime': ipv6RouterAdvertDefaultLifetime, 'ipv6RouterAdvertRowStatus': ipv6RouterAdvertRowStatus}


class icmpStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([icmpStatsIPVersion], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 29, 1])
	access = 2
	columns = {'icmpStatsIPVersion': icmpStatsIPVersion, 'icmpStatsInMsgs': icmpStatsInMsgs, 'icmpStatsInErrors': icmpStatsInErrors, 'icmpStatsOutMsgs': icmpStatsOutMsgs, 'icmpStatsOutErrors': icmpStatsOutErrors}


class icmpMsgStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([icmpMsgStatsIPVersion, icmpMsgStatsType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 5, 30, 1])
	access = 2
	columns = {'icmpMsgStatsIPVersion': icmpMsgStatsIPVersion, 'icmpMsgStatsType': icmpMsgStatsType, 'icmpMsgStatsInPkts': icmpMsgStatsInPkts, 'icmpMsgStatsOutPkts': icmpMsgStatsOutPkts}


# notifications (traps) 
# groups 
class ipGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 1])
	group = [ipForwarding, ipDefaultTTL, ipInReceives, ipInHdrErrors, ipInAddrErrors, ipForwDatagrams, ipInUnknownProtos, ipInDiscards, ipInDelivers, ipOutRequests, ipOutDiscards, ipOutNoRoutes, ipReasmTimeout, ipReasmReqds, ipReasmOKs, ipReasmFails, ipFragOKs, ipFragFails, ipFragCreates, ipAdEntAddr, ipAdEntIfIndex, ipAdEntNetMask, ipAdEntBcastAddr, ipAdEntReasmMaxSize, ipNetToMediaIfIndex, ipNetToMediaPhysAddress, ipNetToMediaNetAddress, ipNetToMediaType, ipRoutingDiscards]

class icmpGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 2])
	group = [icmpInMsgs, icmpInErrors, icmpInDestUnreachs, icmpInTimeExcds, icmpInParmProbs, icmpInSrcQuenchs, icmpInRedirects, icmpInEchos, icmpInEchoReps, icmpInTimestamps, icmpInTimestampReps, icmpInAddrMasks, icmpInAddrMaskReps, icmpOutMsgs, icmpOutErrors, icmpOutDestUnreachs, icmpOutTimeExcds, icmpOutParmProbs, icmpOutSrcQuenchs, icmpOutRedirects, icmpOutEchos, icmpOutEchoReps, icmpOutTimestamps, icmpOutTimestampReps, icmpOutAddrMasks, icmpOutAddrMaskReps]

class ipv4GeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 3])
	group = [ipForwarding, ipDefaultTTL, ipReasmTimeout]

class ipv4IfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 4])
	group = [ipv4InterfaceReasmMaxSize, ipv4InterfaceEnableStatus, ipv4InterfaceRetransmitTime]

class ipv6GeneralGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 5])
	group = [ipv6IpForwarding, ipv6IpDefaultHopLimit]

class ipv6IfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 6])
	group = [ipv6InterfaceReasmMaxSize, ipv6InterfaceIdentifier, ipv6InterfaceEnableStatus, ipv6InterfaceReachableTime, ipv6InterfaceRetransmitTime, ipv6InterfaceForwarding]

class ipLastChangeGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 7])
	group = [ipv4InterfaceTableLastChange, ipv6InterfaceTableLastChange, ipIfStatsTableLastChange]

class ipSystemStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 8])
	group = [ipSystemStatsInReceives, ipSystemStatsInOctets, ipSystemStatsInHdrErrors, ipSystemStatsInNoRoutes, ipSystemStatsInAddrErrors, ipSystemStatsInUnknownProtos, ipSystemStatsInTruncatedPkts, ipSystemStatsInForwDatagrams, ipSystemStatsReasmReqds, ipSystemStatsReasmOKs, ipSystemStatsReasmFails, ipSystemStatsInDiscards, ipSystemStatsInDelivers, ipSystemStatsOutRequests, ipSystemStatsOutNoRoutes, ipSystemStatsOutForwDatagrams, ipSystemStatsOutDiscards, ipSystemStatsOutFragReqds, ipSystemStatsOutFragOKs, ipSystemStatsOutFragFails, ipSystemStatsOutFragCreates, ipSystemStatsOutTransmits, ipSystemStatsOutOctets, ipSystemStatsInMcastPkts, ipSystemStatsInMcastOctets, ipSystemStatsOutMcastPkts, ipSystemStatsOutMcastOctets, ipSystemStatsDiscontinuityTime, ipSystemStatsRefreshRate]

class ipv4SystemStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 9])
	group = [ipSystemStatsInBcastPkts, ipSystemStatsOutBcastPkts]

class ipSystemStatsHCOctetGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 10])
	group = [ipSystemStatsHCInOctets, ipSystemStatsHCOutOctets, ipSystemStatsHCInMcastOctets, ipSystemStatsHCOutMcastOctets]

class ipSystemStatsHCPacketGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 11])
	group = [ipSystemStatsHCInReceives, ipSystemStatsHCInForwDatagrams, ipSystemStatsHCInDelivers, ipSystemStatsHCOutRequests, ipSystemStatsHCOutForwDatagrams, ipSystemStatsHCOutTransmits, ipSystemStatsHCInMcastPkts, ipSystemStatsHCOutMcastPkts]

class ipv4SystemStatsHCPacketGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 12])
	group = [ipSystemStatsHCInBcastPkts, ipSystemStatsHCOutBcastPkts]

class ipIfStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 13])
	group = [ipIfStatsInReceives, ipIfStatsInOctets, ipIfStatsInHdrErrors, ipIfStatsInNoRoutes, ipIfStatsInAddrErrors, ipIfStatsInUnknownProtos, ipIfStatsInTruncatedPkts, ipIfStatsInForwDatagrams, ipIfStatsReasmReqds, ipIfStatsReasmOKs, ipIfStatsReasmFails, ipIfStatsInDiscards, ipIfStatsInDelivers, ipIfStatsOutRequests, ipIfStatsOutForwDatagrams, ipIfStatsOutDiscards, ipIfStatsOutFragReqds, ipIfStatsOutFragOKs, ipIfStatsOutFragFails, ipIfStatsOutFragCreates, ipIfStatsOutTransmits, ipIfStatsOutOctets, ipIfStatsInMcastPkts, ipIfStatsInMcastOctets, ipIfStatsOutMcastPkts, ipIfStatsOutMcastOctets, ipIfStatsDiscontinuityTime, ipIfStatsRefreshRate]

class ipv4IfStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 14])
	group = [ipIfStatsInBcastPkts, ipIfStatsOutBcastPkts]

class ipIfStatsHCOctetGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 15])
	group = [ipIfStatsHCInOctets, ipIfStatsHCOutOctets, ipIfStatsHCInMcastOctets, ipIfStatsHCOutMcastOctets]

class ipIfStatsHCPacketGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 16])
	group = [ipIfStatsHCInReceives, ipIfStatsHCInForwDatagrams, ipIfStatsHCInDelivers, ipIfStatsHCOutRequests, ipIfStatsHCOutForwDatagrams, ipIfStatsHCOutTransmits, ipIfStatsHCInMcastPkts, ipIfStatsHCOutMcastPkts]

class ipv4IfStatsHCPacketGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 17])
	group = [ipIfStatsHCInBcastPkts, ipIfStatsHCOutBcastPkts]

class ipAddressPrefixGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 18])
	group = [ipAddressPrefixOrigin, ipAddressPrefixOnLinkFlag, ipAddressPrefixAutonomousFlag, ipAddressPrefixAdvPreferredLifetime, ipAddressPrefixAdvValidLifetime]

class ipAddressGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 19])
	group = [ipAddressSpinLock, ipAddressIfIndex, ipAddressType, ipAddressPrefix, ipAddressOrigin, ipAddressStatus, ipAddressCreated, ipAddressLastChanged, ipAddressRowStatus, ipAddressStorageType]

class ipNetToPhysicalGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 20])
	group = [ipNetToPhysicalPhysAddress, ipNetToPhysicalLastUpdated, ipNetToPhysicalType, ipNetToPhysicalState, ipNetToPhysicalRowStatus]

class ipv6ScopeGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 21])
	group = [ipv6ScopeZoneIndexLinkLocal, ipv6ScopeZoneIndex3, ipv6ScopeZoneIndexAdminLocal, ipv6ScopeZoneIndexSiteLocal, ipv6ScopeZoneIndex6, ipv6ScopeZoneIndex7, ipv6ScopeZoneIndexOrganizationLocal, ipv6ScopeZoneIndex9, ipv6ScopeZoneIndexA, ipv6ScopeZoneIndexB, ipv6ScopeZoneIndexC, ipv6ScopeZoneIndexD]

class ipDefaultRouterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 22])
	group = [ipDefaultRouterLifetime, ipDefaultRouterPreference]

class ipv6RouterAdvertGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 23])
	group = [ipv6RouterAdvertSpinLock, ipv6RouterAdvertSendAdverts, ipv6RouterAdvertMaxInterval, ipv6RouterAdvertMinInterval, ipv6RouterAdvertManagedFlag, ipv6RouterAdvertOtherConfigFlag, ipv6RouterAdvertLinkMTU, ipv6RouterAdvertReachableTime, ipv6RouterAdvertRetransmitTime, ipv6RouterAdvertCurHopLimit, ipv6RouterAdvertDefaultLifetime, ipv6RouterAdvertRowStatus]

class icmpStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 48, 2, 2, 24])
	group = [icmpStatsInMsgs, icmpStatsInErrors, icmpStatsOutMsgs, icmpStatsOutErrors, icmpMsgStatsInPkts, icmpMsgStatsOutPkts]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
