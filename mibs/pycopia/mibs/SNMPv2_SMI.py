# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 

class SNMPv2_SMI(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/SNMPv2-SMI'
	conformance = 2
	name = 'SNMPv2-SMI'
	language = 2

# nodes
class zeroDotZero(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([0, 0])
	name = 'zeroDotZero'

class org(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3])
	name = 'org'

class dod(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6])
	name = 'dod'

class internet(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1])
	name = 'internet'

class directory(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 1])
	name = 'directory'

class mgmt(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2])
	name = 'mgmt'

class mib_2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1])
	name = 'mib-2'

class transmission(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10])
	name = 'transmission'

class experimental(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3])
	name = 'experimental'

class private(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4])
	name = 'private'

class enterprises(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1])
	name = 'enterprises'

class security(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 5])
	name = 'security'

class snmpV2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6])
	name = 'snmpV2'

class snmpDomains(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 1])
	name = 'snmpDomains'

class snmpProxys(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 2])
	name = 'snmpProxys'

class snmpModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3])
	name = 'snmpModules'


# macros
class MODULE_IDENTITY(MacroObject):
	name = 'MODULE-IDENTITY'


class OBJECT_IDENTITY(MacroObject):
	name = 'OBJECT-IDENTITY'


class OBJECT_TYPE(MacroObject):
	name = 'OBJECT-TYPE'


class NOTIFICATION_TYPE(MacroObject):
	name = 'NOTIFICATION-TYPE'


# types 

class ExtUTCTime(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(11, 11), Range(13, 13))


class ObjectName(pycopia.SMI.Basetypes.ObjectIdentifier):
	pass


class NotificationName(pycopia.SMI.Basetypes.ObjectIdentifier):
	pass

Integer32 = pycopia.SMI.Basetypes.Integer32
IpAddress = pycopia.SMI.Basetypes.IpAddress
Counter32 = pycopia.SMI.Basetypes.Counter32
Gauge32 = pycopia.SMI.Basetypes.Gauge32
Unsigned32 = pycopia.SMI.Basetypes.Unsigned32
TimeTicks = pycopia.SMI.Basetypes.TimeTicks
Opaque = pycopia.SMI.Basetypes.Opaque
Counter64 = pycopia.SMI.Basetypes.Counter64
# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

ObjectSyntax = pycopia.SMI.Basetypes.ObjectSyntax
SimpleSyntax = pycopia.SMI.Basetypes.SimpleSyntax
ApplicationSyntax = pycopia.SMI.Basetypes.ApplicationSyntax

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
