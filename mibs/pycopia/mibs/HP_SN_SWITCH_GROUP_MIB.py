# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from HP_SN_ROOT_MIB import snSwitch
from RFC1155_SMI import Counter, TimeTicks, IpAddress, Gauge

class HP_SN_SWITCH_GROUP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-SWITCH-GROUP-MIB'
	conformance = 2
	name = 'HP-SN-SWITCH-GROUP-MIB'
	language = 1

# nodes
class snSwInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1])
	name = 'snSwInfo'

class snVLanInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2])
	name = 'snVLanInfo'

class snSwPortInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3])
	name = 'snSwPortInfo'

class snFdbInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4])
	name = 'snFdbInfo'

class snPortStpInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5])
	name = 'snPortStpInfo'

class snTrunkInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6])
	name = 'snTrunkInfo'

class snSwSummary(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7])
	name = 'snSwSummary'

class snDhcpGatewayListInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 8])
	name = 'snDhcpGatewayListInfo'

class snDnsInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 9])
	name = 'snDnsInfo'

class snMacFilter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10])
	name = 'snMacFilter'

class snNTP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11])
	name = 'snNTP'

class snNTPGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 1])
	name = 'snNTPGeneral'

class snRadius(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12])
	name = 'snRadius'

class snRadiusGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1])
	name = 'snRadiusGeneral'

class snTacacs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13])
	name = 'snTacacs'

class snTacacsGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 1])
	name = 'snTacacsGeneral'

class snQos(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14])
	name = 'snQos'


# macros
# types 
DisplayString = pycopia.SMI.Basetypes.DisplayString
PhysAddress = pycopia.SMI.Basetypes.PhysAddress
MacAddress = pycopia.SMI.Basetypes.MacAddress

class BridgeId(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(8, 8))


class Timeout(pycopia.SMI.Basetypes.Integer32):
	pass


class PortMask(pycopia.SMI.Basetypes.Integer32):
	pass

# scalars 
class snSwGroupOperMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noVLan'), Enum(2, 'vlanByPort')]


class snSwGroupIpL3SwMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwGroupIpMcastMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwGroupDefaultCfgMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'default'), Enum(2, 'nonDefault')]


class snSwGroupSwitchAgeTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanGroupVlanCurEntry(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanGroupSetAllVLan(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortSetAll(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbTableCurEntry(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbTableStationFlush(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'error'), Enum(3, 'flush'), Enum(4, 'flushing')]


class snPortStpSetAll(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwProbePortNum(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSw8021qTagMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwGlobalStpMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwIpMcastQuerierMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'querier'), Enum(2, 'nonQuerier')]


class snSwViolatorPortNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwViolatorMacAddress(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class snVLanGroupVlanMaxEntry(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwEosBufferSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortEntrySize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortEntrySize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbStationEntrySize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpEntrySize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwEnableBridgeNewRootTrap(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwEnableBridgeTopoChangeTrap(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwEnableLockedAddrViolationTrap(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwIpxL3SwMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVLanByIpSubnetMaxSubnets(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByIpxNetMaxNetworks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwProtocolVLanMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snMacStationVLanId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwClearCounters(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'valid'), Enum(1, 'clear')]


class snSw8021qTagType(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwBroadcastLimit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwMaxMacFilterPerSystem(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwMaxMacFilterPerPort(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwDefaultVLanId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwGlobalAutoNegotiate(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled'), Enum(2, 'negFullAuto'), Enum(3, 'other')]


class snSwQosMechanism(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'strict'), Enum(1, 'weighted')]


class snSwSingleStpMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwFastStpMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 1, 42])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwSummaryMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snDnsDomainName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 9, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snDnsGatewayIpAddrList(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 9, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snNTPPollInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snNTPTimeZone(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'alaska'), Enum(1, 'aleutian'), Enum(2, 'arizona'), Enum(3, 'central'), Enum(4, 'eastIndiana'), Enum(5, 'eastern'), Enum(6, 'hawaii'), Enum(7, 'michigan'), Enum(8, 'mountain'), Enum(9, 'pacific'), Enum(10, 'samoa'), Enum(11, 'gmtPlus12'), Enum(12, 'gmtPlus11'), Enum(13, 'gmtPlus10'), Enum(14, 'gmtPlus9'), Enum(15, 'gmtPlus8'), Enum(16, 'gmtPlus7'), Enum(17, 'gmtPlus6'), Enum(18, 'gmtPlus5'), Enum(19, 'gmtPlus4'), Enum(20, 'gmtPlus3'), Enum(21, 'gmtPlus2'), Enum(22, 'gmtPlus1'), Enum(23, 'gmt'), Enum(24, 'gmtMinus1'), Enum(25, 'gmtMinus2'), Enum(26, 'gmtMinus3'), Enum(27, 'gmtMinus4'), Enum(28, 'gmtMinus5'), Enum(29, 'gmtMinus6'), Enum(30, 'gmtMinus7'), Enum(31, 'gmtMinus8'), Enum(32, 'gmtMinus9'), Enum(33, 'gmtMinus10'), Enum(34, 'gmtMinus11'), Enum(35, 'gmtMinus12')]


class snNTPSummerTimeEnable(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snNTPSystemClock(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snNTPSync(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'synchronize')]


class snRadiusSNMPAccess(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snRadiusEnableTelnetAuth(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snRadiusRetransmit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRadiusTimeOut(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRadiusDeadTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRadiusKey(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snRadiusLoginMethod(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRadiusEnableMethod(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRadiusWebServerMethod(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRadiusSNMPServerMethod(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snTacacsRetransmit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snTacacsTimeOut(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snTacacsDeadTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snTacacsKey(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snTacacsSNMPAccess(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


# columns
class snVLanByPortVLanIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortVLanId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 3])
	syntaxobject = PortMask


class snVLanByPortQos(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'level0'), Enum(1, 'level1'), Enum(2, 'level2'), Enum(3, 'level3'), Enum(4, 'level4'), Enum(5, 'level5'), Enum(6, 'level6'), Enum(7, 'level7')]


class snVLanByPortStpMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVLanByPortStpPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortStpGroupMaxAge(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortStpGroupHelloTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortStpGroupForwardDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVLanByPortOperState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'notActivated'), Enum(1, 'activated')]


class snVLanByPortBaseNumPorts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortBaseType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'transparent-only'), Enum(3, 'sourceroute-only'), Enum(4, 'srt')]


class snVLanByPortStpProtocolSpecification(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'decLb100'), Enum(3, 'ieee8021d')]


class snVLanByPortStpMaxAge(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 15])
	syntaxobject = Timeout


class snVLanByPortStpHelloTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 16])
	syntaxobject = Timeout


class snVLanByPortStpHoldTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortStpForwardDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 18])
	syntaxobject = Timeout


class snVLanByPortStpTimeSinceTopologyChange(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snVLanByPortStpTopChanges(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVLanByPortStpRootCost(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortStpRootPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortStpDesignatedRoot(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 23])
	syntaxobject = BridgeId


class snVLanByPortBaseBridgeAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class snVLanByPortVLanName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snVLanByPortRouterIntf(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByPortChassisPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByProtocolVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByProtocolIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ip'), Enum(2, 'ipx'), Enum(3, 'appleTalk'), Enum(4, 'decNet'), Enum(5, 'netBios'), Enum(6, 'others')]


class snVLanByProtocolDynamic(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVLanByProtocolStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 4])
	syntaxobject = PortMask


class snVLanByProtocolExcludeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 5])
	syntaxobject = PortMask


class snVLanByProtocolRouterIntf(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByProtocolRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVLanByProtocolDynamicMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 8])
	syntaxobject = PortMask


class snVLanByProtocolChassisStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByProtocolChassisExcludeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByProtocolChassisDynamicMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByProtocolVLanName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snVLanByIpSubnetVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByIpSubnetIpAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snVLanByIpSubnetSubnetMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snVLanByIpSubnetDynamic(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVLanByIpSubnetStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 5])
	syntaxobject = PortMask


class snVLanByIpSubnetExcludeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 6])
	syntaxobject = PortMask


class snVLanByIpSubnetRouterIntf(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByIpSubnetRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVLanByIpSubnetDynamicMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 9])
	syntaxobject = PortMask


class snVLanByIpSubnetChassisStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpSubnetChassisExcludeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpSubnetChassisDynamicMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpSubnetVLanName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snVLanByIpxNetVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByIpxNetNetworkNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpxNetFrameType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'notApplicable'), Enum(1, 'ipxEthernet8022'), Enum(2, 'ipxEthernet8023'), Enum(3, 'ipxEthernetII'), Enum(4, 'ipxEthernetSnap')]


class snVLanByIpxNetDynamic(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVLanByIpxNetStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 5])
	syntaxobject = PortMask


class snVLanByIpxNetExcludeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 6])
	syntaxobject = PortMask


class snVLanByIpxNetRouterIntf(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByIpxNetRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVLanByIpxNetDynamicMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 9])
	syntaxobject = PortMask


class snVLanByIpxNetChassisStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpxNetChassisExcludeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpxNetChassisDynamicMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByIpxNetVLanName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snVLanByATCableVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByATCableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByATCableRouterIntf(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVLanByATCableRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVLanByATCableChassisStaticMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByATCableVLanName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snSwPortInfoPortNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortInfoMonitorMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'input'), Enum(2, 'output'), Enum(3, 'both')]


class snSwPortInfoTagType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tagged'), Enum(2, 'untagged'), Enum(3, 'auto'), Enum(4, 'disabled')]


class snSwPortInfoChnMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'halfDuplex'), Enum(2, 'fullDuplex')]


class snSwPortInfoSpeed(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'sAutoSense'), Enum(2, 's10M'), Enum(3, 's100M'), Enum(4, 's1G'), Enum(5, 's45M'), Enum(6, 's155M')]


class snSwPortInfoMediaType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'm100BaseTX'), Enum(3, 'm100BaseFX'), Enum(4, 'm1000BaseFX'), Enum(5, 'mT3'), Enum(6, 'm155ATM'), Enum(7, 'm1000BaseTX'), Enum(8, 'm622ATM'), Enum(9, 'm155POS'), Enum(10, 'm622POS')]


class snSwPortInfoConnectorType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'copper'), Enum(3, 'fiber')]


class snSwPortInfoAdminStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'testing')]


class snSwPortInfoLinkStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'testing')]


class snSwPortInfoPortQos(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'level0'), Enum(1, 'level1'), Enum(2, 'level2'), Enum(3, 'level3'), Enum(4, 'level4'), Enum(5, 'level5'), Enum(6, 'level6'), Enum(7, 'level7')]


class snSwPortInfoPhysAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snSwPortStatsInFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsOutFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsAlignErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsFCSErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsMultiColliFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsFrameTooLongs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsTxColliFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsRxColliFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsFrameTooShorts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortLockAddressCount(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortStpPortEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwPortDhcpGateListId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snSwPortStatsInBcastFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsOutBcastFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsInMcastFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsOutMcastFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsInDiscard(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsOutDiscard(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortStatsMacStations(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortCacheGroupId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortTransGroupId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortInfoAutoNegotiate(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled'), Enum(2, 'negFullAuto'), Enum(3, 'global'), Enum(4, 'other')]


class snSwPortInfoFlowControl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwPortInfoGigType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'm1000BaseSX'), Enum(1, 'm1000BaseLX'), Enum(2, 'm1000BaseLH'), Enum(255, 'notApplicable')]


class snSwPortStatsLinkChange(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snSwPortIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortDescr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snSwPortInOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snSwPortOutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snSwPortStatsInBitsPerSec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 42])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snSwPortStatsOutBitsPerSec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 43])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snSwPortStatsInPktsPerSec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 44])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snSwPortStatsOutPktsPerSec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 45])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snSwPortStatsInUtilization(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 46])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortStatsOutUtilization(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 47])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortFastSpanPortEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 48])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwPortFastSpanUplinkEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 49])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snSwPortVlanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 50])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortRouteOnly(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1, 51])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snFdbStationIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbStationAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class snFdbStationPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbVLanId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbStationQos(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'level0'), Enum(1, 'level1'), Enum(2, 'level2'), Enum(3, 'level3'), Enum(4, 'level4'), Enum(5, 'level5'), Enum(6, 'level6'), Enum(7, 'level7')]


class snFdbStationType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'notSupported'), Enum(1, 'host'), Enum(2, 'router')]


class snFdbRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class snPortStpVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpPortNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpPortPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpPathCost(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpOperState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'notActivated'), Enum(1, 'activated')]


class snPortStpPortEnable(ColumnObject):
	status = 3
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class snPortStpPortForwardTransitions(ColumnObject):
	access = 2
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPortStpPortState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'blocking'), Enum(3, 'listening'), Enum(4, 'learning'), Enum(5, 'forwarding'), Enum(6, 'broken')]


class snPortStpPortDesignatedCost(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpPortDesignatedRoot(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 10])
	syntaxobject = BridgeId


class snPortStpPortDesignatedBridge(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 11])
	syntaxobject = BridgeId


class snPortStpPortDesignatedPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snTrunkIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snTrunkPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 1, 1, 2])
	syntaxobject = PortMask


class snTrunkType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'switch'), Enum(2, 'server')]


class snMSTrunkPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snMSTrunkPortList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snMSTrunkType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'switch'), Enum(2, 'server')]


class snMSTrunkRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVLanByPortCfgEos(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVLanByPortVLanEosIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snSwPortCfgEos(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snSwPortEosPortNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFdbCfgEos(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snFdbStationEosIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPortStpCfgEos(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snDhcpGatewayListId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDhcpGatewayListAddrList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snDhcpGatewayListRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class snMacFilterIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snMacFilterAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]


class snMacFilterSourceMac(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class snMacFilterSourceMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class snMacFilterDestMac(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class snMacFilterDestMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class snMacFilterOperator(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'equal'), Enum(1, 'notEqual'), Enum(2, 'less'), Enum(3, 'greater')]


class snMacFilterFrameType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'notUsed'), Enum(1, 'ethernet'), Enum(2, 'llc'), Enum(3, 'snap')]


class snMacFilterFrameTypeNum(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snMacFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snMacFilterPortAccessPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snMacFilterPortAccessFilters(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snMacFilterPortAccessRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class snNTPServerIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snNTPServerVersion(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snNTPServerRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class snRadiusServerIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRadiusServerAuthPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRadiusServerAcctPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRadiusServerRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class snTacacsServerIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snTacacsServerAuthPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snTacacsServerRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class snQosProfileIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snQosProfileName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snQosProfileRequestedBandwidth(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snQosProfileCalculatedBandwidth(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snQosBindIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snQosBindPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snQosBindProfileIndex(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class snVLanByPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVLanByPortVLanIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 1, 1])
	access = 2
	columns = {'snVLanByPortVLanIndex': snVLanByPortVLanIndex, 'snVLanByPortVLanId': snVLanByPortVLanId, 'snVLanByPortPortMask': snVLanByPortPortMask, 'snVLanByPortQos': snVLanByPortQos, 'snVLanByPortStpMode': snVLanByPortStpMode, 'snVLanByPortStpPriority': snVLanByPortStpPriority, 'snVLanByPortStpGroupMaxAge': snVLanByPortStpGroupMaxAge, 'snVLanByPortStpGroupHelloTime': snVLanByPortStpGroupHelloTime, 'snVLanByPortStpGroupForwardDelay': snVLanByPortStpGroupForwardDelay, 'snVLanByPortRowStatus': snVLanByPortRowStatus, 'snVLanByPortOperState': snVLanByPortOperState, 'snVLanByPortBaseNumPorts': snVLanByPortBaseNumPorts, 'snVLanByPortBaseType': snVLanByPortBaseType, 'snVLanByPortStpProtocolSpecification': snVLanByPortStpProtocolSpecification, 'snVLanByPortStpMaxAge': snVLanByPortStpMaxAge, 'snVLanByPortStpHelloTime': snVLanByPortStpHelloTime, 'snVLanByPortStpHoldTime': snVLanByPortStpHoldTime, 'snVLanByPortStpForwardDelay': snVLanByPortStpForwardDelay, 'snVLanByPortStpTimeSinceTopologyChange': snVLanByPortStpTimeSinceTopologyChange, 'snVLanByPortStpTopChanges': snVLanByPortStpTopChanges, 'snVLanByPortStpRootCost': snVLanByPortStpRootCost, 'snVLanByPortStpRootPort': snVLanByPortStpRootPort, 'snVLanByPortStpDesignatedRoot': snVLanByPortStpDesignatedRoot, 'snVLanByPortBaseBridgeAddress': snVLanByPortBaseBridgeAddress, 'snVLanByPortVLanName': snVLanByPortVLanName, 'snVLanByPortRouterIntf': snVLanByPortRouterIntf, 'snVLanByPortChassisPortMask': snVLanByPortChassisPortMask}


class snVLanByProtocolEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVLanByProtocolVLanId, snVLanByProtocolIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 2, 1])
	access = 2
	columns = {'snVLanByProtocolVLanId': snVLanByProtocolVLanId, 'snVLanByProtocolIndex': snVLanByProtocolIndex, 'snVLanByProtocolDynamic': snVLanByProtocolDynamic, 'snVLanByProtocolStaticMask': snVLanByProtocolStaticMask, 'snVLanByProtocolExcludeMask': snVLanByProtocolExcludeMask, 'snVLanByProtocolRouterIntf': snVLanByProtocolRouterIntf, 'snVLanByProtocolRowStatus': snVLanByProtocolRowStatus, 'snVLanByProtocolDynamicMask': snVLanByProtocolDynamicMask, 'snVLanByProtocolChassisStaticMask': snVLanByProtocolChassisStaticMask, 'snVLanByProtocolChassisExcludeMask': snVLanByProtocolChassisExcludeMask, 'snVLanByProtocolChassisDynamicMask': snVLanByProtocolChassisDynamicMask, 'snVLanByProtocolVLanName': snVLanByProtocolVLanName}


class snVLanByIpSubnetEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVLanByIpSubnetVLanId, snVLanByIpSubnetIpAddress, snVLanByIpSubnetSubnetMask], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 3, 1])
	access = 2
	columns = {'snVLanByIpSubnetVLanId': snVLanByIpSubnetVLanId, 'snVLanByIpSubnetIpAddress': snVLanByIpSubnetIpAddress, 'snVLanByIpSubnetSubnetMask': snVLanByIpSubnetSubnetMask, 'snVLanByIpSubnetDynamic': snVLanByIpSubnetDynamic, 'snVLanByIpSubnetStaticMask': snVLanByIpSubnetStaticMask, 'snVLanByIpSubnetExcludeMask': snVLanByIpSubnetExcludeMask, 'snVLanByIpSubnetRouterIntf': snVLanByIpSubnetRouterIntf, 'snVLanByIpSubnetRowStatus': snVLanByIpSubnetRowStatus, 'snVLanByIpSubnetDynamicMask': snVLanByIpSubnetDynamicMask, 'snVLanByIpSubnetChassisStaticMask': snVLanByIpSubnetChassisStaticMask, 'snVLanByIpSubnetChassisExcludeMask': snVLanByIpSubnetChassisExcludeMask, 'snVLanByIpSubnetChassisDynamicMask': snVLanByIpSubnetChassisDynamicMask, 'snVLanByIpSubnetVLanName': snVLanByIpSubnetVLanName}


class snVLanByIpxNetEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVLanByIpxNetVLanId, snVLanByIpxNetNetworkNum, snVLanByIpxNetFrameType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 4, 1])
	access = 2
	columns = {'snVLanByIpxNetVLanId': snVLanByIpxNetVLanId, 'snVLanByIpxNetNetworkNum': snVLanByIpxNetNetworkNum, 'snVLanByIpxNetFrameType': snVLanByIpxNetFrameType, 'snVLanByIpxNetDynamic': snVLanByIpxNetDynamic, 'snVLanByIpxNetStaticMask': snVLanByIpxNetStaticMask, 'snVLanByIpxNetExcludeMask': snVLanByIpxNetExcludeMask, 'snVLanByIpxNetRouterIntf': snVLanByIpxNetRouterIntf, 'snVLanByIpxNetRowStatus': snVLanByIpxNetRowStatus, 'snVLanByIpxNetDynamicMask': snVLanByIpxNetDynamicMask, 'snVLanByIpxNetChassisStaticMask': snVLanByIpxNetChassisStaticMask, 'snVLanByIpxNetChassisExcludeMask': snVLanByIpxNetChassisExcludeMask, 'snVLanByIpxNetChassisDynamicMask': snVLanByIpxNetChassisDynamicMask, 'snVLanByIpxNetVLanName': snVLanByIpxNetVLanName}


class snVLanByATCableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVLanByATCableVLanId, snVLanByATCableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 2, 5, 1])
	access = 2
	columns = {'snVLanByATCableVLanId': snVLanByATCableVLanId, 'snVLanByATCableIndex': snVLanByATCableIndex, 'snVLanByATCableRouterIntf': snVLanByATCableRouterIntf, 'snVLanByATCableRowStatus': snVLanByATCableRowStatus, 'snVLanByATCableChassisStaticMask': snVLanByATCableChassisStaticMask, 'snVLanByATCableVLanName': snVLanByATCableVLanName}


class snSwPortInfoEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snSwPortInfoPortNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 3, 1, 1])
	access = 2
	columns = {'snSwPortInfoPortNum': snSwPortInfoPortNum, 'snSwPortInfoMonitorMode': snSwPortInfoMonitorMode, 'snSwPortInfoTagType': snSwPortInfoTagType, 'snSwPortInfoChnMode': snSwPortInfoChnMode, 'snSwPortInfoSpeed': snSwPortInfoSpeed, 'snSwPortInfoMediaType': snSwPortInfoMediaType, 'snSwPortInfoConnectorType': snSwPortInfoConnectorType, 'snSwPortInfoAdminStatus': snSwPortInfoAdminStatus, 'snSwPortInfoLinkStatus': snSwPortInfoLinkStatus, 'snSwPortInfoPortQos': snSwPortInfoPortQos, 'snSwPortInfoPhysAddress': snSwPortInfoPhysAddress, 'snSwPortStatsInFrames': snSwPortStatsInFrames, 'snSwPortStatsOutFrames': snSwPortStatsOutFrames, 'snSwPortStatsAlignErrors': snSwPortStatsAlignErrors, 'snSwPortStatsFCSErrors': snSwPortStatsFCSErrors, 'snSwPortStatsMultiColliFrames': snSwPortStatsMultiColliFrames, 'snSwPortStatsFrameTooLongs': snSwPortStatsFrameTooLongs, 'snSwPortStatsTxColliFrames': snSwPortStatsTxColliFrames, 'snSwPortStatsRxColliFrames': snSwPortStatsRxColliFrames, 'snSwPortStatsFrameTooShorts': snSwPortStatsFrameTooShorts, 'snSwPortLockAddressCount': snSwPortLockAddressCount, 'snSwPortStpPortEnable': snSwPortStpPortEnable, 'snSwPortDhcpGateListId': snSwPortDhcpGateListId, 'snSwPortName': snSwPortName, 'snSwPortStatsInBcastFrames': snSwPortStatsInBcastFrames, 'snSwPortStatsOutBcastFrames': snSwPortStatsOutBcastFrames, 'snSwPortStatsInMcastFrames': snSwPortStatsInMcastFrames, 'snSwPortStatsOutMcastFrames': snSwPortStatsOutMcastFrames, 'snSwPortStatsInDiscard': snSwPortStatsInDiscard, 'snSwPortStatsOutDiscard': snSwPortStatsOutDiscard, 'snSwPortStatsMacStations': snSwPortStatsMacStations, 'snSwPortCacheGroupId': snSwPortCacheGroupId, 'snSwPortTransGroupId': snSwPortTransGroupId, 'snSwPortInfoAutoNegotiate': snSwPortInfoAutoNegotiate, 'snSwPortInfoFlowControl': snSwPortInfoFlowControl, 'snSwPortInfoGigType': snSwPortInfoGigType, 'snSwPortStatsLinkChange': snSwPortStatsLinkChange, 'snSwPortIfIndex': snSwPortIfIndex, 'snSwPortDescr': snSwPortDescr, 'snSwPortInOctets': snSwPortInOctets, 'snSwPortOutOctets': snSwPortOutOctets, 'snSwPortStatsInBitsPerSec': snSwPortStatsInBitsPerSec, 'snSwPortStatsOutBitsPerSec': snSwPortStatsOutBitsPerSec, 'snSwPortStatsInPktsPerSec': snSwPortStatsInPktsPerSec, 'snSwPortStatsOutPktsPerSec': snSwPortStatsOutPktsPerSec, 'snSwPortStatsInUtilization': snSwPortStatsInUtilization, 'snSwPortStatsOutUtilization': snSwPortStatsOutUtilization, 'snSwPortFastSpanPortEnable': snSwPortFastSpanPortEnable, 'snSwPortFastSpanUplinkEnable': snSwPortFastSpanUplinkEnable, 'snSwPortVlanId': snSwPortVlanId, 'snSwPortRouteOnly': snSwPortRouteOnly}


class snFdbEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snFdbStationIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 4, 1, 1])
	access = 2
	columns = {'snFdbStationIndex': snFdbStationIndex, 'snFdbStationAddr': snFdbStationAddr, 'snFdbStationPort': snFdbStationPort, 'snFdbVLanId': snFdbVLanId, 'snFdbStationQos': snFdbStationQos, 'snFdbStationType': snFdbStationType, 'snFdbRowStatus': snFdbRowStatus}


class snPortStpEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snPortStpVLanId, snPortStpPortNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 5, 1, 1])
	access = 2
	columns = {'snPortStpVLanId': snPortStpVLanId, 'snPortStpPortNum': snPortStpPortNum, 'snPortStpPortPriority': snPortStpPortPriority, 'snPortStpPathCost': snPortStpPathCost, 'snPortStpOperState': snPortStpOperState, 'snPortStpPortEnable': snPortStpPortEnable, 'snPortStpPortForwardTransitions': snPortStpPortForwardTransitions, 'snPortStpPortState': snPortStpPortState, 'snPortStpPortDesignatedCost': snPortStpPortDesignatedCost, 'snPortStpPortDesignatedRoot': snPortStpPortDesignatedRoot, 'snPortStpPortDesignatedBridge': snPortStpPortDesignatedBridge, 'snPortStpPortDesignatedPort': snPortStpPortDesignatedPort}


class snTrunkEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snTrunkIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 1, 1])
	access = 2
	columns = {'snTrunkIndex': snTrunkIndex, 'snTrunkPortMask': snTrunkPortMask, 'snTrunkType': snTrunkType}


class snMSTrunkEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snMSTrunkPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 6, 2, 1])
	access = 2
	columns = {'snMSTrunkPortIndex': snMSTrunkPortIndex, 'snMSTrunkPortList': snMSTrunkPortList, 'snMSTrunkType': snMSTrunkType, 'snMSTrunkRowStatus': snMSTrunkRowStatus}


class snVLanByPortEosEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVLanByPortVLanEosIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 2, 1])
	access = 2
	columns = {'snVLanByPortCfgEos': snVLanByPortCfgEos, 'snVLanByPortVLanEosIndex': snVLanByPortVLanEosIndex}


class snSwPortEosEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snSwPortEosPortNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 3, 1])
	access = 2
	columns = {'snSwPortCfgEos': snSwPortCfgEos, 'snSwPortEosPortNum': snSwPortEosPortNum}


class snFdbEosEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snFdbStationEosIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 4, 1])
	access = 2
	columns = {'snFdbCfgEos': snFdbCfgEos, 'snFdbStationEosIndex': snFdbStationEosIndex}


class snPortStpEosEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snPortStpVLanId, snPortStpPortNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 7, 5, 1])
	access = 2
	columns = {'snPortStpCfgEos': snPortStpCfgEos}


class snDhcpGatewayListEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snDhcpGatewayListId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 8, 1, 1])
	access = 2
	columns = {'snDhcpGatewayListId': snDhcpGatewayListId, 'snDhcpGatewayListAddrList': snDhcpGatewayListAddrList, 'snDhcpGatewayListRowStatus': snDhcpGatewayListRowStatus}


class snMacFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snMacFilterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 1, 1])
	access = 2
	columns = {'snMacFilterIndex': snMacFilterIndex, 'snMacFilterAction': snMacFilterAction, 'snMacFilterSourceMac': snMacFilterSourceMac, 'snMacFilterSourceMask': snMacFilterSourceMask, 'snMacFilterDestMac': snMacFilterDestMac, 'snMacFilterDestMask': snMacFilterDestMask, 'snMacFilterOperator': snMacFilterOperator, 'snMacFilterFrameType': snMacFilterFrameType, 'snMacFilterFrameTypeNum': snMacFilterFrameTypeNum, 'snMacFilterRowStatus': snMacFilterRowStatus}


class snMacFilterPortAccessEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snMacFilterPortAccessPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 10, 2, 1])
	access = 2
	columns = {'snMacFilterPortAccessPortIndex': snMacFilterPortAccessPortIndex, 'snMacFilterPortAccessFilters': snMacFilterPortAccessFilters, 'snMacFilterPortAccessRowStatus': snMacFilterPortAccessRowStatus}


class snNTPServerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snNTPServerIp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 11, 2, 1])
	access = 2
	columns = {'snNTPServerIp': snNTPServerIp, 'snNTPServerVersion': snNTPServerVersion, 'snNTPServerRowStatus': snNTPServerRowStatus}


class snRadiusServerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRadiusServerIp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 12, 2, 1])
	access = 2
	columns = {'snRadiusServerIp': snRadiusServerIp, 'snRadiusServerAuthPort': snRadiusServerAuthPort, 'snRadiusServerAcctPort': snRadiusServerAcctPort, 'snRadiusServerRowStatus': snRadiusServerRowStatus}


class snTacacsServerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snTacacsServerIp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 13, 2, 1])
	access = 2
	columns = {'snTacacsServerIp': snTacacsServerIp, 'snTacacsServerAuthPort': snTacacsServerAuthPort, 'snTacacsServerRowStatus': snTacacsServerRowStatus}


class snQosProfileEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snQosProfileIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 1, 1])
	access = 2
	columns = {'snQosProfileIndex': snQosProfileIndex, 'snQosProfileName': snQosProfileName, 'snQosProfileRequestedBandwidth': snQosProfileRequestedBandwidth, 'snQosProfileCalculatedBandwidth': snQosProfileCalculatedBandwidth}


class snQosBindEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snQosBindIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 14, 2, 1])
	access = 2
	columns = {'snQosBindIndex': snQosBindIndex, 'snQosBindPriority': snQosBindPriority, 'snQosBindProfileIndex': snQosBindProfileIndex}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
