# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import mib_2, Integer32, Counter32, Counter64, OBJECT_TYPE, MODULE_IDENTITY, NOTIFICATION_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import MacAddress, TruthValue, TimeStamp
from SNMP_REPEATER_MIB import snmpRptrGrpRptrAddrSearch

class DOT12_RPTR_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DOT12-RPTR-MIB'
	conformance = 3
	name = 'DOT12-RPTR-MIB'
	language = 2
	description = 'This MIB module describes objects for managing\nIEEE 802.12 repeaters.'

# nodes
class vgRptrMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53])
	name = 'vgRptrMIB'

class vgRptrObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1])
	name = 'vgRptrObjects'

class vgRptrBasic(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1])
	name = 'vgRptrBasic'

class vgRptrBasicRptr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1])
	name = 'vgRptrBasicRptr'

class vgRptrBasicGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2])
	name = 'vgRptrBasicGroup'

class vgRptrBasicPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3])
	name = 'vgRptrBasicPort'

class vgRptrMonitor(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2])
	name = 'vgRptrMonitor'

class vgRptrMonRepeater(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1])
	name = 'vgRptrMonRepeater'

class vgRptrMonGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 2])
	name = 'vgRptrMonGroup'

class vgRptrMonPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3])
	name = 'vgRptrMonPort'

class vgRptrAddrTrack(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3])
	name = 'vgRptrAddrTrack'

class vgRptrAddrTrackRptr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 1])
	name = 'vgRptrAddrTrackRptr'

class vgRptrAddrTrackGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 2])
	name = 'vgRptrAddrTrackGroup'

class vgRptrAddrTrackPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 3])
	name = 'vgRptrAddrTrackPort'

class vgRptrTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 2])
	name = 'vgRptrTraps'

class vgRptrTrapPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 2, 0])
	name = 'vgRptrTrapPrefix'

class vgRptrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3])
	name = 'vgRptrConformance'

class vgRptrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 1])
	name = 'vgRptrCompliances'

class vgRptrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 2])
	name = 'vgRptrGroups'


# macros
# types 
# scalars 
# columns
class vgRptrInfoIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vgRptrInfoMACAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class vgRptrInfoCurrentFramingType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'frameType88023'), Enum(2, 'frameType88025')]


class vgRptrInfoDesiredFramingType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'frameType88023'), Enum(2, 'frameType88025')]


class vgRptrInfoFramingCapability(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'frameType88023'), Enum(2, 'frameType88025'), Enum(3, 'frameTypeEither')]


class vgRptrInfoTrainingVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vgRptrInfoOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'ok'), Enum(3, 'generalFailure')]


class vgRptrInfoReset(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noReset'), Enum(2, 'reset')]


class vgRptrInfoLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class vgRptrGroupIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vgRptrGroupObjectID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class vgRptrGroupOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'operational'), Enum(3, 'malfunctioning'), Enum(4, 'notPresent'), Enum(5, 'underTest'), Enum(6, 'resetInProgress')]


class vgRptrGroupPortCapacity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vgRptrGroupCablesBundled(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'someCablesBundled'), Enum(2, 'noCablesBundled')]


class vgRptrPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vgRptrPortType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'cascadeExternal'), Enum(2, 'cascadeInternal'), Enum(3, 'localExternal'), Enum(4, 'localInternal')]


class vgRptrPortAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class vgRptrPortOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive'), Enum(3, 'training')]


class vgRptrPortSupportedPromiscMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'singleModeOnly'), Enum(2, 'singleOrPromiscMode'), Enum(3, 'promiscModeOnly')]


class vgRptrPortSupportedCascadeMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'endNodesOnly'), Enum(2, 'endNodesOrRepeaters'), Enum(3, 'cascadePort')]


class vgRptrPortAllowedTrainType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'allowEndNodesOnly'), Enum(2, 'allowPromiscuousEndNodes'), Enum(3, 'allowEndNodesOrRepeaters'), Enum(4, 'allowAnything')]


class vgRptrPortLastTrainConfig(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vgRptrPortTrainingResult(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vgRptrPortPriorityEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vgRptrPortRptrInfoIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class vgRptrMonTotalReadableFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrMonTotalReadableOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrMonReadableOctetRollovers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrMonHCTotalReadableOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class vgRptrMonTotalErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortReadableFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortReadableOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortReadOctetRollovers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortHCReadableOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class vgRptrPortUnreadableOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortUnreadOctetRollovers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortHCUnreadableOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class vgRptrPortHighPriorityFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortHighPriorityOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortHighPriOctetRollovers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortHCHighPriorityOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class vgRptrPortNormPriorityFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortNormPriorityOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortNormPriOctetRollovers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortHCNormPriorityOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class vgRptrPortBroadcastFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortMulticastFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortNullAddressedFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortIPMFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortOversizeFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortDataErrorFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortPriorityPromotions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortTransitionToTrainings(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrPortLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class vgRptrAddrLastTrainedAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class vgRptrAddrTrainedAddrChanges(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class vgRptrRptrDetectedDupAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vgRptrMgrDetectedDupAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# rows 
class vgRptrInfoEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vgRptrInfoIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1])
	access = 2
	columns = {'vgRptrInfoIndex': vgRptrInfoIndex, 'vgRptrInfoMACAddress': vgRptrInfoMACAddress, 'vgRptrInfoCurrentFramingType': vgRptrInfoCurrentFramingType, 'vgRptrInfoDesiredFramingType': vgRptrInfoDesiredFramingType, 'vgRptrInfoFramingCapability': vgRptrInfoFramingCapability, 'vgRptrInfoTrainingVersion': vgRptrInfoTrainingVersion, 'vgRptrInfoOperStatus': vgRptrInfoOperStatus, 'vgRptrInfoReset': vgRptrInfoReset, 'vgRptrInfoLastChange': vgRptrInfoLastChange}


class vgRptrBasicGroupEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vgRptrGroupIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1])
	access = 2
	columns = {'vgRptrGroupIndex': vgRptrGroupIndex, 'vgRptrGroupObjectID': vgRptrGroupObjectID, 'vgRptrGroupOperStatus': vgRptrGroupOperStatus, 'vgRptrGroupPortCapacity': vgRptrGroupPortCapacity, 'vgRptrGroupCablesBundled': vgRptrGroupCablesBundled}


class vgRptrBasicPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vgRptrGroupIndex, vgRptrPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1])
	access = 2
	columns = {'vgRptrPortIndex': vgRptrPortIndex, 'vgRptrPortType': vgRptrPortType, 'vgRptrPortAdminStatus': vgRptrPortAdminStatus, 'vgRptrPortOperStatus': vgRptrPortOperStatus, 'vgRptrPortSupportedPromiscMode': vgRptrPortSupportedPromiscMode, 'vgRptrPortSupportedCascadeMode': vgRptrPortSupportedCascadeMode, 'vgRptrPortAllowedTrainType': vgRptrPortAllowedTrainType, 'vgRptrPortLastTrainConfig': vgRptrPortLastTrainConfig, 'vgRptrPortTrainingResult': vgRptrPortTrainingResult, 'vgRptrPortPriorityEnable': vgRptrPortPriorityEnable, 'vgRptrPortRptrInfoIndex': vgRptrPortRptrInfoIndex}


class vgRptrMonitorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vgRptrInfoIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1])
	access = 2
	columns = {'vgRptrMonTotalReadableFrames': vgRptrMonTotalReadableFrames, 'vgRptrMonTotalReadableOctets': vgRptrMonTotalReadableOctets, 'vgRptrMonReadableOctetRollovers': vgRptrMonReadableOctetRollovers, 'vgRptrMonHCTotalReadableOctets': vgRptrMonHCTotalReadableOctets, 'vgRptrMonTotalErrors': vgRptrMonTotalErrors}


class vgRptrMonPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vgRptrGroupIndex, vgRptrPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1])
	access = 2
	columns = {'vgRptrPortReadableFrames': vgRptrPortReadableFrames, 'vgRptrPortReadableOctets': vgRptrPortReadableOctets, 'vgRptrPortReadOctetRollovers': vgRptrPortReadOctetRollovers, 'vgRptrPortHCReadableOctets': vgRptrPortHCReadableOctets, 'vgRptrPortUnreadableOctets': vgRptrPortUnreadableOctets, 'vgRptrPortUnreadOctetRollovers': vgRptrPortUnreadOctetRollovers, 'vgRptrPortHCUnreadableOctets': vgRptrPortHCUnreadableOctets, 'vgRptrPortHighPriorityFrames': vgRptrPortHighPriorityFrames, 'vgRptrPortHighPriorityOctets': vgRptrPortHighPriorityOctets, 'vgRptrPortHighPriOctetRollovers': vgRptrPortHighPriOctetRollovers, 'vgRptrPortHCHighPriorityOctets': vgRptrPortHCHighPriorityOctets, 'vgRptrPortNormPriorityFrames': vgRptrPortNormPriorityFrames, 'vgRptrPortNormPriorityOctets': vgRptrPortNormPriorityOctets, 'vgRptrPortNormPriOctetRollovers': vgRptrPortNormPriOctetRollovers, 'vgRptrPortHCNormPriorityOctets': vgRptrPortHCNormPriorityOctets, 'vgRptrPortBroadcastFrames': vgRptrPortBroadcastFrames, 'vgRptrPortMulticastFrames': vgRptrPortMulticastFrames, 'vgRptrPortNullAddressedFrames': vgRptrPortNullAddressedFrames, 'vgRptrPortIPMFrames': vgRptrPortIPMFrames, 'vgRptrPortOversizeFrames': vgRptrPortOversizeFrames, 'vgRptrPortDataErrorFrames': vgRptrPortDataErrorFrames, 'vgRptrPortPriorityPromotions': vgRptrPortPriorityPromotions, 'vgRptrPortTransitionToTrainings': vgRptrPortTransitionToTrainings, 'vgRptrPortLastChange': vgRptrPortLastChange}


class vgRptrAddrTrackEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vgRptrGroupIndex, vgRptrPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1])
	access = 2
	columns = {'vgRptrAddrLastTrainedAddress': vgRptrAddrLastTrainedAddress, 'vgRptrAddrTrainedAddrChanges': vgRptrAddrTrainedAddrChanges, 'vgRptrRptrDetectedDupAddress': vgRptrRptrDetectedDupAddress, 'vgRptrMgrDetectedDupAddress': vgRptrMgrDetectedDupAddress}


# notifications (traps) 
class vgRptrHealth(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 2, 0, 1])

class vgRptrResetEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 2, 0, 2])

# groups 
class vgRptrConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 2, 1])
	group = [vgRptrInfoMACAddress, vgRptrInfoCurrentFramingType, vgRptrInfoDesiredFramingType, vgRptrInfoFramingCapability, vgRptrInfoTrainingVersion, vgRptrInfoOperStatus, vgRptrInfoReset, vgRptrInfoLastChange, vgRptrGroupObjectID, vgRptrGroupOperStatus, vgRptrGroupPortCapacity, vgRptrGroupCablesBundled, vgRptrPortType, vgRptrPortAdminStatus, vgRptrPortOperStatus, vgRptrPortSupportedPromiscMode, vgRptrPortSupportedCascadeMode, vgRptrPortAllowedTrainType, vgRptrPortLastTrainConfig, vgRptrPortTrainingResult, vgRptrPortPriorityEnable, vgRptrPortRptrInfoIndex]

class vgRptrStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 2, 2])
	group = [vgRptrMonTotalReadableFrames, vgRptrMonTotalReadableOctets, vgRptrMonReadableOctetRollovers, vgRptrMonTotalErrors, vgRptrPortReadableFrames, vgRptrPortReadableOctets, vgRptrPortReadOctetRollovers, vgRptrPortUnreadableOctets, vgRptrPortUnreadOctetRollovers, vgRptrPortHighPriorityFrames, vgRptrPortHighPriorityOctets, vgRptrPortHighPriOctetRollovers, vgRptrPortNormPriorityFrames, vgRptrPortNormPriorityOctets, vgRptrPortNormPriOctetRollovers, vgRptrPortBroadcastFrames, vgRptrPortMulticastFrames, vgRptrPortNullAddressedFrames, vgRptrPortIPMFrames, vgRptrPortOversizeFrames, vgRptrPortDataErrorFrames, vgRptrPortPriorityPromotions, vgRptrPortTransitionToTrainings, vgRptrPortLastChange]

class vgRptrStats64Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 2, 3])
	group = [vgRptrMonHCTotalReadableOctets, vgRptrPortHCReadableOctets, vgRptrPortHCUnreadableOctets, vgRptrPortHCHighPriorityOctets, vgRptrPortHCNormPriorityOctets]

class vgRptrAddrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 2, 4])
	group = [vgRptrAddrLastTrainedAddress, vgRptrAddrTrainedAddrChanges, vgRptrRptrDetectedDupAddress, vgRptrMgrDetectedDupAddress]

class vgRptrNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 53, 3, 2, 5])
	group = [vgRptrHealth, vgRptrResetEvent]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
