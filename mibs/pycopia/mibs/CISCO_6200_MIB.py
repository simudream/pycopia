# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Gauge32, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoExperiment
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, DateAndTime

class CISCO_6200_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-C6200-MIB'
	conformance = 3
	name = 'CISCO-6200-MIB'
	language = 2
	description = 'This MIB provides CISCO 6200 product information It is\nstructured as following groups: system - not part of indices,\ndefines system, slot and port level scalars.'

# nodes
class cisco6200MIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26])
	name = 'cisco6200MIB'

class cisco6200MibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1])
	name = 'cisco6200MibObjects'

class c62System(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1])
	name = 'c62System'

class c62Slot(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2])
	name = 'c62Slot'

class c62OCInterface(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3])
	name = 'c62OCInterface'

class c62LineInterface(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4])
	name = 'c62LineInterface'

class c62Subscriber(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5])
	name = 'c62Subscriber'

class ciscoC6200MIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2])
	name = 'ciscoC6200MIBConformance'

class ciscoC6200MIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 1])
	name = 'ciscoC6200MIBCompliances'

class ciscoC6200MIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2])
	name = 'ciscoC6200MIBGroups'


# macros
# types 

class C6200CardType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(-1, 'none'), Enum(1, 'oc3si'), Enum(2, 'ctl'), Enum(3, 'cap8'), Enum(4, 'cap16'), Enum(5, 'oc3ss'), Enum(6, 'oc3mm'), Enum(7, 'stm1si'), Enum(8, 'stm1mm'), Enum(9, 'dmt8')]


class CommandValue(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'ready'), Enum(2, 'execute')]


class AlarmLevel(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'none'), Enum(2, 'minor'), Enum(3, 'major'), Enum(4, 'critical'), Enum(5, 'unknown')]


class InterfaceStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class TestStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active'), Enum(3, 'pass'), Enum(4, 'fail'), Enum(5, 'aborted'), Enum(6, 'waiting')]


class TestType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'none'), Enum(1, 'lineQuality'), Enum(2, 'capHardware'), Enum(3, 'dmtLocalTest')]

# scalars 
class systemType(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'c62OC3')]


class systemAlarmLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 2])
	syntaxobject = AlarmLevel


class systemAlarmLevelChngCounter(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class systemReset(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 4])
	syntaxobject = CommandValue


class systemSaveCnfg(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 5])
	syntaxobject = CommandValue


class systemProvChngCounter(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class systemHClockAlarmLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 7])
	syntaxobject = AlarmLevel


class systemFanAlarmLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 8])
	syntaxobject = AlarmLevel


class systemTemperatureAlarmLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 9])
	syntaxobject = AlarmLevel


class systemACO(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 1, 10])
	syntaxobject = CommandValue


class portID(ScalarObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class slotID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class slotType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 2])
	syntaxobject = C6200CardType


class slotStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'empty'), Enum(2, 'notProvisioned'), Enum(3, 'missing'), Enum(4, 'mismatch'), Enum(5, 'match')]


class slotSwVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class slotAlarmLevelChngCounter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slotCnfType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 6])
	syntaxobject = C6200CardType


class slotSubscriberChngCounter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slotAlarmLevel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1, 8])
	syntaxobject = AlarmLevel


class oCIAlarmLevel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 2])
	syntaxobject = AlarmLevel


class oCIEQF(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 3])
	syntaxobject = AlarmLevel


class oCILOS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 4])
	syntaxobject = AlarmLevel


class oCILOF(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 5])
	syntaxobject = AlarmLevel


class oCILAIS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 6])
	syntaxobject = AlarmLevel


class oCILOP(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 7])
	syntaxobject = AlarmLevel


class oCIPAIS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 8])
	syntaxobject = AlarmLevel


class oCISLM(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 9])
	syntaxobject = AlarmLevel


class oCILRFI(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 10])
	syntaxobject = AlarmLevel


class oCIPRFI(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 11])
	syntaxobject = AlarmLevel


class oCILOST(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 12])
	syntaxobject = AlarmLevel


class oCILOCD(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 13])
	syntaxobject = AlarmLevel


class oCILoopMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class oCPTxCellCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class oCPRxCellCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class oCPHecErrCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineAlarmLevel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 1])
	syntaxobject = AlarmLevel


class lineDwnSNRMargin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class lineDwnLOCD(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 3])
	syntaxobject = AlarmLevel


class lineDwnErrSecs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDwnLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kbps'


class lineUpSNRMargin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class lineUpLOCD(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 7])
	syntaxobject = AlarmLevel


class lineUpErrSecs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineUpLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kbps'


class lineRateAlarm(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'down'), Enum(3, 'up'), Enum(4, 'downAndUp')]


class lineMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'testing'), Enum(2, 'training'), Enum(3, 'active'), Enum(4, 'down')]


class lineDMTDwnAttenuation(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'dB'


class lineDMTUpAttenuation(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'dB'


class lineDMTDwnLPR(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 14])
	syntaxobject = AlarmLevel


class lineDMTUpLOS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 15])
	syntaxobject = AlarmLevel


class lineDMTUpLOF(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 16])
	syntaxobject = AlarmLevel


class lineDMTLoopback(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'dslline'), Enum(3, 'local')]


class lineTxCellCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineRxCellCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineHecErrCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTDwnFECCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTUpFECCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTDwnCRCCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTUpCRCCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTDwnLOSCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTUpLOSCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTDwnSEFCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineDMTUpRDICount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lineTestTrigger(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stop'), Enum(2, 'start'), Enum(3, 'clear')]


class lineTestType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 2])
	syntaxobject = TestType


class lineTestTimeIntvl(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class lineTestStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 4])
	syntaxobject = TestStatus


class lineTestDwnBitErrRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lineTestUpBitErrRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lineTestStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class lineTestCmplTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class lineTestBitErrRateLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class subscriberName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class subscriberUpLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'kbps'


class subscriberDwnLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'kbps'


class subscriberLineState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5, 1, 1, 4])
	syntaxobject = InterfaceStatus


class subscriberDMTLOSConfig(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5, 1, 1, 5])
	syntaxobject = InterfaceStatus


# rows 
class slotEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 2, 1, 1])
	access = 2
	columns = {'slotID': slotID, 'slotType': slotType, 'slotStatus': slotStatus, 'slotSwVersion': slotSwVersion, 'slotAlarmLevelChngCounter': slotAlarmLevelChngCounter, 'slotCnfType': slotCnfType, 'slotSubscriberChngCounter': slotSubscriberChngCounter, 'slotAlarmLevel': slotAlarmLevel}


class oCInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID, portID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 1, 1])
	access = 2
	columns = {'oCIAlarmLevel': oCIAlarmLevel, 'oCIEQF': oCIEQF, 'oCILOS': oCILOS, 'oCILOF': oCILOF, 'oCILAIS': oCILAIS, 'oCILOP': oCILOP, 'oCIPAIS': oCIPAIS, 'oCISLM': oCISLM, 'oCILRFI': oCILRFI, 'oCIPRFI': oCIPRFI, 'oCILOST': oCILOST, 'oCILOCD': oCILOCD, 'oCILoopMode': oCILoopMode}


class oCPerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID, portID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 3, 2, 1])
	access = 2
	columns = {'oCPTxCellCount': oCPTxCellCount, 'oCPRxCellCount': oCPRxCellCount, 'oCPHecErrCount': oCPHecErrCount}


class lineInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID, portID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 1, 1])
	access = 2
	columns = {'lineAlarmLevel': lineAlarmLevel, 'lineDwnSNRMargin': lineDwnSNRMargin, 'lineDwnLOCD': lineDwnLOCD, 'lineDwnErrSecs': lineDwnErrSecs, 'lineDwnLineRate': lineDwnLineRate, 'lineUpSNRMargin': lineUpSNRMargin, 'lineUpLOCD': lineUpLOCD, 'lineUpErrSecs': lineUpErrSecs, 'lineUpLineRate': lineUpLineRate, 'lineRateAlarm': lineRateAlarm, 'lineMode': lineMode, 'lineDMTDwnAttenuation': lineDMTDwnAttenuation, 'lineDMTUpAttenuation': lineDMTUpAttenuation, 'lineDMTDwnLPR': lineDMTDwnLPR, 'lineDMTUpLOS': lineDMTUpLOS, 'lineDMTUpLOF': lineDMTUpLOF, 'lineDMTLoopback': lineDMTLoopback}


class linePerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID, portID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 2, 1])
	access = 2
	columns = {'lineTxCellCount': lineTxCellCount, 'lineRxCellCount': lineRxCellCount, 'lineHecErrCount': lineHecErrCount, 'lineDMTDwnFECCount': lineDMTDwnFECCount, 'lineDMTUpFECCount': lineDMTUpFECCount, 'lineDMTDwnCRCCount': lineDMTDwnCRCCount, 'lineDMTUpCRCCount': lineDMTUpCRCCount, 'lineDMTDwnLOSCount': lineDMTDwnLOSCount, 'lineDMTUpLOSCount': lineDMTUpLOSCount, 'lineDMTDwnSEFCount': lineDMTDwnSEFCount, 'lineDMTUpRDICount': lineDMTUpRDICount}


class lineTestEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID, portID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 4, 3, 1])
	access = 2
	columns = {'lineTestTrigger': lineTestTrigger, 'lineTestType': lineTestType, 'lineTestTimeIntvl': lineTestTimeIntvl, 'lineTestStatus': lineTestStatus, 'lineTestDwnBitErrRate': lineTestDwnBitErrRate, 'lineTestUpBitErrRate': lineTestUpBitErrRate, 'lineTestStartTime': lineTestStartTime, 'lineTestCmplTime': lineTestCmplTime, 'lineTestBitErrRateLimit': lineTestBitErrRateLimit}


class subscriberEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slotID, portID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 1, 5, 1, 1])
	access = 2
	columns = {'subscriberName': subscriberName, 'subscriberUpLineRate': subscriberUpLineRate, 'subscriberDwnLineRate': subscriberDwnLineRate, 'subscriberLineState': subscriberLineState, 'subscriberDMTLOSConfig': subscriberDMTLOSConfig}


# notifications (traps) 
# groups 
class ciscoC6200SystemGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 9])
	group = [systemType, systemAlarmLevel, systemAlarmLevelChngCounter, systemReset, systemSaveCnfg, systemProvChngCounter, systemHClockAlarmLevel, systemFanAlarmLevel, systemTemperatureAlarmLevel, systemACO]

class ciscoC6200SlotGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 10])
	group = [slotType, slotStatus, slotSwVersion, slotAlarmLevelChngCounter, slotCnfType, slotSubscriberChngCounter, slotAlarmLevel]

class ciscoC6200oCIGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 11])
	group = [oCIAlarmLevel, oCIEQF, oCILOS, oCILOF, oCILAIS, oCILOP, oCIPAIS, oCISLM, oCILRFI, oCIPRFI, oCILOST, oCILOCD, oCILoopMode]

class ciscoC6200oCIPerfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 12])
	group = [oCPTxCellCount, oCPRxCellCount, oCPHecErrCount]

class ciscoC6200lineGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 13])
	group = [lineAlarmLevel, lineDwnSNRMargin, lineDwnErrSecs, lineDwnLineRate, lineUpSNRMargin, lineUpLOCD, lineUpErrSecs, lineUpLineRate, lineRateAlarm, lineMode, lineDMTDwnAttenuation, lineDMTUpAttenuation, lineDMTDwnLPR, lineDMTUpLOS, lineDMTUpLOF, lineDMTLoopback]

class ciscoC6200linePerfGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 14])
	group = [lineTxCellCount, lineRxCellCount, lineHecErrCount, lineDMTDwnFECCount, lineDMTUpFECCount, lineDMTDwnCRCCount, lineDMTUpCRCCount, lineDMTDwnLOSCount, lineDMTUpLOSCount, lineDMTDwnSEFCount, lineDMTUpRDICount]

class ciscoC6200lineTestGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 15])
	group = [lineTestTrigger, lineTestType, lineTestTimeIntvl, lineTestStatus, lineTestDwnBitErrRate, lineTestUpBitErrRate, lineTestStartTime, lineTestCmplTime, lineTestBitErrRateLimit]

class ciscoC6200subscriberGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 26, 2, 2, 16])
	group = [subscriberName, subscriberUpLineRate, subscriberDwnLineRate, subscriberLineState, subscriberDMTLOSConfig]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
