# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, experimental, Integer32, NOTIFICATION_TYPE, Gauge32, Counter32, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TestAndIncr, DateAndTime
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class SLAPM_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/SLAPM-MIB'
	conformance = 3
	name = 'SLAPM-MIB'
	language = 2
	description = 'The Service Level Agreement Performance Monitoring MIB\n(SLAPM-MIB) provides data collection and monitoring\ncapabilities for Service Level Agreements (SLAs)\npolicy definitions.'

# nodes
class slapmMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88])
	name = 'slapmMIB'

class slapmNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0])
	name = 'slapmNotifications'

class slapmObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1])
	name = 'slapmObjects'

class slapmBaseObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1])
	name = 'slapmBaseObjects'

class slapmTableObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2])
	name = 'slapmTableObjects'

class slapmConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2])
	name = 'slapmConformance'

class slapmCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 1])
	name = 'slapmCompliances'

class slapmGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2])
	name = 'slapmGroups'


# macros
# types 

class SlapmNameType(pycopia.SMI.Basetypes.OctetString):
	status = 2
	ranges = Ranges(Range(0, 32))


class SlapmStatus(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'slaMinInRateNotAchieved'), Enum(1, 'slaMaxInRateExceeded'), Enum(2, 'slaMaxDelayExceeded'), Enum(3, 'slaMinOutRateNotAchieved'), Enum(4, 'slaMaxOutRateExceeded'), Enum(5, 'monitorMinInRateNotAchieved'), Enum(6, 'monitorMaxInRateExceeded'), Enum(7, 'monitorMaxDelayExceeded'), Enum(8, 'monitorMinOutRateNotAchieved'), Enum(9, 'monitorMaxOutRateExceeded')]


class SlapmPolicyRuleName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 1024))
	format = '1024t'

# scalars 
class slapmSpinLock(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class slapmPolicyCountQueries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyCountAccesses(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyCountSuccessAccesses(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyCountNotFounds(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyPurgeTime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class slapmPolicyTrapEnable(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class slapmPolicyTrapFilter(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'intervals'


# columns
class slapmPolicyStatsSystemAddress(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmPolicyStatsPolicyName(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 2])
	syntaxobject = SlapmNameType


class slapmPolicyStatsTrafficProfileName(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 3])
	syntaxobject = SlapmNameType


class slapmPolicyStatsOperStatus(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active'), Enum(3, 'deleteNeeded')]


class slapmPolicyStatsActiveConns(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class slapmPolicyStatsTotalConns(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsFirstActivated(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmPolicyStatsLastMapping(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmPolicyStatsInOctets(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsOutOctets(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsConnectionLimit(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class slapmPolicyStatsCountAccepts(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsCountDenies(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsInDiscards(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsOutDiscards(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsInPackets(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsOutPackets(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsInProfileOctets(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsOutProfileOctets(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyStatsMinRate(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Kilobits per second'


class slapmPolicyStatsMaxRate(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Kilobits per second'


class slapmPolicyStatsMaxDelay(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class slapmPolicyMonitorOwnerIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 1])
	syntaxobject = SnmpAdminString


class slapmPolicyMonitorSystemAddress(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmPolicyMonitorPolicyName(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 3])
	syntaxobject = SlapmNameType


class slapmPolicyMonitorTrafficProfileName(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 4])
	syntaxobject = SlapmNameType


class slapmPolicyMonitorControl(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class slapmPolicyMonitorStatus(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 6])
	syntaxobject = SlapmStatus


class slapmPolicyMonitorInterval(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class slapmPolicyMonitorIntTime(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmPolicyMonitorCurrentInRate(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kilobits per second'


class slapmPolicyMonitorCurrentOutRate(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kilobits per second'


class slapmPolicyMonitorMinRateLow(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'kilobits per second'


class slapmPolicyMonitorMinRateHigh(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'kilobits per second'


class slapmPolicyMonitorMaxRateHigh(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'kilobits per second'


class slapmPolicyMonitorMaxRateLow(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'kilobits per second'


class slapmPolicyMonitorMaxDelayHigh(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class slapmPolicyMonitorMaxDelayLow(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class slapmPolicyMonitorMinInRateNotAchieves(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyMonitorMaxInRateExceeds(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyMonitorMaxDelayExceeds(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyMonitorMinOutRateNotAchieves(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyMonitorMaxOutRateExceeds(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyMonitorCurrentDelayRate(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class slapmPolicyMonitorRowStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class slapmSubcomponentRemAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmSubcomponentRemPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class slapmSubcomponentLocalAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmSubcomponentLocalPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class slapmSubcomponentProtocol(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'udpListener'), Enum(2, 'tcpConnection')]


class slapmSubcomponentSystemAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmSubcomponentPolicyName(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 7])
	syntaxobject = SlapmNameType


class slapmSubcomponentTrafficProfileName(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 8])
	syntaxobject = SlapmNameType


class slapmSubcomponentLastActivity(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmSubcomponentInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentTcpOutBufferedOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentTcpInBufferedOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentTcpReXmts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentTcpRoundTripTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class slapmSubcomponentTcpRoundTripVariance(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class slapmSubcomponentInPdus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentOutPdus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmSubcomponentApplName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 19])
	syntaxobject = SnmpAdminString


class slapmSubcomponentMonitorStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 20])
	syntaxobject = SlapmStatus


class slapmSubcomponentMonitorIntTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmSubcomponentMonitorCurrentInRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kilobits per second'


class slapmSubcomponentMonitorCurrentOutRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kilobits per second'


class slapmSubcomponentPolicyRuleIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class slapmPolicyNameSystemAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmPolicyNameIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class slapmPolicyNameOfRule(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 4, 1, 3])
	syntaxobject = SlapmPolicyRuleName


class slapmPolicyRuleStatsOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active'), Enum(3, 'deleteNeeded')]


class slapmPolicyRuleStatsActiveConns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class slapmPolicyRuleStatsTotalConns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsLActivated(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmPolicyRuleStatsLastMapping(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmPolicyRuleStatsInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsConnLimit(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class slapmPolicyRuleStatsCountAccepts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsCountDenies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsInDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsOutDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsInPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsOutPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsInProOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsOutProOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsMinRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Kilobits per second'


class slapmPolicyRuleStatsMaxRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Kilobits per second'


class slapmPolicyRuleStatsMaxDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class slapmPolicyRuleStatsTotalRsvpFlows(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPolicyRuleStatsActRsvpFlows(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class slapmPRMonOwnerIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 1])
	syntaxobject = SnmpAdminString


class slapmPRMonSystemAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class slapmPRMonIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class slapmPRMonControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class slapmPRMonStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 5])
	syntaxobject = SlapmStatus


class slapmPRMonInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class slapmPRMonIntTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class slapmPRMonCurrentInRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kilobits per second'


class slapmPRMonCurrentOutRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'kilobits per second'


class slapmPRMonMinRateLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'kilobits per second'


class slapmPRMonMinRateHigh(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'kilobits per second'


class slapmPRMonMaxRateHigh(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'kilobits per second'


class slapmPRMonMaxRateLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'kilobits per second'


class slapmPRMonMaxDelayHigh(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class slapmPRMonMaxDelayLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class slapmPRMonMinInRateNotAchieves(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPRMonMaxInRateExceeds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPRMonMaxDelayExceeds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPRMonMinOutRateNotAchieves(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPRMonMaxOutRateExceeds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class slapmPRMonCurrentDelayRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class slapmPRMonRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class slapmPolicyStatsEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([slapmPolicyStatsSystemAddress, slapmPolicyStatsPolicyName, slapmPolicyStatsTrafficProfileName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 1, 1])
	access = 2
	columns = {'slapmPolicyStatsSystemAddress': slapmPolicyStatsSystemAddress, 'slapmPolicyStatsPolicyName': slapmPolicyStatsPolicyName, 'slapmPolicyStatsTrafficProfileName': slapmPolicyStatsTrafficProfileName, 'slapmPolicyStatsOperStatus': slapmPolicyStatsOperStatus, 'slapmPolicyStatsActiveConns': slapmPolicyStatsActiveConns, 'slapmPolicyStatsTotalConns': slapmPolicyStatsTotalConns, 'slapmPolicyStatsFirstActivated': slapmPolicyStatsFirstActivated, 'slapmPolicyStatsLastMapping': slapmPolicyStatsLastMapping, 'slapmPolicyStatsInOctets': slapmPolicyStatsInOctets, 'slapmPolicyStatsOutOctets': slapmPolicyStatsOutOctets, 'slapmPolicyStatsConnectionLimit': slapmPolicyStatsConnectionLimit, 'slapmPolicyStatsCountAccepts': slapmPolicyStatsCountAccepts, 'slapmPolicyStatsCountDenies': slapmPolicyStatsCountDenies, 'slapmPolicyStatsInDiscards': slapmPolicyStatsInDiscards, 'slapmPolicyStatsOutDiscards': slapmPolicyStatsOutDiscards, 'slapmPolicyStatsInPackets': slapmPolicyStatsInPackets, 'slapmPolicyStatsOutPackets': slapmPolicyStatsOutPackets, 'slapmPolicyStatsInProfileOctets': slapmPolicyStatsInProfileOctets, 'slapmPolicyStatsOutProfileOctets': slapmPolicyStatsOutProfileOctets, 'slapmPolicyStatsMinRate': slapmPolicyStatsMinRate, 'slapmPolicyStatsMaxRate': slapmPolicyStatsMaxRate, 'slapmPolicyStatsMaxDelay': slapmPolicyStatsMaxDelay}


class slapmPolicyMonitorEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([slapmPolicyMonitorOwnerIndex, slapmPolicyMonitorSystemAddress, slapmPolicyMonitorPolicyName, slapmPolicyMonitorTrafficProfileName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 2, 1])
	access = 2
	rowstatus = slapmPolicyMonitorRowStatus
	columns = {'slapmPolicyMonitorOwnerIndex': slapmPolicyMonitorOwnerIndex, 'slapmPolicyMonitorSystemAddress': slapmPolicyMonitorSystemAddress, 'slapmPolicyMonitorPolicyName': slapmPolicyMonitorPolicyName, 'slapmPolicyMonitorTrafficProfileName': slapmPolicyMonitorTrafficProfileName, 'slapmPolicyMonitorControl': slapmPolicyMonitorControl, 'slapmPolicyMonitorStatus': slapmPolicyMonitorStatus, 'slapmPolicyMonitorInterval': slapmPolicyMonitorInterval, 'slapmPolicyMonitorIntTime': slapmPolicyMonitorIntTime, 'slapmPolicyMonitorCurrentInRate': slapmPolicyMonitorCurrentInRate, 'slapmPolicyMonitorCurrentOutRate': slapmPolicyMonitorCurrentOutRate, 'slapmPolicyMonitorMinRateLow': slapmPolicyMonitorMinRateLow, 'slapmPolicyMonitorMinRateHigh': slapmPolicyMonitorMinRateHigh, 'slapmPolicyMonitorMaxRateHigh': slapmPolicyMonitorMaxRateHigh, 'slapmPolicyMonitorMaxRateLow': slapmPolicyMonitorMaxRateLow, 'slapmPolicyMonitorMaxDelayHigh': slapmPolicyMonitorMaxDelayHigh, 'slapmPolicyMonitorMaxDelayLow': slapmPolicyMonitorMaxDelayLow, 'slapmPolicyMonitorMinInRateNotAchieves': slapmPolicyMonitorMinInRateNotAchieves, 'slapmPolicyMonitorMaxInRateExceeds': slapmPolicyMonitorMaxInRateExceeds, 'slapmPolicyMonitorMaxDelayExceeds': slapmPolicyMonitorMaxDelayExceeds, 'slapmPolicyMonitorMinOutRateNotAchieves': slapmPolicyMonitorMinOutRateNotAchieves, 'slapmPolicyMonitorMaxOutRateExceeds': slapmPolicyMonitorMaxOutRateExceeds, 'slapmPolicyMonitorCurrentDelayRate': slapmPolicyMonitorCurrentDelayRate, 'slapmPolicyMonitorRowStatus': slapmPolicyMonitorRowStatus}


class slapmSubcomponentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slapmSubcomponentRemAddress, slapmSubcomponentRemPort, slapmSubcomponentLocalAddress, slapmSubcomponentLocalPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 3, 1])
	access = 2
	columns = {'slapmSubcomponentRemAddress': slapmSubcomponentRemAddress, 'slapmSubcomponentRemPort': slapmSubcomponentRemPort, 'slapmSubcomponentLocalAddress': slapmSubcomponentLocalAddress, 'slapmSubcomponentLocalPort': slapmSubcomponentLocalPort, 'slapmSubcomponentProtocol': slapmSubcomponentProtocol, 'slapmSubcomponentSystemAddress': slapmSubcomponentSystemAddress, 'slapmSubcomponentPolicyName': slapmSubcomponentPolicyName, 'slapmSubcomponentTrafficProfileName': slapmSubcomponentTrafficProfileName, 'slapmSubcomponentLastActivity': slapmSubcomponentLastActivity, 'slapmSubcomponentInOctets': slapmSubcomponentInOctets, 'slapmSubcomponentOutOctets': slapmSubcomponentOutOctets, 'slapmSubcomponentTcpOutBufferedOctets': slapmSubcomponentTcpOutBufferedOctets, 'slapmSubcomponentTcpInBufferedOctets': slapmSubcomponentTcpInBufferedOctets, 'slapmSubcomponentTcpReXmts': slapmSubcomponentTcpReXmts, 'slapmSubcomponentTcpRoundTripTime': slapmSubcomponentTcpRoundTripTime, 'slapmSubcomponentTcpRoundTripVariance': slapmSubcomponentTcpRoundTripVariance, 'slapmSubcomponentInPdus': slapmSubcomponentInPdus, 'slapmSubcomponentOutPdus': slapmSubcomponentOutPdus, 'slapmSubcomponentApplName': slapmSubcomponentApplName, 'slapmSubcomponentMonitorStatus': slapmSubcomponentMonitorStatus, 'slapmSubcomponentMonitorIntTime': slapmSubcomponentMonitorIntTime, 'slapmSubcomponentMonitorCurrentInRate': slapmSubcomponentMonitorCurrentInRate, 'slapmSubcomponentMonitorCurrentOutRate': slapmSubcomponentMonitorCurrentOutRate, 'slapmSubcomponentPolicyRuleIndex': slapmSubcomponentPolicyRuleIndex}


class slapmPolicyNameEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slapmPolicyNameSystemAddress, slapmPolicyNameIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 4, 1])
	access = 2
	columns = {'slapmPolicyNameSystemAddress': slapmPolicyNameSystemAddress, 'slapmPolicyNameIndex': slapmPolicyNameIndex, 'slapmPolicyNameOfRule': slapmPolicyNameOfRule}


class slapmPolicyRuleStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slapmPolicyNameSystemAddress, slapmPolicyNameIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 5, 1])
	access = 2
	columns = {'slapmPolicyRuleStatsOperStatus': slapmPolicyRuleStatsOperStatus, 'slapmPolicyRuleStatsActiveConns': slapmPolicyRuleStatsActiveConns, 'slapmPolicyRuleStatsTotalConns': slapmPolicyRuleStatsTotalConns, 'slapmPolicyRuleStatsLActivated': slapmPolicyRuleStatsLActivated, 'slapmPolicyRuleStatsLastMapping': slapmPolicyRuleStatsLastMapping, 'slapmPolicyRuleStatsInOctets': slapmPolicyRuleStatsInOctets, 'slapmPolicyRuleStatsOutOctets': slapmPolicyRuleStatsOutOctets, 'slapmPolicyRuleStatsConnLimit': slapmPolicyRuleStatsConnLimit, 'slapmPolicyRuleStatsCountAccepts': slapmPolicyRuleStatsCountAccepts, 'slapmPolicyRuleStatsCountDenies': slapmPolicyRuleStatsCountDenies, 'slapmPolicyRuleStatsInDiscards': slapmPolicyRuleStatsInDiscards, 'slapmPolicyRuleStatsOutDiscards': slapmPolicyRuleStatsOutDiscards, 'slapmPolicyRuleStatsInPackets': slapmPolicyRuleStatsInPackets, 'slapmPolicyRuleStatsOutPackets': slapmPolicyRuleStatsOutPackets, 'slapmPolicyRuleStatsInProOctets': slapmPolicyRuleStatsInProOctets, 'slapmPolicyRuleStatsOutProOctets': slapmPolicyRuleStatsOutProOctets, 'slapmPolicyRuleStatsMinRate': slapmPolicyRuleStatsMinRate, 'slapmPolicyRuleStatsMaxRate': slapmPolicyRuleStatsMaxRate, 'slapmPolicyRuleStatsMaxDelay': slapmPolicyRuleStatsMaxDelay, 'slapmPolicyRuleStatsTotalRsvpFlows': slapmPolicyRuleStatsTotalRsvpFlows, 'slapmPolicyRuleStatsActRsvpFlows': slapmPolicyRuleStatsActRsvpFlows}


class slapmPRMonEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([slapmPRMonOwnerIndex, slapmPRMonSystemAddress, slapmPRMonIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 1, 2, 6, 1])
	access = 2
	rowstatus = slapmPRMonRowStatus
	columns = {'slapmPRMonOwnerIndex': slapmPRMonOwnerIndex, 'slapmPRMonSystemAddress': slapmPRMonSystemAddress, 'slapmPRMonIndex': slapmPRMonIndex, 'slapmPRMonControl': slapmPRMonControl, 'slapmPRMonStatus': slapmPRMonStatus, 'slapmPRMonInterval': slapmPRMonInterval, 'slapmPRMonIntTime': slapmPRMonIntTime, 'slapmPRMonCurrentInRate': slapmPRMonCurrentInRate, 'slapmPRMonCurrentOutRate': slapmPRMonCurrentOutRate, 'slapmPRMonMinRateLow': slapmPRMonMinRateLow, 'slapmPRMonMinRateHigh': slapmPRMonMinRateHigh, 'slapmPRMonMaxRateHigh': slapmPRMonMaxRateHigh, 'slapmPRMonMaxRateLow': slapmPRMonMaxRateLow, 'slapmPRMonMaxDelayHigh': slapmPRMonMaxDelayHigh, 'slapmPRMonMaxDelayLow': slapmPRMonMaxDelayLow, 'slapmPRMonMinInRateNotAchieves': slapmPRMonMinInRateNotAchieves, 'slapmPRMonMaxInRateExceeds': slapmPRMonMaxInRateExceeds, 'slapmPRMonMaxDelayExceeds': slapmPRMonMaxDelayExceeds, 'slapmPRMonMinOutRateNotAchieves': slapmPRMonMinOutRateNotAchieves, 'slapmPRMonMaxOutRateExceeds': slapmPRMonMaxOutRateExceeds, 'slapmPRMonCurrentDelayRate': slapmPRMonCurrentDelayRate, 'slapmPRMonRowStatus': slapmPRMonRowStatus}


# notifications (traps) 
class slapmMonitoredEventNotAchieved(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 1])

class slapmMonitoredEventOkay(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 2])

class slapmPolicyProfileDeleted(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 3])

class slapmPolicyMonitorDeleted(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 4])

class slapmSubcomponentMonitoredEventNotAchieved(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 5])

class slapmSubcomponentMonitoredEventOkay(NotificationObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 6])

class slapmPolicyRuleMonNotOkay(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 7])

class slapmPolicyRuleMonOkay(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 8])

class slapmPolicyRuleDeleted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 9])

class slapmPolicyRuleMonDeleted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 10])

class slapmSubcMonitorNotOkay(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 11])

class slapmSubcMonitorOkay(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 0, 12])

# groups 
class slapmBaseGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 1])
	group = [slapmSpinLock, slapmPolicyCountQueries, slapmPolicyCountAccesses, slapmPolicyCountSuccessAccesses, slapmPolicyCountNotFounds, slapmPolicyPurgeTime, slapmPolicyTrapEnable, slapmPolicyStatsOperStatus, slapmPolicyStatsActiveConns, slapmPolicyStatsFirstActivated, slapmPolicyStatsLastMapping, slapmPolicyStatsInOctets, slapmPolicyStatsOutOctets, slapmPolicyStatsConnectionLimit, slapmPolicyStatsTotalConns, slapmPolicyStatsCountAccepts, slapmPolicyStatsCountDenies, slapmPolicyStatsInDiscards, slapmPolicyStatsOutDiscards, slapmPolicyStatsInPackets, slapmPolicyStatsOutPackets, slapmPolicyStatsMinRate, slapmPolicyStatsMaxRate, slapmPolicyStatsMaxDelay, slapmPolicyMonitorControl, slapmPolicyMonitorStatus, slapmPolicyMonitorInterval, slapmPolicyMonitorIntTime, slapmPolicyMonitorCurrentInRate, slapmPolicyMonitorCurrentOutRate, slapmPolicyMonitorMinRateLow, slapmPolicyMonitorMinRateHigh, slapmPolicyMonitorMaxRateHigh, slapmPolicyMonitorMaxRateLow, slapmPolicyMonitorMaxDelayHigh, slapmPolicyMonitorMaxDelayLow, slapmPolicyMonitorMinInRateNotAchieves, slapmPolicyMonitorMaxInRateExceeds, slapmPolicyMonitorMaxDelayExceeds, slapmPolicyMonitorMinOutRateNotAchieves, slapmPolicyMonitorMaxOutRateExceeds, slapmPolicyMonitorCurrentDelayRate, slapmPolicyMonitorRowStatus]

class slapmOptionalGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 2])
	group = [slapmPolicyStatsInProfileOctets, slapmPolicyStatsOutProfileOctets]

class slapmEndSystemGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 3])
	group = [slapmPolicyTrapFilter, slapmSubcomponentProtocol, slapmSubcomponentSystemAddress, slapmSubcomponentPolicyName, slapmSubcomponentTrafficProfileName, slapmSubcomponentLastActivity, slapmSubcomponentInOctets, slapmSubcomponentOutOctets, slapmSubcomponentTcpOutBufferedOctets, slapmSubcomponentTcpInBufferedOctets, slapmSubcomponentTcpReXmts, slapmSubcomponentTcpRoundTripTime, slapmSubcomponentTcpRoundTripVariance, slapmSubcomponentInPdus, slapmSubcomponentOutPdus, slapmSubcomponentApplName, slapmSubcomponentMonitorStatus, slapmSubcomponentMonitorIntTime, slapmSubcomponentMonitorCurrentOutRate, slapmSubcomponentMonitorCurrentInRate]

class slapmNotGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 4])
	group = [slapmMonitoredEventNotAchieved, slapmMonitoredEventOkay, slapmPolicyProfileDeleted, slapmPolicyMonitorDeleted]

class slapmEndSystemNotGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 5])
	group = [slapmSubcomponentMonitoredEventNotAchieved, slapmSubcomponentMonitoredEventOkay]

class slapmBaseGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 6])
	group = [slapmSpinLock, slapmPolicyCountQueries, slapmPolicyCountAccesses, slapmPolicyCountSuccessAccesses, slapmPolicyCountNotFounds, slapmPolicyPurgeTime, slapmPolicyTrapEnable, slapmPolicyNameOfRule, slapmPolicyRuleStatsOperStatus, slapmPolicyRuleStatsActiveConns, slapmPolicyRuleStatsTotalConns, slapmPolicyRuleStatsLActivated, slapmPolicyRuleStatsLastMapping, slapmPolicyRuleStatsInOctets, slapmPolicyRuleStatsOutOctets, slapmPolicyRuleStatsConnLimit, slapmPolicyRuleStatsCountAccepts, slapmPolicyRuleStatsCountDenies, slapmPolicyRuleStatsInDiscards, slapmPolicyRuleStatsOutDiscards, slapmPolicyRuleStatsInPackets, slapmPolicyRuleStatsOutPackets, slapmPolicyRuleStatsInProOctets, slapmPolicyRuleStatsOutProOctets, slapmPolicyRuleStatsMinRate, slapmPolicyRuleStatsMaxRate, slapmPolicyRuleStatsMaxDelay, slapmPolicyRuleStatsTotalRsvpFlows, slapmPolicyRuleStatsActRsvpFlows, slapmPRMonControl, slapmPRMonStatus, slapmPRMonInterval, slapmPRMonIntTime, slapmPRMonCurrentInRate, slapmPRMonCurrentOutRate, slapmPRMonMinRateLow, slapmPRMonMinRateHigh, slapmPRMonMaxRateHigh, slapmPRMonMaxRateLow, slapmPRMonMaxDelayHigh, slapmPRMonMaxDelayLow, slapmPRMonMinInRateNotAchieves, slapmPRMonMaxInRateExceeds, slapmPRMonMaxDelayExceeds, slapmPRMonMinOutRateNotAchieves, slapmPRMonMaxOutRateExceeds, slapmPRMonCurrentDelayRate, slapmPRMonRowStatus]

class slapmEndSystemGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 7])
	group = [slapmPolicyTrapFilter, slapmSubcomponentProtocol, slapmSubcomponentSystemAddress, slapmSubcomponentLastActivity, slapmSubcomponentInOctets, slapmSubcomponentOutOctets, slapmSubcomponentTcpOutBufferedOctets, slapmSubcomponentTcpInBufferedOctets, slapmSubcomponentTcpReXmts, slapmSubcomponentTcpRoundTripTime, slapmSubcomponentTcpRoundTripVariance, slapmSubcomponentInPdus, slapmSubcomponentOutPdus, slapmSubcomponentApplName, slapmSubcomponentMonitorStatus, slapmSubcomponentMonitorIntTime, slapmSubcomponentMonitorCurrentOutRate, slapmSubcomponentMonitorCurrentInRate, slapmSubcomponentPolicyRuleIndex]

class slapmNotGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 8])
	group = [slapmPolicyRuleMonNotOkay, slapmPolicyRuleMonOkay, slapmPolicyRuleDeleted, slapmPolicyRuleMonDeleted]

class slapmEndSystemNotGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 88, 2, 2, 9])
	group = [slapmSubcMonitorNotOkay, slapmSubcMonitorOkay]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
