# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from HP_SN_ROOT_MIB import snOspf
from RFC1155_SMI import Counter, Gauge, IpAddress

class HP_SN_OSPF_GROUP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-OSPF-GROUP-MIB'
	conformance = 2
	name = 'HP-SN-OSPF-GROUP-MIB'
	language = 1

# nodes
class snOspfGen(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1])
	name = 'snOspfGen'

class snOspfArea(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2])
	name = 'snOspfArea'

class snOspfAddrRange(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3])
	name = 'snOspfAddrRange'

class snOspfIntf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4])
	name = 'snOspfIntf'

class snOspfVirtIf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5])
	name = 'snOspfVirtIf'

class snOspfRedis(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6])
	name = 'snOspfRedis'

class snOspfNbr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7])
	name = 'snOspfNbr'

class snOspfVirtNbr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8])
	name = 'snOspfVirtNbr'

class snOspfLsdb(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9])
	name = 'snOspfLsdb'

class snOspfExtLsdb(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10])
	name = 'snOspfExtLsdb'

class snOspfAreaStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11])
	name = 'snOspfAreaStatus'

class snOspfIfStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12])
	name = 'snOspfIfStatus'

class snOspfVirtIfStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13])
	name = 'snOspfVirtIfStatus'

class snOspfRoutingInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14])
	name = 'snOspfRoutingInfo'

class snOspfTrapControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15])
	name = 'snOspfTrapControl'


# macros
# types 

class AreaID(pycopia.SMI.Basetypes.IpAddress):
	pass


class RouterID(pycopia.SMI.Basetypes.IpAddress):
	pass


class Metric(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 65535))


class BigMetric(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 16777215))


class TruthVal(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'false'), Enum(1, 'true')]


class RtrStatus(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class PositiveInteger(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 2147483647))


class HelloRange(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(1, 65535))


class UpToMaxAge(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 3600))


class DesignatedRouterPriority(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 255))


class TOSType(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 30))

# scalars 
class snOspfRouterId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 1])
	syntaxobject = RouterID


class snOspfAdminStat(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 2])
	syntaxobject = RtrStatus


class snOspfASBdrRtrStatus(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 3])
	syntaxobject = TruthVal


class snOspfRedisMode(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 4])
	syntaxobject = RtrStatus


class snOspfDefaultOspfMetricValue(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfExternLSACount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snOspfExternLSACksumSum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfOriginateNewLSAs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfRxNewLSAs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfOspfRedisMetricType(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'type1'), Enum(2, 'type2')]


class snOspfExtLsdbLimit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfExitOverflowInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfRfc1583Compatibility(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snOspfRouterIdFormat(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfDistanceIntra(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfDistanceInter(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfDistanceExternal(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfSetTrap(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfConfigErrorType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'badVersion'), Enum(2, 'areaMismatch'), Enum(3, 'unknownNbmaNbr'), Enum(4, 'unknownVirtualNbr'), Enum(5, 'authTypeMismatch'), Enum(6, 'authFailure'), Enum(7, 'netMaskMismatch'), Enum(8, 'helloIntervalMismatch'), Enum(9, 'deadIntervalMismatch'), Enum(10, 'optionMismatch')]


class snOspfPacketType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'hello'), Enum(2, 'dbDescript'), Enum(3, 'lsReq'), Enum(4, 'lsUpdate'), Enum(5, 'lsAck')]


class snOspfPacketSrc(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfTrapsGenerationMode(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 5])
	syntaxobject = RtrStatus


# columns
class snOspfAreaId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 1])
	syntaxobject = AreaID


class snOspfImportASExtern(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfStubMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 3])
	syntaxobject = BigMetric


class snOspfAreaRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snOspfAreaIdFormat(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfAreaRangeAreaID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 1])
	syntaxobject = AreaID


class snOspfAreaRangeNet(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfAreaRangeMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfAreaRangeRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snOspfAreaRangeAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfIfPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfAreaId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 2])
	syntaxobject = AreaID


class snOspfIfAdminStat(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 3])
	syntaxobject = RtrStatus


class snOspfIfRtrPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 4])
	syntaxobject = DesignatedRouterPriority


class snOspfIfTransitDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 5])
	syntaxobject = UpToMaxAge


class snOspfIfRetransInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 6])
	syntaxobject = UpToMaxAge


class snOspfIfHelloInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 7])
	syntaxobject = HelloRange


class snOspfIfRtrDeadInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 8])
	syntaxobject = PositiveInteger


class snOspfIfAuthType(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfAuthKey(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfIfMetricValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snOspfIfMd5AuthKeyId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfMd5AuthKey(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfIfMd5ActivationWaitTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfIfPassiveMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snOspfVirtIfAreaID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 1])
	syntaxobject = AreaID


class snOspfVirtIfNeighbor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 2])
	syntaxobject = RouterID


class snOspfVirtIfTransitDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 3])
	syntaxobject = UpToMaxAge


class snOspfVirtIfRetransInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 4])
	syntaxobject = UpToMaxAge


class snOspfVirtIfHelloInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 5])
	syntaxobject = HelloRange


class snOspfVirtIfRtrDeadInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 6])
	syntaxobject = PositiveInteger


class snOspfVirtIfAuthType(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfAuthKey(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfVirtIfRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snOspfVirtIfMd5AuthKeyId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfMd5AuthKey(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfVirtIfMd5ActivationWaitTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfRedisIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfRedisIpAddress(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfRedisMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfRedisAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'noImport'), Enum(1, 'import')]


class snOspfRedisProtocol(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rip'), Enum(2, 'all'), Enum(3, 'static'), Enum(4, 'bgp'), Enum(5, 'connected')]


class snOspfRedisSetOspfMetric(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snOspfRedisOspfMetricValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 7])
	syntaxobject = Metric


class snOspfRedisMatchRipMetric(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snOspfRedisRipMetricValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfRedisRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snOspfNbrEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfNbrPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfNbrIpAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfNbrIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfNbrRtrId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 5])
	syntaxobject = RouterID


class snOspfNbrOptions(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfNbrPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 7])
	syntaxobject = DesignatedRouterPriority


class snOspfNbrState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(2, 'attempt'), Enum(3, 'init'), Enum(4, 'twoWay'), Enum(5, 'exchangeStart'), Enum(6, 'exchange'), Enum(7, 'loading'), Enum(8, 'full')]


class snOspfNbrEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfNbrLsRetransQLen(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snOspfVirtNbrEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtNbrArea(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 2])
	syntaxobject = AreaID


class snOspfVirtNbrRtrId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 3])
	syntaxobject = RouterID


class snOspfVirtNbrIpAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfVirtNbrOptions(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtNbrState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(2, 'attempt'), Enum(3, 'init'), Enum(4, 'twoWay'), Enum(5, 'exchangeStart'), Enum(6, 'exchange'), Enum(7, 'loading'), Enum(8, 'full')]


class snOspfVirtNbrEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfVirtNbrLSRetransQLen(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snOspfVirtNbrAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfLsdbEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfLsdbAreaId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 2])
	syntaxobject = AreaID


class snOspfLsdbType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'routerLink'), Enum(2, 'networkLink'), Enum(3, 'summaryLink'), Enum(4, 'asSummaryLink')]


class snOspfLsdbLsId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfLsdbRouterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 5])
	syntaxobject = RouterID


class snOspfLsdbSequence(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfLsdbAge(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfLsdbChecksum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfLsdbAdvertisement(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfLsdbAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfExtLsdbEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfExtLsdbType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(5, 'asExternalLink')]


class snOspfExtLsdbLsId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfExtLsdbRouterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 4])
	syntaxobject = RouterID


class snOspfExtLsdbSequence(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfExtLsdbAge(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfExtLsdbChecksum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfExtLsdbAdvertisement(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfAreaStatusEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfAreaStatusAreaId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 2])
	syntaxobject = AreaID


class snOspfAreaStatusImportASExtern(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfAreaStatusStubMetric(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 4])
	syntaxobject = BigMetric


class snOspfAreaStatusSpfRuns(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfAreaStatusAreaBdrRtrCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snOspfAreaStatusASBdrRtrCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snOspfAreaStatusLSACount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class snOspfAreaStatusLSACksumSum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfAreaStatusAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfIfStatusEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfStatusPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfStatusIpAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfIfStatusAreaId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 4])
	syntaxobject = AreaID


class snOspfIfStatusType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'broadcast'), Enum(2, 'nbma'), Enum(3, 'pointToPoint')]


class snOspfIfStatusAdminStat(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 6])
	syntaxobject = RtrStatus


class snOspfIfStatusRtrPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 7])
	syntaxobject = DesignatedRouterPriority


class snOspfIfStatusTransitDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 8])
	syntaxobject = UpToMaxAge


class snOspfIfStatusRetransInterval(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 9])
	syntaxobject = UpToMaxAge


class snOspfIfStatusHelloInterval(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 10])
	syntaxobject = HelloRange


class snOspfIfStatusRtrDeadInterval(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 11])
	syntaxobject = PositiveInteger


class snOspfIfStatusState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(2, 'loopback'), Enum(3, 'waiting'), Enum(4, 'pointToPoint'), Enum(5, 'designatedRouter'), Enum(6, 'backupDesignatedRouter'), Enum(7, 'otherDesignatedRouter')]


class snOspfIfStatusDesignatedRouter(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfIfStatusBackupDesignatedRouter(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snOspfIfStatusEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfIfStatusAuthType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfStatusAuthKey(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfIfStatusMetricValue(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 18])
	syntaxobject = Metric


class snOspfIfStatusMd5AuthKeyId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfStatusMd5AuthKey(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfIfStatusMd5ActivationWaitTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfIfStatusAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfVirtIfStatusEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfStatusAreaID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 2])
	syntaxobject = AreaID


class snOspfVirtIfStatusNeighbor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 3])
	syntaxobject = RouterID


class snOspfVirtIfStatusTransitDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 4])
	syntaxobject = UpToMaxAge


class snOspfVirtIfStatusRetransInterval(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 5])
	syntaxobject = UpToMaxAge


class snOspfVirtIfStatusHelloInterval(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 6])
	syntaxobject = HelloRange


class snOspfVirtIfStatusRtrDeadInterval(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 7])
	syntaxobject = PositiveInteger


class snOspfVirtIfStatusState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(4, 'pointToPoint')]


class snOspfVirtIfStatusEvents(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snOspfVirtIfStatusAuthType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfStatusAuthKey(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfVirtIfStatusMd5AuthKeyId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfStatusMd5AuthKey(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snOspfVirtIfStatusMd5ActivationWaitTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfVirtIfStatusAreaIdFormat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'integer'), Enum(1, 'ipAddress')]


class snOspfRoutingInfoIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snOspfRoutingInfoRouterID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 2])
	syntaxobject = RouterID


class snOspfRoutingInfoRouterType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'abr'), Enum(2, 'asbr'), Enum(3, 'abrANDasbr')]


class snOspfRoutingInfoNextHopRouterID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 4])
	syntaxobject = RouterID


class snOspfRoutingInfoOutgoingInterface(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class snOspfAreaEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfAreaId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1])
	access = 2
	columns = {'snOspfAreaId': snOspfAreaId, 'snOspfImportASExtern': snOspfImportASExtern, 'snOspfStubMetric': snOspfStubMetric, 'snOspfAreaRowStatus': snOspfAreaRowStatus, 'snOspfAreaIdFormat': snOspfAreaIdFormat}


class snOspfAreaRangeEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfAreaRangeAreaID, snOspfAreaRangeNet], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1])
	access = 2
	columns = {'snOspfAreaRangeAreaID': snOspfAreaRangeAreaID, 'snOspfAreaRangeNet': snOspfAreaRangeNet, 'snOspfAreaRangeMask': snOspfAreaRangeMask, 'snOspfAreaRangeRowStatus': snOspfAreaRangeRowStatus, 'snOspfAreaRangeAreaIdFormat': snOspfAreaRangeAreaIdFormat}


class snOspfIfEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfIfPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1])
	access = 2
	columns = {'snOspfIfPort': snOspfIfPort, 'snOspfIfAreaId': snOspfIfAreaId, 'snOspfIfAdminStat': snOspfIfAdminStat, 'snOspfIfRtrPriority': snOspfIfRtrPriority, 'snOspfIfTransitDelay': snOspfIfTransitDelay, 'snOspfIfRetransInterval': snOspfIfRetransInterval, 'snOspfIfHelloInterval': snOspfIfHelloInterval, 'snOspfIfRtrDeadInterval': snOspfIfRtrDeadInterval, 'snOspfIfAuthType': snOspfIfAuthType, 'snOspfIfAuthKey': snOspfIfAuthKey, 'snOspfIfMetricValue': snOspfIfMetricValue, 'snOspfIfRowStatus': snOspfIfRowStatus, 'snOspfIfMd5AuthKeyId': snOspfIfMd5AuthKeyId, 'snOspfIfMd5AuthKey': snOspfIfMd5AuthKey, 'snOspfIfMd5ActivationWaitTime': snOspfIfMd5ActivationWaitTime, 'snOspfIfAreaIdFormat': snOspfIfAreaIdFormat, 'snOspfIfPassiveMode': snOspfIfPassiveMode}


class snOspfVirtIfEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfVirtIfAreaID, snOspfVirtIfNeighbor], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1])
	access = 2
	columns = {'snOspfVirtIfAreaID': snOspfVirtIfAreaID, 'snOspfVirtIfNeighbor': snOspfVirtIfNeighbor, 'snOspfVirtIfTransitDelay': snOspfVirtIfTransitDelay, 'snOspfVirtIfRetransInterval': snOspfVirtIfRetransInterval, 'snOspfVirtIfHelloInterval': snOspfVirtIfHelloInterval, 'snOspfVirtIfRtrDeadInterval': snOspfVirtIfRtrDeadInterval, 'snOspfVirtIfAuthType': snOspfVirtIfAuthType, 'snOspfVirtIfAuthKey': snOspfVirtIfAuthKey, 'snOspfVirtIfRowStatus': snOspfVirtIfRowStatus, 'snOspfVirtIfMd5AuthKeyId': snOspfVirtIfMd5AuthKeyId, 'snOspfVirtIfMd5AuthKey': snOspfVirtIfMd5AuthKey, 'snOspfVirtIfMd5ActivationWaitTime': snOspfVirtIfMd5ActivationWaitTime, 'snOspfVirtIfAreaIdFormat': snOspfVirtIfAreaIdFormat}


class snOspfRedisEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfRedisIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1])
	access = 2
	columns = {'snOspfRedisIndex': snOspfRedisIndex, 'snOspfRedisIpAddress': snOspfRedisIpAddress, 'snOspfRedisMask': snOspfRedisMask, 'snOspfRedisAction': snOspfRedisAction, 'snOspfRedisProtocol': snOspfRedisProtocol, 'snOspfRedisSetOspfMetric': snOspfRedisSetOspfMetric, 'snOspfRedisOspfMetricValue': snOspfRedisOspfMetricValue, 'snOspfRedisMatchRipMetric': snOspfRedisMatchRipMetric, 'snOspfRedisRipMetricValue': snOspfRedisRipMetricValue, 'snOspfRedisRowStatus': snOspfRedisRowStatus}


class snOspfNbrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfNbrEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1])
	access = 2
	columns = {'snOspfNbrEntryIndex': snOspfNbrEntryIndex, 'snOspfNbrPort': snOspfNbrPort, 'snOspfNbrIpAddr': snOspfNbrIpAddr, 'snOspfNbrIndex': snOspfNbrIndex, 'snOspfNbrRtrId': snOspfNbrRtrId, 'snOspfNbrOptions': snOspfNbrOptions, 'snOspfNbrPriority': snOspfNbrPriority, 'snOspfNbrState': snOspfNbrState, 'snOspfNbrEvents': snOspfNbrEvents, 'snOspfNbrLsRetransQLen': snOspfNbrLsRetransQLen}


class snOspfVirtNbrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfVirtNbrEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1])
	access = 2
	columns = {'snOspfVirtNbrEntryIndex': snOspfVirtNbrEntryIndex, 'snOspfVirtNbrArea': snOspfVirtNbrArea, 'snOspfVirtNbrRtrId': snOspfVirtNbrRtrId, 'snOspfVirtNbrIpAddr': snOspfVirtNbrIpAddr, 'snOspfVirtNbrOptions': snOspfVirtNbrOptions, 'snOspfVirtNbrState': snOspfVirtNbrState, 'snOspfVirtNbrEvents': snOspfVirtNbrEvents, 'snOspfVirtNbrLSRetransQLen': snOspfVirtNbrLSRetransQLen, 'snOspfVirtNbrAreaIdFormat': snOspfVirtNbrAreaIdFormat}


class snOspfLsdbEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfLsdbEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1])
	access = 2
	columns = {'snOspfLsdbEntryIndex': snOspfLsdbEntryIndex, 'snOspfLsdbAreaId': snOspfLsdbAreaId, 'snOspfLsdbType': snOspfLsdbType, 'snOspfLsdbLsId': snOspfLsdbLsId, 'snOspfLsdbRouterId': snOspfLsdbRouterId, 'snOspfLsdbSequence': snOspfLsdbSequence, 'snOspfLsdbAge': snOspfLsdbAge, 'snOspfLsdbChecksum': snOspfLsdbChecksum, 'snOspfLsdbAdvertisement': snOspfLsdbAdvertisement, 'snOspfLsdbAreaIdFormat': snOspfLsdbAreaIdFormat}


class snOspfExtLsdbEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfExtLsdbEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1])
	access = 2
	columns = {'snOspfExtLsdbEntryIndex': snOspfExtLsdbEntryIndex, 'snOspfExtLsdbType': snOspfExtLsdbType, 'snOspfExtLsdbLsId': snOspfExtLsdbLsId, 'snOspfExtLsdbRouterId': snOspfExtLsdbRouterId, 'snOspfExtLsdbSequence': snOspfExtLsdbSequence, 'snOspfExtLsdbAge': snOspfExtLsdbAge, 'snOspfExtLsdbChecksum': snOspfExtLsdbChecksum, 'snOspfExtLsdbAdvertisement': snOspfExtLsdbAdvertisement}


class snOspfAreaStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfAreaStatusEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1])
	access = 2
	columns = {'snOspfAreaStatusEntryIndex': snOspfAreaStatusEntryIndex, 'snOspfAreaStatusAreaId': snOspfAreaStatusAreaId, 'snOspfAreaStatusImportASExtern': snOspfAreaStatusImportASExtern, 'snOspfAreaStatusStubMetric': snOspfAreaStatusStubMetric, 'snOspfAreaStatusSpfRuns': snOspfAreaStatusSpfRuns, 'snOspfAreaStatusAreaBdrRtrCount': snOspfAreaStatusAreaBdrRtrCount, 'snOspfAreaStatusASBdrRtrCount': snOspfAreaStatusASBdrRtrCount, 'snOspfAreaStatusLSACount': snOspfAreaStatusLSACount, 'snOspfAreaStatusLSACksumSum': snOspfAreaStatusLSACksumSum, 'snOspfAreaStatusAreaIdFormat': snOspfAreaStatusAreaIdFormat}


class snOspfIfStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfIfStatusEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1])
	access = 2
	columns = {'snOspfIfStatusEntryIndex': snOspfIfStatusEntryIndex, 'snOspfIfStatusPort': snOspfIfStatusPort, 'snOspfIfStatusIpAddress': snOspfIfStatusIpAddress, 'snOspfIfStatusAreaId': snOspfIfStatusAreaId, 'snOspfIfStatusType': snOspfIfStatusType, 'snOspfIfStatusAdminStat': snOspfIfStatusAdminStat, 'snOspfIfStatusRtrPriority': snOspfIfStatusRtrPriority, 'snOspfIfStatusTransitDelay': snOspfIfStatusTransitDelay, 'snOspfIfStatusRetransInterval': snOspfIfStatusRetransInterval, 'snOspfIfStatusHelloInterval': snOspfIfStatusHelloInterval, 'snOspfIfStatusRtrDeadInterval': snOspfIfStatusRtrDeadInterval, 'snOspfIfStatusState': snOspfIfStatusState, 'snOspfIfStatusDesignatedRouter': snOspfIfStatusDesignatedRouter, 'snOspfIfStatusBackupDesignatedRouter': snOspfIfStatusBackupDesignatedRouter, 'snOspfIfStatusEvents': snOspfIfStatusEvents, 'snOspfIfStatusAuthType': snOspfIfStatusAuthType, 'snOspfIfStatusAuthKey': snOspfIfStatusAuthKey, 'snOspfIfStatusMetricValue': snOspfIfStatusMetricValue, 'snOspfIfStatusMd5AuthKeyId': snOspfIfStatusMd5AuthKeyId, 'snOspfIfStatusMd5AuthKey': snOspfIfStatusMd5AuthKey, 'snOspfIfStatusMd5ActivationWaitTime': snOspfIfStatusMd5ActivationWaitTime, 'snOspfIfStatusAreaIdFormat': snOspfIfStatusAreaIdFormat}


class snOspfVirtIfStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfVirtIfStatusEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1])
	access = 2
	columns = {'snOspfVirtIfStatusEntryIndex': snOspfVirtIfStatusEntryIndex, 'snOspfVirtIfStatusAreaID': snOspfVirtIfStatusAreaID, 'snOspfVirtIfStatusNeighbor': snOspfVirtIfStatusNeighbor, 'snOspfVirtIfStatusTransitDelay': snOspfVirtIfStatusTransitDelay, 'snOspfVirtIfStatusRetransInterval': snOspfVirtIfStatusRetransInterval, 'snOspfVirtIfStatusHelloInterval': snOspfVirtIfStatusHelloInterval, 'snOspfVirtIfStatusRtrDeadInterval': snOspfVirtIfStatusRtrDeadInterval, 'snOspfVirtIfStatusState': snOspfVirtIfStatusState, 'snOspfVirtIfStatusEvents': snOspfVirtIfStatusEvents, 'snOspfVirtIfStatusAuthType': snOspfVirtIfStatusAuthType, 'snOspfVirtIfStatusAuthKey': snOspfVirtIfStatusAuthKey, 'snOspfVirtIfStatusMd5AuthKeyId': snOspfVirtIfStatusMd5AuthKeyId, 'snOspfVirtIfStatusMd5AuthKey': snOspfVirtIfStatusMd5AuthKey, 'snOspfVirtIfStatusMd5ActivationWaitTime': snOspfVirtIfStatusMd5ActivationWaitTime, 'snOspfVirtIfStatusAreaIdFormat': snOspfVirtIfStatusAreaIdFormat}


class snOspfRoutingInfoEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snOspfRoutingInfoIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1])
	access = 2
	columns = {'snOspfRoutingInfoIndex': snOspfRoutingInfoIndex, 'snOspfRoutingInfoRouterID': snOspfRoutingInfoRouterID, 'snOspfRoutingInfoRouterType': snOspfRoutingInfoRouterType, 'snOspfRoutingInfoNextHopRouterID': snOspfRoutingInfoNextHopRouterID, 'snOspfRoutingInfoOutgoingInterface': snOspfRoutingInfoOutgoingInterface}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
