# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE
from FC_MGMT_MIB import FcNameIdOrZero, FcAddressIdOrZero
from IF_MIB import InterfaceIndexOrZero
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Gauge32, Integer32, Unsigned32, transmission
from HCNUM_TC import ZeroBasedCounter64
from RMON2_MIB import ZeroBasedCounter32
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetPortNumber
from ENTITY_MIB import PhysicalIndexOrZero
from SNMPv2_TC import TEXTUAL_CONVENTION, TimeStamp, TruthValue, StorageType

class IFCP_MGMT_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IFCP-MGMT-MIB'
	conformance = 132
	name = 'IFCP-MGMT-MIB'
	language = 2
	description = 'This module defines management information specific\nto internet Fibre Channel Protocol (iFCP) gateway\nmanagement.\n\nCopyright (C) The Internet Society 2006.  This\nversion of this MIB module is part of RFC 4369; see\nthe RFC itself for full legal notices.'

# nodes
class ifcpMgmtMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230])
	name = 'ifcpMgmtMIB'

class ifcpGatewayObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1])
	name = 'ifcpGatewayObjects'

class ifcpLclGatewayInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1])
	name = 'ifcpLclGatewayInfo'

class ifcpNportSessionInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2])
	name = 'ifcpNportSessionInfo'

class ifcpGatewayConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2])
	name = 'ifcpGatewayConformance'

class ifcpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2, 1])
	name = 'ifcpCompliances'

class ifcpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2, 2])
	name = 'ifcpGroups'


# macros
# types 

class IfcpIpTOVorZero(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 3600))
	format = 'd'


class IfcpLTIorZero(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 65535))
	format = 'd'


class IfcpSessionStates(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'down'), Enum(2, 'openPending'), Enum(3, 'open')]


class IfcpAddressMode(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'addressTransparent'), Enum(2, 'addressTranslation')]

# scalars 
# columns
class ifcpLclGtwyInstIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ifcpLclGtwyInstPhyIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 2])
	syntaxobject = PhysicalIndexOrZero


class ifcpLclGtwyInstVersionMin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ifcpLclGtwyInstVersionMax(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ifcpLclGtwyInstAddrTransMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 5])
	syntaxobject = IfcpAddressMode


class ifcpLclGtwyInstFcBrdcstSupport(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ifcpLclGtwyInstDefaultIpTOV(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 7])
	syntaxobject = IfcpIpTOVorZero


class ifcpLclGtwyInstDefaultLTInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 8])
	syntaxobject = IfcpLTIorZero


class ifcpLclGtwyInstDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 9])
	syntaxobject = SnmpAdminString


class ifcpLclGtwyInstNumActiveSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ifcpLclGtwyInstStorageType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ifcpSessionIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ifcpSessionLclPrtlIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 2])
	syntaxobject = InterfaceIndexOrZero


class ifcpSessionLclPrtlAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 3])
	syntaxobject = InetAddressType


class ifcpSessionLclPrtlAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 4])
	syntaxobject = InetAddress


class ifcpSessionLclPrtlTcpPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 5])
	syntaxobject = InetPortNumber


class ifcpSessionLclNpWwun(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 6])
	syntaxobject = FcNameIdOrZero


class ifcpSessionLclNpFcid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 7])
	syntaxobject = FcAddressIdOrZero


class ifcpSessionRmtNpWwun(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 8])
	syntaxobject = FcNameIdOrZero


class ifcpSessionRmtPrtlIfAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 9])
	syntaxobject = InetAddressType


class ifcpSessionRmtPrtlIfAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 10])
	syntaxobject = InetAddress


class ifcpSessionRmtPrtlTcpPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 11])
	syntaxobject = InetPortNumber


class ifcpSessionRmtNpFcid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 12])
	syntaxobject = FcAddressIdOrZero


class ifcpSessionRmtNpFcidAlias(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 13])
	syntaxobject = FcAddressIdOrZero


class ifcpSessionIpTOV(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 14])
	syntaxobject = IfcpIpTOVorZero


class ifcpSessionLclLTIntvl(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 15])
	syntaxobject = IfcpLTIorZero


class ifcpSessionRmtLTIntvl(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 16])
	syntaxobject = IfcpLTIorZero


class ifcpSessionBound(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ifcpSessionStorageType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ifcpSessionState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 1])
	syntaxobject = IfcpSessionStates


class ifcpSessionDuration(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ifcpSessionTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 3])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 4])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionTxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 5])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionRxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 6])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionStaleFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 7])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionHeaderCRCErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 8])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionFcPayloadCRCErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 9])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionOtherErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 10])
	syntaxobject = ZeroBasedCounter64


class ifcpSessionDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class ifcpSessionLcTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 1])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 2])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcTxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 3])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcRxFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 4])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcStaleFrames(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 5])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcHeaderCRCErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 6])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcFcPayloadCRCErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 7])
	syntaxobject = ZeroBasedCounter32


class ifcpSessionLcOtherErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1, 8])
	syntaxobject = ZeroBasedCounter32


# rows 
class ifcpLclGtwyInstEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifcpLclGtwyInstIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 1, 1, 1])
	access = 2
	columns = {'ifcpLclGtwyInstIndex': ifcpLclGtwyInstIndex, 'ifcpLclGtwyInstPhyIndex': ifcpLclGtwyInstPhyIndex, 'ifcpLclGtwyInstVersionMin': ifcpLclGtwyInstVersionMin, 'ifcpLclGtwyInstVersionMax': ifcpLclGtwyInstVersionMax, 'ifcpLclGtwyInstAddrTransMode': ifcpLclGtwyInstAddrTransMode, 'ifcpLclGtwyInstFcBrdcstSupport': ifcpLclGtwyInstFcBrdcstSupport, 'ifcpLclGtwyInstDefaultIpTOV': ifcpLclGtwyInstDefaultIpTOV, 'ifcpLclGtwyInstDefaultLTInterval': ifcpLclGtwyInstDefaultLTInterval, 'ifcpLclGtwyInstDescr': ifcpLclGtwyInstDescr, 'ifcpLclGtwyInstNumActiveSessions': ifcpLclGtwyInstNumActiveSessions, 'ifcpLclGtwyInstStorageType': ifcpLclGtwyInstStorageType}


class ifcpSessionAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifcpLclGtwyInstIndex, ifcpSessionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 1, 1])
	access = 2
	columns = {'ifcpSessionIndex': ifcpSessionIndex, 'ifcpSessionLclPrtlIfIndex': ifcpSessionLclPrtlIfIndex, 'ifcpSessionLclPrtlAddrType': ifcpSessionLclPrtlAddrType, 'ifcpSessionLclPrtlAddr': ifcpSessionLclPrtlAddr, 'ifcpSessionLclPrtlTcpPort': ifcpSessionLclPrtlTcpPort, 'ifcpSessionLclNpWwun': ifcpSessionLclNpWwun, 'ifcpSessionLclNpFcid': ifcpSessionLclNpFcid, 'ifcpSessionRmtNpWwun': ifcpSessionRmtNpWwun, 'ifcpSessionRmtPrtlIfAddrType': ifcpSessionRmtPrtlIfAddrType, 'ifcpSessionRmtPrtlIfAddr': ifcpSessionRmtPrtlIfAddr, 'ifcpSessionRmtPrtlTcpPort': ifcpSessionRmtPrtlTcpPort, 'ifcpSessionRmtNpFcid': ifcpSessionRmtNpFcid, 'ifcpSessionRmtNpFcidAlias': ifcpSessionRmtNpFcidAlias, 'ifcpSessionIpTOV': ifcpSessionIpTOV, 'ifcpSessionLclLTIntvl': ifcpSessionLclLTIntvl, 'ifcpSessionRmtLTIntvl': ifcpSessionRmtLTIntvl, 'ifcpSessionBound': ifcpSessionBound, 'ifcpSessionStorageType': ifcpSessionStorageType}


from IFCP_MGMT_MIB import ifcpLclGtwyInstIndex
from IFCP_MGMT_MIB import ifcpSessionIndex
class ifcpSessionStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifcpLclGtwyInstIndex, ifcpSessionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 2, 1])
	access = 2
	columns = {'ifcpSessionState': ifcpSessionState, 'ifcpSessionDuration': ifcpSessionDuration, 'ifcpSessionTxOctets': ifcpSessionTxOctets, 'ifcpSessionRxOctets': ifcpSessionRxOctets, 'ifcpSessionTxFrames': ifcpSessionTxFrames, 'ifcpSessionRxFrames': ifcpSessionRxFrames, 'ifcpSessionStaleFrames': ifcpSessionStaleFrames, 'ifcpSessionHeaderCRCErrors': ifcpSessionHeaderCRCErrors, 'ifcpSessionFcPayloadCRCErrors': ifcpSessionFcPayloadCRCErrors, 'ifcpSessionOtherErrors': ifcpSessionOtherErrors, 'ifcpSessionDiscontinuityTime': ifcpSessionDiscontinuityTime}


from IFCP_MGMT_MIB import ifcpLclGtwyInstIndex
from IFCP_MGMT_MIB import ifcpSessionIndex
class ifcpSessionLcStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifcpLclGtwyInstIndex, ifcpSessionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 1, 2, 3, 1])
	access = 2
	columns = {'ifcpSessionLcTxOctets': ifcpSessionLcTxOctets, 'ifcpSessionLcRxOctets': ifcpSessionLcRxOctets, 'ifcpSessionLcTxFrames': ifcpSessionLcTxFrames, 'ifcpSessionLcRxFrames': ifcpSessionLcRxFrames, 'ifcpSessionLcStaleFrames': ifcpSessionLcStaleFrames, 'ifcpSessionLcHeaderCRCErrors': ifcpSessionLcHeaderCRCErrors, 'ifcpSessionLcFcPayloadCRCErrors': ifcpSessionLcFcPayloadCRCErrors, 'ifcpSessionLcOtherErrors': ifcpSessionLcOtherErrors}


# notifications (traps) 
# groups 
class ifcpLclGatewayGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2, 2, 1])
	group = [ifcpLclGtwyInstPhyIndex, ifcpLclGtwyInstVersionMin, ifcpLclGtwyInstVersionMax, ifcpLclGtwyInstAddrTransMode, ifcpLclGtwyInstFcBrdcstSupport, ifcpLclGtwyInstDefaultIpTOV, ifcpLclGtwyInstDefaultLTInterval, ifcpLclGtwyInstDescr, ifcpLclGtwyInstNumActiveSessions, ifcpLclGtwyInstStorageType]

class ifcpLclGatewaySessionGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2, 2, 4])
	group = [ifcpSessionLclPrtlIfIndex, ifcpSessionLclPrtlAddrType, ifcpSessionLclPrtlAddr, ifcpSessionLclPrtlTcpPort, ifcpSessionLclNpWwun, ifcpSessionLclNpFcid, ifcpSessionRmtNpWwun, ifcpSessionRmtPrtlIfAddrType, ifcpSessionRmtPrtlIfAddr, ifcpSessionRmtPrtlTcpPort, ifcpSessionRmtNpFcid, ifcpSessionRmtNpFcidAlias, ifcpSessionIpTOV, ifcpSessionLclLTIntvl, ifcpSessionRmtLTIntvl, ifcpSessionBound, ifcpSessionStorageType]

class ifcpLclGatewaySessionStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2, 2, 5])
	group = [ifcpSessionState, ifcpSessionDuration, ifcpSessionTxOctets, ifcpSessionRxOctets, ifcpSessionTxFrames, ifcpSessionRxFrames, ifcpSessionStaleFrames, ifcpSessionHeaderCRCErrors, ifcpSessionFcPayloadCRCErrors, ifcpSessionOtherErrors, ifcpSessionDiscontinuityTime]

class ifcpLclGatewaySessionLcStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 230, 2, 2, 6])
	group = [ifcpSessionLcTxOctets, ifcpSessionLcRxOctets, ifcpSessionLcTxFrames, ifcpSessionLcRxFrames, ifcpSessionLcStaleFrames, ifcpSessionLcHeaderCRCErrors, ifcpSessionLcFcPayloadCRCErrors, ifcpSessionLcOtherErrors]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
