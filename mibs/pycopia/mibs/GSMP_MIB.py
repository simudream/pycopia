# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndex
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, NOTIFICATION_TYPE, Unsigned32, Integer32, mib_2
from ATM_TC_MIB import AtmVcIdentifier, AtmVpIdentifier
from RMON2_MIB import ZeroBasedCounter32
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetPortNumber
from SNMPv2_TC import RowStatus, TruthValue, TimeStamp, StorageType, TEXTUAL_CONVENTION

class GSMP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/GSMP-MIB'
	conformance = 5
	name = 'GSMP-MIB'
	language = 2
	description = 'This MIB contains managed object definitions for the\nGeneral Switch Management Protocol, GSMP, version 3'

# nodes
class gsmpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98])
	name = 'gsmpMIB'

class gsmpNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0])
	name = 'gsmpNotifications'

class gsmpObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1])
	name = 'gsmpObjects'

class gsmpNotificationsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 2])
	name = 'gsmpNotificationsObjects'

class gsmpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3])
	name = 'gsmpConformance'

class gsmpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1])
	name = 'gsmpGroups'

class gsmpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 2])
	name = 'gsmpCompliances'


# macros
# types 

class GsmpNameType(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(6, 6))


class GsmpPartitionType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'noPartition'), Enum(2, 'fixedPartitionRequest'), Enum(3, 'fixedPartitionAssigned')]


class GsmpPartitionIdType(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 1))


class GsmpVersion(pycopia.SMI.Basetypes.Unsigned32):
	status = 1


class GsmpLabelType(pycopia.SMI.Basetypes.OctetString):
	status = 1

# scalars 
class gsmpEventPort(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpEventPortSessionNumber(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpEventSequenceNumber(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpEventLabel(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 2, 4])
	syntaxobject = GsmpLabelType


# columns
class gsmpControllerEntityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 1])
	syntaxobject = GsmpNameType


class gsmpControllerMaxVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 2])
	syntaxobject = GsmpVersion


class gsmpControllerTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = '100ms'


class gsmpControllerPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpControllerInstance(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpControllerPartitionType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 6])
	syntaxobject = GsmpPartitionType


class gsmpControllerPartitionId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 7])
	syntaxobject = GsmpPartitionIdType


class gsmpControllerDoResync(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class gsmpControllerNotificationMap(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class gsmpControllerSessionState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'null'), Enum(2, 'synsent'), Enum(3, 'synrcvd'), Enum(4, 'estab')]


class gsmpControllerStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class gsmpControllerRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class gsmpSwitchEntityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 1])
	syntaxobject = GsmpNameType


class gsmpSwitchMaxVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 2])
	syntaxobject = GsmpVersion


class gsmpSwitchTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = '100ms'


class gsmpSwitchName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 4])
	syntaxobject = GsmpNameType


class gsmpSwitchPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSwitchInstance(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSwitchPartitionType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 7])
	syntaxobject = GsmpPartitionType


class gsmpSwitchPartitionId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 8])
	syntaxobject = GsmpPartitionIdType


class gsmpSwitchNotificationMap(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class gsmpSwitchSwitchType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class gsmpSwitchWindowSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSwitchSessionState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'null'), Enum(2, 'synsent'), Enum(3, 'synrcvd'), Enum(4, 'estab')]


class gsmpSwitchStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class gsmpSwitchRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class gsmpAtmEncapEntityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1, 1])
	syntaxobject = GsmpNameType


class gsmpAtmEncapIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1, 2])
	syntaxobject = InterfaceIndex


class gsmpAtmEncapVpi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1, 3])
	syntaxobject = AtmVpIdentifier


class gsmpAtmEncapVci(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1, 4])
	syntaxobject = AtmVcIdentifier


class gsmpAtmEncapStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class gsmpAtmEncapRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class gsmpTcpIpEncapEntityId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1, 1])
	syntaxobject = GsmpNameType


class gsmpTcpIpEncapAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1, 2])
	syntaxobject = InetAddressType


class gsmpTcpIpEncapAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1, 3])
	syntaxobject = InetAddress


class gsmpTcpIpEncapPortNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1, 4])
	syntaxobject = InetPortNumber


class gsmpTcpIpEncapStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class gsmpTcpIpEncapRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class gsmpSessionThisSideId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 1])
	syntaxobject = GsmpNameType


class gsmpSessionFarSideId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 2])
	syntaxobject = GsmpNameType


class gsmpSessionVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 3])
	syntaxobject = GsmpVersion


class gsmpSessionTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '100ms'


class gsmpSessionPartitionId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 5])
	syntaxobject = GsmpPartitionIdType


class gsmpSessionAdjacencyCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSessionFarSideName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 7])
	syntaxobject = GsmpNameType


class gsmpSessionFarSidePort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSessionFarSideInstance(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSessionLastFailureCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gsmpSessionDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class gsmpSessionStartUptime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class gsmpSessionStatSentMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 13])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatFailureInds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 14])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatReceivedMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 15])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatReceivedFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 16])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatPortUpEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 17])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatPortDownEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 18])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatInvLabelEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 19])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatNewPortEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 20])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatDeadPortEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 21])
	syntaxobject = ZeroBasedCounter32


class gsmpSessionStatAdjUpdateEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1, 22])
	syntaxobject = ZeroBasedCounter32


# rows 
class gsmpControllerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([gsmpControllerEntityId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 1, 1])
	access = 2
	rowstatus = gsmpControllerRowStatus
	columns = {'gsmpControllerEntityId': gsmpControllerEntityId, 'gsmpControllerMaxVersion': gsmpControllerMaxVersion, 'gsmpControllerTimer': gsmpControllerTimer, 'gsmpControllerPort': gsmpControllerPort, 'gsmpControllerInstance': gsmpControllerInstance, 'gsmpControllerPartitionType': gsmpControllerPartitionType, 'gsmpControllerPartitionId': gsmpControllerPartitionId, 'gsmpControllerDoResync': gsmpControllerDoResync, 'gsmpControllerNotificationMap': gsmpControllerNotificationMap, 'gsmpControllerSessionState': gsmpControllerSessionState, 'gsmpControllerStorageType': gsmpControllerStorageType, 'gsmpControllerRowStatus': gsmpControllerRowStatus}


class gsmpSwitchEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([gsmpSwitchEntityId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 2, 1])
	access = 2
	rowstatus = gsmpSwitchRowStatus
	columns = {'gsmpSwitchEntityId': gsmpSwitchEntityId, 'gsmpSwitchMaxVersion': gsmpSwitchMaxVersion, 'gsmpSwitchTimer': gsmpSwitchTimer, 'gsmpSwitchName': gsmpSwitchName, 'gsmpSwitchPort': gsmpSwitchPort, 'gsmpSwitchInstance': gsmpSwitchInstance, 'gsmpSwitchPartitionType': gsmpSwitchPartitionType, 'gsmpSwitchPartitionId': gsmpSwitchPartitionId, 'gsmpSwitchNotificationMap': gsmpSwitchNotificationMap, 'gsmpSwitchSwitchType': gsmpSwitchSwitchType, 'gsmpSwitchWindowSize': gsmpSwitchWindowSize, 'gsmpSwitchSessionState': gsmpSwitchSessionState, 'gsmpSwitchStorageType': gsmpSwitchStorageType, 'gsmpSwitchRowStatus': gsmpSwitchRowStatus}


class gsmpAtmEncapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([gsmpAtmEncapEntityId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 3, 1])
	access = 2
	rowstatus = gsmpAtmEncapRowStatus
	columns = {'gsmpAtmEncapEntityId': gsmpAtmEncapEntityId, 'gsmpAtmEncapIfIndex': gsmpAtmEncapIfIndex, 'gsmpAtmEncapVpi': gsmpAtmEncapVpi, 'gsmpAtmEncapVci': gsmpAtmEncapVci, 'gsmpAtmEncapStorageType': gsmpAtmEncapStorageType, 'gsmpAtmEncapRowStatus': gsmpAtmEncapRowStatus}


class gsmpTcpIpEncapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([gsmpTcpIpEncapEntityId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 4, 1])
	access = 2
	rowstatus = gsmpTcpIpEncapRowStatus
	columns = {'gsmpTcpIpEncapEntityId': gsmpTcpIpEncapEntityId, 'gsmpTcpIpEncapAddressType': gsmpTcpIpEncapAddressType, 'gsmpTcpIpEncapAddress': gsmpTcpIpEncapAddress, 'gsmpTcpIpEncapPortNumber': gsmpTcpIpEncapPortNumber, 'gsmpTcpIpEncapStorageType': gsmpTcpIpEncapStorageType, 'gsmpTcpIpEncapRowStatus': gsmpTcpIpEncapRowStatus}


class gsmpSessionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([gsmpSessionThisSideId, gsmpSessionFarSideId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 1, 5, 1])
	access = 2
	columns = {'gsmpSessionThisSideId': gsmpSessionThisSideId, 'gsmpSessionFarSideId': gsmpSessionFarSideId, 'gsmpSessionVersion': gsmpSessionVersion, 'gsmpSessionTimer': gsmpSessionTimer, 'gsmpSessionPartitionId': gsmpSessionPartitionId, 'gsmpSessionAdjacencyCount': gsmpSessionAdjacencyCount, 'gsmpSessionFarSideName': gsmpSessionFarSideName, 'gsmpSessionFarSidePort': gsmpSessionFarSidePort, 'gsmpSessionFarSideInstance': gsmpSessionFarSideInstance, 'gsmpSessionLastFailureCode': gsmpSessionLastFailureCode, 'gsmpSessionDiscontinuityTime': gsmpSessionDiscontinuityTime, 'gsmpSessionStartUptime': gsmpSessionStartUptime, 'gsmpSessionStatSentMessages': gsmpSessionStatSentMessages, 'gsmpSessionStatFailureInds': gsmpSessionStatFailureInds, 'gsmpSessionStatReceivedMessages': gsmpSessionStatReceivedMessages, 'gsmpSessionStatReceivedFailures': gsmpSessionStatReceivedFailures, 'gsmpSessionStatPortUpEvents': gsmpSessionStatPortUpEvents, 'gsmpSessionStatPortDownEvents': gsmpSessionStatPortDownEvents, 'gsmpSessionStatInvLabelEvents': gsmpSessionStatInvLabelEvents, 'gsmpSessionStatNewPortEvents': gsmpSessionStatNewPortEvents, 'gsmpSessionStatDeadPortEvents': gsmpSessionStatDeadPortEvents, 'gsmpSessionStatAdjUpdateEvents': gsmpSessionStatAdjUpdateEvents}


# notifications (traps) 
class gsmpSessionDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 1])

class gsmpSessionUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 2])

class gsmpSentFailureInd(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 3])

class gsmpReceivedFailureInd(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 4])

class gsmpPortUpEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 5])

class gsmpPortDownEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 6])

class gsmpInvalidLabelEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 7])

class gsmpNewPortEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 8])

class gsmpDeadPortEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 9])

class gsmpAdjacencyUpdateEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 0, 10])

# groups 
class gsmpGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 1])
	group = [gsmpSessionVersion, gsmpSessionTimer, gsmpSessionPartitionId, gsmpSessionAdjacencyCount, gsmpSessionFarSideName, gsmpSessionFarSidePort, gsmpSessionFarSideInstance, gsmpSessionLastFailureCode, gsmpSessionDiscontinuityTime, gsmpSessionStartUptime, gsmpSessionStatSentMessages, gsmpSessionStatFailureInds, gsmpSessionStatReceivedMessages, gsmpSessionStatReceivedFailures, gsmpSessionStatPortUpEvents, gsmpSessionStatPortDownEvents, gsmpSessionStatInvLabelEvents, gsmpSessionStatNewPortEvents, gsmpSessionStatDeadPortEvents, gsmpSessionStatAdjUpdateEvents]

class gsmpControllerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 2])
	group = [gsmpControllerMaxVersion, gsmpControllerTimer, gsmpControllerPort, gsmpControllerInstance, gsmpControllerPartitionType, gsmpControllerPartitionId, gsmpControllerDoResync, gsmpControllerNotificationMap, gsmpControllerSessionState, gsmpControllerStorageType, gsmpControllerRowStatus]

class gsmpSwitchGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 3])
	group = [gsmpSwitchMaxVersion, gsmpSwitchTimer, gsmpSwitchName, gsmpSwitchPort, gsmpSwitchInstance, gsmpSwitchPartitionType, gsmpSwitchPartitionId, gsmpSwitchNotificationMap, gsmpSwitchSwitchType, gsmpSwitchWindowSize, gsmpSwitchSessionState, gsmpSwitchStorageType, gsmpSwitchRowStatus]

class gsmpAtmEncapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 4])
	group = [gsmpAtmEncapIfIndex, gsmpAtmEncapVpi, gsmpAtmEncapVci, gsmpAtmEncapStorageType, gsmpAtmEncapRowStatus]

class gsmpTcpIpEncapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 5])
	group = [gsmpTcpIpEncapAddressType, gsmpTcpIpEncapAddress, gsmpTcpIpEncapPortNumber, gsmpTcpIpEncapStorageType, gsmpTcpIpEncapRowStatus]

class gsmpNotificationObjectsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 6])
	group = [gsmpEventPort, gsmpEventPortSessionNumber, gsmpEventSequenceNumber, gsmpEventLabel]

class gsmpNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 98, 3, 1, 7])
	group = [gsmpSessionDown, gsmpSessionUp, gsmpSentFailureInd, gsmpReceivedFailureInd, gsmpPortUpEvent, gsmpPortDownEvent, gsmpInvalidLabelEvent, gsmpNewPortEvent, gsmpDeadPortEvent, gsmpAdjacencyUpdateEvent]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
