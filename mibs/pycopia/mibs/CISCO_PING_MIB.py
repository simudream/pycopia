# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import OwnerString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Integer32, Counter32
from CISCO_TC import CiscoNetworkProtocol, CiscoNetworkAddress
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TruthValue, RowStatus

class CISCO_PING_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-PING-MIB'
	conformance = 4
	name = 'CISCO-PING-MIB'
	language = 2
	description = ''

# nodes
class ciscoPingMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16])
	name = 'ciscoPingMIB'

class ciscoPingMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1])
	name = 'ciscoPingMIBObjects'

class ciscoPingMIBTrapPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 2])
	name = 'ciscoPingMIBTrapPrefix'

class ciscoPingMIBTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 2, 0])
	name = 'ciscoPingMIBTraps'

class ciscoPingMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 3])
	name = 'ciscoPingMIBConformance'

class ciscoPingMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 3, 1])
	name = 'ciscoPingMIBCompliances'

class ciscoPingMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 3, 2])
	name = 'ciscoPingMIBGroups'


# macros
# types 
# scalars 
# columns
class ciscoPingSerialNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoPingProtocol(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 2])
	syntaxobject = CiscoNetworkProtocol


class ciscoPingAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 3])
	syntaxobject = CiscoNetworkAddress


class ciscoPingPacketCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoPingPacketSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoPingPacketTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class ciscoPingDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class ciscoPingTrapOnCompletion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoPingSentPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoPingReceivedPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoPingMinRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class ciscoPingAvgRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class ciscoPingMaxRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class ciscoPingCompleted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class ciscoPingEntryOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 15])
	syntaxobject = OwnerString


class ciscoPingEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class ciscoPingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoPingSerialNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 1, 1, 1])
	access = 2
	rowstatus = ciscoPingEntryStatus
	columns = {'ciscoPingSerialNumber': ciscoPingSerialNumber, 'ciscoPingProtocol': ciscoPingProtocol, 'ciscoPingAddress': ciscoPingAddress, 'ciscoPingPacketCount': ciscoPingPacketCount, 'ciscoPingPacketSize': ciscoPingPacketSize, 'ciscoPingPacketTimeout': ciscoPingPacketTimeout, 'ciscoPingDelay': ciscoPingDelay, 'ciscoPingTrapOnCompletion': ciscoPingTrapOnCompletion, 'ciscoPingSentPackets': ciscoPingSentPackets, 'ciscoPingReceivedPackets': ciscoPingReceivedPackets, 'ciscoPingMinRtt': ciscoPingMinRtt, 'ciscoPingAvgRtt': ciscoPingAvgRtt, 'ciscoPingMaxRtt': ciscoPingMaxRtt, 'ciscoPingCompleted': ciscoPingCompleted, 'ciscoPingEntryOwner': ciscoPingEntryOwner, 'ciscoPingEntryStatus': ciscoPingEntryStatus}


# notifications (traps) 
class ciscoPingCompletion(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 2, 0, 1])

# groups 
class ciscoPingMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 16, 3, 2, 1])
	group = [ciscoPingProtocol, ciscoPingAddress, ciscoPingPacketCount, ciscoPingPacketSize, ciscoPingPacketTimeout, ciscoPingDelay, ciscoPingTrapOnCompletion, ciscoPingSentPackets, ciscoPingReceivedPackets, ciscoPingMinRtt, ciscoPingAvgRtt, ciscoPingMaxRtt, ciscoPingCompleted, ciscoPingEntryOwner, ciscoPingEntryStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
