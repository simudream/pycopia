# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Counter32, Counter64, Gauge32, mib_2, Integer32, MODULE_IDENTITY, OBJECT_TYPE, Unsigned32
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE
from SNMPv2_TC import RowStatus, TAddress, TDomain, TestAndIncr, TimeStamp, TruthValue
from IF_MIB import InterfaceIndex
from SYSAPPL_MIB import Utf8String

class RTP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RTP-MIB'
	conformance = 3
	name = 'RTP-MIB'
	language = 2
	description = "The managed objects of RTP systems.  The MIB is\nstructured around three types of information.\n1. General information about RTP sessions such\n   as the session address.\n2. Information about RTP streams being sent to\n   an RTP session by a particular sender.\n3. Information about RTP streams received on an\n   RTP session by a particular receiver from a\n   particular sender.\n There are two types of RTP Systems, RTP hosts and\n RTP monitors.  As described below, certain objects\n are unique to a particular type of RTP System.   An\n RTP host may also function as an RTP monitor.\n Refer to RFC 1889, 'RTP: A Transport Protocol for\n Real-Time Applications,' section 3.0, for definitions."

# nodes
class rtpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87])
	name = 'rtpMIB'

class rtpMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1])
	name = 'rtpMIBObjects'

class rtpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2])
	name = 'rtpConformance'

class rtpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2, 1])
	name = 'rtpGroups'

class rtpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2, 2])
	name = 'rtpCompliances'


# macros
# types 
# scalars 
class rtpSessionNewIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


# columns
class rtpSessionInverseStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpSessionIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rtpSessionDomain(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TDomain


class rtpSessionRemAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class rtpSessionLocAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class rtpSessionIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 5])
	syntaxobject = InterfaceIndex


class rtpSessionSenderJoins(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rtpSessionReceiverJoins(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rtpSessionByes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rtpSessionStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpSessionMonitor(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class rtpSessionRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class rtpSenderInverseStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpSenderSSRC(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class rtpSenderCNAME(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 2])
	syntaxobject = Utf8String


class rtpSenderAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class rtpSenderPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class rtpSenderOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class rtpSenderTool(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 6])
	syntaxobject = Utf8String


class rtpSenderSRs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rtpSenderSRTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpSenderPT(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rtpSenderStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpRcvrInverseStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpRcvrSRCSSRC(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class rtpRcvrSSRC(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class rtpRcvrCNAME(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 3])
	syntaxobject = Utf8String


class rtpRcvrAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class rtpRcvrRTT(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class rtpRcvrLostPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class rtpRcvrJitter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class rtpRcvrTool(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 8])
	syntaxobject = Utf8String


class rtpRcvrRRs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rtpRcvrRRTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class rtpRcvrPT(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rtpRcvrPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class rtpRcvrOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class rtpRcvrStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# rows 
class rtpSessionInverseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rtpSessionDomain, rtpSessionRemAddr, rtpSessionLocAddr, rtpSessionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 2, 1])
	access = 2
	columns = {'rtpSessionInverseStartTime': rtpSessionInverseStartTime}


class rtpSessionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rtpSessionIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 3, 1])
	access = 2
	rowstatus = rtpSessionRowStatus
	columns = {'rtpSessionIndex': rtpSessionIndex, 'rtpSessionDomain': rtpSessionDomain, 'rtpSessionRemAddr': rtpSessionRemAddr, 'rtpSessionLocAddr': rtpSessionLocAddr, 'rtpSessionIfIndex': rtpSessionIfIndex, 'rtpSessionSenderJoins': rtpSessionSenderJoins, 'rtpSessionReceiverJoins': rtpSessionReceiverJoins, 'rtpSessionByes': rtpSessionByes, 'rtpSessionStartTime': rtpSessionStartTime, 'rtpSessionMonitor': rtpSessionMonitor, 'rtpSessionRowStatus': rtpSessionRowStatus}


class rtpSenderInverseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rtpSessionDomain, rtpSenderAddr, rtpSessionIndex, rtpSenderSSRC], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 4, 1])
	access = 2
	columns = {'rtpSenderInverseStartTime': rtpSenderInverseStartTime}


class rtpSenderEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rtpSessionIndex, rtpSenderSSRC], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 5, 1])
	access = 2
	columns = {'rtpSenderSSRC': rtpSenderSSRC, 'rtpSenderCNAME': rtpSenderCNAME, 'rtpSenderAddr': rtpSenderAddr, 'rtpSenderPackets': rtpSenderPackets, 'rtpSenderOctets': rtpSenderOctets, 'rtpSenderTool': rtpSenderTool, 'rtpSenderSRs': rtpSenderSRs, 'rtpSenderSRTime': rtpSenderSRTime, 'rtpSenderPT': rtpSenderPT, 'rtpSenderStartTime': rtpSenderStartTime}


class rtpRcvrInverseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rtpSessionDomain, rtpRcvrAddr, rtpSessionIndex, rtpRcvrSRCSSRC, rtpRcvrSSRC], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 6, 1])
	access = 2
	columns = {'rtpRcvrInverseStartTime': rtpRcvrInverseStartTime}


class rtpRcvrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rtpSessionIndex, rtpRcvrSRCSSRC, rtpRcvrSSRC], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 1, 7, 1])
	access = 2
	columns = {'rtpRcvrSRCSSRC': rtpRcvrSRCSSRC, 'rtpRcvrSSRC': rtpRcvrSSRC, 'rtpRcvrCNAME': rtpRcvrCNAME, 'rtpRcvrAddr': rtpRcvrAddr, 'rtpRcvrRTT': rtpRcvrRTT, 'rtpRcvrLostPackets': rtpRcvrLostPackets, 'rtpRcvrJitter': rtpRcvrJitter, 'rtpRcvrTool': rtpRcvrTool, 'rtpRcvrRRs': rtpRcvrRRs, 'rtpRcvrRRTime': rtpRcvrRRTime, 'rtpRcvrPT': rtpRcvrPT, 'rtpRcvrPackets': rtpRcvrPackets, 'rtpRcvrOctets': rtpRcvrOctets, 'rtpRcvrStartTime': rtpRcvrStartTime}


# notifications (traps) 
# groups 
class rtpSystemGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2, 1, 1])
	group = [rtpSessionDomain, rtpSessionRemAddr, rtpSessionIfIndex, rtpSessionSenderJoins, rtpSessionReceiverJoins, rtpSessionStartTime, rtpSessionByes, rtpSessionMonitor, rtpSenderCNAME, rtpSenderAddr, rtpSenderPackets, rtpSenderOctets, rtpSenderTool, rtpSenderSRs, rtpSenderSRTime, rtpSenderStartTime, rtpRcvrCNAME, rtpRcvrAddr, rtpRcvrLostPackets, rtpRcvrJitter, rtpRcvrTool, rtpRcvrRRs, rtpRcvrRRTime, rtpRcvrStartTime]

class rtpHostGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2, 1, 2])
	group = [rtpSessionLocAddr, rtpSenderPT, rtpRcvrPT, rtpRcvrRTT, rtpRcvrOctets, rtpRcvrPackets]

class rtpMonitorGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2, 1, 3])
	group = [rtpSessionNewIndex, rtpSessionRowStatus]

class rtpInverseGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 87, 2, 1, 4])
	group = [rtpSessionInverseStartTime, rtpSenderInverseStartTime, rtpRcvrInverseStartTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
