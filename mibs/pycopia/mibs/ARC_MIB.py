# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, StorageType
from ALARM_MIB import ResourceId

class ARC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ARC-MIB'
	conformance = 3
	name = 'ARC-MIB'
	language = 2
	description = 'The MIB module describes the objects for controlling a resource\nin reporting alarm conditions that it detects.\n\nCopyright (C) The Internet Society (2004).  This version\nof this MIB module is part of RFC 3878;  see the RFC\nitself for full legal notices.'

# nodes
class arcMibModule(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117])
	name = 'arcMibModule'

class arcTimeIntervals(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 1])
	name = 'arcTimeIntervals'

class arcObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2])
	name = 'arcObjects'

class arcConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 3])
	name = 'arcConformance'

class arcCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 3, 1])
	name = 'arcCompliances'

class arcGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 3, 2])
	name = 'arcGroups'


# macros
# types 

class IANAItuProbableCauseOrZero(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))

# scalars 
class arcTITimeInterval(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class arcCDTimeInterval(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


# columns
class arcIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 1])
	syntaxobject = ResourceId


class arcAlarmType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 2])
	syntaxobject = IANAItuProbableCauseOrZero


class arcNotificationId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class arcState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'nalm'), Enum(2, 'nalmQI'), Enum(3, 'nalmTI'), Enum(4, 'nalmQICD')]


class arcNalmTimeRemaining(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class arcRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class arcStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


# rows 
class arcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([arcIndex, arcAlarmType, arcNotificationId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 2, 1, 1])
	access = 2
	rowstatus = arcRowStatus
	columns = {'arcIndex': arcIndex, 'arcAlarmType': arcAlarmType, 'arcNotificationId': arcNotificationId, 'arcState': arcState, 'arcNalmTimeRemaining': arcNalmTimeRemaining, 'arcRowStatus': arcRowStatus, 'arcStorageType': arcStorageType}


# notifications (traps) 
# groups 
class arcSettingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 3, 2, 1])
	group = [arcState, arcRowStatus, arcStorageType]

class arcTIGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 3, 2, 2])
	group = [arcTITimeInterval, arcNalmTimeRemaining]

class arcQICDGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 117, 3, 2, 3])
	group = [arcCDTimeInterval, arcNalmTimeRemaining]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
