# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1213_MIB import mib_2, DisplayString
from RFC1155_SMI import Gauge

class DECNET_PHIV_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DECNET-PHIV-MIB'
	conformance = 2
	name = 'DECNET-PHIV-MIB'
	language = 1

# nodes
class phiv(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18])
	name = 'phiv'

class phivSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 1])
	name = 'phivSystem'

class phivManagement(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 2])
	name = 'phivManagement'

class session(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 3])
	name = 'session'

class end(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4])
	name = 'end'

class routing(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5])
	name = 'routing'

class circuit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6])
	name = 'circuit'

class ddcmp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7])
	name = 'ddcmp'

class control(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8])
	name = 'control'

class ethernet(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9])
	name = 'ethernet'

class counters(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10])
	name = 'counters'

class adjacency(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11])
	name = 'adjacency'

class line(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12])
	name = 'line'

class nonBroadcastLine(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14])
	name = 'nonBroadcastLine'

class area(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15])
	name = 'area'


# macros
# types 

class PhivAddr(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(2, 2))


class PhivCounter(pycopia.SMI.Basetypes.Integer32):
	pass


class InterfaceIndex(pycopia.SMI.Basetypes.Integer32):
	pass

# scalars 
class phivSystemState(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off'), Enum(3, 'shut'), Enum(4, 'restricted')]


class phivExecIdent(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivMgmtMgmtVers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivSessionSystemName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivSessionInTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivSessionOutTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndMaxLinks(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndNSPVers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivEndRetransmitFactor(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndDelayFact(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndDelayWeight(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndInactivityTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndCountZeroCount(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'reset')]


class phivEndMaxLinksActive(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 10])
	syntaxobject = PhivCounter


class phivRouteBroadcastRouteTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteBuffSize(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteRoutingVers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivRouteMaxAddr(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxBdcastNonRouters(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxBdcastRouters(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxBuffs(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxCircuits(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxCost(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxHops(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxVisits(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteRoutingTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteSegBuffSize(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteCountAgedPktLoss(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 15])
	syntaxobject = PhivCounter


class phivRouteCountNodeUnrPktLoss(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 16])
	syntaxobject = PhivCounter


class phivRouteCountOutRngePktLoss(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 17])
	syntaxobject = PhivCounter


class phivRouteCountOverSzePktLoss(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 18])
	syntaxobject = PhivCounter


class phivRouteCountPacketFmtErr(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 19])
	syntaxobject = PhivCounter


class phivRouteCountPtlRteUpdtLoss(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 20])
	syntaxobject = PhivCounter


class phivRouteCountVerifReject(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 21])
	syntaxobject = PhivCounter


class phivRouteCountZeroCount(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 23])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'reset')]


class phivRouteRoutingType(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'routing-III'), Enum(2, 'nonrouting-III'), Enum(3, 'area'), Enum(4, 'routing-IV'), Enum(5, 'nonrouting-IV')]


class phivRouteSystemAddress(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 26])
	syntaxobject = PhivAddr


class phivCircuitOrigQueueLimit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCircuitCountZeroCount(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'reset')]


class phivControlSchedTimer(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlDeadTimer(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlDelayTimer(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlStreamTimer(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAreaMaxCost(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAreaMaxHops(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivRouteMaxArea(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class phivEndRemoteHostNodeID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 1])
	syntaxobject = PhivAddr


class phivEndRemoteState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off'), Enum(3, 'shut'), Enum(4, 'restricted')]


class phivEndCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndActiveLinks(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEndCountHostNodeID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 1])
	syntaxobject = PhivAddr


class phivEndCountSecsLastZeroed(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 2])
	syntaxobject = PhivCounter


class phivEndCountUsrBytesRec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 3])
	syntaxobject = PhivCounter


class phivEndCountUsrBytesSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 4])
	syntaxobject = PhivCounter


class phivEndUCountUsrMessRec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 5])
	syntaxobject = PhivCounter


class phivEndCountUsrMessSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 6])
	syntaxobject = PhivCounter


class phivEndCountTotalBytesRec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 7])
	syntaxobject = PhivCounter


class phivEndCountTotalBytesSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 8])
	syntaxobject = PhivCounter


class phivEndCountTotalMessRec(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 9])
	syntaxobject = PhivCounter


class phivEndCountTotalMessSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 10])
	syntaxobject = PhivCounter


class phivEndCountConnectsRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 11])
	syntaxobject = PhivCounter


class phivEndCountConnectsSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 12])
	syntaxobject = PhivCounter


class phivEndCountReponseTimeouts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 13])
	syntaxobject = PhivCounter


class phivEndCountRecdConnectResErrs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 14])
	syntaxobject = PhivCounter


class phivLevel1RouteNodeAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 1])
	syntaxobject = PhivAddr


class phivLevel1RouteCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivLevel1RouteCost(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivLevel1RouteHops(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivLevel1RouteNextNode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 5])
	syntaxobject = PhivAddr


class phivCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCircuitLineIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 2])
	syntaxobject = InterfaceIndex


class phivCircuitCommonState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off'), Enum(3, 'service'), Enum(4, 'cleared')]


class phivCircuitCommonSubState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'starting'), Enum(2, 'reflecting'), Enum(3, 'looping'), Enum(4, 'loading'), Enum(5, 'dumping'), Enum(6, 'triggering'), Enum(7, 'autoservice'), Enum(8, 'autoloading'), Enum(9, 'autodumping'), Enum(10, 'autotriggering'), Enum(11, 'synchronizing'), Enum(12, 'failed'), Enum(13, 'running')]


class phivCircuitCommonName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivCircuitExecRecallTimer(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCircuitCommonType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ddcmp-point'), Enum(2, 'ddcmp-control'), Enum(3, 'ddcmp-tributary'), Enum(4, 'x25'), Enum(5, 'ddcmp-dmc'), Enum(6, 'ethernet'), Enum(7, 'ci'), Enum(8, 'qp2-dte20'), Enum(9, 'bisync'), Enum(14, 'other'), Enum(15, 'fddi')]


class phivCircuitService(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class phivCircuitExecCost(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCircuitExecHelloTimer(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCircuitCountSecLastZeroed(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 1])
	syntaxobject = PhivCounter


class phivCircuitCountTermPacketsRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 2])
	syntaxobject = PhivCounter


class phivCircuitCountOriginPackSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 3])
	syntaxobject = PhivCounter


class phivCircuitCountTermCongLoss(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 4])
	syntaxobject = PhivCounter


class phivCircuitCountCorruptLoss(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 5])
	syntaxobject = PhivCounter


class phivCircuitCountTransitPksRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 6])
	syntaxobject = PhivCounter


class phivCircuitCountTransitPkSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 7])
	syntaxobject = PhivCounter


class phivCircuitCountTransitCongestLoss(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 8])
	syntaxobject = PhivCounter


class phivCircuitCountCircuitDown(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 9])
	syntaxobject = PhivCounter


class phivCircuitCountInitFailure(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 10])
	syntaxobject = PhivCounter


class phivCircuitCountAdjDown(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 11])
	syntaxobject = PhivCounter


class phivCircuitCountPeakAdj(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 12])
	syntaxobject = PhivCounter


class phivCircuitCountBytesRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 13])
	syntaxobject = PhivCounter


class phivCircuitCountBytesSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 14])
	syntaxobject = PhivCounter


class phivCircuitCountDataBlocksRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 15])
	syntaxobject = PhivCounter


class phivCircuitCountDataBlocksSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 16])
	syntaxobject = PhivCounter


class phivCircuitCountUsrBuffUnav(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 17])
	syntaxobject = PhivCounter


class phivDDCMPCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivDDCMPCircuitAdjNodeAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 2])
	syntaxobject = PhivAddr


class phivDDCMPCircuitTributary(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivDDCMPCircuitErrorsInbd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 1])
	syntaxobject = PhivCounter


class phivDDCMPCircuitErrorsOutbd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 2])
	syntaxobject = PhivCounter


class phivDDCMPCircuitRmteReplyTimeouts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 3])
	syntaxobject = PhivCounter


class phivDDCMPCircuitLocalReplyTimeouts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 4])
	syntaxobject = PhivCounter


class phivDDCMPCircuitRmteBuffErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 5])
	syntaxobject = PhivCounter


class phivDDCMPCircuitLocalBuffErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 6])
	syntaxobject = PhivCounter


class phivDDCMPCircuitSelectIntervalsElap(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 7])
	syntaxobject = PhivCounter


class phivDDCMPCircuitSelectTimeouts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivDDCMPLineCountIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 1])
	syntaxobject = InterfaceIndex


class phivDDCMPLineCountDataErrsIn(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 2])
	syntaxobject = PhivCounter


class phivDDCMPLineCountRmteStationErrs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 3])
	syntaxobject = PhivCounter


class phivDDCMPLineCountLocalStationErrs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 4])
	syntaxobject = PhivCounter


class phivControlCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlBabbleTimer(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlMaxBuffs(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlMaxTransmits(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlDyingBase(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlDyingIncrement(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlDeadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlDyingThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlInactTreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivControlPollingState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'automatic'), Enum(2, 'active'), Enum(3, 'inactive'), Enum(4, 'dying'), Enum(5, 'dead')]


class phivControlPollingSubState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive'), Enum(3, 'dying'), Enum(4, 'dead')]


class phivControlTransTimer(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEthLinkIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEthDesigRouterNodeAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 2])
	syntaxobject = PhivAddr


class phivEthMaxRouters(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEthRouterPri(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivEthHardwareAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class phivCountersIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 1])
	syntaxobject = InterfaceIndex


class phivCountersCountBytesRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 2])
	syntaxobject = PhivCounter


class phivCountersCountBytesSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 3])
	syntaxobject = PhivCounter


class phivCountersCountDataBlocksRecd(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 4])
	syntaxobject = PhivCounter


class phivCountersCountDataBlocksSent(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 5])
	syntaxobject = PhivCounter


class phivCountersCountEthUsrBuffUnav(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 6])
	syntaxobject = PhivCounter


class phivCountersCountMcastBytesRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 7])
	syntaxobject = PhivCounter


class phivCountersCountDataBlksRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 8])
	syntaxobject = PhivCounter


class phivCountersCountDataBlksSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 9])
	syntaxobject = PhivCounter


class phivCountersCountMcastBlksRecd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 10])
	syntaxobject = PhivCounter


class phivCountersCountBlksSentDef(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 11])
	syntaxobject = PhivCounter


class phivCountersCountBlksSentSingleCol(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 12])
	syntaxobject = PhivCounter


class phivCountersCountBlksSentMultCol(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 13])
	syntaxobject = PhivCounter


class phivCountersCountSendFailure(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCountersCountCollDetectFailure(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCountersCountReceiveFailure(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCountersCountUnrecFrameDest(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCountersCountDataOver(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCountersCountSysBuffUnav(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivCountersCountUsrBuffUnav(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjCircuitIndex(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjNodeAddr(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 2])
	syntaxobject = PhivAddr


class phivAdjBlockSize(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjListenTimer(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjCircuitEtherServPhysAddr(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class phivAdjType(ColumnObject):
	status = 5
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'routing-III'), Enum(2, 'nonrouting-III'), Enum(3, 'area'), Enum(4, 'routing-IV'), Enum(5, 'nonrouting-IV')]


class phivAdjState(ColumnObject):
	status = 5
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'initializing'), Enum(2, 'up'), Enum(3, 'run'), Enum(4, 'circuit-rejected'), Enum(5, 'data-link-start'), Enum(6, 'routing-layer-initialize'), Enum(7, 'routing-layer-verify'), Enum(8, 'routing-layer-complete'), Enum(9, 'off'), Enum(10, 'halt')]


class phivAdjPriority(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjExecListenTimer(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjNodeCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 2])
	syntaxobject = PhivAddr


class phivAdjNodeBlockSize(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjNodeListenTimer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAdjNodeCircuitEtherServPhysAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class phivAdjNodeType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'routing-III'), Enum(2, 'nonrouting-III'), Enum(3, 'area'), Enum(4, 'routing-IV'), Enum(5, 'nonrouting-IV')]


class phivAdjNodeState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'initializing'), Enum(2, 'up'), Enum(3, 'run'), Enum(4, 'circuit-rejected'), Enum(5, 'data-link-start'), Enum(6, 'routing-layer-initialize'), Enum(7, 'routing-layer-verify'), Enum(8, 'routing-layer-complete'), Enum(9, 'off'), Enum(10, 'halt')]


class phivAdjNodePriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivLineIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 1])
	syntaxobject = InterfaceIndex


class phivLineName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivLineState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off'), Enum(3, 'service'), Enum(4, 'cleared')]


class phivLineSubstate(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'starting'), Enum(2, 'reflecting'), Enum(3, 'looping'), Enum(4, 'loading'), Enum(5, 'dumping'), Enum(6, 'triggering'), Enum(7, 'auto-service'), Enum(8, 'auto-loading'), Enum(9, 'auto-dumping'), Enum(10, 'auto-triggering'), Enum(11, 'synchronizing'), Enum(12, 'failed'), Enum(13, 'running')]


class phivLineService(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'starting'), Enum(2, 'reflecting'), Enum(3, 'looping'), Enum(4, 'other')]


class phivLineDevice(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class phivLineReceiveBuffs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivLineProtocol(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ddcmp-point'), Enum(2, 'ddcmp-control'), Enum(3, 'ddcmp-tributary'), Enum(4, 'reserved'), Enum(5, 'ddcmp-dmc'), Enum(6, 'olapb'), Enum(7, 'ethernet'), Enum(8, 'ci'), Enum(9, 'qp2'), Enum(14, 'other'), Enum(15, 'fddi')]


class phivLineServiceTimer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivLineMaxBlock(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivNonBroadcastIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 1])
	syntaxobject = InterfaceIndex


class phivNonBroadcastController(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'loopback'), Enum(3, 'other')]


class phivNonBroadcastDuplex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'full'), Enum(2, 'half')]


class phivNonBroadcastClock(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'external'), Enum(2, 'internal'), Enum(3, 'other')]


class phivNonBroadcastRetransmitTimer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAreaNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAreaState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(4, 'reachable'), Enum(5, 'unreachable')]


class phivAreaCost(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class phivAreaHops(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class phivAreaNextNode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 5])
	syntaxobject = PhivAddr


class phivAreaCircuitIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class phivEndRemoteEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivEndRemoteHostNodeID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 1, 1])
	access = 2
	columns = {'phivEndRemoteHostNodeID': phivEndRemoteHostNodeID, 'phivEndRemoteState': phivEndRemoteState, 'phivEndCircuitIndex': phivEndCircuitIndex, 'phivEndActiveLinks': phivEndActiveLinks, 'phivEndDelay': phivEndDelay}


class phivEndCountEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivEndCountHostNodeID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 4, 2, 1])
	access = 2
	columns = {'phivEndCountHostNodeID': phivEndCountHostNodeID, 'phivEndCountSecsLastZeroed': phivEndCountSecsLastZeroed, 'phivEndCountUsrBytesRec': phivEndCountUsrBytesRec, 'phivEndCountUsrBytesSent': phivEndCountUsrBytesSent, 'phivEndUCountUsrMessRec': phivEndUCountUsrMessRec, 'phivEndCountUsrMessSent': phivEndCountUsrMessSent, 'phivEndCountTotalBytesRec': phivEndCountTotalBytesRec, 'phivEndCountTotalBytesSent': phivEndCountTotalBytesSent, 'phivEndCountTotalMessRec': phivEndCountTotalMessRec, 'phivEndCountTotalMessSent': phivEndCountTotalMessSent, 'phivEndCountConnectsRecd': phivEndCountConnectsRecd, 'phivEndCountConnectsSent': phivEndCountConnectsSent, 'phivEndCountReponseTimeouts': phivEndCountReponseTimeouts, 'phivEndCountRecdConnectResErrs': phivEndCountRecdConnectResErrs}


class phivLevel1RouteEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivLevel1RouteNodeAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 5, 22, 1])
	access = 2
	columns = {'phivLevel1RouteNodeAddr': phivLevel1RouteNodeAddr, 'phivLevel1RouteCircuitIndex': phivLevel1RouteCircuitIndex, 'phivLevel1RouteCost': phivLevel1RouteCost, 'phivLevel1RouteHops': phivLevel1RouteHops, 'phivLevel1RouteNextNode': phivLevel1RouteNextNode}


class phivCircuitParametersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivCircuitIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 1, 1])
	access = 2
	columns = {'phivCircuitIndex': phivCircuitIndex, 'phivCircuitLineIndex': phivCircuitLineIndex, 'phivCircuitCommonState': phivCircuitCommonState, 'phivCircuitCommonSubState': phivCircuitCommonSubState, 'phivCircuitCommonName': phivCircuitCommonName, 'phivCircuitExecRecallTimer': phivCircuitExecRecallTimer, 'phivCircuitCommonType': phivCircuitCommonType, 'phivCircuitService': phivCircuitService, 'phivCircuitExecCost': phivCircuitExecCost, 'phivCircuitExecHelloTimer': phivCircuitExecHelloTimer}


class phivCircuitCountEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivCircuitIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 6, 2, 1])
	access = 2
	columns = {'phivCircuitCountSecLastZeroed': phivCircuitCountSecLastZeroed, 'phivCircuitCountTermPacketsRecd': phivCircuitCountTermPacketsRecd, 'phivCircuitCountOriginPackSent': phivCircuitCountOriginPackSent, 'phivCircuitCountTermCongLoss': phivCircuitCountTermCongLoss, 'phivCircuitCountCorruptLoss': phivCircuitCountCorruptLoss, 'phivCircuitCountTransitPksRecd': phivCircuitCountTransitPksRecd, 'phivCircuitCountTransitPkSent': phivCircuitCountTransitPkSent, 'phivCircuitCountTransitCongestLoss': phivCircuitCountTransitCongestLoss, 'phivCircuitCountCircuitDown': phivCircuitCountCircuitDown, 'phivCircuitCountInitFailure': phivCircuitCountInitFailure, 'phivCircuitCountAdjDown': phivCircuitCountAdjDown, 'phivCircuitCountPeakAdj': phivCircuitCountPeakAdj, 'phivCircuitCountBytesRecd': phivCircuitCountBytesRecd, 'phivCircuitCountBytesSent': phivCircuitCountBytesSent, 'phivCircuitCountDataBlocksRecd': phivCircuitCountDataBlocksRecd, 'phivCircuitCountDataBlocksSent': phivCircuitCountDataBlocksSent, 'phivCircuitCountUsrBuffUnav': phivCircuitCountUsrBuffUnav}


class phivDDCMPCircuitParametersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivDDCMPCircuitIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 1, 1])
	access = 2
	columns = {'phivDDCMPCircuitIndex': phivDDCMPCircuitIndex, 'phivDDCMPCircuitAdjNodeAddr': phivDDCMPCircuitAdjNodeAddr, 'phivDDCMPCircuitTributary': phivDDCMPCircuitTributary}


class phivDDCMPCircuitCountEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivCircuitIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 2, 1])
	access = 2
	columns = {'phivDDCMPCircuitErrorsInbd': phivDDCMPCircuitErrorsInbd, 'phivDDCMPCircuitErrorsOutbd': phivDDCMPCircuitErrorsOutbd, 'phivDDCMPCircuitRmteReplyTimeouts': phivDDCMPCircuitRmteReplyTimeouts, 'phivDDCMPCircuitLocalReplyTimeouts': phivDDCMPCircuitLocalReplyTimeouts, 'phivDDCMPCircuitRmteBuffErrors': phivDDCMPCircuitRmteBuffErrors, 'phivDDCMPCircuitLocalBuffErrors': phivDDCMPCircuitLocalBuffErrors, 'phivDDCMPCircuitSelectIntervalsElap': phivDDCMPCircuitSelectIntervalsElap, 'phivDDCMPCircuitSelectTimeouts': phivDDCMPCircuitSelectTimeouts}


class phivDDCMPLineCountEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivDDCMPLineCountIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 7, 3, 1])
	access = 2
	columns = {'phivDDCMPLineCountIndex': phivDDCMPLineCountIndex, 'phivDDCMPLineCountDataErrsIn': phivDDCMPLineCountDataErrsIn, 'phivDDCMPLineCountRmteStationErrs': phivDDCMPLineCountRmteStationErrs, 'phivDDCMPLineCountLocalStationErrs': phivDDCMPLineCountLocalStationErrs}


class phivControlParametersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivControlCircuitIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 8, 5, 1])
	access = 2
	columns = {'phivControlCircuitIndex': phivControlCircuitIndex, 'phivControlBabbleTimer': phivControlBabbleTimer, 'phivControlMaxBuffs': phivControlMaxBuffs, 'phivControlMaxTransmits': phivControlMaxTransmits, 'phivControlDyingBase': phivControlDyingBase, 'phivControlDyingIncrement': phivControlDyingIncrement, 'phivControlDeadThreshold': phivControlDeadThreshold, 'phivControlDyingThreshold': phivControlDyingThreshold, 'phivControlInactTreshold': phivControlInactTreshold, 'phivControlPollingState': phivControlPollingState, 'phivControlPollingSubState': phivControlPollingSubState, 'phivControlTransTimer': phivControlTransTimer}


class phivEthLinkParametersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivEthLinkIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 9, 1, 1])
	access = 2
	columns = {'phivEthLinkIndex': phivEthLinkIndex, 'phivEthDesigRouterNodeAddr': phivEthDesigRouterNodeAddr, 'phivEthMaxRouters': phivEthMaxRouters, 'phivEthRouterPri': phivEthRouterPri, 'phivEthHardwareAddr': phivEthHardwareAddr}


class phivCountersCountEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivCountersIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 10, 1, 1])
	access = 2
	columns = {'phivCountersIndex': phivCountersIndex, 'phivCountersCountBytesRecd': phivCountersCountBytesRecd, 'phivCountersCountBytesSent': phivCountersCountBytesSent, 'phivCountersCountDataBlocksRecd': phivCountersCountDataBlocksRecd, 'phivCountersCountDataBlocksSent': phivCountersCountDataBlocksSent, 'phivCountersCountEthUsrBuffUnav': phivCountersCountEthUsrBuffUnav, 'phivCountersCountMcastBytesRecd': phivCountersCountMcastBytesRecd, 'phivCountersCountDataBlksRecd': phivCountersCountDataBlksRecd, 'phivCountersCountDataBlksSent': phivCountersCountDataBlksSent, 'phivCountersCountMcastBlksRecd': phivCountersCountMcastBlksRecd, 'phivCountersCountBlksSentDef': phivCountersCountBlksSentDef, 'phivCountersCountBlksSentSingleCol': phivCountersCountBlksSentSingleCol, 'phivCountersCountBlksSentMultCol': phivCountersCountBlksSentMultCol, 'phivCountersCountSendFailure': phivCountersCountSendFailure, 'phivCountersCountCollDetectFailure': phivCountersCountCollDetectFailure, 'phivCountersCountReceiveFailure': phivCountersCountReceiveFailure, 'phivCountersCountUnrecFrameDest': phivCountersCountUnrecFrameDest, 'phivCountersCountDataOver': phivCountersCountDataOver, 'phivCountersCountSysBuffUnav': phivCountersCountSysBuffUnav, 'phivCountersCountUsrBuffUnav': phivCountersCountUsrBuffUnav}


class phivAdjNodeEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivAdjNodeCircuitIndex, phivAdjAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 11, 2, 1])
	access = 2
	columns = {'phivAdjNodeCircuitIndex': phivAdjNodeCircuitIndex, 'phivAdjAddr': phivAdjAddr, 'phivAdjNodeBlockSize': phivAdjNodeBlockSize, 'phivAdjNodeListenTimer': phivAdjNodeListenTimer, 'phivAdjNodeCircuitEtherServPhysAddr': phivAdjNodeCircuitEtherServPhysAddr, 'phivAdjNodeType': phivAdjNodeType, 'phivAdjNodeState': phivAdjNodeState, 'phivAdjNodePriority': phivAdjNodePriority}


class phivLineEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivLineIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 12, 1, 1])
	access = 2
	columns = {'phivLineIndex': phivLineIndex, 'phivLineName': phivLineName, 'phivLineState': phivLineState, 'phivLineSubstate': phivLineSubstate, 'phivLineService': phivLineService, 'phivLineDevice': phivLineDevice, 'phivLineReceiveBuffs': phivLineReceiveBuffs, 'phivLineProtocol': phivLineProtocol, 'phivLineServiceTimer': phivLineServiceTimer, 'phivLineMaxBlock': phivLineMaxBlock}


class phivNonBroadcastEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivNonBroadcastIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 14, 1, 1])
	access = 2
	columns = {'phivNonBroadcastIndex': phivNonBroadcastIndex, 'phivNonBroadcastController': phivNonBroadcastController, 'phivNonBroadcastDuplex': phivNonBroadcastDuplex, 'phivNonBroadcastClock': phivNonBroadcastClock, 'phivNonBroadcastRetransmitTimer': phivNonBroadcastRetransmitTimer}


class phivAreaEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([phivAreaNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 18, 15, 1, 1])
	access = 2
	columns = {'phivAreaNum': phivAreaNum, 'phivAreaState': phivAreaState, 'phivAreaCost': phivAreaCost, 'phivAreaHops': phivAreaHops, 'phivAreaNextNode': phivAreaNextNode, 'phivAreaCircuitIndex': phivAreaCircuitIndex}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
