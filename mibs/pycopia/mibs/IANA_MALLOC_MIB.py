# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, mib_2
from SNMPv2_TC import TEXTUAL_CONVENTION

class IANA_MALLOC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/iana/IANA-MALLOC-MIB'
	conformance = 5
	name = 'IANA-MALLOC-MIB'
	language = 2
	description = 'This MIB module defines the IANAscopeSource and\nIANAmallocRangeSource textual conventions for use in MIBs\nwhich need to identify ways of learning multicast scope and\nrange information.\n\nAny additions or changes to the contents of this MIB module\nrequire either publication of an RFC, or Designated Expert\nReview as defined in the Guidelines for Writing IANA\nConsiderations Section document.  The Designated Expert will\nbe selected by the IESG Area Director(s) of the Transport\nArea.'

# nodes
class ianaMallocMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 102])
	name = 'ianaMallocMIB'


# macros
# types 

class IANAscopeSource(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'manual'), Enum(3, 'local'), Enum(4, 'mzap'), Enum(5, 'madcap')]


class IANAmallocRangeSource(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'manual'), Enum(3, 'local')]

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
