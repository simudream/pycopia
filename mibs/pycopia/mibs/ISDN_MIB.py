# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import ifIndex, InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, NOTIFICATION_TYPE, OBJECT_TYPE, Counter32, Gauge32, Integer32
from IANAifType_MIB import IANAifType
from RFC1213_MIB import transmission
from SNMPv2_TC import DisplayString, TruthValue, TimeStamp, RowStatus, TestAndIncr, TEXTUAL_CONVENTION

class ISDN_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ISDN-MIB'
	conformance = 3
	name = 'ISDN-MIB'
	language = 2
	description = 'The MIB module to describe the\nmanagement of ISDN interfaces.'

# nodes
class isdnMib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20])
	name = 'isdnMib'

class isdnMibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1])
	name = 'isdnMibObjects'

class isdnBasicRateGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 1])
	name = 'isdnBasicRateGroup'

class isdnBearerGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2])
	name = 'isdnBearerGroup'

class isdnSignalingGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3])
	name = 'isdnSignalingGroup'

class isdnEndpointGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4])
	name = 'isdnEndpointGroup'

class isdnDirectoryGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 5])
	name = 'isdnDirectoryGroup'

class isdnMibTrapPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2])
	name = 'isdnMibTrapPrefix'

class isdnMibTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 0])
	name = 'isdnMibTraps'

class isdnMibCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 1])
	name = 'isdnMibCompliances'

class isdnMibGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2])
	name = 'isdnMibGroups'


# macros
# types 

class IsdnSignalingProtocol(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'dss1'), Enum(3, 'etsi'), Enum(4, 'dass2'), Enum(5, 'ess4'), Enum(6, 'ess5'), Enum(7, 'dms100'), Enum(8, 'dms250'), Enum(9, 'ni1'), Enum(10, 'ni2'), Enum(11, 'ni3'), Enum(12, 'vn2'), Enum(13, 'vn3'), Enum(14, 'vn4'), Enum(15, 'vn6'), Enum(16, 'kdd'), Enum(17, 'ins64'), Enum(18, 'ins1500'), Enum(19, 'itr6'), Enum(20, 'cornet'), Enum(21, 'ts013'), Enum(22, 'ts014'), Enum(23, 'qsig'), Enum(24, 'swissnet2'), Enum(25, 'swissnet3')]

# scalars 
class isdnSignalingGetIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class isdnEndpointGetIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


# columns
class isdnBasicRateIfType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(75, 'isdns'), Enum(76, 'isdnu')]


class isdnBasicRateLineTopology(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pointToPoint'), Enum(2, 'pointToMultipoint')]


class isdnBasicRateIfMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'te'), Enum(2, 'nt')]


class isdnBasicRateSignalMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class isdnBearerChannelType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dialup'), Enum(2, 'leased')]


class isdnBearerOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'idle'), Enum(2, 'connecting'), Enum(3, 'connected'), Enum(4, 'active')]


class isdnBearerChannelNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnBearerPeerAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class isdnBearerPeerSubAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class isdnBearerCallOrigin(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'originate'), Enum(3, 'answer'), Enum(4, 'callback')]


class isdnBearerInfoType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'speech'), Enum(3, 'unrestrictedDigital'), Enum(4, 'unrestrictedDigital56'), Enum(5, 'restrictedDigital'), Enum(6, 'audio31'), Enum(7, 'audio7'), Enum(8, 'video'), Enum(9, 'packetSwitched')]


class isdnBearerMultirate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isdnBearerCallSetupTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class isdnBearerCallConnectTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class isdnBearerChargedUnits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class isdnSignalingIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnSignalingIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 2])
	syntaxobject = InterfaceIndex


class isdnSignalingProtocol(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 3])
	syntaxobject = IsdnSignalingProtocol


class isdnSignalingCallingAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class isdnSignalingSubAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class isdnSignalingBchannelCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnSignalingInfoTrapEnable(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class isdnSignalingStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isdnSigStatsInCalls(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnSigStatsInConnected(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnSigStatsOutCalls(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnSigStatsOutConnected(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnSigStatsChargedUnits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnLapdPrimaryChannel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isdnLapdOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'l1Active'), Enum(3, 'l2Active')]


class isdnLapdPeerSabme(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnLapdRecvdFrmr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isdnEndpointIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnEndpointIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 2])
	syntaxobject = InterfaceIndex


class isdnEndpointIfType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 3])
	syntaxobject = IANAifType


class isdnEndpointTeiType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dynamic'), Enum(2, 'static')]


class isdnEndpointTeiValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnEndpointSpid(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class isdnEndpointStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isdnDirectoryIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnDirectoryNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class isdnDirectorySigIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class isdnDirectoryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class isdnBasicRateEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 1, 1, 1])
	access = 2
	columns = {'isdnBasicRateIfType': isdnBasicRateIfType, 'isdnBasicRateLineTopology': isdnBasicRateLineTopology, 'isdnBasicRateIfMode': isdnBasicRateIfMode, 'isdnBasicRateSignalMode': isdnBasicRateSignalMode}


class isdnBearerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 2, 1, 1])
	access = 2
	columns = {'isdnBearerChannelType': isdnBearerChannelType, 'isdnBearerOperStatus': isdnBearerOperStatus, 'isdnBearerChannelNumber': isdnBearerChannelNumber, 'isdnBearerPeerAddress': isdnBearerPeerAddress, 'isdnBearerPeerSubAddress': isdnBearerPeerSubAddress, 'isdnBearerCallOrigin': isdnBearerCallOrigin, 'isdnBearerInfoType': isdnBearerInfoType, 'isdnBearerMultirate': isdnBearerMultirate, 'isdnBearerCallSetupTime': isdnBearerCallSetupTime, 'isdnBearerCallConnectTime': isdnBearerCallConnectTime, 'isdnBearerChargedUnits': isdnBearerChargedUnits}


class isdnSignalingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isdnSignalingIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 2, 1])
	access = 2
	rowstatus = isdnSignalingStatus
	columns = {'isdnSignalingIndex': isdnSignalingIndex, 'isdnSignalingIfIndex': isdnSignalingIfIndex, 'isdnSignalingProtocol': isdnSignalingProtocol, 'isdnSignalingCallingAddress': isdnSignalingCallingAddress, 'isdnSignalingSubAddress': isdnSignalingSubAddress, 'isdnSignalingBchannelCount': isdnSignalingBchannelCount, 'isdnSignalingInfoTrapEnable': isdnSignalingInfoTrapEnable, 'isdnSignalingStatus': isdnSignalingStatus}


from ISDN_MIB import isdnSignalingIndex
class isdnSignalingStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isdnSignalingIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 3, 1])
	access = 2
	columns = {'isdnSigStatsInCalls': isdnSigStatsInCalls, 'isdnSigStatsInConnected': isdnSigStatsInConnected, 'isdnSigStatsOutCalls': isdnSigStatsOutCalls, 'isdnSigStatsOutConnected': isdnSigStatsOutConnected, 'isdnSigStatsChargedUnits': isdnSigStatsChargedUnits}


class isdnLapdEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 3, 4, 1])
	access = 2
	columns = {'isdnLapdPrimaryChannel': isdnLapdPrimaryChannel, 'isdnLapdOperStatus': isdnLapdOperStatus, 'isdnLapdPeerSabme': isdnLapdPeerSabme, 'isdnLapdRecvdFrmr': isdnLapdRecvdFrmr}


class isdnEndpointEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isdnEndpointIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 4, 2, 1])
	access = 2
	rowstatus = isdnEndpointStatus
	columns = {'isdnEndpointIndex': isdnEndpointIndex, 'isdnEndpointIfIndex': isdnEndpointIfIndex, 'isdnEndpointIfType': isdnEndpointIfType, 'isdnEndpointTeiType': isdnEndpointTeiType, 'isdnEndpointTeiValue': isdnEndpointTeiValue, 'isdnEndpointSpid': isdnEndpointSpid, 'isdnEndpointStatus': isdnEndpointStatus}


class isdnDirectoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isdnDirectoryIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 1, 5, 1, 1])
	access = 2
	rowstatus = isdnDirectoryStatus
	columns = {'isdnDirectoryIndex': isdnDirectoryIndex, 'isdnDirectoryNumber': isdnDirectoryNumber, 'isdnDirectorySigIndex': isdnDirectorySigIndex, 'isdnDirectoryStatus': isdnDirectoryStatus}


# notifications (traps) 
class isdnMibCallInformation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 0, 1])

# groups 
class isdnMibBasicRateGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2, 1])
	group = [isdnBasicRateIfType, isdnBasicRateLineTopology, isdnBasicRateIfMode, isdnBasicRateSignalMode]

class isdnMibBearerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2, 2])
	group = [isdnBearerChannelType, isdnBearerOperStatus, isdnBearerChannelNumber, isdnBearerPeerAddress, isdnBearerPeerSubAddress, isdnBearerCallOrigin, isdnBearerInfoType, isdnBearerMultirate, isdnBearerCallSetupTime, isdnBearerCallConnectTime, isdnBearerChargedUnits]

class isdnMibSignalingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2, 3])
	group = [isdnSignalingGetIndex, isdnSignalingIfIndex, isdnSignalingProtocol, isdnSignalingCallingAddress, isdnSignalingSubAddress, isdnSignalingBchannelCount, isdnSignalingInfoTrapEnable, isdnSignalingStatus, isdnSigStatsInCalls, isdnSigStatsInConnected, isdnSigStatsOutCalls, isdnSigStatsOutConnected, isdnSigStatsChargedUnits, isdnLapdPrimaryChannel, isdnLapdOperStatus, isdnLapdPeerSabme, isdnLapdRecvdFrmr]

class isdnMibEndpointGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2, 4])
	group = [isdnEndpointGetIndex, isdnEndpointIfIndex, isdnEndpointIfType, isdnEndpointTeiType, isdnEndpointTeiValue, isdnEndpointSpid, isdnEndpointStatus]

class isdnMibDirectoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2, 5])
	group = [isdnDirectoryNumber, isdnDirectorySigIndex, isdnDirectoryStatus]

class isdnMibNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 20, 2, 2, 6])
	group = [isdnMibCallInformation]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
