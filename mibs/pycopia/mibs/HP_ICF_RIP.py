# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, IpAddress
from IANA_RTPROTO_MIB import IANAipRouteProtocol
from HP_ICF_OID import hpSwitch
from SNMPv2_TC import TruthValue, RowStatus
from RIPv2_MIB import rip2IfConfEntry

class HP_ICF_RIP(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-ICF-RIP'
	conformance = 2
	name = 'HP-ICF-RIP'
	language = 2
	description = 'This MIB module contains HP proprietary\nextensions to the standard RIP MIB.'

# nodes
class hpicfRip(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13])
	name = 'hpicfRip'

class hpicfRipObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1])
	name = 'hpicfRipObjects'

class hpicfRipGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1])
	name = 'hpicfRipGeneral'

class hpicfRipConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2])
	name = 'hpicfRipConformance'

class hpicfRipGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1])
	name = 'hpicfRipGroups'

class hpicfRipCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 2])
	name = 'hpicfRipCompliances'


# macros
# types 
# scalars 
class hpicfRipAdminStatus(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpicfRipDefaultMetric(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfRipAutoSummary(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpicfRipDistance(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class hpicfRipIfConfDoPoison(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpicfRipIfConfCost(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpicfRipRedistSrcProto(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3, 1, 1])
	syntaxobject = IANAipRouteProtocol


class hpicfRipRedistEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hpicfRipRedistRestrictAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class hpicfRipRedistRestrictMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class hpicfRipRedistRestrictStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
from RIPv2_MIB import rip2IfConfAddress
class hpicfRipIfConfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rip2IfConfAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2, 1])
	access = 2
	columns = {'hpicfRipIfConfDoPoison': hpicfRipIfConfDoPoison, 'hpicfRipIfConfCost': hpicfRipIfConfCost}


class hpicfRipRedistEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfRipRedistSrcProto], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3, 1])
	access = 2
	columns = {'hpicfRipRedistSrcProto': hpicfRipRedistSrcProto, 'hpicfRipRedistEnabled': hpicfRipRedistEnabled}


class hpicfRipRedistRestrictEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hpicfRipRedistRestrictAddr, hpicfRipRedistRestrictMask], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1])
	access = 2
	rowstatus = hpicfRipRedistRestrictStatus
	columns = {'hpicfRipRedistRestrictAddr': hpicfRipRedistRestrictAddr, 'hpicfRipRedistRestrictMask': hpicfRipRedistRestrictMask, 'hpicfRipRedistRestrictStatus': hpicfRipRedistRestrictStatus}


# notifications (traps) 
# groups 
class hpicfRipBaseGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 1])
	group = [hpicfRipAdminStatus, hpicfRipDefaultMetric, hpicfRipAutoSummary]

class hpicfRipIfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 2])
	group = [hpicfRipIfConfDoPoison, hpicfRipIfConfCost]

class hpicfRipRedistGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 3])
	group = [hpicfRipRedistEnabled, hpicfRipRedistRestrictStatus]

class hpicfRipDistanceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 4])
	group = [hpicfRipDistance]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
