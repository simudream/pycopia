# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, enterprises
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from RMON_MIB import OwnerString
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class SFLOW_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/SFLOW-MIB'
	conformance = 3
	name = 'SFLOW-MIB'
	language = 2
	description = 'The MIB module for managing the generation and transportation\nof sFlow data records.'

# nodes
class sFlowMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1])
	name = 'sFlowMIB'

class sFlowAgent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1])
	name = 'sFlowAgent'

class sFlowMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 2])
	name = 'sFlowMIBConformance'

class sFlowMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 2, 1])
	name = 'sFlowMIBGroups'

class sFlowMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 2, 2])
	name = 'sFlowMIBCompliances'


# macros
# types 
# scalars 
class sFlowVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 1])
	syntaxobject = SnmpAdminString


class sFlowAgentAddressType(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 2])
	syntaxobject = InetAddressType


class sFlowAgentAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 3])
	syntaxobject = InetAddress


# columns
class sFlowDataSource(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class sFlowOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 2])
	syntaxobject = OwnerString


class sFlowTimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sFlowPacketSamplingRate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sFlowCounterSamplingInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sFlowMaximumHeaderSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sFlowMaximumDatagramSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sFlowCollectorAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 8])
	syntaxobject = InetAddressType


class sFlowCollectorAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 9])
	syntaxobject = InetAddress


class sFlowCollectorPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sFlowDatagramVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class sFlowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sFlowDataSource], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 1, 4, 1])
	access = 2
	columns = {'sFlowDataSource': sFlowDataSource, 'sFlowOwner': sFlowOwner, 'sFlowTimeout': sFlowTimeout, 'sFlowPacketSamplingRate': sFlowPacketSamplingRate, 'sFlowCounterSamplingInterval': sFlowCounterSamplingInterval, 'sFlowMaximumHeaderSize': sFlowMaximumHeaderSize, 'sFlowMaximumDatagramSize': sFlowMaximumDatagramSize, 'sFlowCollectorAddressType': sFlowCollectorAddressType, 'sFlowCollectorAddress': sFlowCollectorAddress, 'sFlowCollectorPort': sFlowCollectorPort, 'sFlowDatagramVersion': sFlowDatagramVersion}


# notifications (traps) 
# groups 
class sFlowAgentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 4300, 1, 2, 1, 1])
	group = [sFlowVersion, sFlowAgentAddressType, sFlowAgentAddress, sFlowDataSource, sFlowOwner, sFlowTimeout, sFlowPacketSamplingRate, sFlowCounterSamplingInterval, sFlowMaximumHeaderSize, sFlowMaximumDatagramSize, sFlowCollectorAddressType, sFlowCollectorAddress, sFlowCollectorPort, sFlowDatagramVersion]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
