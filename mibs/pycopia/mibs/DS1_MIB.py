# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, transmission
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import DisplayString, TimeStamp, TruthValue
from IF_MIB import InterfaceIndex, ifIndex
from PerfHist_TC_MIB import PerfCurrentCount, PerfIntervalCount, PerfTotalCount

class DS1_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DS1-MIB'
	conformance = 5
	name = 'DS1-MIB'
	language = 2
	description = 'The MIB module to describe DS1, E1, DS2, and\nE2 interfaces objects.\n\nCopyright (c) The Internet Society (2004).  This\nversion of this MIB module is part of RFC 3895;\nsee the RFC itself for full legal notices.'

# nodes
class ds1(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18])
	name = 'ds1'

class ds1Conformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14])
	name = 'ds1Conformance'

class ds1Groups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1])
	name = 'ds1Groups'

class ds1Compliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 2])
	name = 'ds1Compliances'

class ds1Traps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 15])
	name = 'ds1Traps'


# macros
# types 
# scalars 
# columns
class dsx1LineIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1IfIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 2])
	syntaxobject = InterfaceIndex


class dsx1TimeElapsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1ValidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1LineType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'dsx1ESF'), Enum(3, 'dsx1D4'), Enum(4, 'dsx1E1'), Enum(5, 'dsx1E1CRC'), Enum(6, 'dsx1E1MF'), Enum(7, 'dsx1E1CRCMF'), Enum(8, 'dsx1Unframed'), Enum(9, 'dsx1E1Unframed'), Enum(10, 'dsx1DS2M12'), Enum(11, 'dsx1E2'), Enum(12, 'dsx1E1Q50'), Enum(13, 'dsx1E1Q50CRC')]


class dsx1LineCoding(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx1JBZS'), Enum(2, 'dsx1B8ZS'), Enum(3, 'dsx1HDB3'), Enum(4, 'dsx1ZBTSI'), Enum(5, 'dsx1AMI'), Enum(6, 'other'), Enum(7, 'dsx1B6ZS')]


class dsx1SendCode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx1SendNoCode'), Enum(2, 'dsx1SendLineCode'), Enum(3, 'dsx1SendPayloadCode'), Enum(4, 'dsx1SendResetCode'), Enum(5, 'dsx1SendQRS'), Enum(6, 'dsx1Send511Pattern'), Enum(7, 'dsx1Send3in24Pattern'), Enum(8, 'dsx1SendOtherTestPattern')]


class dsx1CircuitIdentifier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dsx1LoopbackConfig(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dsx1NoLoop'), Enum(2, 'dsx1PayloadLoop'), Enum(3, 'dsx1LineLoop'), Enum(4, 'dsx1OtherLoop'), Enum(5, 'dsx1InwardLoop'), Enum(6, 'dsx1DualLoop')]


class dsx1LineStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1SignalMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'robbedBit'), Enum(3, 'bitOriented'), Enum(4, 'messageOriented'), Enum(5, 'other')]


class dsx1TransmitClockSource(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'loopTiming'), Enum(2, 'localTiming'), Enum(3, 'throughTiming'), Enum(4, 'adaptive')]


class dsx1Fdl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1InvalidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1LineLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'meters'


class dsx1LineStatusLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class dsx1LineStatusChangeTrapEnable(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class dsx1LoopbackStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1Ds1ChannelNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1Channelization(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabledDs0'), Enum(3, 'enabledDs1')]


class dsx1LineMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'csu'), Enum(2, 'dsu')]


class dsx1LineBuildOut(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notApplicable'), Enum(2, 'neg75dB'), Enum(3, 'neg15dB'), Enum(4, 'neg225dB'), Enum(5, 'zerodB')]


class dsx1CurrentIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1CurrentESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 2])
	syntaxobject = PerfCurrentCount


class dsx1CurrentSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 3])
	syntaxobject = PerfCurrentCount


class dsx1CurrentSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 4])
	syntaxobject = PerfCurrentCount


class dsx1CurrentUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 5])
	syntaxobject = PerfCurrentCount


class dsx1CurrentCSSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 6])
	syntaxobject = PerfCurrentCount


class dsx1CurrentPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 7])
	syntaxobject = PerfCurrentCount


class dsx1CurrentLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 8])
	syntaxobject = PerfCurrentCount


class dsx1CurrentBESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 9])
	syntaxobject = PerfCurrentCount


class dsx1CurrentDMs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 10])
	syntaxobject = PerfCurrentCount


class dsx1CurrentLCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1, 11])
	syntaxobject = PerfCurrentCount


class dsx1IntervalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1IntervalNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1IntervalESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 3])
	syntaxobject = PerfIntervalCount


class dsx1IntervalSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 4])
	syntaxobject = PerfIntervalCount


class dsx1IntervalSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 5])
	syntaxobject = PerfIntervalCount


class dsx1IntervalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 6])
	syntaxobject = PerfIntervalCount


class dsx1IntervalCSSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 7])
	syntaxobject = PerfIntervalCount


class dsx1IntervalPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 8])
	syntaxobject = PerfIntervalCount


class dsx1IntervalLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 9])
	syntaxobject = PerfIntervalCount


class dsx1IntervalBESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 10])
	syntaxobject = PerfIntervalCount


class dsx1IntervalDMs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 11])
	syntaxobject = PerfIntervalCount


class dsx1IntervalLCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 12])
	syntaxobject = PerfIntervalCount


class dsx1IntervalValidData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dsx1TotalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1TotalESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 2])
	syntaxobject = PerfTotalCount


class dsx1TotalSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 3])
	syntaxobject = PerfTotalCount


class dsx1TotalSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 4])
	syntaxobject = PerfTotalCount


class dsx1TotalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 5])
	syntaxobject = PerfTotalCount


class dsx1TotalCSSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 6])
	syntaxobject = PerfTotalCount


class dsx1TotalPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 7])
	syntaxobject = PerfTotalCount


class dsx1TotalLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 8])
	syntaxobject = PerfTotalCount


class dsx1TotalBESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 9])
	syntaxobject = PerfTotalCount


class dsx1TotalDMs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 10])
	syntaxobject = PerfTotalCount


class dsx1TotalLCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1, 11])
	syntaxobject = PerfTotalCount


class dsx1FarEndCurrentIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1FarEndTimeElapsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1FarEndValidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1FarEndCurrentESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 4])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 5])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 6])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 7])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentCSSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 8])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 9])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 10])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentBESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 11])
	syntaxobject = PerfCurrentCount


class dsx1FarEndCurrentDMs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 12])
	syntaxobject = PerfCurrentCount


class dsx1FarEndInvalidIntervals(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1FarEndIntervalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1FarEndIntervalNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1FarEndIntervalESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 3])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 4])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 5])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 6])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalCSSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 7])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 8])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 9])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalBESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 10])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalDMs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 11])
	syntaxobject = PerfIntervalCount


class dsx1FarEndIntervalValidData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dsx1FarEndTotalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 1])
	syntaxobject = InterfaceIndex


class dsx1FarEndTotalESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 2])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalSESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 3])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalSEFSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 4])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalUASs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 5])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalCSSs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 6])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalLESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 7])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalPCVs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 8])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalBESs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 9])
	syntaxobject = PerfTotalCount


class dsx1FarEndTotalDMs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1, 10])
	syntaxobject = PerfTotalCount


class dsx1FracIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1FracNumber(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1FracIfIndex(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx1ChanMappedIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 16, 1, 1])
	syntaxobject = InterfaceIndex


# rows 
class dsx1ConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1LineIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 6, 1])
	access = 2
	columns = {'dsx1LineIndex': dsx1LineIndex, 'dsx1IfIndex': dsx1IfIndex, 'dsx1TimeElapsed': dsx1TimeElapsed, 'dsx1ValidIntervals': dsx1ValidIntervals, 'dsx1LineType': dsx1LineType, 'dsx1LineCoding': dsx1LineCoding, 'dsx1SendCode': dsx1SendCode, 'dsx1CircuitIdentifier': dsx1CircuitIdentifier, 'dsx1LoopbackConfig': dsx1LoopbackConfig, 'dsx1LineStatus': dsx1LineStatus, 'dsx1SignalMode': dsx1SignalMode, 'dsx1TransmitClockSource': dsx1TransmitClockSource, 'dsx1Fdl': dsx1Fdl, 'dsx1InvalidIntervals': dsx1InvalidIntervals, 'dsx1LineLength': dsx1LineLength, 'dsx1LineStatusLastChange': dsx1LineStatusLastChange, 'dsx1LineStatusChangeTrapEnable': dsx1LineStatusChangeTrapEnable, 'dsx1LoopbackStatus': dsx1LoopbackStatus, 'dsx1Ds1ChannelNumber': dsx1Ds1ChannelNumber, 'dsx1Channelization': dsx1Channelization, 'dsx1LineMode': dsx1LineMode, 'dsx1LineBuildOut': dsx1LineBuildOut}


class dsx1CurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1CurrentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 7, 1])
	access = 2
	columns = {'dsx1CurrentIndex': dsx1CurrentIndex, 'dsx1CurrentESs': dsx1CurrentESs, 'dsx1CurrentSESs': dsx1CurrentSESs, 'dsx1CurrentSEFSs': dsx1CurrentSEFSs, 'dsx1CurrentUASs': dsx1CurrentUASs, 'dsx1CurrentCSSs': dsx1CurrentCSSs, 'dsx1CurrentPCVs': dsx1CurrentPCVs, 'dsx1CurrentLESs': dsx1CurrentLESs, 'dsx1CurrentBESs': dsx1CurrentBESs, 'dsx1CurrentDMs': dsx1CurrentDMs, 'dsx1CurrentLCVs': dsx1CurrentLCVs}


class dsx1IntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1IntervalIndex, dsx1IntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 8, 1])
	access = 2
	columns = {'dsx1IntervalIndex': dsx1IntervalIndex, 'dsx1IntervalNumber': dsx1IntervalNumber, 'dsx1IntervalESs': dsx1IntervalESs, 'dsx1IntervalSESs': dsx1IntervalSESs, 'dsx1IntervalSEFSs': dsx1IntervalSEFSs, 'dsx1IntervalUASs': dsx1IntervalUASs, 'dsx1IntervalCSSs': dsx1IntervalCSSs, 'dsx1IntervalPCVs': dsx1IntervalPCVs, 'dsx1IntervalLESs': dsx1IntervalLESs, 'dsx1IntervalBESs': dsx1IntervalBESs, 'dsx1IntervalDMs': dsx1IntervalDMs, 'dsx1IntervalLCVs': dsx1IntervalLCVs, 'dsx1IntervalValidData': dsx1IntervalValidData}


class dsx1TotalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1TotalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 9, 1])
	access = 2
	columns = {'dsx1TotalIndex': dsx1TotalIndex, 'dsx1TotalESs': dsx1TotalESs, 'dsx1TotalSESs': dsx1TotalSESs, 'dsx1TotalSEFSs': dsx1TotalSEFSs, 'dsx1TotalUASs': dsx1TotalUASs, 'dsx1TotalCSSs': dsx1TotalCSSs, 'dsx1TotalPCVs': dsx1TotalPCVs, 'dsx1TotalLESs': dsx1TotalLESs, 'dsx1TotalBESs': dsx1TotalBESs, 'dsx1TotalDMs': dsx1TotalDMs, 'dsx1TotalLCVs': dsx1TotalLCVs}


class dsx1FarEndCurrentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1FarEndCurrentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 10, 1])
	access = 2
	columns = {'dsx1FarEndCurrentIndex': dsx1FarEndCurrentIndex, 'dsx1FarEndTimeElapsed': dsx1FarEndTimeElapsed, 'dsx1FarEndValidIntervals': dsx1FarEndValidIntervals, 'dsx1FarEndCurrentESs': dsx1FarEndCurrentESs, 'dsx1FarEndCurrentSESs': dsx1FarEndCurrentSESs, 'dsx1FarEndCurrentSEFSs': dsx1FarEndCurrentSEFSs, 'dsx1FarEndCurrentUASs': dsx1FarEndCurrentUASs, 'dsx1FarEndCurrentCSSs': dsx1FarEndCurrentCSSs, 'dsx1FarEndCurrentLESs': dsx1FarEndCurrentLESs, 'dsx1FarEndCurrentPCVs': dsx1FarEndCurrentPCVs, 'dsx1FarEndCurrentBESs': dsx1FarEndCurrentBESs, 'dsx1FarEndCurrentDMs': dsx1FarEndCurrentDMs, 'dsx1FarEndInvalidIntervals': dsx1FarEndInvalidIntervals}


class dsx1FarEndIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1FarEndIntervalIndex, dsx1FarEndIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 11, 1])
	access = 2
	columns = {'dsx1FarEndIntervalIndex': dsx1FarEndIntervalIndex, 'dsx1FarEndIntervalNumber': dsx1FarEndIntervalNumber, 'dsx1FarEndIntervalESs': dsx1FarEndIntervalESs, 'dsx1FarEndIntervalSESs': dsx1FarEndIntervalSESs, 'dsx1FarEndIntervalSEFSs': dsx1FarEndIntervalSEFSs, 'dsx1FarEndIntervalUASs': dsx1FarEndIntervalUASs, 'dsx1FarEndIntervalCSSs': dsx1FarEndIntervalCSSs, 'dsx1FarEndIntervalLESs': dsx1FarEndIntervalLESs, 'dsx1FarEndIntervalPCVs': dsx1FarEndIntervalPCVs, 'dsx1FarEndIntervalBESs': dsx1FarEndIntervalBESs, 'dsx1FarEndIntervalDMs': dsx1FarEndIntervalDMs, 'dsx1FarEndIntervalValidData': dsx1FarEndIntervalValidData}


class dsx1FarEndTotalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx1FarEndTotalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 12, 1])
	access = 2
	columns = {'dsx1FarEndTotalIndex': dsx1FarEndTotalIndex, 'dsx1FarEndTotalESs': dsx1FarEndTotalESs, 'dsx1FarEndTotalSESs': dsx1FarEndTotalSESs, 'dsx1FarEndTotalSEFSs': dsx1FarEndTotalSEFSs, 'dsx1FarEndTotalUASs': dsx1FarEndTotalUASs, 'dsx1FarEndTotalCSSs': dsx1FarEndTotalCSSs, 'dsx1FarEndTotalLESs': dsx1FarEndTotalLESs, 'dsx1FarEndTotalPCVs': dsx1FarEndTotalPCVs, 'dsx1FarEndTotalBESs': dsx1FarEndTotalBESs, 'dsx1FarEndTotalDMs': dsx1FarEndTotalDMs}


class dsx1FracEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([dsx1FracIndex, dsx1FracNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 13, 1])
	access = 2
	columns = {'dsx1FracIndex': dsx1FracIndex, 'dsx1FracNumber': dsx1FracNumber, 'dsx1FracIfIndex': dsx1FracIfIndex}


class dsx1ChanMappingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, dsx1Ds1ChannelNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 16, 1])
	access = 2
	columns = {'dsx1ChanMappedIfIndex': dsx1ChanMappedIfIndex}


# notifications (traps) 
class dsx1LineStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 15, 0, 1])

# groups 
class ds1NearEndConfigGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 1])
	group = [dsx1LineIndex, dsx1TimeElapsed, dsx1ValidIntervals, dsx1LineType, dsx1LineCoding, dsx1SendCode, dsx1CircuitIdentifier, dsx1LoopbackConfig, dsx1LineStatus, dsx1SignalMode, dsx1TransmitClockSource, dsx1Fdl, dsx1InvalidIntervals, dsx1LineLength, dsx1LoopbackStatus, dsx1Ds1ChannelNumber, dsx1Channelization]

class ds1NearEndStatisticsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 2])
	group = [dsx1CurrentIndex, dsx1CurrentESs, dsx1CurrentSESs, dsx1CurrentSEFSs, dsx1CurrentUASs, dsx1CurrentCSSs, dsx1CurrentPCVs, dsx1CurrentLESs, dsx1CurrentBESs, dsx1CurrentDMs, dsx1CurrentLCVs, dsx1IntervalIndex, dsx1IntervalNumber, dsx1IntervalESs, dsx1IntervalSESs, dsx1IntervalSEFSs, dsx1IntervalUASs, dsx1IntervalCSSs, dsx1IntervalPCVs, dsx1IntervalLESs, dsx1IntervalBESs, dsx1IntervalDMs, dsx1IntervalLCVs, dsx1IntervalValidData, dsx1TotalIndex, dsx1TotalESs, dsx1TotalSESs, dsx1TotalSEFSs, dsx1TotalUASs, dsx1TotalCSSs, dsx1TotalPCVs, dsx1TotalLESs, dsx1TotalBESs, dsx1TotalDMs, dsx1TotalLCVs]

class ds1FarEndGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 3])
	group = [dsx1FarEndCurrentIndex, dsx1FarEndTimeElapsed, dsx1FarEndValidIntervals, dsx1FarEndCurrentESs, dsx1FarEndCurrentSESs, dsx1FarEndCurrentSEFSs, dsx1FarEndCurrentUASs, dsx1FarEndCurrentCSSs, dsx1FarEndCurrentLESs, dsx1FarEndCurrentPCVs, dsx1FarEndCurrentBESs, dsx1FarEndCurrentDMs, dsx1FarEndInvalidIntervals, dsx1FarEndIntervalIndex, dsx1FarEndIntervalNumber, dsx1FarEndIntervalESs, dsx1FarEndIntervalSESs, dsx1FarEndIntervalSEFSs, dsx1FarEndIntervalUASs, dsx1FarEndIntervalCSSs, dsx1FarEndIntervalLESs, dsx1FarEndIntervalPCVs, dsx1FarEndIntervalBESs, dsx1FarEndIntervalDMs, dsx1FarEndIntervalValidData, dsx1FarEndTotalIndex, dsx1FarEndTotalESs, dsx1FarEndTotalSESs, dsx1FarEndTotalSEFSs, dsx1FarEndTotalUASs, dsx1FarEndTotalCSSs, dsx1FarEndTotalLESs, dsx1FarEndTotalPCVs, dsx1FarEndTotalBESs, dsx1FarEndTotalDMs]

class ds1DeprecatedGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 4])
	group = [dsx1IfIndex, dsx1FracIndex, dsx1FracNumber, dsx1FracIfIndex]

class ds1NearEndOptionalConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 5])
	group = [dsx1LineStatusLastChange, dsx1LineStatusChangeTrapEnable]

class ds1DS2Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 6])
	group = [dsx1LineIndex, dsx1LineType, dsx1LineCoding, dsx1SendCode, dsx1LineStatus, dsx1SignalMode, dsx1TransmitClockSource, dsx1Channelization]

class ds1TransStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 7])
	group = [dsx1CurrentESs, dsx1CurrentSESs, dsx1CurrentUASs, dsx1IntervalESs, dsx1IntervalSESs, dsx1IntervalUASs, dsx1TotalESs, dsx1TotalSESs, dsx1TotalUASs]

class ds1NearEndOptionalTrapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 8])
	group = [dsx1LineStatusChange]

class ds1ChanMappingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 9])
	group = [dsx1ChanMappedIfIndex]

class ds1NearEndConfigurationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 18, 14, 1, 10])
	group = [dsx1LineIndex, dsx1TimeElapsed, dsx1ValidIntervals, dsx1LineType, dsx1LineCoding, dsx1SendCode, dsx1CircuitIdentifier, dsx1LoopbackConfig, dsx1LineStatus, dsx1SignalMode, dsx1TransmitClockSource, dsx1Fdl, dsx1InvalidIntervals, dsx1LineLength, dsx1LoopbackStatus, dsx1Ds1ChannelNumber, dsx1Channelization, dsx1LineMode, dsx1LineBuildOut]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
