# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE, NOTIFICATION_GROUP
from DOCS_IETF_BPI2_MIB import DocsX509ASN1DEREncodedCertificate, docsBpi2CodeDownloadGroup
from IF_MIB import ifPhysAddress
from SNMPv2_MIB import sysDescr
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, OBJECT_IDENTITY, Unsigned32, Counter32, NOTIFICATION_TYPE, mib_2
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from SYSAPPL_MIB import LongUtf8String
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TruthValue
from DOCS_CABLE_DEVICE_MIB import docsDevSoftwareGroupV2

class PKTC_IETF_MTA_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/PKTC-IETF-MTA-MIB'
	conformance = 132
	name = 'PKTC-IETF-MTA-MIB'
	language = 2
	description = 'This MIB module defines the basic management object\nfor the Multimedia Terminal Adapter devices compliant\nwith PacketCable and IPCablecom requirements.\n\nCopyright (C) The IETF Trust (2006).  This version of\nthis MIB module is part of RFC 4682; see the RFC itself for\nfull legal notices.'

# nodes
class pktcIetfMtaMib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140])
	name = 'pktcIetfMtaMib'

class pktcMtaNotification(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 0])
	name = 'pktcMtaNotification'

class pktcMtaMibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1])
	name = 'pktcMtaMibObjects'

class pktcMtaDevBase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1])
	name = 'pktcMtaDevBase'

class pktcMtaDevServer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2])
	name = 'pktcMtaDevServer'

class pktcMtaDevSecurity(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3])
	name = 'pktcMtaDevSecurity'

class pktcMtaDevErrors(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 4])
	name = 'pktcMtaDevErrors'

class pktcMtaDevErrorsTooManyErrors(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 4, 1])
	name = 'pktcMtaDevErrorsTooManyErrors'

class pktcMtaConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 2])
	name = 'pktcMtaConformance'

class pktcMtaCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 2, 1])
	name = 'pktcMtaCompliances'

class pktcMtaGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 2, 2])
	name = 'pktcMtaGroups'


# macros
# types 

class PktcMtaDevProvEncryptAlg(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'none'), Enum(1, 'des64CbcMode'), Enum(2, 't3Des192CbcMode'), Enum(3, 'aes128CbcMode'), Enum(4, 'aes256CbcMode')]

# scalars 
class pktcMtaDevResetNow(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class pktcMtaDevSerialNumber(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 2])
	syntaxobject = SnmpAdminString


class pktcMtaDevSwCurrentVers(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 3])
	syntaxobject = SnmpAdminString


class pktcMtaDevFQDN(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 4])
	syntaxobject = SnmpAdminString


class pktcMtaDevEndPntCount(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevEnabled(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class pktcMtaDevTypeIdentifier(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 7])
	syntaxobject = SnmpAdminString


class pktcMtaDevProvisioningState(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pass'), Enum(2, 'inProgress'), Enum(3, 'failConfigFileError'), Enum(4, 'passWithWarnings'), Enum(5, 'passWithIncompleteParsing'), Enum(6, 'failureInternalError'), Enum(7, 'failureOtherReason')]


class pktcMtaDevHttpAccess(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class pktcMtaDevProvisioningTimer(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'minutes'


class pktcMtaDevProvisioningCounter(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class pktcMtaDevDhcpServerAddressType(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 1])
	syntaxobject = InetAddressType


class pktcMtaDevServerDhcp1(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 2])
	syntaxobject = InetAddress


class pktcMtaDevServerDhcp2(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 3])
	syntaxobject = InetAddress


class pktcMtaDevDnsServerAddressType(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 4])
	syntaxobject = InetAddressType


class pktcMtaDevServerDns1(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 5])
	syntaxobject = InetAddress


class pktcMtaDevServerDns2(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 6])
	syntaxobject = InetAddress


class pktcMtaDevTimeServerAddressType(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 7])
	syntaxobject = InetAddressType


class pktcMtaDevTimeServer(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 8])
	syntaxobject = InetAddress


class pktcMtaDevConfigFile(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 9])
	syntaxobject = SnmpAdminString


class pktcMtaDevSnmpEntity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 10])
	syntaxobject = SnmpAdminString


class pktcMtaDevProvConfigHash(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class pktcMtaDevProvConfigKey(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class pktcMtaDevProvConfigEncryptAlg(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 13])
	syntaxobject = PktcMtaDevProvEncryptAlg


class pktcMtaDevProvSolicitedKeyTimeout(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class pktcMtaDevProvUnsolicitedKeyMaxTimeout(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class pktcMtaDevProvUnsolicitedKeyNomTimeout(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 16])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'seconds'


class pktcMtaDevProvUnsolicitedKeyMaxRetries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevProvKerbRealmName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 18])
	syntaxobject = SnmpAdminString


class pktcMtaDevProvState(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'operational'), Enum(2, 'waitingForSnmpSetInfo'), Enum(3, 'waitingForTftpAddrResponse'), Enum(4, 'waitingForConfigFile')]


class pktcMtaDevManufacturerCertificate(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 1])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class pktcMtaDevCertificate(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 2])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class pktcMtaDevCorrelationId(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevTelephonyRootCertificate(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 4])
	syntaxobject = DocsX509ASN1DEREncodedCertificate


class pktcMtaDevRealmAvailSlot(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevCmsAvailSlot(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevResetKrbTickets(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


# columns
class pktcMtaDevErrorOidIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevErrorOid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 2])
	syntaxobject = SnmpAdminString


class pktcMtaDevErrorValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 3])
	syntaxobject = SnmpAdminString


class pktcMtaDevErrorReason(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 4])
	syntaxobject = SnmpAdminString


class pktcMtaDevRealmIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevRealmName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 2])
	syntaxobject = SnmpAdminString


class pktcMtaDevRealmPkinitGracePeriod(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'minutes'


class pktcMtaDevRealmTgsGracePeriod(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'minutes'


class pktcMtaDevRealmOrgName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 5])
	syntaxobject = LongUtf8String


class pktcMtaDevRealmUnsolicitedKeyMaxTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class pktcMtaDevRealmUnsolicitedKeyNomTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class pktcMtaDevRealmUnsolicitedKeyMaxRetries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevRealmStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class pktcMtaDevCmsIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevCmsFqdn(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 2])
	syntaxobject = SnmpAdminString


class pktcMtaDevCmsKerbRealmName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 3])
	syntaxobject = SnmpAdminString


class pktcMtaDevCmsMaxClockSkew(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class pktcMtaDevCmsSolicitedKeyTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class pktcMtaDevCmsUnsolicitedKeyMaxTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class pktcMtaDevCmsUnsolicitedKeyNomTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class pktcMtaDevCmsUnsolicitedKeyMaxRetries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pktcMtaDevCmsIpsecCtrl(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class pktcMtaDevCmsStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class pktcMtaDevErrorOidsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pktcMtaDevErrorOidIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1])
	access = 2
	columns = {'pktcMtaDevErrorOidIndex': pktcMtaDevErrorOidIndex, 'pktcMtaDevErrorOid': pktcMtaDevErrorOid, 'pktcMtaDevErrorValue': pktcMtaDevErrorValue, 'pktcMtaDevErrorReason': pktcMtaDevErrorReason}


class pktcMtaDevRealmEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pktcMtaDevRealmIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1])
	access = 2
	rowstatus = pktcMtaDevRealmStatus
	columns = {'pktcMtaDevRealmIndex': pktcMtaDevRealmIndex, 'pktcMtaDevRealmName': pktcMtaDevRealmName, 'pktcMtaDevRealmPkinitGracePeriod': pktcMtaDevRealmPkinitGracePeriod, 'pktcMtaDevRealmTgsGracePeriod': pktcMtaDevRealmTgsGracePeriod, 'pktcMtaDevRealmOrgName': pktcMtaDevRealmOrgName, 'pktcMtaDevRealmUnsolicitedKeyMaxTimeout': pktcMtaDevRealmUnsolicitedKeyMaxTimeout, 'pktcMtaDevRealmUnsolicitedKeyNomTimeout': pktcMtaDevRealmUnsolicitedKeyNomTimeout, 'pktcMtaDevRealmUnsolicitedKeyMaxRetries': pktcMtaDevRealmUnsolicitedKeyMaxRetries, 'pktcMtaDevRealmStatus': pktcMtaDevRealmStatus}


class pktcMtaDevCmsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pktcMtaDevCmsIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1])
	access = 2
	rowstatus = pktcMtaDevCmsStatus
	columns = {'pktcMtaDevCmsIndex': pktcMtaDevCmsIndex, 'pktcMtaDevCmsFqdn': pktcMtaDevCmsFqdn, 'pktcMtaDevCmsKerbRealmName': pktcMtaDevCmsKerbRealmName, 'pktcMtaDevCmsMaxClockSkew': pktcMtaDevCmsMaxClockSkew, 'pktcMtaDevCmsSolicitedKeyTimeout': pktcMtaDevCmsSolicitedKeyTimeout, 'pktcMtaDevCmsUnsolicitedKeyMaxTimeout': pktcMtaDevCmsUnsolicitedKeyMaxTimeout, 'pktcMtaDevCmsUnsolicitedKeyNomTimeout': pktcMtaDevCmsUnsolicitedKeyNomTimeout, 'pktcMtaDevCmsUnsolicitedKeyMaxRetries': pktcMtaDevCmsUnsolicitedKeyMaxRetries, 'pktcMtaDevCmsIpsecCtrl': pktcMtaDevCmsIpsecCtrl, 'pktcMtaDevCmsStatus': pktcMtaDevCmsStatus}


# notifications (traps) 
class pktcMtaDevProvisioningEnrollment(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 0, 1])

class pktcMtaDevProvisioningStatus(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 0, 2])

# groups 
class pktcMtaGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 2, 2, 1])
	group = [pktcMtaDevResetNow, pktcMtaDevSerialNumber, pktcMtaDevSwCurrentVers, pktcMtaDevFQDN, pktcMtaDevEndPntCount, pktcMtaDevEnabled, pktcMtaDevProvisioningCounter, pktcMtaDevErrorOid, pktcMtaDevErrorValue, pktcMtaDevErrorReason, pktcMtaDevTypeIdentifier, pktcMtaDevProvisioningState, pktcMtaDevHttpAccess, pktcMtaDevCertificate, pktcMtaDevCorrelationId, pktcMtaDevManufacturerCertificate, pktcMtaDevDhcpServerAddressType, pktcMtaDevDnsServerAddressType, pktcMtaDevTimeServerAddressType, pktcMtaDevProvConfigEncryptAlg, pktcMtaDevServerDhcp1, pktcMtaDevServerDhcp2, pktcMtaDevServerDns1, pktcMtaDevServerDns2, pktcMtaDevTimeServer, pktcMtaDevConfigFile, pktcMtaDevSnmpEntity, pktcMtaDevRealmPkinitGracePeriod, pktcMtaDevRealmTgsGracePeriod, pktcMtaDevRealmAvailSlot, pktcMtaDevRealmName, pktcMtaDevRealmOrgName, pktcMtaDevRealmUnsolicitedKeyMaxTimeout, pktcMtaDevRealmUnsolicitedKeyNomTimeout, pktcMtaDevRealmUnsolicitedKeyMaxRetries, pktcMtaDevRealmStatus, pktcMtaDevCmsAvailSlot, pktcMtaDevCmsFqdn, pktcMtaDevCmsKerbRealmName, pktcMtaDevCmsUnsolicitedKeyMaxTimeout, pktcMtaDevCmsUnsolicitedKeyNomTimeout, pktcMtaDevCmsUnsolicitedKeyMaxRetries, pktcMtaDevCmsSolicitedKeyTimeout, pktcMtaDevCmsMaxClockSkew, pktcMtaDevCmsIpsecCtrl, pktcMtaDevCmsStatus, pktcMtaDevResetKrbTickets, pktcMtaDevProvUnsolicitedKeyMaxTimeout, pktcMtaDevProvUnsolicitedKeyNomTimeout, pktcMtaDevProvUnsolicitedKeyMaxRetries, pktcMtaDevProvKerbRealmName, pktcMtaDevProvSolicitedKeyTimeout, pktcMtaDevProvConfigHash, pktcMtaDevProvConfigKey, pktcMtaDevProvState, pktcMtaDevProvisioningTimer, pktcMtaDevTelephonyRootCertificate]

class pktcMtaNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 140, 2, 2, 2])
	group = [pktcMtaDevProvisioningStatus, pktcMtaDevProvisioningEnrollment]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
