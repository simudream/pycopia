# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, Gauge32, Integer32
from CISCO_SMI import ciscoMgmt
from RFC1213_MIB import DisplayString
from SNMPv2_TC import DateAndTime, TruthValue

class CISCO_C2900_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-C2900-MIB'
	conformance = 3
	name = 'CISCO-C2900-MIB'
	language = 2
	description = 'The MIB module for Catalyst 2900 enterprise specific information.'

# nodes
class ciscoC2900MIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87])
	name = 'ciscoC2900MIB'

class c2900MIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1])
	name = 'c2900MIBObjects'

class c2900SysInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1])
	name = 'c2900SysInfo'

class c2900SysConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 2])
	name = 'c2900SysConfig'

class c2900Port(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4])
	name = 'c2900Port'

class c2900BandwidthUsage(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5])
	name = 'c2900BandwidthUsage'

class c2900MibNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 2])
	name = 'c2900MibNotifications'

class c2900MibNotificationsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 2, 0])
	name = 'c2900MibNotificationsPrefix'

class c2900MIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3])
	name = 'c2900MIBConformance'

class c2900MIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 1])
	name = 'c2900MIBCompliances'

class c2900MIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2])
	name = 'c2900MIBGroups'


# macros
# types 
# scalars 
class c2900InfoBoardRevision(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900InfoPeakBuffersUsed(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'buffers'


class c2900InfoTotalBufferDepth(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'buffers'


class c2900InfoAddrCapacity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900InfoRestrictedStaticAddrCapacity(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900InfoSelfTestFailed(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class c2900InfoUtilDisplay(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class c2900InfoVisualIndicatorMode(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'portStatus'), Enum(2, 'fullDuplex'), Enum(3, 'linkRate'), Enum(4, 'utilization')]


class c2900InfoRedunantPowerSupplyInfo(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'absent'), Enum(2, 'connectedFunctional'), Enum(3, 'connectedNotFunctional'), Enum(4, 'functionalPrimaryFailed')]


class c2900InfoBoardIdentifier(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900ConfigAddressViolationAction(ScalarObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'doNothing'), Enum(2, 'disablePort'), Enum(3, 'sendNotify'), Enum(4, 'disablePortAndNotify')]


class c2900ConfigBroadcastStormAlarm(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900BandwidthUsageCurrent(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'megabits per second'


class c2900BandwidthUsageMaxPeakEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900BandwidthUsagePeakInterval(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'onehour'), Enum(3, 'threehours'), Enum(6, 'sixhours'), Enum(12, 'twelvehours'), Enum(24, 'oneday'), Enum(48, 'twodays'), Enum(72, 'threedays'), Enum(96, 'fourdays'), Enum(120, 'fivedays'), Enum(144, 'sixdays'), Enum(168, 'oneweek')]


class c2900BandwidthUsagePeakRestart(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900BandwidthUsageCurrentPeakEntry(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class c2900ModuleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900ModuleStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'moduleNotInstalled'), Enum(2, 'moduleInTest'), Enum(3, 'moduleHealthy'), Enum(4, 'moduleFaulty')]


class c2900ModuleType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'empty'), Enum(3, 'wsx2914xl'), Enum(4, 'wsx2922xl')]


class c2900ModuleHwVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class c2900ModuleSwVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class c2900PortModuleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortUsageApplication(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'standard'), Enum(2, 'security'), Enum(3, 'monitor'), Enum(4, 'portGrouping'), Enum(5, 'network'), Enum(6, 'networkGroup')]


class c2900PortGroupIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortMayLearnAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortMayForwardFrames(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortBufferCongestionControl(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortBufferCongestionThreshholdPercent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortFrameAge(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class c2900PortAddrSecureMaxAddresses(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortAddrSecureCurrentAddresses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortAddrSecureAddrViolations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class c2900PortNumberOfLearnedAddresses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class c2900PortNumberOfDroppedAddresses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class c2900PortClearAddresses(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortFloodUnknownMulticasts(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortFloodUnknownUnicasts(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortLinkbeatStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'linkbeat'), Enum(3, 'nolinkbeat')]


class c2900PortBroadcastStormAction(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stopBroadcastForwarding'), Enum(2, 'forwardBroadcast'), Enum(3, 'disablePort')]


class c2900PortBroadcastRisingThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortBroadcastFallingThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'disabled'), Enum(3, 'blocking'), Enum(4, 'listening'), Enum(5, 'learning'), Enum(6, 'preforwarding'), Enum(7, 'forwarding'), Enum(8, 'secureforwarding'), Enum(9, 'suspended'), Enum(10, 'broken')]


class c2900PortTestResult(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortVisualIndicator(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notused'), Enum(2, 'black'), Enum(3, 'amber'), Enum(4, 'green')]


class c2900PortIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 25])
	syntaxobject = InterfaceIndex


class c2900PortAddressViolationAction(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'doNothing'), Enum(2, 'disablePort'), Enum(3, 'sendNotify'), Enum(4, 'disablePortAndNotify')]


class c2900PortBroadcastStormAlarm(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class c2900PortMonitorDestinationPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortSwitchPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortMonitoredPortMap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class c2900PortDuplexState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fullduplex'), Enum(2, 'halfduplex'), Enum(3, 'autoNegotiate')]


class c2900PortDuplexStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fullduplex'), Enum(2, 'halfduplex')]


class c2900PortAdminSpeed(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'autoDetect'), Enum(10000000, 's10000000'), Enum(100000000, 's100000000')]


class c2900PortNoMonitorDestinationPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900PortRxNoBwFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortRxNoBufferFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortRxNoDestUniFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortRxNoDestMultiFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortRxSuppressBcastFrames(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortRxFcsErrFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortCollFragFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortTxMulticastFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900PortTxBroadcastFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'frames'


class c2900BandwidthUsagePeakIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class c2900BandwidthUsageStartTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class c2900BandwidthUsagePeak(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'megabits per second'


class c2900BandwidthUsagePeakTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# rows 
class c2900ModuleEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([c2900ModuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 3, 1])
	access = 2
	columns = {'c2900ModuleIndex': c2900ModuleIndex, 'c2900ModuleStatus': c2900ModuleStatus, 'c2900ModuleType': c2900ModuleType, 'c2900ModuleHwVersion': c2900ModuleHwVersion, 'c2900ModuleSwVersion': c2900ModuleSwVersion}


class c2900PortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([c2900PortModuleIndex, c2900PortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 1, 1])
	access = 2
	columns = {'c2900PortModuleIndex': c2900PortModuleIndex, 'c2900PortIndex': c2900PortIndex, 'c2900PortUsageApplication': c2900PortUsageApplication, 'c2900PortGroupIndex': c2900PortGroupIndex, 'c2900PortMayLearnAddress': c2900PortMayLearnAddress, 'c2900PortMayForwardFrames': c2900PortMayForwardFrames, 'c2900PortBufferCongestionControl': c2900PortBufferCongestionControl, 'c2900PortBufferCongestionThreshholdPercent': c2900PortBufferCongestionThreshholdPercent, 'c2900PortFrameAge': c2900PortFrameAge, 'c2900PortAddrSecureMaxAddresses': c2900PortAddrSecureMaxAddresses, 'c2900PortAddrSecureCurrentAddresses': c2900PortAddrSecureCurrentAddresses, 'c2900PortAddrSecureAddrViolations': c2900PortAddrSecureAddrViolations, 'c2900PortNumberOfLearnedAddresses': c2900PortNumberOfLearnedAddresses, 'c2900PortNumberOfDroppedAddresses': c2900PortNumberOfDroppedAddresses, 'c2900PortClearAddresses': c2900PortClearAddresses, 'c2900PortFloodUnknownMulticasts': c2900PortFloodUnknownMulticasts, 'c2900PortFloodUnknownUnicasts': c2900PortFloodUnknownUnicasts, 'c2900PortLinkbeatStatus': c2900PortLinkbeatStatus, 'c2900PortBroadcastStormAction': c2900PortBroadcastStormAction, 'c2900PortBroadcastRisingThreshold': c2900PortBroadcastRisingThreshold, 'c2900PortBroadcastFallingThreshold': c2900PortBroadcastFallingThreshold, 'c2900PortStatus': c2900PortStatus, 'c2900PortTestResult': c2900PortTestResult, 'c2900PortVisualIndicator': c2900PortVisualIndicator, 'c2900PortIfIndex': c2900PortIfIndex, 'c2900PortAddressViolationAction': c2900PortAddressViolationAction, 'c2900PortBroadcastStormAlarm': c2900PortBroadcastStormAlarm, 'c2900PortMonitorDestinationPort': c2900PortMonitorDestinationPort, 'c2900PortSwitchPortIndex': c2900PortSwitchPortIndex, 'c2900PortMonitoredPortMap': c2900PortMonitoredPortMap, 'c2900PortDuplexState': c2900PortDuplexState, 'c2900PortDuplexStatus': c2900PortDuplexStatus, 'c2900PortAdminSpeed': c2900PortAdminSpeed, 'c2900PortNoMonitorDestinationPort': c2900PortNoMonitorDestinationPort}


class c2900PortStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([c2900PortModuleIndex, c2900PortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 4, 2, 1])
	access = 2
	columns = {'c2900PortRxNoBwFrames': c2900PortRxNoBwFrames, 'c2900PortRxNoBufferFrames': c2900PortRxNoBufferFrames, 'c2900PortRxNoDestUniFrames': c2900PortRxNoDestUniFrames, 'c2900PortRxNoDestMultiFrames': c2900PortRxNoDestMultiFrames, 'c2900PortRxSuppressBcastFrames': c2900PortRxSuppressBcastFrames, 'c2900PortRxFcsErrFrames': c2900PortRxFcsErrFrames, 'c2900PortCollFragFrames': c2900PortCollFragFrames, 'c2900PortTxMulticastFrames': c2900PortTxMulticastFrames, 'c2900PortTxBroadcastFrames': c2900PortTxBroadcastFrames}


class c2900BandwidthUsagePeakEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([c2900BandwidthUsagePeakIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 1, 5, 6, 1])
	access = 2
	columns = {'c2900BandwidthUsagePeakIndex': c2900BandwidthUsagePeakIndex, 'c2900BandwidthUsageStartTime': c2900BandwidthUsageStartTime, 'c2900BandwidthUsagePeak': c2900BandwidthUsagePeak, 'c2900BandwidthUsagePeakTime': c2900BandwidthUsagePeakTime}


# notifications (traps) 
class c2900AddressViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 2, 0, 1])

class c2900BroadcastStorm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 2, 0, 2])

# groups 
class c2900SysInfoGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 1])
	group = [c2900InfoBoardRevision, c2900InfoPeakBuffersUsed, c2900InfoTotalBufferDepth, c2900InfoAddrCapacity, c2900InfoRestrictedStaticAddrCapacity, c2900InfoSelfTestFailed, c2900InfoUtilDisplay, c2900InfoVisualIndicatorMode, c2900InfoRedunantPowerSupplyInfo, c2900InfoBoardIdentifier]

class c2900SysConfigGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 2])
	group = [c2900ConfigAddressViolationAction, c2900ConfigBroadcastStormAlarm]

class c2900ModuleGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 3])
	group = [c2900ModuleStatus, c2900ModuleType, c2900ModuleHwVersion, c2900ModuleSwVersion]

class c2900PortGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 4])
	group = [c2900PortUsageApplication, c2900PortGroupIndex, c2900PortMayLearnAddress, c2900PortMayForwardFrames, c2900PortBufferCongestionControl, c2900PortBufferCongestionThreshholdPercent, c2900PortFrameAge, c2900PortAddrSecureMaxAddresses, c2900PortAddrSecureCurrentAddresses, c2900PortAddrSecureAddrViolations, c2900PortNumberOfLearnedAddresses, c2900PortNumberOfDroppedAddresses, c2900PortClearAddresses, c2900PortFloodUnknownMulticasts, c2900PortFloodUnknownUnicasts, c2900PortLinkbeatStatus, c2900PortBroadcastStormAction, c2900PortBroadcastRisingThreshold, c2900PortBroadcastFallingThreshold, c2900PortStatus, c2900PortTestResult, c2900PortVisualIndicator, c2900PortIfIndex, c2900PortAddressViolationAction, c2900PortBroadcastStormAlarm, c2900PortMonitorDestinationPort, c2900PortSwitchPortIndex, c2900PortMonitoredPortMap, c2900PortDuplexState, c2900PortDuplexStatus, c2900PortAdminSpeed, c2900PortNoMonitorDestinationPort]

class c2900PortStatsGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 5])
	group = [c2900PortRxNoBwFrames, c2900PortRxNoBufferFrames, c2900PortRxNoDestUniFrames, c2900PortRxNoDestMultiFrames, c2900PortRxSuppressBcastFrames, c2900PortRxFcsErrFrames, c2900PortCollFragFrames, c2900PortTxMulticastFrames, c2900PortTxBroadcastFrames]

class c2900BandwidthUsageGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 6])
	group = [c2900BandwidthUsageCurrent, c2900BandwidthUsageMaxPeakEntries, c2900BandwidthUsagePeakInterval, c2900BandwidthUsagePeakRestart, c2900BandwidthUsagePeakIndex, c2900BandwidthUsageStartTime, c2900BandwidthUsagePeak, c2900BandwidthUsagePeakTime, c2900BandwidthUsageCurrentPeakEntry]

class c2900PortGroupSA3(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 7])
	group = [c2900PortUsageApplication, c2900PortGroupIndex, c2900PortMayLearnAddress, c2900PortMayForwardFrames, c2900PortBufferCongestionThreshholdPercent, c2900PortFrameAge, c2900PortAddrSecureMaxAddresses, c2900PortAddrSecureCurrentAddresses, c2900PortAddrSecureAddrViolations, c2900PortNumberOfLearnedAddresses, c2900PortNumberOfDroppedAddresses, c2900PortClearAddresses, c2900PortFloodUnknownMulticasts, c2900PortFloodUnknownUnicasts, c2900PortLinkbeatStatus, c2900PortBroadcastStormAction, c2900PortBroadcastRisingThreshold, c2900PortBroadcastFallingThreshold, c2900PortStatus, c2900PortTestResult, c2900PortVisualIndicator, c2900PortIfIndex, c2900PortAddressViolationAction, c2900PortBroadcastStormAlarm, c2900PortMonitorDestinationPort, c2900PortSwitchPortIndex, c2900PortMonitoredPortMap, c2900PortDuplexState, c2900PortDuplexStatus, c2900PortAdminSpeed, c2900PortNoMonitorDestinationPort]

class c2900PortStatsGroupSA3(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 87, 3, 2, 8])
	group = [c2900PortRxNoBwFrames, c2900PortRxNoBufferFrames, c2900PortRxNoDestUniFrames, c2900PortRxNoDestMultiFrames, c2900PortRxFcsErrFrames, c2900PortCollFragFrames, c2900PortTxMulticastFrames, c2900PortTxBroadcastFrames]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
