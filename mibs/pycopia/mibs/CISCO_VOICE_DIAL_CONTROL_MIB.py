# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex, InterfaceIndexOrZero
from CISCO_DIAL_CONTROL_MIB import cCallHistoryIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, IpAddress, Gauge32, Integer32
from INTEGRATED_SERVICES_MIB import QosService
from CISCO_SMI import ciscoMgmt
from DIAL_CONTROL_MIB import callActiveSetupTime, callActiveIndex, AbsoluteCounter32
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, RowStatus, TruthValue

class CISCO_VOICE_DIAL_CONTROL_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-VOICE-DIAL-CONTROL-MIB'
	conformance = 3
	name = 'CISCO-VOICE-DIAL-CONTROL-MIB'
	language = 2
	description = 'This MIB module enhances the IETF Dial Control MIB (RFC2128)\nby providing management of voice telephony peers on both a \ncircuit-switched telephony network, and an IP data network.'

# nodes
class ciscoVoiceDialControlMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63])
	name = 'ciscoVoiceDialControlMIB'

class cvdcMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1])
	name = 'cvdcMIBObjects'

class cvGeneralConfiguration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 1])
	name = 'cvGeneralConfiguration'

class cvPeer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2])
	name = 'cvPeer'

class cvGatewayCallActive(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3])
	name = 'cvGatewayCallActive'

class cvGatewayCallHistory(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4])
	name = 'cvGatewayCallHistory'

class cvdcMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 2])
	name = 'cvdcMIBNotificationPrefix'

class cvdcMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 2, 0])
	name = 'cvdcMIBNotifications'

class cvdcMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3])
	name = 'cvdcMIBConformance'

class cvdcMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 1])
	name = 'cvdcMIBCompliances'

class cvdcMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 2])
	name = 'cvdcMIBGroups'


# macros
# types 

class CvcCoderTypeRate(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'fax2400'), Enum(3, 'fax4800'), Enum(4, 'fax7200'), Enum(5, 'fax9600'), Enum(6, 'fax14400'), Enum(10, 'g729r8000'), Enum(11, 'g729Ar8000'), Enum(12, 'g726r16000'), Enum(13, 'g726r24000'), Enum(14, 'g726r32000'), Enum(15, 'g711ulawr64000'), Enum(16, 'g711Alawr64000')]


class CvcGUid(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 16))


class CvSessionProtocol(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'cisco'), Enum(3, 'sdp')]

# scalars 
class cvGeneralPoorQoVNotificationEnable(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class cvPeerCfgIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvPeerCfgIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 1, 1, 2])
	syntaxobject = InterfaceIndexOrZero


class cvPeerCfgType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'voice'), Enum(2, 'voip')]


class cvPeerCfgRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class cvVoicePeerCfgSessionTarget(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoicePeerCfgDialDigitsPrefix(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoIPPeerCfgSessionProtocol(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 1])
	syntaxobject = CvSessionProtocol


class cvVoIPPeerCfgDesiredQoS(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 2])
	syntaxobject = QosService


class cvVoIPPeerCfgMinAcceptableQoS(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 3])
	syntaxobject = QosService


class cvVoIPPeerCfgSessionTarget(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoIPPeerCfgCoderRate(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'g729r8000'), Enum(2, 'g729Ar8000'), Enum(3, 'g726r16000'), Enum(4, 'g726r24000'), Enum(5, 'g726r32000'), Enum(6, 'g711ulawr64000'), Enum(7, 'g711Alawr64000')]


class cvVoIPPeerCfgFaxRate(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'voiceRate'), Enum(3, 'fax2400'), Enum(4, 'fax4800'), Enum(5, 'fax7200'), Enum(6, 'fax9600'), Enum(7, 'fax14400')]


class cvVoIPPeerCfgVADEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvVoIPPeerCfgExpectFactor(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'equipment impairment factor (eif)'


class cvVoIPPeerCfgIcpif(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'equipment impairment factor (eif)'


class cvVoIPPeerCfgPoorQoVNotificationEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvVoIPPeerCfgUDPChecksumEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvVoIPPeerCfgIPPrecedence(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvCallActiveConnectionId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 1])
	syntaxobject = CvcGUid


class cvCallActiveTxDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 2])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvCallActiveVoiceTxDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 3])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvCallActiveFaxTxDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 4])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvCallActiveCoderTypeRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 5])
	syntaxobject = CvcCoderTypeRate


class cvCallActiveNoiseLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dBm'


class cvCallActiveACOMLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class cvCallActiveOutSignalLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dBm'


class cvCallActiveInSignalLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dBm'


class cvCallActiveERLLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class cvCallActiveSessionTarget(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoIPCallActiveConnectionId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 1])
	syntaxobject = CvcGUid


class cvVoIPCallActiveRemoteIPAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cvVoIPCallActiveRemoteUDPPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvVoIPCallActiveRoundTripDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveSelectedQoS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 5])
	syntaxobject = QosService


class cvVoIPCallActiveSessionProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 6])
	syntaxobject = CvSessionProtocol


class cvVoIPCallActiveSessionTarget(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoIPCallActiveOnTimeRvPlayout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 8])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveGapFillWithSilence(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 9])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveGapFillWithPrediction(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 10])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveGapFillWithInterpolation(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 11])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveGapFillWithRedundancy(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 12])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveHiWaterPlayoutDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 13])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveLoWaterPlayoutDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class cvVoIPCallActiveReceiveDelay(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class cvVoIPCallActiveVADEnable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvVoIPCallActiveCoderTypeRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1, 17])
	syntaxobject = CvcCoderTypeRate


class cvCallHistoryConnectionId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 1])
	syntaxobject = CvcGUid


class cvCallHistoryTxDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 2])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvCallHistoryVoiceTxDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 3])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvCallHistoryFaxTxDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 4])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvCallHistoryCoderTypeRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 5])
	syntaxobject = CvcCoderTypeRate


class cvCallHistoryNoiseLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dBm'


class cvCallHistoryACOMLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class cvCallHistorySessionTarget(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoIPCallHistoryConnectionId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 1])
	syntaxobject = CvcGUid


class cvVoIPCallHistoryRemoteIPAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cvVoIPCallHistoryRemoteUDPPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvVoIPCallHistoryRoundTripDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistorySelectedQoS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 5])
	syntaxobject = QosService


class cvVoIPCallHistorySessionProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 6])
	syntaxobject = CvSessionProtocol


class cvVoIPCallHistorySessionTarget(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cvVoIPCallHistoryOnTimeRvPlayout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 8])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryGapFillWithSilence(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 9])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryGapFillWithPrediction(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 10])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryGapFillWithInterpolation(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 11])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryGapFillWithRedundancy(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 12])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryHiWaterPlayoutDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 13])
	syntaxobject = AbsoluteCounter32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryLoWaterPlayoutDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'milliseconds'


class cvVoIPCallHistoryReceiveDelay(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class cvVoIPCallHistoryVADEnable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvVoIPCallHistoryCoderTypeRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 17])
	syntaxobject = CvcCoderTypeRate


class cvVoIPCallHistoryIcpif(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'equipment impairment factor (eif)'


# rows 
class cvPeerCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cvPeerCfgIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 1, 1])
	access = 2
	rowstatus = cvPeerCfgRowStatus
	columns = {'cvPeerCfgIndex': cvPeerCfgIndex, 'cvPeerCfgIfIndex': cvPeerCfgIfIndex, 'cvPeerCfgType': cvPeerCfgType, 'cvPeerCfgRowStatus': cvPeerCfgRowStatus}


class cvVoicePeerCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 2, 1])
	access = 2
	columns = {'cvVoicePeerCfgSessionTarget': cvVoicePeerCfgSessionTarget, 'cvVoicePeerCfgDialDigitsPrefix': cvVoicePeerCfgDialDigitsPrefix}


class cvVoIPPeerCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 2, 3, 1])
	access = 2
	columns = {'cvVoIPPeerCfgSessionProtocol': cvVoIPPeerCfgSessionProtocol, 'cvVoIPPeerCfgDesiredQoS': cvVoIPPeerCfgDesiredQoS, 'cvVoIPPeerCfgMinAcceptableQoS': cvVoIPPeerCfgMinAcceptableQoS, 'cvVoIPPeerCfgSessionTarget': cvVoIPPeerCfgSessionTarget, 'cvVoIPPeerCfgCoderRate': cvVoIPPeerCfgCoderRate, 'cvVoIPPeerCfgFaxRate': cvVoIPPeerCfgFaxRate, 'cvVoIPPeerCfgVADEnable': cvVoIPPeerCfgVADEnable, 'cvVoIPPeerCfgExpectFactor': cvVoIPPeerCfgExpectFactor, 'cvVoIPPeerCfgIcpif': cvVoIPPeerCfgIcpif, 'cvVoIPPeerCfgPoorQoVNotificationEnable': cvVoIPPeerCfgPoorQoVNotificationEnable, 'cvVoIPPeerCfgUDPChecksumEnable': cvVoIPPeerCfgUDPChecksumEnable, 'cvVoIPPeerCfgIPPrecedence': cvVoIPPeerCfgIPPrecedence}


class cvCallActiveEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([callActiveSetupTime, callActiveIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 1, 1])
	access = 2
	columns = {'cvCallActiveConnectionId': cvCallActiveConnectionId, 'cvCallActiveTxDuration': cvCallActiveTxDuration, 'cvCallActiveVoiceTxDuration': cvCallActiveVoiceTxDuration, 'cvCallActiveFaxTxDuration': cvCallActiveFaxTxDuration, 'cvCallActiveCoderTypeRate': cvCallActiveCoderTypeRate, 'cvCallActiveNoiseLevel': cvCallActiveNoiseLevel, 'cvCallActiveACOMLevel': cvCallActiveACOMLevel, 'cvCallActiveOutSignalLevel': cvCallActiveOutSignalLevel, 'cvCallActiveInSignalLevel': cvCallActiveInSignalLevel, 'cvCallActiveERLLevel': cvCallActiveERLLevel, 'cvCallActiveSessionTarget': cvCallActiveSessionTarget}


class cvVoIPCallActiveEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([callActiveSetupTime, callActiveIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 3, 2, 1])
	access = 2
	columns = {'cvVoIPCallActiveConnectionId': cvVoIPCallActiveConnectionId, 'cvVoIPCallActiveRemoteIPAddress': cvVoIPCallActiveRemoteIPAddress, 'cvVoIPCallActiveRemoteUDPPort': cvVoIPCallActiveRemoteUDPPort, 'cvVoIPCallActiveRoundTripDelay': cvVoIPCallActiveRoundTripDelay, 'cvVoIPCallActiveSelectedQoS': cvVoIPCallActiveSelectedQoS, 'cvVoIPCallActiveSessionProtocol': cvVoIPCallActiveSessionProtocol, 'cvVoIPCallActiveSessionTarget': cvVoIPCallActiveSessionTarget, 'cvVoIPCallActiveOnTimeRvPlayout': cvVoIPCallActiveOnTimeRvPlayout, 'cvVoIPCallActiveGapFillWithSilence': cvVoIPCallActiveGapFillWithSilence, 'cvVoIPCallActiveGapFillWithPrediction': cvVoIPCallActiveGapFillWithPrediction, 'cvVoIPCallActiveGapFillWithInterpolation': cvVoIPCallActiveGapFillWithInterpolation, 'cvVoIPCallActiveGapFillWithRedundancy': cvVoIPCallActiveGapFillWithRedundancy, 'cvVoIPCallActiveHiWaterPlayoutDelay': cvVoIPCallActiveHiWaterPlayoutDelay, 'cvVoIPCallActiveLoWaterPlayoutDelay': cvVoIPCallActiveLoWaterPlayoutDelay, 'cvVoIPCallActiveReceiveDelay': cvVoIPCallActiveReceiveDelay, 'cvVoIPCallActiveVADEnable': cvVoIPCallActiveVADEnable, 'cvVoIPCallActiveCoderTypeRate': cvVoIPCallActiveCoderTypeRate}


class cvCallHistoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cCallHistoryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 1, 1])
	access = 2
	columns = {'cvCallHistoryConnectionId': cvCallHistoryConnectionId, 'cvCallHistoryTxDuration': cvCallHistoryTxDuration, 'cvCallHistoryVoiceTxDuration': cvCallHistoryVoiceTxDuration, 'cvCallHistoryFaxTxDuration': cvCallHistoryFaxTxDuration, 'cvCallHistoryCoderTypeRate': cvCallHistoryCoderTypeRate, 'cvCallHistoryNoiseLevel': cvCallHistoryNoiseLevel, 'cvCallHistoryACOMLevel': cvCallHistoryACOMLevel, 'cvCallHistorySessionTarget': cvCallHistorySessionTarget}


class cvVoIPCallHistoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cCallHistoryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 1, 4, 2, 1])
	access = 2
	columns = {'cvVoIPCallHistoryConnectionId': cvVoIPCallHistoryConnectionId, 'cvVoIPCallHistoryRemoteIPAddress': cvVoIPCallHistoryRemoteIPAddress, 'cvVoIPCallHistoryRemoteUDPPort': cvVoIPCallHistoryRemoteUDPPort, 'cvVoIPCallHistoryRoundTripDelay': cvVoIPCallHistoryRoundTripDelay, 'cvVoIPCallHistorySelectedQoS': cvVoIPCallHistorySelectedQoS, 'cvVoIPCallHistorySessionProtocol': cvVoIPCallHistorySessionProtocol, 'cvVoIPCallHistorySessionTarget': cvVoIPCallHistorySessionTarget, 'cvVoIPCallHistoryOnTimeRvPlayout': cvVoIPCallHistoryOnTimeRvPlayout, 'cvVoIPCallHistoryGapFillWithSilence': cvVoIPCallHistoryGapFillWithSilence, 'cvVoIPCallHistoryGapFillWithPrediction': cvVoIPCallHistoryGapFillWithPrediction, 'cvVoIPCallHistoryGapFillWithInterpolation': cvVoIPCallHistoryGapFillWithInterpolation, 'cvVoIPCallHistoryGapFillWithRedundancy': cvVoIPCallHistoryGapFillWithRedundancy, 'cvVoIPCallHistoryHiWaterPlayoutDelay': cvVoIPCallHistoryHiWaterPlayoutDelay, 'cvVoIPCallHistoryLoWaterPlayoutDelay': cvVoIPCallHistoryLoWaterPlayoutDelay, 'cvVoIPCallHistoryReceiveDelay': cvVoIPCallHistoryReceiveDelay, 'cvVoIPCallHistoryVADEnable': cvVoIPCallHistoryVADEnable, 'cvVoIPCallHistoryCoderTypeRate': cvVoIPCallHistoryCoderTypeRate, 'cvVoIPCallHistoryIcpif': cvVoIPCallHistoryIcpif}


# notifications (traps) 
class cvdcPoorQoVNotification(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 2, 0, 1])

# groups 
class cvdcGeneralCfgGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 2, 1])
	group = [cvGeneralPoorQoVNotificationEnable, cvPeerCfgIfIndex, cvPeerCfgType, cvPeerCfgRowStatus]

class cvdcVoiceCfgGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 2, 2])
	group = [cvVoicePeerCfgSessionTarget, cvVoicePeerCfgDialDigitsPrefix]

class cvdcVoIPCfgGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 2, 3])
	group = [cvVoIPPeerCfgSessionProtocol, cvVoIPPeerCfgSessionTarget, cvVoIPPeerCfgCoderRate, cvVoIPPeerCfgFaxRate, cvVoIPPeerCfgDesiredQoS, cvVoIPPeerCfgMinAcceptableQoS, cvVoIPPeerCfgVADEnable, cvVoIPPeerCfgExpectFactor, cvVoIPPeerCfgIcpif, cvVoIPPeerCfgPoorQoVNotificationEnable, cvVoIPPeerCfgUDPChecksumEnable, cvVoIPPeerCfgIPPrecedence]

class cvCallGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 2, 4])
	group = [cvCallActiveConnectionId, cvCallActiveTxDuration, cvCallActiveVoiceTxDuration, cvCallActiveFaxTxDuration, cvCallActiveCoderTypeRate, cvCallActiveNoiseLevel, cvCallActiveACOMLevel, cvCallActiveOutSignalLevel, cvCallActiveInSignalLevel, cvCallActiveERLLevel, cvCallActiveSessionTarget, cvCallHistoryConnectionId, cvCallHistoryTxDuration, cvCallHistoryVoiceTxDuration, cvCallHistoryFaxTxDuration, cvCallHistoryCoderTypeRate, cvCallHistoryNoiseLevel, cvCallHistoryACOMLevel, cvCallHistorySessionTarget]

class cvVoIPCallGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 63, 3, 2, 5])
	group = [cvVoIPCallActiveConnectionId, cvVoIPCallActiveRemoteIPAddress, cvVoIPCallActiveRemoteUDPPort, cvVoIPCallActiveRoundTripDelay, cvVoIPCallActiveSelectedQoS, cvVoIPCallActiveSessionProtocol, cvVoIPCallActiveSessionTarget, cvVoIPCallActiveOnTimeRvPlayout, cvVoIPCallActiveGapFillWithSilence, cvVoIPCallActiveGapFillWithPrediction, cvVoIPCallActiveGapFillWithInterpolation, cvVoIPCallActiveGapFillWithRedundancy, cvVoIPCallActiveHiWaterPlayoutDelay, cvVoIPCallActiveLoWaterPlayoutDelay, cvVoIPCallActiveReceiveDelay, cvVoIPCallActiveVADEnable, cvVoIPCallActiveCoderTypeRate, cvVoIPCallHistoryConnectionId, cvVoIPCallHistoryRemoteIPAddress, cvVoIPCallHistoryRemoteUDPPort, cvVoIPCallHistoryRoundTripDelay, cvVoIPCallHistorySelectedQoS, cvVoIPCallHistorySessionProtocol, cvVoIPCallHistorySessionTarget, cvVoIPCallHistoryOnTimeRvPlayout, cvVoIPCallHistoryGapFillWithSilence, cvVoIPCallHistoryGapFillWithPrediction, cvVoIPCallHistoryGapFillWithInterpolation, cvVoIPCallHistoryGapFillWithRedundancy, cvVoIPCallHistoryHiWaterPlayoutDelay, cvVoIPCallHistoryLoWaterPlayoutDelay, cvVoIPCallHistoryReceiveDelay, cvVoIPCallHistoryVADEnable, cvVoIPCallHistoryCoderTypeRate, cvVoIPCallHistoryIcpif]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
