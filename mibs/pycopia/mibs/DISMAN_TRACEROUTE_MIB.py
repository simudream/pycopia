# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from DISMAN_PING_MIB import OperationResponseStatus
from IF_MIB import InterfaceIndexOrZero
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Gauge32, Unsigned32, mib_2, NOTIFICATION_TYPE, OBJECT_IDENTITY
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from SNMPv2_TC import RowStatus, StorageType, TruthValue, DateAndTime

class DISMAN_TRACEROUTE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DISMAN-TRACEROUTE-MIB'
	conformance = 132
	name = 'DISMAN-TRACEROUTE-MIB'
	language = 2
	description = 'The Traceroute MIB (DISMAN-TRACEROUTE-MIB) provides\naccess to the traceroute capability at a remote host.\n\nCopyright (C) The Internet Society (2006). This version of\nthis MIB module is part of RFC 4560; see the RFC itself for\nfull legal notices.'

# nodes
class traceRouteMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81])
	name = 'traceRouteMIB'

class traceRouteNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 0])
	name = 'traceRouteNotifications'

class traceRouteObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1])
	name = 'traceRouteObjects'

class traceRouteConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2])
	name = 'traceRouteConformance'

class traceRouteCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 1])
	name = 'traceRouteCompliances'

class traceRouteGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2])
	name = 'traceRouteGroups'

class traceRouteImplementationTypeDomains(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 3])
	name = 'traceRouteImplementationTypeDomains'

class traceRouteUsingUdpProbes(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 3, 1])
	name = 'traceRouteUsingUdpProbes'


# macros
# types 
# scalars 
class traceRouteMaxConcurrentRequests(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'requests'


# columns
class traceRouteCtlOwnerIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class traceRouteCtlTestName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 2])
	syntaxobject = SnmpAdminString


class traceRouteCtlTargetAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 3])
	syntaxobject = InetAddressType


class traceRouteCtlTargetAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 4])
	syntaxobject = InetAddress


class traceRouteCtlByPassRouteTable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class traceRouteCtlDataSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'octets'


class traceRouteCtlTimeOut(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class traceRouteCtlProbesPerHop(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'probes'


class traceRouteCtlPort(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'UDP Port'


class traceRouteCtlMaxTtl(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'time-to-live value'


class traceRouteCtlDSField(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteCtlSourceAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 12])
	syntaxobject = InetAddressType


class traceRouteCtlSourceAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 13])
	syntaxobject = InetAddress


class traceRouteCtlIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 14])
	syntaxobject = InterfaceIndexOrZero


class traceRouteCtlMiscOptions(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 15])
	syntaxobject = SnmpAdminString


class traceRouteCtlMaxFailures(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'timeouts'


class traceRouteCtlDontFragment(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class traceRouteCtlInitialTtl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteCtlFrequency(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class traceRouteCtlStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class traceRouteCtlAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class traceRouteCtlDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 22])
	syntaxobject = SnmpAdminString


class traceRouteCtlMaxRows(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'rows'


class traceRouteCtlTrapGeneration(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class traceRouteCtlCreateHopsEntries(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class traceRouteCtlType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class traceRouteCtlRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class traceRouteResultsOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled'), Enum(3, 'completed')]


class traceRouteResultsCurHopCount(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'hops'


class traceRouteResultsCurProbeCount(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'probes'


class traceRouteResultsIpTgtAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 4])
	syntaxobject = InetAddressType


class traceRouteResultsIpTgtAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 5])
	syntaxobject = InetAddress


class traceRouteResultsTestAttempts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'tests'


class traceRouteResultsTestSuccesses(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'tests'


class traceRouteResultsLastGoodPath(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class traceRouteProbeHistoryIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteProbeHistoryHopIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteProbeHistoryProbeIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteProbeHistoryHAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 4])
	syntaxobject = InetAddressType


class traceRouteProbeHistoryHAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 5])
	syntaxobject = InetAddress


class traceRouteProbeHistoryResponse(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class traceRouteProbeHistoryStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 7])
	syntaxobject = OperationResponseStatus


class traceRouteProbeHistoryLastRC(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class traceRouteProbeHistoryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class traceRouteHopsHopIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsIpTgtAddressType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 2])
	syntaxobject = InetAddressType


class traceRouteHopsIpTgtAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 3])
	syntaxobject = InetAddress


class traceRouteHopsMinRtt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsMaxRtt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsAverageRtt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsRttSumOfSquares(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsSentProbes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsProbeResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class traceRouteHopsLastGoodProbe(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# rows 
class traceRouteCtlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([traceRouteCtlOwnerIndex, traceRouteCtlTestName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 2, 1])
	access = 2
	rowstatus = traceRouteCtlRowStatus
	columns = {'traceRouteCtlOwnerIndex': traceRouteCtlOwnerIndex, 'traceRouteCtlTestName': traceRouteCtlTestName, 'traceRouteCtlTargetAddressType': traceRouteCtlTargetAddressType, 'traceRouteCtlTargetAddress': traceRouteCtlTargetAddress, 'traceRouteCtlByPassRouteTable': traceRouteCtlByPassRouteTable, 'traceRouteCtlDataSize': traceRouteCtlDataSize, 'traceRouteCtlTimeOut': traceRouteCtlTimeOut, 'traceRouteCtlProbesPerHop': traceRouteCtlProbesPerHop, 'traceRouteCtlPort': traceRouteCtlPort, 'traceRouteCtlMaxTtl': traceRouteCtlMaxTtl, 'traceRouteCtlDSField': traceRouteCtlDSField, 'traceRouteCtlSourceAddressType': traceRouteCtlSourceAddressType, 'traceRouteCtlSourceAddress': traceRouteCtlSourceAddress, 'traceRouteCtlIfIndex': traceRouteCtlIfIndex, 'traceRouteCtlMiscOptions': traceRouteCtlMiscOptions, 'traceRouteCtlMaxFailures': traceRouteCtlMaxFailures, 'traceRouteCtlDontFragment': traceRouteCtlDontFragment, 'traceRouteCtlInitialTtl': traceRouteCtlInitialTtl, 'traceRouteCtlFrequency': traceRouteCtlFrequency, 'traceRouteCtlStorageType': traceRouteCtlStorageType, 'traceRouteCtlAdminStatus': traceRouteCtlAdminStatus, 'traceRouteCtlDescr': traceRouteCtlDescr, 'traceRouteCtlMaxRows': traceRouteCtlMaxRows, 'traceRouteCtlTrapGeneration': traceRouteCtlTrapGeneration, 'traceRouteCtlCreateHopsEntries': traceRouteCtlCreateHopsEntries, 'traceRouteCtlType': traceRouteCtlType, 'traceRouteCtlRowStatus': traceRouteCtlRowStatus}


class traceRouteResultsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([traceRouteCtlOwnerIndex, traceRouteCtlTestName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 3, 1])
	access = 2
	columns = {'traceRouteResultsOperStatus': traceRouteResultsOperStatus, 'traceRouteResultsCurHopCount': traceRouteResultsCurHopCount, 'traceRouteResultsCurProbeCount': traceRouteResultsCurProbeCount, 'traceRouteResultsIpTgtAddrType': traceRouteResultsIpTgtAddrType, 'traceRouteResultsIpTgtAddr': traceRouteResultsIpTgtAddr, 'traceRouteResultsTestAttempts': traceRouteResultsTestAttempts, 'traceRouteResultsTestSuccesses': traceRouteResultsTestSuccesses, 'traceRouteResultsLastGoodPath': traceRouteResultsLastGoodPath}


class traceRouteProbeHistoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([traceRouteCtlOwnerIndex, traceRouteCtlTestName, traceRouteProbeHistoryIndex, traceRouteProbeHistoryHopIndex, traceRouteProbeHistoryProbeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 4, 1])
	access = 2
	columns = {'traceRouteProbeHistoryIndex': traceRouteProbeHistoryIndex, 'traceRouteProbeHistoryHopIndex': traceRouteProbeHistoryHopIndex, 'traceRouteProbeHistoryProbeIndex': traceRouteProbeHistoryProbeIndex, 'traceRouteProbeHistoryHAddrType': traceRouteProbeHistoryHAddrType, 'traceRouteProbeHistoryHAddr': traceRouteProbeHistoryHAddr, 'traceRouteProbeHistoryResponse': traceRouteProbeHistoryResponse, 'traceRouteProbeHistoryStatus': traceRouteProbeHistoryStatus, 'traceRouteProbeHistoryLastRC': traceRouteProbeHistoryLastRC, 'traceRouteProbeHistoryTime': traceRouteProbeHistoryTime}


class traceRouteHopsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([traceRouteCtlOwnerIndex, traceRouteCtlTestName, traceRouteHopsHopIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 1, 5, 1])
	access = 2
	columns = {'traceRouteHopsHopIndex': traceRouteHopsHopIndex, 'traceRouteHopsIpTgtAddressType': traceRouteHopsIpTgtAddressType, 'traceRouteHopsIpTgtAddress': traceRouteHopsIpTgtAddress, 'traceRouteHopsMinRtt': traceRouteHopsMinRtt, 'traceRouteHopsMaxRtt': traceRouteHopsMaxRtt, 'traceRouteHopsAverageRtt': traceRouteHopsAverageRtt, 'traceRouteHopsRttSumOfSquares': traceRouteHopsRttSumOfSquares, 'traceRouteHopsSentProbes': traceRouteHopsSentProbes, 'traceRouteHopsProbeResponses': traceRouteHopsProbeResponses, 'traceRouteHopsLastGoodProbe': traceRouteHopsLastGoodProbe}


# notifications (traps) 
class traceRoutePathChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 0, 1])

class traceRouteTestFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 0, 2])

class traceRouteTestCompleted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 0, 3])

# groups 
class traceRouteGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 1])
	group = [traceRouteMaxConcurrentRequests, traceRouteCtlTargetAddressType, traceRouteCtlTargetAddress, traceRouteCtlByPassRouteTable, traceRouteCtlDataSize, traceRouteCtlTimeOut, traceRouteCtlProbesPerHop, traceRouteCtlPort, traceRouteCtlMaxTtl, traceRouteCtlDSField, traceRouteCtlSourceAddressType, traceRouteCtlSourceAddress, traceRouteCtlIfIndex, traceRouteCtlMiscOptions, traceRouteCtlMaxFailures, traceRouteCtlDontFragment, traceRouteCtlInitialTtl, traceRouteCtlFrequency, traceRouteCtlStorageType, traceRouteCtlAdminStatus, traceRouteCtlMaxRows, traceRouteCtlTrapGeneration, traceRouteCtlDescr, traceRouteCtlCreateHopsEntries, traceRouteCtlType, traceRouteCtlRowStatus, traceRouteResultsOperStatus, traceRouteResultsCurHopCount, traceRouteResultsCurProbeCount, traceRouteResultsIpTgtAddrType, traceRouteResultsIpTgtAddr, traceRouteResultsTestAttempts, traceRouteResultsTestSuccesses, traceRouteProbeHistoryHAddrType, traceRouteProbeHistoryHAddr, traceRouteProbeHistoryResponse, traceRouteProbeHistoryStatus, traceRouteProbeHistoryLastRC]

class traceRouteTimeStampGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 2])
	group = [traceRouteResultsLastGoodPath, traceRouteProbeHistoryTime]

class traceRouteNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 3])
	group = [traceRoutePathChange, traceRouteTestFailed, traceRouteTestCompleted]

class traceRouteHopsTableGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 4])
	group = [traceRouteHopsIpTgtAddressType, traceRouteHopsIpTgtAddress, traceRouteHopsMinRtt, traceRouteHopsMaxRtt, traceRouteHopsAverageRtt, traceRouteHopsRttSumOfSquares, traceRouteHopsSentProbes, traceRouteHopsProbeResponses, traceRouteHopsLastGoodProbe]

class traceRouteMinimumGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 5])
	group = [traceRouteMaxConcurrentRequests, traceRouteCtlTargetAddressType, traceRouteCtlTargetAddress, traceRouteCtlByPassRouteTable, traceRouteCtlDataSize, traceRouteCtlTimeOut, traceRouteCtlProbesPerHop, traceRouteCtlPort, traceRouteCtlMaxTtl, traceRouteCtlDSField, traceRouteCtlSourceAddressType, traceRouteCtlSourceAddress, traceRouteCtlIfIndex, traceRouteCtlMiscOptions, traceRouteCtlMaxFailures, traceRouteCtlDontFragment, traceRouteCtlInitialTtl, traceRouteCtlFrequency, traceRouteCtlStorageType, traceRouteCtlAdminStatus, traceRouteCtlMaxRows, traceRouteCtlTrapGeneration, traceRouteCtlDescr, traceRouteCtlCreateHopsEntries, traceRouteCtlType, traceRouteResultsOperStatus, traceRouteResultsCurHopCount, traceRouteResultsCurProbeCount, traceRouteResultsIpTgtAddrType, traceRouteResultsIpTgtAddr, traceRouteResultsTestAttempts, traceRouteResultsTestSuccesses, traceRouteResultsLastGoodPath]

class traceRouteCtlRowStatusGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 6])
	group = [traceRouteCtlRowStatus]

class traceRouteHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 81, 2, 2, 7])
	group = [traceRouteProbeHistoryHAddrType, traceRouteProbeHistoryHAddr, traceRouteProbeHistoryResponse, traceRouteProbeHistoryStatus, traceRouteProbeHistoryLastRC, traceRouteProbeHistoryTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
