# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from APPLETALK_MIB import ATName, DdpNodeAddress, ATNetworkNumber
from HP_SN_ROOT_MIB import snAppleTalk
from HP_SN_IP_MIB import RtrStatus, ClearStatus, RowSts, PortIndex, Action
from RFC1155_SMI import Counter

class HP_SN_APPLETALK_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-APPLETALK-MIB'
	conformance = 2
	name = 'HP-SN-APPLETALK-MIB'
	language = 1

# nodes
class snRtATGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1])
	name = 'snRtATGeneral'


# macros
# types 
# scalars 
class snRtATRoutingEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 1])
	syntaxobject = RtrStatus


class snRtATClearArpCache(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 2])
	syntaxobject = ClearStatus


class snRtATClearFwdCache(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 3])
	syntaxobject = ClearStatus


class snRtATClearRoute(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 4])
	syntaxobject = ClearStatus


class snRtATClearTrafficCounters(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 5])
	syntaxobject = ClearStatus


class snRtATArpRetransmitCount(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATArpRetransmitInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATGleanPacketsEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 8])
	syntaxobject = RtrStatus


class snRtATRtmpUpdateInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATZipQueryInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATInRtmpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATOutRtmpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATFilteredRtmpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATInZipPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATOutZipPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATInZipGZLPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATOutZipGZLPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATInZipNetInfoPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATOutZipNetInfoPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATInDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATOutDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATForwardedDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATInDeliveredDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATDroppedNoRouteDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATDroppedBadHopCountsDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATDroppedOtherReasonsDdpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATInAarpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snRtATOutAarpPkts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class snRtATSocketPrioritySocket(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATSocketPriorityPriority(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'level0'), Enum(1, 'level1'), Enum(2, 'level2'), Enum(3, 'level3'), Enum(4, 'level4'), Enum(5, 'level5'), Enum(6, 'level6'), Enum(7, 'level7')]


class snRtATPortZoneFilterPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 3, 1, 1])
	syntaxobject = PortIndex


class snRtATPortZoneFilterZone(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 3, 1, 2])
	syntaxobject = ATName


class snRtATPortZoneFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 3, 1, 3])
	syntaxobject = Action


class snRtATPortZoneFilterRtmpEnable(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 3, 1, 4])
	syntaxobject = RtrStatus


class snRtATPortZoneFilterRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 3, 1, 5])
	syntaxobject = RowSts


class snRtATPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 4, 1, 1])
	syntaxobject = PortIndex


class snRtATPortArpAge(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATPortState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'down'), Enum(3, 'up')]


class snRtATPortSeedRouter(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'seedRouter'), Enum(3, 'nonSeedRouter')]


class snRtATPortOperationMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'seedRouter'), Enum(3, 'nonSeedRouter'), Enum(4, 'notOperational'), Enum(5, 'routingDisabled')]


class snRtATFwdCacheIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATFwdCacheNetAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 2])
	syntaxobject = DdpNodeAddress


class snRtATFwdCacheMacAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtATFwdCacheNextHop(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 4])
	syntaxobject = DdpNodeAddress


class snRtATFwdCacheOutgoingPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATFwdCacheType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dynamic'), Enum(2, 'permanent')]


class snRtATFwdCacheAction(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'forward'), Enum(3, 'forUs'), Enum(4, 'waitForArp'), Enum(5, 'dropPacket')]


class snRtATFwdCacheVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATZoneIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtATZoneNetStart(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 6, 1, 2])
	syntaxobject = ATNetworkNumber


class snRtATZoneNetEnd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 6, 1, 3])
	syntaxobject = ATNetworkNumber


class snRtATZoneName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 6, 1, 4])
	syntaxobject = ATName


class snRtATAddZoneFilterPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 7, 1, 1])
	syntaxobject = PortIndex


class snRtATAddZoneFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 7, 1, 2])
	syntaxobject = Action


class snRtATAddZoneFilterRtmpEnable(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 7, 1, 3])
	syntaxobject = RtrStatus


# rows 
class snRtATSocketPriorityEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtATSocketPrioritySocket], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 2, 1])
	access = 2
	columns = {'snRtATSocketPrioritySocket': snRtATSocketPrioritySocket, 'snRtATSocketPriorityPriority': snRtATSocketPriorityPriority}


class snRtATPortZoneFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtATPortZoneFilterPortIndex, snRtATPortZoneFilterZone], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 3, 1])
	access = 2
	columns = {'snRtATPortZoneFilterPortIndex': snRtATPortZoneFilterPortIndex, 'snRtATPortZoneFilterZone': snRtATPortZoneFilterZone, 'snRtATPortZoneFilterAction': snRtATPortZoneFilterAction, 'snRtATPortZoneFilterRtmpEnable': snRtATPortZoneFilterRtmpEnable, 'snRtATPortZoneFilterRowStatus': snRtATPortZoneFilterRowStatus}


class snRtATPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtATPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 4, 1])
	access = 2
	columns = {'snRtATPortIndex': snRtATPortIndex, 'snRtATPortArpAge': snRtATPortArpAge, 'snRtATPortState': snRtATPortState, 'snRtATPortSeedRouter': snRtATPortSeedRouter, 'snRtATPortOperationMode': snRtATPortOperationMode}


class snRtATFwdCacheEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtATFwdCacheIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 5, 1])
	access = 2
	columns = {'snRtATFwdCacheIndex': snRtATFwdCacheIndex, 'snRtATFwdCacheNetAddr': snRtATFwdCacheNetAddr, 'snRtATFwdCacheMacAddr': snRtATFwdCacheMacAddr, 'snRtATFwdCacheNextHop': snRtATFwdCacheNextHop, 'snRtATFwdCacheOutgoingPort': snRtATFwdCacheOutgoingPort, 'snRtATFwdCacheType': snRtATFwdCacheType, 'snRtATFwdCacheAction': snRtATFwdCacheAction, 'snRtATFwdCacheVLanId': snRtATFwdCacheVLanId}


class snRtATZoneEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtATZoneIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 6, 1])
	access = 2
	columns = {'snRtATZoneIndex': snRtATZoneIndex, 'snRtATZoneNetStart': snRtATZoneNetStart, 'snRtATZoneNetEnd': snRtATZoneNetEnd, 'snRtATZoneName': snRtATZoneName}


class snRtATAddZoneFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtATAddZoneFilterPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 10, 7, 1])
	access = 2
	columns = {'snRtATAddZoneFilterPortIndex': snRtATAddZoneFilterPortIndex, 'snRtATAddZoneFilterAction': snRtATAddZoneFilterAction, 'snRtATAddZoneFilterRtmpEnable': snRtATAddZoneFilterRtmpEnable}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
