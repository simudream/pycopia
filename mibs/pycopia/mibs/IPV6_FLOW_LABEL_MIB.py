# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, mib_2, Integer32
from SNMPv2_TC import TEXTUAL_CONVENTION

class IPV6_FLOW_LABEL_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IPV6-FLOW-LABEL-MIB'
	conformance = 5
	name = 'IPV6-FLOW-LABEL-MIB'
	language = 2
	description = 'This MIB module provides commonly used textual\nconventions for IPv6 Flow Labels.\n\nCopyright (C) The Internet Society (2003).  This\nversion of this MIB module is part of RFC 3595,\nsee the RFC itself for full legal notices.'

# nodes
class ipv6FlowLabelMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 103])
	name = 'ipv6FlowLabelMIB'


# macros
# types 

class IPv6FlowLabel(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 1048575))
	format = 'd'


class IPv6FlowLabelOrAny(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(-1, 1048575))
	format = 'd'

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
