# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INTEGRATED_SERVICES_MIB import intSrv
from SNMPv2_TC import RowStatus
from IF_MIB import ifIndex

class INTEGRATED_SERVICES_GUARANTEED_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/INTEGRATED-SERVICES-GUARANTEED-MIB'
	conformance = 3
	name = 'INTEGRATED-SERVICES-GUARANTEED-MIB'
	language = 2
	description = 'The MIB module to describe the Guaranteed Service of\nthe Integrated Services Protocol'

# nodes
class intSrvGuaranteed(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5])
	name = 'intSrvGuaranteed'

class intSrvGuaranteedObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 1])
	name = 'intSrvGuaranteedObjects'

class intSrvGuaranteedNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 2])
	name = 'intSrvGuaranteedNotifications'

class intSrvGuaranteedConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 3])
	name = 'intSrvGuaranteedConformance'

class intSrvGuaranteedGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 3, 1])
	name = 'intSrvGuaranteedGroups'

class intSrvGuaranteedCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 3, 2])
	name = 'intSrvGuaranteedCompliances'


# macros
# types 
# scalars 
# columns
class intSrvGuaranteedIfBacklog(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bytes'


class intSrvGuaranteedIfDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'microseconds'


class intSrvGuaranteedIfSlack(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class intSrvGuaranteedIfStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class intSrvGuaranteedIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 1, 1, 1])
	access = 2
	rowstatus = intSrvGuaranteedIfStatus
	columns = {'intSrvGuaranteedIfBacklog': intSrvGuaranteedIfBacklog, 'intSrvGuaranteedIfDelay': intSrvGuaranteedIfDelay, 'intSrvGuaranteedIfSlack': intSrvGuaranteedIfSlack, 'intSrvGuaranteedIfStatus': intSrvGuaranteedIfStatus}


# notifications (traps) 
# groups 
class intSrvGuaranteedIfAttribGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 52, 5, 3, 1, 2])
	group = [intSrvGuaranteedIfBacklog, intSrvGuaranteedIfDelay, intSrvGuaranteedIfSlack, intSrvGuaranteedIfStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
