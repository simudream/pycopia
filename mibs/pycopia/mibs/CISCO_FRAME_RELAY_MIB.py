# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import InterfaceIndex
from FRAME_RELAY_DTE_MIB import frDlcmiEntry, frCircuitEntry, frCircuitIfIndex, frCircuitDlci
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, TruthValue

class CISCO_FRAME_RELAY_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-FRAME-RELAY-MIB'
	conformance = 2
	name = 'CISCO-FRAME-RELAY-MIB'
	language = 2
	description = 'Cisco Frame Relay MIB'

# nodes
class ciscoFrameRelayMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49])
	name = 'ciscoFrameRelayMIB'

class ciscoFrMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1])
	name = 'ciscoFrMIBObjects'

class cfrLmiObjs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1])
	name = 'cfrLmiObjs'

class cfrCircuitObjs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2])
	name = 'cfrCircuitObjs'

class cfrMapObjs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3])
	name = 'cfrMapObjs'

class cfrSvcObjs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4])
	name = 'cfrSvcObjs'

class ciscoFrMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 3])
	name = 'ciscoFrMIBConformance'

class ciscoFrMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1])
	name = 'ciscoFrMIBCompliances'

class ciscoFrMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2])
	name = 'ciscoFrMIBGroups'


# macros
# types 

class DlciNumber(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 1023))


class CfrMapProtocols(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'arp'), Enum(6, 'serialArp'), Enum(7, 'ip'), Enum(10, 'xns'), Enum(11, 'novell'), Enum(12, 'apollo'), Enum(13, 'vines'), Enum(16, 'appletalk'), Enum(18, 'ieeeSpanning'), Enum(22, 'decnet'), Enum(25, 'clns'), Enum(37, 'rsrb'), Enum(38, 'bridge'), Enum(39, 'stun'), Enum(40, 'frArp'), Enum(47, 'uncompressedTcp'), Enum(48, 'compressedTcp'), Enum(49, 'llc2'), Enum(53, 'frSwitch'), Enum(63, 'dlsw'), Enum(74, 'nhrp'), Enum(999, 'wildcard')]

# scalars 
# columns
class cfrLmiLinkstatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class cfrLmiLinkType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dte'), Enum(2, 'dce'), Enum(3, 'nni')]


class cfrLmiEnquiryIns(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class cfrLmiEnquiryOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class cfrLmiStatusIns(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class cfrLmiStatusOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class cfrLmiUpdateStatusIns(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class cfrLmiUpdateStatusOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'messages'


class cfrLmiStatusTimeouts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'times'


class cfrLmiStatusEnqTimeouts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'times'


class cfrLmiN392Dce(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cfrLmiN393Dce(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cfrLmiT392Dce(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class cfrCircuitDEins(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class cfrCircuitDEouts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class cfrCircuitDropPktsOuts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class cfrCircuitType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svc')]


class cfrExtCircuitIfName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cfrExtCircuitIfType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'mainInterface'), Enum(2, 'pointToPoint'), Enum(3, 'multipoint')]


class cfrExtCircuitSubifIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 3])
	syntaxobject = InterfaceIndex


class cfrExtCircuitMapStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cfrExtCircuitCreateType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dynamic'), Enum(2, 'static')]


class cfrExtCircuitMulticast(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cfrExtCircuitRoutedDlci(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 7])
	syntaxobject = DlciNumber


class cfrExtCircuitRoutedIf(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 8])
	syntaxobject = InterfaceIndex


class cfrMapIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cfrMapProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 2])
	syntaxobject = CfrMapProtocols


class cfrMapAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class cfrMapType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'dynamic'), Enum(3, 'svc')]


class cfrMapEncaps(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ietf'), Enum(2, 'cisco')]


class cfrMapBroadcast(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cfrMapPayloadCompress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cfrMapTcpHdrCompress(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inapplicable'), Enum(2, 'passive'), Enum(3, 'active')]


class cfrSvcAddrLocal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class cfrSvcAddrRemote(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class cfrSvcThroughputIn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bits/second'


class cfrSvcMinThruputOut(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bits/second'


class cfrSvcMinThruputIn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bits/second'


class cfrSvcCommitBurstIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cfrSvcExcessBurstIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cfrSvcIdleTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


# rows 
from FRAME_RELAY_DTE_MIB import frDlcmiIfIndex
class cfrLmiEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frDlcmiIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1])
	access = 2
	columns = {'cfrLmiLinkstatus': cfrLmiLinkstatus, 'cfrLmiLinkType': cfrLmiLinkType, 'cfrLmiEnquiryIns': cfrLmiEnquiryIns, 'cfrLmiEnquiryOuts': cfrLmiEnquiryOuts, 'cfrLmiStatusIns': cfrLmiStatusIns, 'cfrLmiStatusOuts': cfrLmiStatusOuts, 'cfrLmiUpdateStatusIns': cfrLmiUpdateStatusIns, 'cfrLmiUpdateStatusOuts': cfrLmiUpdateStatusOuts, 'cfrLmiStatusTimeouts': cfrLmiStatusTimeouts, 'cfrLmiStatusEnqTimeouts': cfrLmiStatusEnqTimeouts, 'cfrLmiN392Dce': cfrLmiN392Dce, 'cfrLmiN393Dce': cfrLmiN393Dce, 'cfrLmiT392Dce': cfrLmiT392Dce}


from FRAME_RELAY_DTE_MIB import frCircuitIfIndex
from FRAME_RELAY_DTE_MIB import frCircuitDlci
class cfrCircuitEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frCircuitIfIndex, frCircuitDlci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1])
	access = 2
	columns = {'cfrCircuitDEins': cfrCircuitDEins, 'cfrCircuitDEouts': cfrCircuitDEouts, 'cfrCircuitDropPktsOuts': cfrCircuitDropPktsOuts, 'cfrCircuitType': cfrCircuitType}


from FRAME_RELAY_DTE_MIB import frCircuitIfIndex
from FRAME_RELAY_DTE_MIB import frCircuitDlci
class cfrExtCircuitEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frCircuitIfIndex, frCircuitDlci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1])
	access = 2
	columns = {'cfrExtCircuitIfName': cfrExtCircuitIfName, 'cfrExtCircuitIfType': cfrExtCircuitIfType, 'cfrExtCircuitSubifIndex': cfrExtCircuitSubifIndex, 'cfrExtCircuitMapStatus': cfrExtCircuitMapStatus, 'cfrExtCircuitCreateType': cfrExtCircuitCreateType, 'cfrExtCircuitMulticast': cfrExtCircuitMulticast, 'cfrExtCircuitRoutedDlci': cfrExtCircuitRoutedDlci, 'cfrExtCircuitRoutedIf': cfrExtCircuitRoutedIf}


class cfrMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frCircuitIfIndex, frCircuitDlci, cfrMapIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1])
	access = 2
	columns = {'cfrMapIndex': cfrMapIndex, 'cfrMapProtocol': cfrMapProtocol, 'cfrMapAddress': cfrMapAddress, 'cfrMapType': cfrMapType, 'cfrMapEncaps': cfrMapEncaps, 'cfrMapBroadcast': cfrMapBroadcast, 'cfrMapPayloadCompress': cfrMapPayloadCompress, 'cfrMapTcpHdrCompress': cfrMapTcpHdrCompress}


class cfrSvcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([frCircuitIfIndex, frCircuitDlci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1])
	access = 2
	columns = {'cfrSvcAddrLocal': cfrSvcAddrLocal, 'cfrSvcAddrRemote': cfrSvcAddrRemote, 'cfrSvcThroughputIn': cfrSvcThroughputIn, 'cfrSvcMinThruputOut': cfrSvcMinThruputOut, 'cfrSvcMinThruputIn': cfrSvcMinThruputIn, 'cfrSvcCommitBurstIn': cfrSvcCommitBurstIn, 'cfrSvcExcessBurstIn': cfrSvcExcessBurstIn, 'cfrSvcIdleTime': cfrSvcIdleTime}


# notifications (traps) 
# groups 
class ciscoFrMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 1])
	group = [cfrLmiLinkstatus, cfrLmiLinkType, cfrLmiEnquiryIns, cfrLmiEnquiryOuts, cfrLmiStatusIns, cfrLmiStatusOuts, cfrLmiUpdateStatusIns, cfrLmiUpdateStatusOuts, cfrLmiStatusTimeouts, cfrLmiStatusEnqTimeouts, cfrLmiN392Dce, cfrLmiN393Dce, cfrLmiT392Dce, cfrCircuitDEins, cfrCircuitDEouts, cfrCircuitDropPktsOuts, cfrCircuitType, cfrExtCircuitIfName, cfrExtCircuitIfType, cfrExtCircuitSubifIndex, cfrExtCircuitMapStatus, cfrExtCircuitCreateType, cfrExtCircuitMulticast, cfrExtCircuitRoutedDlci, cfrExtCircuitRoutedIf, cfrMapIndex, cfrMapProtocol, cfrMapAddress, cfrMapType, cfrMapEncaps, cfrMapBroadcast, cfrMapPayloadCompress, cfrMapTcpHdrCompress, cfrSvcAddrLocal, cfrSvcAddrRemote, cfrSvcThroughputIn, cfrSvcMinThruputOut, cfrSvcMinThruputIn, cfrSvcCommitBurstIn, cfrSvcExcessBurstIn, cfrSvcIdleTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
