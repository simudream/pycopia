# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1155_SMI import enterprises, Counter, TimeTicks
from RFC_1215 import TRAP_TYPE

class Cisco90Series_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-90-MIB'
	conformance = 5
	name = 'Cisco90Series-MIB'
	language = 1

# nodes
class ciscoTelesend(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570])
	name = 'ciscoTelesend'

class frMux(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1])
	name = 'frMux'

class frxSys(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1])
	name = 'frxSys'

class frxDefault(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2])
	name = 'frxDefault'

class frxBank(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 3])
	name = 'frxBank'

class frxChUnit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4])
	name = 'frxChUnit'

class frxMgt(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5])
	name = 'frxMgt'

class frxPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6])
	name = 'frxPort'


# macros
# types 
DisplayString = pycopia.SMI.Basetypes.DisplayString
# scalars 
class frxSysDescr(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class frxClockHour(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxClockMin(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxClockSec(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxUpTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class frxAdminContact(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class frxSysName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class frxSysLoc(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class frxSysVersion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxUPerfTrapEnable(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enableUPerfTrap'), Enum(2, 'disableUPerfTrap')]


class frxAgtLinkErrors(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxAgtProtErrors(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxAgtChInactive(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxAgtChStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class frxDefaultEnable(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enableAutoLoad'), Enum(2, 'disableAutoLoad')]


class frxDefaultTrap(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enableConfigureTrap'), Enum(2, 'disableConfigureTrap')]


class frxDConfigSrc(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'annexD'), Enum(2, 'snmp')]


class frxDMgtT391(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDMgtT392(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDMgtN391(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDMgtN392(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDMgtN393(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDPortSpeed(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'use56kbps'), Enum(2, 'use64kbps'), Enum(3, 'use128kbps'), Enum(4, 'use144kbps')]


class frxDPortProtocol(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'frameRelay'), Enum(2, 'ppp')]


class frxDCktCIR(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDCktBc(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDCktBe(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class frxBankIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxBankType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'd4')]


class frxChUIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChUType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(100, 'cisco90i')]


class frxChUVersion(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxSigProtocol(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'annexD')]


class frxConfigSrc(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'annexD'), Enum(2, 'snmp')]


class frxDLCIAdLen(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'twoOctetDlci')]


class frxNetInOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetOutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetBadFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetHDLCEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetCRCEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetLinkEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetFrShEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetFrLgEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetPPPEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetBufEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxPortsInSvc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxMgtT391(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxMgtT392(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxMgtN391(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxMgtN392(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxMgtN393(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxNetLinkErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetProtErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetChInactive(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxNetChStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class frxPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPortLinkErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxPortProtErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxPortChInactive(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxPortSpeed(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'use56kbps'), Enum(2, 'use64kbps'), Enum(3, 'use128kbps'), Enum(4, 'use144kbps')]


class frxPortProtocol(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'frameRelay'), Enum(2, 'ppp')]


class frxDSLStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'loopDown'), Enum(2, 'dslSyncOnly'), Enum(3, 'loopUpInactive'), Enum(4, 'loopUp')]


class frxPVCAssigned(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxLastChange(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class frxBrite(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxDSLInOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLOutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxT1InOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxT1OutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLBadFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLHDLCEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLCRCEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLLinkEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLFrShEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLFrLgEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxDSLDLCIEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxTxBuf(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxRxBuf(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPortNetEs(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxPvcIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCktCIR(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCktBc(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCktBe(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxFarEndOpStat(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class frxCktInOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxCktOutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxCktInFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxCktOutFrames(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxCktDiscards(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxTestPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxTestType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'loopbackAndBert'), Enum(2, 'bertOnly'), Enum(3, 'sendCorruptCRC'), Enum(4, 'loopbackOnly'), Enum(5, 'localLoopAllPorts')]


class frxLoopLoc(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'briteCard1'), Enum(2, 'briteCard2'), Enum(3, 'briteCard3'), Enum(4, 'briteCard4'), Enum(5, 'briteCard5'), Enum(6, 'briteCard6'), Enum(7, 'localFrx'), Enum(8, 'nt1')]


class frxLoopCh(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'b1only'), Enum(2, 'b2only'), Enum(3, 'all')]


class frxStartTest(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stopTest'), Enum(2, 'startTest')]


class frxBertRst(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'resetBert')]


class frxBertBE(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class frxBertTestTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class frxTestInProg(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'testInProgress'), Enum(2, 'normalOperation')]


class frxPAddrIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'briteCard1'), Enum(2, 'briteCard2'), Enum(3, 'briteCard3'), Enum(4, 'briteCard4'), Enum(5, 'briteCard5'), Enum(6, 'briteCard6'), Enum(7, 'localFrx')]


class frxChEsTh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCdEsTh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChSesTh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCdSesTh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxAlertMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxThCond(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxResetPM(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'resetPM')]


class frxPMtype(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'segmentedPM'), Enum(2, 'pathPM')]


class frxChEsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChEsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPhEsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPhEsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH2EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH2EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH3EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH3EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH4EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH4EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH5EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH5EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH6EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH6EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH7EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH7EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH8EsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxH8EsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCdEsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCdEsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPdEsTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPdEsRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChSesTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChSesRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPhSesTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPhSesRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCdSesTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxCdSesRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPdSesTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPdSesRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChBeTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxChBeRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPhBeTx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class frxPhBeRx(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class frxBankEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 3, 1, 1])
	access = 2
	columns = {'frxBankIndex': frxBankIndex, 'frxBankType': frxBankType}


class frxChUEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 4, 1, 1])
	access = 2
	columns = {'frxChUIndex': frxChUIndex, 'frxChUType': frxChUType, 'frxChUVersion': frxChUVersion, 'frxSigProtocol': frxSigProtocol, 'frxConfigSrc': frxConfigSrc, 'frxDLCIAdLen': frxDLCIAdLen, 'frxNetInOctets': frxNetInOctets, 'frxNetOutOctets': frxNetOutOctets, 'frxNetBadFrames': frxNetBadFrames, 'frxNetHDLCEs': frxNetHDLCEs, 'frxNetCRCEs': frxNetCRCEs, 'frxNetLinkEs': frxNetLinkEs, 'frxNetFrShEs': frxNetFrShEs, 'frxNetFrLgEs': frxNetFrLgEs, 'frxNetPPPEs': frxNetPPPEs, 'frxNetBufEs': frxNetBufEs}


class frxMgtEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 1, 1])
	access = 2
	columns = {'frxPortsInSvc': frxPortsInSvc, 'frxMgtT391': frxMgtT391, 'frxMgtT392': frxMgtT392, 'frxMgtN391': frxMgtN391, 'frxMgtN392': frxMgtN392, 'frxMgtN393': frxMgtN393, 'frxNetLinkErrors': frxNetLinkErrors, 'frxNetProtErrors': frxNetProtErrors, 'frxNetChInactive': frxNetChInactive, 'frxNetChStatus': frxNetChStatus}


class frxMgtPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex, frxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 5, 2, 1])
	access = 2
	columns = {'frxPortIndex': frxPortIndex, 'frxPortLinkErrors': frxPortLinkErrors, 'frxPortProtErrors': frxPortProtErrors, 'frxPortChInactive': frxPortChInactive}


class frxPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex, frxPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 1, 1])
	access = 2
	columns = {'frxPortSpeed': frxPortSpeed, 'frxPortProtocol': frxPortProtocol, 'frxDSLStatus': frxDSLStatus, 'frxPVCAssigned': frxPVCAssigned, 'frxLastChange': frxLastChange, 'frxBrite': frxBrite, 'frxDSLInOctets': frxDSLInOctets, 'frxDSLOutOctets': frxDSLOutOctets, 'frxT1InOctets': frxT1InOctets, 'frxT1OutOctets': frxT1OutOctets, 'frxDSLBadFrames': frxDSLBadFrames, 'frxDSLHDLCEs': frxDSLHDLCEs, 'frxDSLCRCEs': frxDSLCRCEs, 'frxDSLLinkEs': frxDSLLinkEs, 'frxDSLFrShEs': frxDSLFrShEs, 'frxDSLFrLgEs': frxDSLFrLgEs, 'frxDSLDLCIEs': frxDSLDLCIEs, 'frxTxBuf': frxTxBuf, 'frxRxBuf': frxRxBuf, 'frxPortNetEs': frxPortNetEs}


class frxCircuitEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex, frxPortIndex, frxPvcIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 2, 1])
	access = 2
	columns = {'frxPvcIndex': frxPvcIndex, 'frxCktCIR': frxCktCIR, 'frxCktBc': frxCktBc, 'frxCktBe': frxCktBe, 'frxFarEndOpStat': frxFarEndOpStat, 'frxCktInOctets': frxCktInOctets, 'frxCktOutOctets': frxCktOutOctets, 'frxCktInFrames': frxCktInFrames, 'frxCktOutFrames': frxCktOutFrames, 'frxCktDiscards': frxCktDiscards}


class frxUEocEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 3, 1])
	access = 2
	columns = {'frxTestPort': frxTestPort, 'frxTestType': frxTestType, 'frxLoopLoc': frxLoopLoc, 'frxLoopCh': frxLoopCh, 'frxStartTest': frxStartTest, 'frxBertRst': frxBertRst, 'frxBertBE': frxBertBE, 'frxBertTestTime': frxBertTestTime, 'frxTestInProg': frxTestInProg}


class frxUThrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex, frxPortIndex, frxPAddrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 4, 1])
	access = 2
	columns = {'frxPAddrIndex': frxPAddrIndex, 'frxChEsTh': frxChEsTh, 'frxCdEsTh': frxCdEsTh, 'frxChSesTh': frxChSesTh, 'frxCdSesTh': frxCdSesTh, 'frxAlertMask': frxAlertMask, 'frxThCond': frxThCond}


class frxUPerfEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([frxBankIndex, frxChUIndex, frxPortIndex, frxPAddrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 6, 5, 1])
	access = 2
	columns = {'frxResetPM': frxResetPM, 'frxPMtype': frxPMtype, 'frxChEsTx': frxChEsTx, 'frxChEsRx': frxChEsRx, 'frxPhEsTx': frxPhEsTx, 'frxPhEsRx': frxPhEsRx, 'frxH2EsTx': frxH2EsTx, 'frxH2EsRx': frxH2EsRx, 'frxH3EsTx': frxH3EsTx, 'frxH3EsRx': frxH3EsRx, 'frxH4EsTx': frxH4EsTx, 'frxH4EsRx': frxH4EsRx, 'frxH5EsTx': frxH5EsTx, 'frxH5EsRx': frxH5EsRx, 'frxH6EsTx': frxH6EsTx, 'frxH6EsRx': frxH6EsRx, 'frxH7EsTx': frxH7EsTx, 'frxH7EsRx': frxH7EsRx, 'frxH8EsTx': frxH8EsTx, 'frxH8EsRx': frxH8EsRx, 'frxCdEsTx': frxCdEsTx, 'frxCdEsRx': frxCdEsRx, 'frxPdEsTx': frxPdEsTx, 'frxPdEsRx': frxPdEsRx, 'frxChSesTx': frxChSesTx, 'frxChSesRx': frxChSesRx, 'frxPhSesTx': frxPhSesTx, 'frxPhSesRx': frxPhSesRx, 'frxCdSesTx': frxCdSesTx, 'frxCdSesRx': frxCdSesRx, 'frxPdSesTx': frxPdSesTx, 'frxPdSesRx': frxPdSesRx, 'frxChBeTx': frxChBeTx, 'frxChBeRx': frxChBeRx, 'frxPhBeTx': frxPhBeTx, 'frxPhBeRx': frxPhBeRx}


# notifications (traps) 
class frxDownloadTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 0, 1])

class frxUPerfTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 0, 2])

class frxInsertChUTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 0, 3])

class frxRemoveChUTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 0, 4])

class frxDConfigFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1570, 1, 0, 5])

# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
