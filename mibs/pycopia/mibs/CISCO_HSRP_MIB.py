# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex
from SNMPv2_SMI import MODULE_IDENTITY, NOTIFICATION_TYPE, OBJECT_TYPE, IpAddress
from CISCO_TC import Unsigned32
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, TruthValue, RowStatus, MacAddress

class CISCO_HSRP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-HSRP-MIB'
	conformance = 3
	name = 'CISCO-HSRP-MIB'
	language = 2
	description = 'The MIB module for managing the Hot Standby Router\nProtocol (HSRP).'

# nodes
class ciscoHsrpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106])
	name = 'ciscoHsrpMIB'

class ciscoHsrpMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1])
	name = 'ciscoHsrpMIBObjects'

class cHsrpGlobalConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 1])
	name = 'cHsrpGlobalConfig'

class cHsrpGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2])
	name = 'cHsrpGroup'

class cHsrpMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 2])
	name = 'cHsrpMIBNotificationPrefix'

class cHsrpMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 2, 0])
	name = 'cHsrpMIBNotifications'

class cHsrpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 3])
	name = 'cHsrpConformance'

class cHsrpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 1])
	name = 'cHsrpCompliances'

class cHsrpComplianceGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2])
	name = 'cHsrpComplianceGroups'


# macros
# types 

class HsrpState(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'initial'), Enum(2, 'learn'), Enum(3, 'listen'), Enum(4, 'speak'), Enum(5, 'standby'), Enum(6, 'active')]

# scalars 
class cHsrpConfigTimeout(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'minutes'


# columns
class cHsrpGrpNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class cHsrpGrpAuth(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cHsrpGrpPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class cHsrpGrpPreempt(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cHsrpGrpPreemptDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class cHsrpGrpUseConfiguredTimers(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cHsrpGrpConfiguredHelloTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class cHsrpGrpConfiguredHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class cHsrpGrpLearnedHelloTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class cHsrpGrpLearnedHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class cHsrpGrpVirtualIpAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cHsrpGrpUseConfigVirtualIpAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cHsrpGrpActiveRouter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cHsrpGrpStandbyRouter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cHsrpGrpStandbyState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 15])
	syntaxobject = HsrpState


class cHsrpGrpVirtualMacAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class cHsrpGrpEntryRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class cHsrpGrpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, cHsrpGrpNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1])
	access = 2
	rowstatus = cHsrpGrpEntryRowStatus
	columns = {'cHsrpGrpNumber': cHsrpGrpNumber, 'cHsrpGrpAuth': cHsrpGrpAuth, 'cHsrpGrpPriority': cHsrpGrpPriority, 'cHsrpGrpPreempt': cHsrpGrpPreempt, 'cHsrpGrpPreemptDelay': cHsrpGrpPreemptDelay, 'cHsrpGrpUseConfiguredTimers': cHsrpGrpUseConfiguredTimers, 'cHsrpGrpConfiguredHelloTime': cHsrpGrpConfiguredHelloTime, 'cHsrpGrpConfiguredHoldTime': cHsrpGrpConfiguredHoldTime, 'cHsrpGrpLearnedHelloTime': cHsrpGrpLearnedHelloTime, 'cHsrpGrpLearnedHoldTime': cHsrpGrpLearnedHoldTime, 'cHsrpGrpVirtualIpAddr': cHsrpGrpVirtualIpAddr, 'cHsrpGrpUseConfigVirtualIpAddr': cHsrpGrpUseConfigVirtualIpAddr, 'cHsrpGrpActiveRouter': cHsrpGrpActiveRouter, 'cHsrpGrpStandbyRouter': cHsrpGrpStandbyRouter, 'cHsrpGrpStandbyState': cHsrpGrpStandbyState, 'cHsrpGrpVirtualMacAddr': cHsrpGrpVirtualMacAddr, 'cHsrpGrpEntryRowStatus': cHsrpGrpEntryRowStatus}


# notifications (traps) 
class cHsrpStateChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 2, 0, 1])

# groups 
class cHsrpConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2, 1])
	group = [cHsrpConfigTimeout]

class cHsrpGrpGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2, 2])
	group = [cHsrpGrpAuth, cHsrpGrpPriority, cHsrpGrpPreempt, cHsrpGrpPreemptDelay, cHsrpGrpUseConfiguredTimers, cHsrpGrpConfiguredHelloTime, cHsrpGrpConfiguredHoldTime, cHsrpGrpLearnedHelloTime, cHsrpGrpLearnedHoldTime, cHsrpGrpVirtualIpAddr, cHsrpGrpUseConfigVirtualIpAddr, cHsrpGrpActiveRouter, cHsrpGrpStandbyRouter, cHsrpGrpStandbyState, cHsrpGrpVirtualMacAddr, cHsrpGrpEntryRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
