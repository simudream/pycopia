# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, snmpModules
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import RowStatus, StorageType
from SNMP_TARGET_MIB import SnmpTagValue, snmpTargetParamsName, snmpTargetBasicGroup, snmpTargetParamsMPModel, snmpTargetParamsSecurityModel, snmpTargetParamsSecurityName, snmpTargetParamsSecurityLevel, snmpTargetParamsStorageType, snmpTargetParamsRowStatus, snmpTargetBasicGroup, snmpTargetBasicGroup, snmpTargetResponseGroup
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class SNMP_NOTIFICATION_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/SNMP-NOTIFICATION-MIB'
	conformance = 3
	name = 'SNMP-NOTIFICATION-MIB'
	language = 2
	description = 'This MIB module defines MIB objects which provide\nmechanisms to remotely configure the parameters\nused by an SNMP entity for the generation of\nnotifications.\n\nCopyright (C) The Internet Society (2002). This\nversion of this MIB module is part of RFC 3413;\nsee the RFC itself for full legal notices.'

# nodes
class snmpNotificationMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13])
	name = 'snmpNotificationMIB'

class snmpNotifyObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1])
	name = 'snmpNotifyObjects'

class snmpNotifyConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 3])
	name = 'snmpNotifyConformance'

class snmpNotifyCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 3, 1])
	name = 'snmpNotifyCompliances'

class snmpNotifyGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 3, 2])
	name = 'snmpNotifyGroups'


# macros
# types 
# scalars 
# columns
class snmpNotifyName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 1, 1, 1])
	syntaxobject = SnmpAdminString


class snmpNotifyTag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 1, 1, 2])
	syntaxobject = SnmpTagValue


class snmpNotifyType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trap'), Enum(2, 'inform')]


class snmpNotifyStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class snmpNotifyRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class snmpNotifyFilterProfileName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class snmpNotifyFilterProfileStorType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class snmpNotifyFilterProfileRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class snmpNotifyFilterSubtree(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class snmpNotifyFilterMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snmpNotifyFilterType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'included'), Enum(2, 'excluded')]


class snmpNotifyFilterStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class snmpNotifyFilterRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class snmpNotifyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([snmpNotifyName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 1, 1])
	access = 2
	rowstatus = snmpNotifyRowStatus
	columns = {'snmpNotifyName': snmpNotifyName, 'snmpNotifyTag': snmpNotifyTag, 'snmpNotifyType': snmpNotifyType, 'snmpNotifyStorageType': snmpNotifyStorageType, 'snmpNotifyRowStatus': snmpNotifyRowStatus}


class snmpNotifyFilterProfileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([snmpTargetParamsName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 2, 1])
	access = 2
	rowstatus = snmpNotifyFilterProfileRowStatus
	columns = {'snmpNotifyFilterProfileName': snmpNotifyFilterProfileName, 'snmpNotifyFilterProfileStorType': snmpNotifyFilterProfileStorType, 'snmpNotifyFilterProfileRowStatus': snmpNotifyFilterProfileRowStatus}


class snmpNotifyFilterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([snmpNotifyFilterProfileName, snmpNotifyFilterSubtree], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 1, 3, 1])
	access = 2
	rowstatus = snmpNotifyFilterRowStatus
	columns = {'snmpNotifyFilterSubtree': snmpNotifyFilterSubtree, 'snmpNotifyFilterMask': snmpNotifyFilterMask, 'snmpNotifyFilterType': snmpNotifyFilterType, 'snmpNotifyFilterStorageType': snmpNotifyFilterStorageType, 'snmpNotifyFilterRowStatus': snmpNotifyFilterRowStatus}


# notifications (traps) 
# groups 
class snmpNotifyGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 3, 2, 1])
	group = [snmpNotifyTag, snmpNotifyType, snmpNotifyStorageType, snmpNotifyRowStatus]

class snmpNotifyFilterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 13, 3, 2, 2])
	group = [snmpNotifyFilterProfileName, snmpNotifyFilterProfileStorType, snmpNotifyFilterProfileRowStatus, snmpNotifyFilterMask, snmpNotifyFilterType, snmpNotifyFilterStorageType, snmpNotifyFilterRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
