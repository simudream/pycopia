# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Integer32, Unsigned32, Counter32, Gauge32, Counter64, transmission, MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE, NOTIFICATION_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TruthValue, StorageType
from IF_MIB import InterfaceIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class L2TP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/L2TP-MIB'
	name = 'L2TP-MIB'
	language = 2
	description = 'The MIB module that describes managed objects of\ngeneral use by the Layer Two Transport Protocol.'

# nodes
class l2tp(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95])
	name = 'l2tp'

class l2tpNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 0])
	name = 'l2tpNotifications'

class l2tpObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1])
	name = 'l2tpObjects'

class l2tpScalar(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1])
	name = 'l2tpScalar'

class l2tpConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 1])
	name = 'l2tpConfig'

class l2tpStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2])
	name = 'l2tpStats'

class l2tpTransports(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3])
	name = 'l2tpTransports'

class l2tpTransportIpUdp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1])
	name = 'l2tpTransportIpUdp'

class l2tpIpUdpObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1])
	name = 'l2tpIpUdpObjects'

class l2tpIpUdpTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 2])
	name = 'l2tpIpUdpTraps'

class l2tpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4])
	name = 'l2tpConformance'

class l2tpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1])
	name = 'l2tpGroups'

class l2tpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 2])
	name = 'l2tpCompliances'


# macros
# types 

class L2tpMilliSeconds(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483646))
	format = 'd-3'

# scalars 
class l2tpAdminState(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class l2tpDrainTunnels(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpProtocolVersions(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class l2tpVendorName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 2])
	syntaxobject = SnmpAdminString


class l2tpFirmwareRev(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpDrainingTunnels(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class l2tpDomainConfigId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class l2tpDomainConfigAdminState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class l2tpDomainConfigDrainTunnels(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpDomainConfigAuth(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'simple'), Enum(3, 'challenge')]


class l2tpDomainConfigSecret(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 5])
	syntaxobject = SnmpAdminString


class l2tpDomainConfigTunnelSecurity(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'other'), Enum(3, 'ipSec')]


class l2tpDomainConfigTunnelHelloInt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class l2tpDomainConfigTunnelIdleTO(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class l2tpDomainConfigControlRWS(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpDomainConfigControlMaxRetx(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpDomainConfigControlMaxRetxTO(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class l2tpDomainConfigPayloadSeq(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'onDemand'), Enum(2, 'never'), Enum(3, 'always')]


class l2tpDomainConfigReassemblyTO(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 13])
	syntaxobject = L2tpMilliSeconds


class l2tpDomainConfigProxyPPPAuth(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpDomainConfigStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class l2tpDomainConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class l2tpDomainStatsTotalTunnels(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsFailedTunnels(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsFailedAuths(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsActiveTunnels(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class l2tpDomainStatsTotalSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsFailedSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsActiveSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class l2tpDomainStatsDrainingTunnels(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpDomainStatsControlRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsControlRxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsControlTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsControlTxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsPayloadRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsPayloadRxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsPayloadRxDiscs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsPayloadTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsPayloadTxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpDomainStatsControlHCRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsControlHCRxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsControlHCTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsControlHCTxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsPayloadHCRxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsPayloadHCRxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsPayloadHCRxDiscs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsPayloadHCTxOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpDomainStatsPayloadHCTxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class l2tpTunnelConfigIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 1])
	syntaxobject = InterfaceIndex


class l2tpTunnelConfigDomainId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 2])
	syntaxobject = SnmpAdminString


class l2tpTunnelConfigAuth(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'simple'), Enum(3, 'challenge')]


class l2tpTunnelConfigSecret(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 4])
	syntaxobject = SnmpAdminString


class l2tpTunnelConfigSecurity(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'other'), Enum(3, 'ipsec')]


class l2tpTunnelConfigHelloInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class l2tpTunnelConfigIdleTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class l2tpTunnelConfigControlRWS(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelConfigControlMaxRetx(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelConfigControlMaxRetxTO(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class l2tpTunnelConfigPayloadSeq(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'onDemand'), Enum(2, 'never'), Enum(3, 'always')]


class l2tpTunnelConfigReassemblyTO(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 12])
	syntaxobject = L2tpMilliSeconds


class l2tpTunnelConfigTransport(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'none'), Enum(3, 'udpIp'), Enum(4, 'frameRelay'), Enum(5, 'atm')]


class l2tpTunnelConfigDrainTunnel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpTunnelConfigProxyPPPAuth(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpTunnelStatsLocalTID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsRemoteTID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tunnelIdle'), Enum(2, 'tunnelConnecting'), Enum(3, 'tunnelEstablished'), Enum(4, 'tunnelDisconnecting')]


class l2tpTunnelStatsInitiated(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'locally'), Enum(2, 'remotely')]


class l2tpTunnelStatsRemoteHostName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 5])
	syntaxobject = SnmpAdminString


class l2tpTunnelStatsRemoteVendorName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 6])
	syntaxobject = SnmpAdminString


class l2tpTunnelStatsRemoteFirmwareRev(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsRemoteProtocolVer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class l2tpTunnelStatsInitialRemoteRWS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsBearerCaps(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'digital'), Enum(3, 'analog'), Enum(4, 'digitalAnalog')]


class l2tpTunnelStatsFramingCaps(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'sync'), Enum(3, 'async'), Enum(4, 'syncAsync')]


class l2tpTunnelStatsControlRxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsControlRxZLB(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsControlOutOfSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsControlOutOfWin(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsControlTxPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsControlTxZLB(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsControlAckTO(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsCurrentRemoteRWS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class l2tpTunnelStatsTxSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsTxSeqAck(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsRxSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsRxSeqAck(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsTotalSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsFailedSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpTunnelStatsActiveSessions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class l2tpTunnelStatsLastResultCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsLastErrorCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelStatsLastErrorMessage(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 29])
	syntaxobject = SnmpAdminString


class l2tpTunnelStatsDrainingTunnel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpSessionStatsTunnelIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 1])
	syntaxobject = InterfaceIndex


class l2tpSessionStatsIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 2])
	syntaxobject = InterfaceIndex


class l2tpSessionStatsLocalSID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpSessionStatsRemoteSID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpSessionStatsUserName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 5])
	syntaxobject = SnmpAdminString


class l2tpSessionStatsState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sessionIdle'), Enum(2, 'sessionConnecting'), Enum(3, 'sessionEstablished'), Enum(4, 'sessionDisconnecting')]


class l2tpSessionStatsCallType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lacIncoming'), Enum(2, 'lnsIncoming'), Enum(3, 'lacOutgoing'), Enum(4, 'lnsOutgoing')]


class l2tpSessionStatsCallSerialNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class l2tpSessionStatsTxConnectSpeed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bits per second'


class l2tpSessionStatsRxConnectSpeed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bits per second'


class l2tpSessionStatsCallBearerType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'digital'), Enum(3, 'analog')]


class l2tpSessionStatsFramingType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'sync'), Enum(3, 'async')]


class l2tpSessionStatsPhysChanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class l2tpSessionStatsDNIS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 14])
	syntaxobject = SnmpAdminString


class l2tpSessionStatsCLID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 15])
	syntaxobject = SnmpAdminString


class l2tpSessionStatsSubAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 16])
	syntaxobject = SnmpAdminString


class l2tpSessionStatsPrivateGroupID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 17])
	syntaxobject = SnmpAdminString


class l2tpSessionStatsProxyLcp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class l2tpSessionStatsAuthMethod(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'text'), Enum(3, 'pppChap'), Enum(4, 'pppPap'), Enum(5, 'pppEap'), Enum(6, 'pppMsChapV1'), Enum(7, 'pppMsChapV2'), Enum(8, 'other')]


class l2tpSessionStatsSequencingState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'remote'), Enum(3, 'local'), Enum(4, 'both')]


class l2tpSessionStatsOutSequence(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpSessionStatsReassemblyTO(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class l2tpSessionStatsTxSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpSessionStatsRxSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelMapLocalTID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpTunnelMapIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 8, 1, 2])
	syntaxobject = InterfaceIndex


class l2tpSessionMapIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 1])
	syntaxobject = InterfaceIndex


class l2tpSessionMapTunnelIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 2])
	syntaxobject = InterfaceIndex


class l2tpSessionMapLocalSID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpSessionMapStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class l2tpUdpStatsIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1, 1])
	syntaxobject = InterfaceIndex


class l2tpUdpStatsPeerPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class l2tpUdpStatsLocalPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class l2tpDomainConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpDomainConfigId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1])
	access = 2
	rowstatus = l2tpDomainConfigStatus
	columns = {'l2tpDomainConfigId': l2tpDomainConfigId, 'l2tpDomainConfigAdminState': l2tpDomainConfigAdminState, 'l2tpDomainConfigDrainTunnels': l2tpDomainConfigDrainTunnels, 'l2tpDomainConfigAuth': l2tpDomainConfigAuth, 'l2tpDomainConfigSecret': l2tpDomainConfigSecret, 'l2tpDomainConfigTunnelSecurity': l2tpDomainConfigTunnelSecurity, 'l2tpDomainConfigTunnelHelloInt': l2tpDomainConfigTunnelHelloInt, 'l2tpDomainConfigTunnelIdleTO': l2tpDomainConfigTunnelIdleTO, 'l2tpDomainConfigControlRWS': l2tpDomainConfigControlRWS, 'l2tpDomainConfigControlMaxRetx': l2tpDomainConfigControlMaxRetx, 'l2tpDomainConfigControlMaxRetxTO': l2tpDomainConfigControlMaxRetxTO, 'l2tpDomainConfigPayloadSeq': l2tpDomainConfigPayloadSeq, 'l2tpDomainConfigReassemblyTO': l2tpDomainConfigReassemblyTO, 'l2tpDomainConfigProxyPPPAuth': l2tpDomainConfigProxyPPPAuth, 'l2tpDomainConfigStorageType': l2tpDomainConfigStorageType, 'l2tpDomainConfigStatus': l2tpDomainConfigStatus}


from L2TP_MIB import l2tpDomainConfigId
class l2tpDomainStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpDomainConfigId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1])
	access = 2
	columns = {'l2tpDomainStatsTotalTunnels': l2tpDomainStatsTotalTunnels, 'l2tpDomainStatsFailedTunnels': l2tpDomainStatsFailedTunnels, 'l2tpDomainStatsFailedAuths': l2tpDomainStatsFailedAuths, 'l2tpDomainStatsActiveTunnels': l2tpDomainStatsActiveTunnels, 'l2tpDomainStatsTotalSessions': l2tpDomainStatsTotalSessions, 'l2tpDomainStatsFailedSessions': l2tpDomainStatsFailedSessions, 'l2tpDomainStatsActiveSessions': l2tpDomainStatsActiveSessions, 'l2tpDomainStatsDrainingTunnels': l2tpDomainStatsDrainingTunnels, 'l2tpDomainStatsControlRxOctets': l2tpDomainStatsControlRxOctets, 'l2tpDomainStatsControlRxPkts': l2tpDomainStatsControlRxPkts, 'l2tpDomainStatsControlTxOctets': l2tpDomainStatsControlTxOctets, 'l2tpDomainStatsControlTxPkts': l2tpDomainStatsControlTxPkts, 'l2tpDomainStatsPayloadRxOctets': l2tpDomainStatsPayloadRxOctets, 'l2tpDomainStatsPayloadRxPkts': l2tpDomainStatsPayloadRxPkts, 'l2tpDomainStatsPayloadRxDiscs': l2tpDomainStatsPayloadRxDiscs, 'l2tpDomainStatsPayloadTxOctets': l2tpDomainStatsPayloadTxOctets, 'l2tpDomainStatsPayloadTxPkts': l2tpDomainStatsPayloadTxPkts, 'l2tpDomainStatsControlHCRxOctets': l2tpDomainStatsControlHCRxOctets, 'l2tpDomainStatsControlHCRxPkts': l2tpDomainStatsControlHCRxPkts, 'l2tpDomainStatsControlHCTxOctets': l2tpDomainStatsControlHCTxOctets, 'l2tpDomainStatsControlHCTxPkts': l2tpDomainStatsControlHCTxPkts, 'l2tpDomainStatsPayloadHCRxOctets': l2tpDomainStatsPayloadHCRxOctets, 'l2tpDomainStatsPayloadHCRxPkts': l2tpDomainStatsPayloadHCRxPkts, 'l2tpDomainStatsPayloadHCRxDiscs': l2tpDomainStatsPayloadHCRxDiscs, 'l2tpDomainStatsPayloadHCTxOctets': l2tpDomainStatsPayloadHCTxOctets, 'l2tpDomainStatsPayloadHCTxPkts': l2tpDomainStatsPayloadHCTxPkts}


class l2tpTunnelConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpTunnelConfigIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1])
	access = 2
	columns = {'l2tpTunnelConfigIfIndex': l2tpTunnelConfigIfIndex, 'l2tpTunnelConfigDomainId': l2tpTunnelConfigDomainId, 'l2tpTunnelConfigAuth': l2tpTunnelConfigAuth, 'l2tpTunnelConfigSecret': l2tpTunnelConfigSecret, 'l2tpTunnelConfigSecurity': l2tpTunnelConfigSecurity, 'l2tpTunnelConfigHelloInterval': l2tpTunnelConfigHelloInterval, 'l2tpTunnelConfigIdleTimeout': l2tpTunnelConfigIdleTimeout, 'l2tpTunnelConfigControlRWS': l2tpTunnelConfigControlRWS, 'l2tpTunnelConfigControlMaxRetx': l2tpTunnelConfigControlMaxRetx, 'l2tpTunnelConfigControlMaxRetxTO': l2tpTunnelConfigControlMaxRetxTO, 'l2tpTunnelConfigPayloadSeq': l2tpTunnelConfigPayloadSeq, 'l2tpTunnelConfigReassemblyTO': l2tpTunnelConfigReassemblyTO, 'l2tpTunnelConfigTransport': l2tpTunnelConfigTransport, 'l2tpTunnelConfigDrainTunnel': l2tpTunnelConfigDrainTunnel, 'l2tpTunnelConfigProxyPPPAuth': l2tpTunnelConfigProxyPPPAuth}


from L2TP_MIB import l2tpTunnelConfigIfIndex
class l2tpTunnelStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpTunnelConfigIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1])
	access = 2
	columns = {'l2tpTunnelStatsLocalTID': l2tpTunnelStatsLocalTID, 'l2tpTunnelStatsRemoteTID': l2tpTunnelStatsRemoteTID, 'l2tpTunnelStatsState': l2tpTunnelStatsState, 'l2tpTunnelStatsInitiated': l2tpTunnelStatsInitiated, 'l2tpTunnelStatsRemoteHostName': l2tpTunnelStatsRemoteHostName, 'l2tpTunnelStatsRemoteVendorName': l2tpTunnelStatsRemoteVendorName, 'l2tpTunnelStatsRemoteFirmwareRev': l2tpTunnelStatsRemoteFirmwareRev, 'l2tpTunnelStatsRemoteProtocolVer': l2tpTunnelStatsRemoteProtocolVer, 'l2tpTunnelStatsInitialRemoteRWS': l2tpTunnelStatsInitialRemoteRWS, 'l2tpTunnelStatsBearerCaps': l2tpTunnelStatsBearerCaps, 'l2tpTunnelStatsFramingCaps': l2tpTunnelStatsFramingCaps, 'l2tpTunnelStatsControlRxPkts': l2tpTunnelStatsControlRxPkts, 'l2tpTunnelStatsControlRxZLB': l2tpTunnelStatsControlRxZLB, 'l2tpTunnelStatsControlOutOfSeq': l2tpTunnelStatsControlOutOfSeq, 'l2tpTunnelStatsControlOutOfWin': l2tpTunnelStatsControlOutOfWin, 'l2tpTunnelStatsControlTxPkts': l2tpTunnelStatsControlTxPkts, 'l2tpTunnelStatsControlTxZLB': l2tpTunnelStatsControlTxZLB, 'l2tpTunnelStatsControlAckTO': l2tpTunnelStatsControlAckTO, 'l2tpTunnelStatsCurrentRemoteRWS': l2tpTunnelStatsCurrentRemoteRWS, 'l2tpTunnelStatsTxSeq': l2tpTunnelStatsTxSeq, 'l2tpTunnelStatsTxSeqAck': l2tpTunnelStatsTxSeqAck, 'l2tpTunnelStatsRxSeq': l2tpTunnelStatsRxSeq, 'l2tpTunnelStatsRxSeqAck': l2tpTunnelStatsRxSeqAck, 'l2tpTunnelStatsTotalSessions': l2tpTunnelStatsTotalSessions, 'l2tpTunnelStatsFailedSessions': l2tpTunnelStatsFailedSessions, 'l2tpTunnelStatsActiveSessions': l2tpTunnelStatsActiveSessions, 'l2tpTunnelStatsLastResultCode': l2tpTunnelStatsLastResultCode, 'l2tpTunnelStatsLastErrorCode': l2tpTunnelStatsLastErrorCode, 'l2tpTunnelStatsLastErrorMessage': l2tpTunnelStatsLastErrorMessage, 'l2tpTunnelStatsDrainingTunnel': l2tpTunnelStatsDrainingTunnel}


class l2tpSessionStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpSessionStatsTunnelIfIndex, l2tpSessionStatsLocalSID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1])
	access = 2
	columns = {'l2tpSessionStatsTunnelIfIndex': l2tpSessionStatsTunnelIfIndex, 'l2tpSessionStatsIfIndex': l2tpSessionStatsIfIndex, 'l2tpSessionStatsLocalSID': l2tpSessionStatsLocalSID, 'l2tpSessionStatsRemoteSID': l2tpSessionStatsRemoteSID, 'l2tpSessionStatsUserName': l2tpSessionStatsUserName, 'l2tpSessionStatsState': l2tpSessionStatsState, 'l2tpSessionStatsCallType': l2tpSessionStatsCallType, 'l2tpSessionStatsCallSerialNumber': l2tpSessionStatsCallSerialNumber, 'l2tpSessionStatsTxConnectSpeed': l2tpSessionStatsTxConnectSpeed, 'l2tpSessionStatsRxConnectSpeed': l2tpSessionStatsRxConnectSpeed, 'l2tpSessionStatsCallBearerType': l2tpSessionStatsCallBearerType, 'l2tpSessionStatsFramingType': l2tpSessionStatsFramingType, 'l2tpSessionStatsPhysChanId': l2tpSessionStatsPhysChanId, 'l2tpSessionStatsDNIS': l2tpSessionStatsDNIS, 'l2tpSessionStatsCLID': l2tpSessionStatsCLID, 'l2tpSessionStatsSubAddress': l2tpSessionStatsSubAddress, 'l2tpSessionStatsPrivateGroupID': l2tpSessionStatsPrivateGroupID, 'l2tpSessionStatsProxyLcp': l2tpSessionStatsProxyLcp, 'l2tpSessionStatsAuthMethod': l2tpSessionStatsAuthMethod, 'l2tpSessionStatsSequencingState': l2tpSessionStatsSequencingState, 'l2tpSessionStatsOutSequence': l2tpSessionStatsOutSequence, 'l2tpSessionStatsReassemblyTO': l2tpSessionStatsReassemblyTO, 'l2tpSessionStatsTxSeq': l2tpSessionStatsTxSeq, 'l2tpSessionStatsRxSeq': l2tpSessionStatsRxSeq}


class l2tpTunnelMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpTunnelMapLocalTID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 8, 1])
	access = 2
	columns = {'l2tpTunnelMapLocalTID': l2tpTunnelMapLocalTID, 'l2tpTunnelMapIfIndex': l2tpTunnelMapIfIndex}


class l2tpSessionMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpSessionMapIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1])
	access = 2
	rowstatus = l2tpSessionMapStatus
	columns = {'l2tpSessionMapIfIndex': l2tpSessionMapIfIndex, 'l2tpSessionMapTunnelIfIndex': l2tpSessionMapTunnelIfIndex, 'l2tpSessionMapLocalSID': l2tpSessionMapLocalSID, 'l2tpSessionMapStatus': l2tpSessionMapStatus}


class l2tpUdpStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([l2tpUdpStatsIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1])
	access = 2
	columns = {'l2tpUdpStatsIfIndex': l2tpUdpStatsIfIndex, 'l2tpUdpStatsPeerPort': l2tpUdpStatsPeerPort, 'l2tpUdpStatsLocalPort': l2tpUdpStatsLocalPort}


# notifications (traps) 
class l2tpTunnelAuthFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 0, 1])

# groups 
class l2tpConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 1])
	group = [l2tpAdminState, l2tpDrainTunnels, l2tpTunnelConfigDomainId, l2tpTunnelConfigHelloInterval, l2tpTunnelConfigIdleTimeout, l2tpTunnelConfigControlRWS, l2tpTunnelConfigControlMaxRetx, l2tpTunnelConfigControlMaxRetxTO, l2tpTunnelConfigPayloadSeq, l2tpTunnelConfigReassemblyTO, l2tpTunnelConfigTransport, l2tpTunnelConfigDrainTunnel, l2tpTunnelConfigProxyPPPAuth]

class l2tpStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 2])
	group = [l2tpProtocolVersions, l2tpVendorName, l2tpFirmwareRev, l2tpDrainingTunnels, l2tpTunnelStatsLocalTID, l2tpTunnelStatsRemoteTID, l2tpTunnelStatsState, l2tpTunnelStatsInitiated, l2tpTunnelStatsRemoteHostName, l2tpTunnelStatsRemoteVendorName, l2tpTunnelStatsRemoteFirmwareRev, l2tpTunnelStatsRemoteProtocolVer, l2tpTunnelStatsInitialRemoteRWS, l2tpTunnelStatsBearerCaps, l2tpTunnelStatsFramingCaps, l2tpTunnelStatsControlRxPkts, l2tpTunnelStatsControlRxZLB, l2tpTunnelStatsControlOutOfSeq, l2tpTunnelStatsControlOutOfWin, l2tpTunnelStatsControlTxPkts, l2tpTunnelStatsControlTxZLB, l2tpTunnelStatsControlAckTO, l2tpTunnelStatsCurrentRemoteRWS, l2tpTunnelStatsTxSeq, l2tpTunnelStatsTxSeqAck, l2tpTunnelStatsRxSeq, l2tpTunnelStatsRxSeqAck, l2tpTunnelStatsTotalSessions, l2tpTunnelStatsFailedSessions, l2tpTunnelStatsActiveSessions, l2tpTunnelStatsLastResultCode, l2tpTunnelStatsLastErrorCode, l2tpTunnelStatsLastErrorMessage, l2tpTunnelStatsDrainingTunnel, l2tpSessionStatsIfIndex, l2tpSessionStatsRemoteSID, l2tpSessionStatsUserName, l2tpSessionStatsState, l2tpSessionStatsCallType, l2tpSessionStatsCallSerialNumber, l2tpSessionStatsTxConnectSpeed, l2tpSessionStatsRxConnectSpeed, l2tpSessionStatsCallBearerType, l2tpSessionStatsFramingType, l2tpSessionStatsPhysChanId, l2tpSessionStatsDNIS, l2tpSessionStatsCLID, l2tpSessionStatsSubAddress, l2tpSessionStatsPrivateGroupID, l2tpSessionStatsProxyLcp, l2tpSessionStatsAuthMethod, l2tpSessionStatsSequencingState, l2tpSessionStatsOutSequence, l2tpSessionStatsReassemblyTO, l2tpSessionStatsTxSeq, l2tpSessionStatsRxSeq]

class l2tpIpUdpGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 3])
	group = [l2tpUdpStatsPeerPort, l2tpUdpStatsLocalPort]

class l2tpDomainGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 4])
	group = [l2tpDomainConfigAdminState, l2tpDomainConfigDrainTunnels, l2tpDomainConfigTunnelHelloInt, l2tpDomainConfigTunnelIdleTO, l2tpDomainConfigControlRWS, l2tpDomainConfigControlMaxRetx, l2tpDomainConfigControlMaxRetxTO, l2tpDomainConfigPayloadSeq, l2tpDomainConfigReassemblyTO, l2tpDomainConfigProxyPPPAuth, l2tpDomainConfigStorageType, l2tpDomainConfigStatus, l2tpDomainStatsTotalTunnels, l2tpDomainStatsFailedTunnels, l2tpDomainStatsFailedAuths, l2tpDomainStatsActiveTunnels, l2tpDomainStatsTotalSessions, l2tpDomainStatsFailedSessions, l2tpDomainStatsActiveSessions, l2tpDomainStatsDrainingTunnels, l2tpDomainStatsControlRxOctets, l2tpDomainStatsControlRxPkts, l2tpDomainStatsControlTxOctets, l2tpDomainStatsControlTxPkts, l2tpDomainStatsPayloadRxOctets, l2tpDomainStatsPayloadRxPkts, l2tpDomainStatsPayloadRxDiscs, l2tpDomainStatsPayloadTxOctets, l2tpDomainStatsPayloadTxPkts]

class l2tpMappingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 5])
	group = [l2tpTunnelMapIfIndex, l2tpSessionMapTunnelIfIndex, l2tpSessionMapLocalSID, l2tpSessionMapStatus]

class l2tpSecurityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 6])
	group = [l2tpDomainConfigAuth, l2tpDomainConfigSecret, l2tpDomainConfigTunnelSecurity, l2tpTunnelConfigAuth, l2tpTunnelConfigSecret, l2tpTunnelConfigSecurity]

class l2tpTrapGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 7])
	group = [l2tpTunnelAuthFailure]

class l2tpHCPacketGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 8])
	group = [l2tpDomainStatsControlHCRxOctets, l2tpDomainStatsControlHCRxPkts, l2tpDomainStatsControlHCTxOctets, l2tpDomainStatsControlHCTxPkts, l2tpDomainStatsPayloadHCRxOctets, l2tpDomainStatsPayloadHCRxPkts, l2tpDomainStatsPayloadHCRxDiscs, l2tpDomainStatsPayloadHCTxOctets, l2tpDomainStatsPayloadHCTxPkts]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
