# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32, Gauge32, Counter64
from HCNUM_TC import ZeroBasedCounter64, CounterBasedGauge64
from RMON2_MIB import protocolDirLocalIndex, protocolDistControlIndex, protocolDist, hlHostControlIndex, nlHost, nlHostTimeMark, nlHostAddress, hlMatrixControlIndex, nlMatrix, nlMatrixSDTimeMark, nlMatrixSDSourceAddress, nlMatrixSDDestAddress, nlMatrixDSTimeMark, nlMatrixDSDestAddress, nlMatrixDSSourceAddress, nlMatrixTopNControlIndex, nlMatrixTopNIndex, alHost, alHostTimeMark, alMatrix, alMatrixSDTimeMark, alMatrixDSTimeMark, alMatrixTopNControlIndex, alMatrixTopNIndex, usrHistory, usrHistoryControlIndex, usrHistorySampleIndex, usrHistoryObjectIndex, rmonConformance, ZeroBasedCounter32, probeConfig, protocolDirectoryGroup, protocolDistributionGroup, addressMapGroup, nlHostGroup, nlMatrixGroup, usrHistoryGroup, probeInformationGroup, rmon1EnhancementGroup, protocolDirectoryGroup, protocolDistributionGroup, addressMapGroup, nlHostGroup, nlMatrixGroup, alHostGroup, alMatrixGroup, usrHistoryGroup, probeInformationGroup, rmon1EnhancementGroup
from RMON_MIB import rmon, OwnerString, statistics, history, hosts, hostTopN, matrix, etherStatsIndex, etherHistoryIndex, etherHistorySampleIndex, hostIndex, hostAddress, hostTimeIndex, hostTimeCreationOrder, hostTopNReport, hostTopNIndex, matrixSDIndex, matrixSDSourceAddress, matrixSDDestAddress, matrixDSIndex, matrixDSDestAddress, matrixDSSourceAddress, capture, captureBufferControlIndex, captureBufferIndex, rmonEtherStatsGroup, rmonHistoryControlGroup, rmonEthernetHistoryGroup, rmonHostGroup, rmonHostTopNGroup, rmonMatrixGroup, rmonFilterGroup, rmonPacketCaptureGroup
from SNMPv2_TC import RowStatus, TimeStamp

class HC_RMON_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/HC-RMON-MIB'
	conformance = 3
	name = 'HC-RMON-MIB'
	language = 2
	description = 'The MIB module for managing remote monitoring\ndevice implementations. This MIB module\naugments the original RMON MIB as specified in\nRFC 2819 and RFC 1513 and RMON-2 MIB as specified in\nRFC 2021.'

# nodes
class hcRMON(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 5])
	name = 'hcRMON'

class hcRmonMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 6])
	name = 'hcRmonMIBCompliances'

class hcRmonMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7])
	name = 'hcRmonMIBGroups'

class mediaIndependentStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21])
	name = 'mediaIndependentStats'


# macros
# types 
# scalars 
class hcRMONCapabilities(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 19, 16])
	syntaxobject = pycopia.SMI.Basetypes.BITS


# columns
class etherStatsHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherStatsHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class etherStatsHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class etherStatsHighCapacityOverflowPkts64Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts64Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherStatsHighCapacityOverflowPkts65to127Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts65to127Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherStatsHighCapacityOverflowPkts128to255Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts128to255Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherStatsHighCapacityOverflowPkts256to511Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts256to511Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherStatsHighCapacityOverflowPkts512to1023Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts512to1023Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherStatsHighCapacityOverflowPkts1024to1518Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class etherStatsHighCapacityPkts1024to1518Octets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class etherHistoryHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class etherHistoryHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 2])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Packets'


class etherHistoryHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class etherHistoryHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 4])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Octets'


class hostHighCapacityInOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostHighCapacityInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class hostHighCapacityOutOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostHighCapacityOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class hostHighCapacityInOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostHighCapacityInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class hostHighCapacityOutOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostHighCapacityOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class hostTimeHighCapacityInOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeHighCapacityInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class hostTimeHighCapacityOutOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class hostTimeHighCapacityOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class hostTimeHighCapacityInOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostTimeHighCapacityInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class hostTimeHighCapacityOutOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class hostTimeHighCapacityOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class hostTopNHighCapacityAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hostTopNHighCapacityBaseRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class hostTopNHighCapacityOverflowRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class hostTopNHighCapacityRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 4])
	syntaxobject = CounterBasedGauge64


class matrixSDHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class matrixSDHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class matrixSDHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class matrixSDHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class matrixDSHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class matrixDSHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class matrixDSHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class matrixDSHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class captureBufferPacketHighCapacityTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'nanoseconds'


class protocolDistStatsHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class protocolDistStatsHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class protocolDistStatsHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class protocolDistStatsHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class nlHostHighCapacityInOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class nlHostHighCapacityInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class nlHostHighCapacityOutOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class nlHostHighCapacityOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class nlHostHighCapacityInOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 5])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class nlHostHighCapacityInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 6])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class nlHostHighCapacityOutOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 7])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class nlHostHighCapacityOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 8])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class nlMatrixSDHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class nlMatrixSDHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class nlMatrixSDHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class nlMatrixSDHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class nlMatrixDSHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class nlMatrixDSHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class nlMatrixDSHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class nlMatrixDSHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class nlMatrixTopNHighCapacityProtocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlMatrixTopNHighCapacitySourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixTopNHighCapacityDestAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlMatrixTopNHighCapacityBasePktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class nlMatrixTopNHighCapacityOverflowPktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class nlMatrixTopNHighCapacityPktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 6])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Packets'


class nlMatrixTopNHighCapacityReverseBasePktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class nlMatrixTopNHighCapacityReverseOverflowPktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class nlMatrixTopNHighCapacityReversePktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 9])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Packets'


class nlMatrixTopNHighCapacityBaseOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class nlMatrixTopNHighCapacityOverflowOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class nlMatrixTopNHighCapacityOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 12])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Octets'


class nlMatrixTopNHighCapacityReverseBaseOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class nlMatrixTopNHighCapacityReverseOverflowOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class nlMatrixTopNHighCapacityReverseOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 15])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Octets'


class alHostHighCapacityInOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class alHostHighCapacityInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class alHostHighCapacityOutOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class alHostHighCapacityOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class alHostHighCapacityInOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 5])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class alHostHighCapacityInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 6])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class alHostHighCapacityOutOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 7])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class alHostHighCapacityOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 8])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class alMatrixSDHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class alMatrixSDHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class alMatrixSDHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class alMatrixSDHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class alMatrixDSHighCapacityOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 1])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Packets'


class alMatrixDSHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 2])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Packets'


class alMatrixDSHighCapacityOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 3])
	syntaxobject = ZeroBasedCounter32
	access = 4
	units = 'Octets'


class alMatrixDSHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 4])
	syntaxobject = ZeroBasedCounter64
	access = 4
	units = 'Octets'


class alMatrixTopNHighCapacityProtocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNHighCapacitySourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class alMatrixTopNHighCapacityDestAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class alMatrixTopNHighCapacityAppProtocolDirLocalIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alMatrixTopNHighCapacityBasePktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class alMatrixTopNHighCapacityOverflowPktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class alMatrixTopNHighCapacityPktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 7])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Packets'


class alMatrixTopNHighCapacityReverseBasePktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class alMatrixTopNHighCapacityReverseOverflowPktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Packets'


class alMatrixTopNHighCapacityReversePktRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 10])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Packets'


class alMatrixTopNHighCapacityBaseOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class alMatrixTopNHighCapacityOverflowOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class alMatrixTopNHighCapacityOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 13])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Octets'


class alMatrixTopNHighCapacityReverseBaseOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class alMatrixTopNHighCapacityReverseOverflowOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Octets'


class alMatrixTopNHighCapacityReverseOctetRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 16])
	syntaxobject = CounterBasedGauge64
	access = 4
	units = 'Octets'


class usrHistoryHighCapacityOverflowAbsValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class usrHistoryHighCapacityAbsValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 4, 1, 2])
	syntaxobject = CounterBasedGauge64


class mediaIndependentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mediaIndependentDataSource(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class mediaIndependentDropEvents(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Events'


class mediaIndependentDroppedFrames(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentInPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentInOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentInHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class mediaIndependentOutPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentOutOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentOutHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class mediaIndependentInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class mediaIndependentInOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class mediaIndependentInHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class mediaIndependentOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class mediaIndependentOutOverflowOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Octets'


class mediaIndependentOutHighCapacityOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Octets'


class mediaIndependentInNUCastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentInNUCastOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentInNUCastHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class mediaIndependentOutNUCastPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentOutNUCastOverflowPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentOutNUCastHighCapacityPkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'Packets'


class mediaIndependentInErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentOutErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Packets'


class mediaIndependentInputSpeed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Kilobits per Second'


class mediaIndependentOutputSpeed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Kilobits per Second'


class mediaIndependentDuplexMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'halfduplex'), Enum(2, 'fullduplex')]


class mediaIndependentDuplexChanges(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Events'


class mediaIndependentDuplexLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mediaIndependentOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 30])
	syntaxobject = OwnerString


class mediaIndependentStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class etherStatsHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([etherStatsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 1, 7, 1])
	access = 2
	columns = {'etherStatsHighCapacityOverflowPkts': etherStatsHighCapacityOverflowPkts, 'etherStatsHighCapacityPkts': etherStatsHighCapacityPkts, 'etherStatsHighCapacityOverflowOctets': etherStatsHighCapacityOverflowOctets, 'etherStatsHighCapacityOctets': etherStatsHighCapacityOctets, 'etherStatsHighCapacityOverflowPkts64Octets': etherStatsHighCapacityOverflowPkts64Octets, 'etherStatsHighCapacityPkts64Octets': etherStatsHighCapacityPkts64Octets, 'etherStatsHighCapacityOverflowPkts65to127Octets': etherStatsHighCapacityOverflowPkts65to127Octets, 'etherStatsHighCapacityPkts65to127Octets': etherStatsHighCapacityPkts65to127Octets, 'etherStatsHighCapacityOverflowPkts128to255Octets': etherStatsHighCapacityOverflowPkts128to255Octets, 'etherStatsHighCapacityPkts128to255Octets': etherStatsHighCapacityPkts128to255Octets, 'etherStatsHighCapacityOverflowPkts256to511Octets': etherStatsHighCapacityOverflowPkts256to511Octets, 'etherStatsHighCapacityPkts256to511Octets': etherStatsHighCapacityPkts256to511Octets, 'etherStatsHighCapacityOverflowPkts512to1023Octets': etherStatsHighCapacityOverflowPkts512to1023Octets, 'etherStatsHighCapacityPkts512to1023Octets': etherStatsHighCapacityPkts512to1023Octets, 'etherStatsHighCapacityOverflowPkts1024to1518Octets': etherStatsHighCapacityOverflowPkts1024to1518Octets, 'etherStatsHighCapacityPkts1024to1518Octets': etherStatsHighCapacityPkts1024to1518Octets}


class etherHistoryHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([etherHistoryIndex, etherHistorySampleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 2, 6, 1])
	access = 2
	columns = {'etherHistoryHighCapacityOverflowPkts': etherHistoryHighCapacityOverflowPkts, 'etherHistoryHighCapacityPkts': etherHistoryHighCapacityPkts, 'etherHistoryHighCapacityOverflowOctets': etherHistoryHighCapacityOverflowOctets, 'etherHistoryHighCapacityOctets': etherHistoryHighCapacityOctets}


class hostHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostIndex, hostAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 5, 1])
	access = 2
	columns = {'hostHighCapacityInOverflowPkts': hostHighCapacityInOverflowPkts, 'hostHighCapacityInPkts': hostHighCapacityInPkts, 'hostHighCapacityOutOverflowPkts': hostHighCapacityOutOverflowPkts, 'hostHighCapacityOutPkts': hostHighCapacityOutPkts, 'hostHighCapacityInOverflowOctets': hostHighCapacityInOverflowOctets, 'hostHighCapacityInOctets': hostHighCapacityInOctets, 'hostHighCapacityOutOverflowOctets': hostHighCapacityOutOverflowOctets, 'hostHighCapacityOutOctets': hostHighCapacityOutOctets}


class hostTimeHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostTimeIndex, hostTimeCreationOrder], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 4, 6, 1])
	access = 2
	columns = {'hostTimeHighCapacityInOverflowPkts': hostTimeHighCapacityInOverflowPkts, 'hostTimeHighCapacityInPkts': hostTimeHighCapacityInPkts, 'hostTimeHighCapacityOutOverflowPkts': hostTimeHighCapacityOutOverflowPkts, 'hostTimeHighCapacityOutPkts': hostTimeHighCapacityOutPkts, 'hostTimeHighCapacityInOverflowOctets': hostTimeHighCapacityInOverflowOctets, 'hostTimeHighCapacityInOctets': hostTimeHighCapacityInOctets, 'hostTimeHighCapacityOutOverflowOctets': hostTimeHighCapacityOutOverflowOctets, 'hostTimeHighCapacityOutOctets': hostTimeHighCapacityOutOctets}


class hostTopNHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hostTopNReport, hostTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 5, 3, 1])
	access = 2
	columns = {'hostTopNHighCapacityAddress': hostTopNHighCapacityAddress, 'hostTopNHighCapacityBaseRate': hostTopNHighCapacityBaseRate, 'hostTopNHighCapacityOverflowRate': hostTopNHighCapacityOverflowRate, 'hostTopNHighCapacityRate': hostTopNHighCapacityRate}


class matrixSDHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([matrixSDIndex, matrixSDSourceAddress, matrixSDDestAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 5, 1])
	access = 2
	columns = {'matrixSDHighCapacityOverflowPkts': matrixSDHighCapacityOverflowPkts, 'matrixSDHighCapacityPkts': matrixSDHighCapacityPkts, 'matrixSDHighCapacityOverflowOctets': matrixSDHighCapacityOverflowOctets, 'matrixSDHighCapacityOctets': matrixSDHighCapacityOctets}


class matrixDSHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([matrixDSIndex, matrixDSDestAddress, matrixDSSourceAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 6, 6, 1])
	access = 2
	columns = {'matrixDSHighCapacityOverflowPkts': matrixDSHighCapacityOverflowPkts, 'matrixDSHighCapacityPkts': matrixDSHighCapacityPkts, 'matrixDSHighCapacityOverflowOctets': matrixDSHighCapacityOverflowOctets, 'matrixDSHighCapacityOctets': matrixDSHighCapacityOctets}


class captureBufferHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([captureBufferControlIndex, captureBufferIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 8, 3, 1])
	access = 2
	columns = {'captureBufferPacketHighCapacityTime': captureBufferPacketHighCapacityTime}


class protocolDistStatsHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([protocolDistControlIndex, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 12, 3, 1])
	access = 2
	columns = {'protocolDistStatsHighCapacityOverflowPkts': protocolDistStatsHighCapacityOverflowPkts, 'protocolDistStatsHighCapacityPkts': protocolDistStatsHighCapacityPkts, 'protocolDistStatsHighCapacityOverflowOctets': protocolDistStatsHighCapacityOverflowOctets, 'protocolDistStatsHighCapacityOctets': protocolDistStatsHighCapacityOctets}


class nlHostHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlHostControlIndex, nlHostTimeMark, protocolDirLocalIndex, nlHostAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 14, 3, 1])
	access = 2
	columns = {'nlHostHighCapacityInOverflowPkts': nlHostHighCapacityInOverflowPkts, 'nlHostHighCapacityInPkts': nlHostHighCapacityInPkts, 'nlHostHighCapacityOutOverflowPkts': nlHostHighCapacityOutOverflowPkts, 'nlHostHighCapacityOutPkts': nlHostHighCapacityOutPkts, 'nlHostHighCapacityInOverflowOctets': nlHostHighCapacityInOverflowOctets, 'nlHostHighCapacityInOctets': nlHostHighCapacityInOctets, 'nlHostHighCapacityOutOverflowOctets': nlHostHighCapacityOutOverflowOctets, 'nlHostHighCapacityOutOctets': nlHostHighCapacityOutOctets}


class nlMatrixSDHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, nlMatrixSDTimeMark, protocolDirLocalIndex, nlMatrixSDSourceAddress, nlMatrixSDDestAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 6, 1])
	access = 2
	columns = {'nlMatrixSDHighCapacityOverflowPkts': nlMatrixSDHighCapacityOverflowPkts, 'nlMatrixSDHighCapacityPkts': nlMatrixSDHighCapacityPkts, 'nlMatrixSDHighCapacityOverflowOctets': nlMatrixSDHighCapacityOverflowOctets, 'nlMatrixSDHighCapacityOctets': nlMatrixSDHighCapacityOctets}


class nlMatrixDSHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, nlMatrixDSTimeMark, protocolDirLocalIndex, nlMatrixDSDestAddress, nlMatrixDSSourceAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 7, 1])
	access = 2
	columns = {'nlMatrixDSHighCapacityOverflowPkts': nlMatrixDSHighCapacityOverflowPkts, 'nlMatrixDSHighCapacityPkts': nlMatrixDSHighCapacityPkts, 'nlMatrixDSHighCapacityOverflowOctets': nlMatrixDSHighCapacityOverflowOctets, 'nlMatrixDSHighCapacityOctets': nlMatrixDSHighCapacityOctets}


class nlMatrixTopNHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlMatrixTopNControlIndex, nlMatrixTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 15, 8, 1])
	access = 2
	columns = {'nlMatrixTopNHighCapacityProtocolDirLocalIndex': nlMatrixTopNHighCapacityProtocolDirLocalIndex, 'nlMatrixTopNHighCapacitySourceAddress': nlMatrixTopNHighCapacitySourceAddress, 'nlMatrixTopNHighCapacityDestAddress': nlMatrixTopNHighCapacityDestAddress, 'nlMatrixTopNHighCapacityBasePktRate': nlMatrixTopNHighCapacityBasePktRate, 'nlMatrixTopNHighCapacityOverflowPktRate': nlMatrixTopNHighCapacityOverflowPktRate, 'nlMatrixTopNHighCapacityPktRate': nlMatrixTopNHighCapacityPktRate, 'nlMatrixTopNHighCapacityReverseBasePktRate': nlMatrixTopNHighCapacityReverseBasePktRate, 'nlMatrixTopNHighCapacityReverseOverflowPktRate': nlMatrixTopNHighCapacityReverseOverflowPktRate, 'nlMatrixTopNHighCapacityReversePktRate': nlMatrixTopNHighCapacityReversePktRate, 'nlMatrixTopNHighCapacityBaseOctetRate': nlMatrixTopNHighCapacityBaseOctetRate, 'nlMatrixTopNHighCapacityOverflowOctetRate': nlMatrixTopNHighCapacityOverflowOctetRate, 'nlMatrixTopNHighCapacityOctetRate': nlMatrixTopNHighCapacityOctetRate, 'nlMatrixTopNHighCapacityReverseBaseOctetRate': nlMatrixTopNHighCapacityReverseBaseOctetRate, 'nlMatrixTopNHighCapacityReverseOverflowOctetRate': nlMatrixTopNHighCapacityReverseOverflowOctetRate, 'nlMatrixTopNHighCapacityReverseOctetRate': nlMatrixTopNHighCapacityReverseOctetRate}


class alHostHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlHostControlIndex, alHostTimeMark, protocolDirLocalIndex, nlHostAddress, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 16, 2, 1])
	access = 2
	columns = {'alHostHighCapacityInOverflowPkts': alHostHighCapacityInOverflowPkts, 'alHostHighCapacityInPkts': alHostHighCapacityInPkts, 'alHostHighCapacityOutOverflowPkts': alHostHighCapacityOutOverflowPkts, 'alHostHighCapacityOutPkts': alHostHighCapacityOutPkts, 'alHostHighCapacityInOverflowOctets': alHostHighCapacityInOverflowOctets, 'alHostHighCapacityInOctets': alHostHighCapacityInOctets, 'alHostHighCapacityOutOverflowOctets': alHostHighCapacityOutOverflowOctets, 'alHostHighCapacityOutOctets': alHostHighCapacityOutOctets}


class alMatrixSDHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, alMatrixSDTimeMark, protocolDirLocalIndex, nlMatrixSDSourceAddress, nlMatrixSDDestAddress, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 5, 1])
	access = 2
	columns = {'alMatrixSDHighCapacityOverflowPkts': alMatrixSDHighCapacityOverflowPkts, 'alMatrixSDHighCapacityPkts': alMatrixSDHighCapacityPkts, 'alMatrixSDHighCapacityOverflowOctets': alMatrixSDHighCapacityOverflowOctets, 'alMatrixSDHighCapacityOctets': alMatrixSDHighCapacityOctets}


class alMatrixDSHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hlMatrixControlIndex, alMatrixDSTimeMark, protocolDirLocalIndex, nlMatrixDSDestAddress, nlMatrixDSSourceAddress, protocolDirLocalIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 6, 1])
	access = 2
	columns = {'alMatrixDSHighCapacityOverflowPkts': alMatrixDSHighCapacityOverflowPkts, 'alMatrixDSHighCapacityPkts': alMatrixDSHighCapacityPkts, 'alMatrixDSHighCapacityOverflowOctets': alMatrixDSHighCapacityOverflowOctets, 'alMatrixDSHighCapacityOctets': alMatrixDSHighCapacityOctets}


class alMatrixTopNHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alMatrixTopNControlIndex, alMatrixTopNIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 17, 7, 1])
	access = 2
	columns = {'alMatrixTopNHighCapacityProtocolDirLocalIndex': alMatrixTopNHighCapacityProtocolDirLocalIndex, 'alMatrixTopNHighCapacitySourceAddress': alMatrixTopNHighCapacitySourceAddress, 'alMatrixTopNHighCapacityDestAddress': alMatrixTopNHighCapacityDestAddress, 'alMatrixTopNHighCapacityAppProtocolDirLocalIndex': alMatrixTopNHighCapacityAppProtocolDirLocalIndex, 'alMatrixTopNHighCapacityBasePktRate': alMatrixTopNHighCapacityBasePktRate, 'alMatrixTopNHighCapacityOverflowPktRate': alMatrixTopNHighCapacityOverflowPktRate, 'alMatrixTopNHighCapacityPktRate': alMatrixTopNHighCapacityPktRate, 'alMatrixTopNHighCapacityReverseBasePktRate': alMatrixTopNHighCapacityReverseBasePktRate, 'alMatrixTopNHighCapacityReverseOverflowPktRate': alMatrixTopNHighCapacityReverseOverflowPktRate, 'alMatrixTopNHighCapacityReversePktRate': alMatrixTopNHighCapacityReversePktRate, 'alMatrixTopNHighCapacityBaseOctetRate': alMatrixTopNHighCapacityBaseOctetRate, 'alMatrixTopNHighCapacityOverflowOctetRate': alMatrixTopNHighCapacityOverflowOctetRate, 'alMatrixTopNHighCapacityOctetRate': alMatrixTopNHighCapacityOctetRate, 'alMatrixTopNHighCapacityReverseBaseOctetRate': alMatrixTopNHighCapacityReverseBaseOctetRate, 'alMatrixTopNHighCapacityReverseOverflowOctetRate': alMatrixTopNHighCapacityReverseOverflowOctetRate, 'alMatrixTopNHighCapacityReverseOctetRate': alMatrixTopNHighCapacityReverseOctetRate}


class usrHistoryHighCapacityEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([usrHistoryControlIndex, usrHistorySampleIndex, usrHistoryObjectIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 18, 4, 1])
	access = 2
	columns = {'usrHistoryHighCapacityOverflowAbsValue': usrHistoryHighCapacityOverflowAbsValue, 'usrHistoryHighCapacityAbsValue': usrHistoryHighCapacityAbsValue}


class mediaIndependentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mediaIndependentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 21, 1, 1])
	access = 2
	rowstatus = mediaIndependentStatus
	columns = {'mediaIndependentIndex': mediaIndependentIndex, 'mediaIndependentDataSource': mediaIndependentDataSource, 'mediaIndependentDropEvents': mediaIndependentDropEvents, 'mediaIndependentDroppedFrames': mediaIndependentDroppedFrames, 'mediaIndependentInPkts': mediaIndependentInPkts, 'mediaIndependentInOverflowPkts': mediaIndependentInOverflowPkts, 'mediaIndependentInHighCapacityPkts': mediaIndependentInHighCapacityPkts, 'mediaIndependentOutPkts': mediaIndependentOutPkts, 'mediaIndependentOutOverflowPkts': mediaIndependentOutOverflowPkts, 'mediaIndependentOutHighCapacityPkts': mediaIndependentOutHighCapacityPkts, 'mediaIndependentInOctets': mediaIndependentInOctets, 'mediaIndependentInOverflowOctets': mediaIndependentInOverflowOctets, 'mediaIndependentInHighCapacityOctets': mediaIndependentInHighCapacityOctets, 'mediaIndependentOutOctets': mediaIndependentOutOctets, 'mediaIndependentOutOverflowOctets': mediaIndependentOutOverflowOctets, 'mediaIndependentOutHighCapacityOctets': mediaIndependentOutHighCapacityOctets, 'mediaIndependentInNUCastPkts': mediaIndependentInNUCastPkts, 'mediaIndependentInNUCastOverflowPkts': mediaIndependentInNUCastOverflowPkts, 'mediaIndependentInNUCastHighCapacityPkts': mediaIndependentInNUCastHighCapacityPkts, 'mediaIndependentOutNUCastPkts': mediaIndependentOutNUCastPkts, 'mediaIndependentOutNUCastOverflowPkts': mediaIndependentOutNUCastOverflowPkts, 'mediaIndependentOutNUCastHighCapacityPkts': mediaIndependentOutNUCastHighCapacityPkts, 'mediaIndependentInErrors': mediaIndependentInErrors, 'mediaIndependentOutErrors': mediaIndependentOutErrors, 'mediaIndependentInputSpeed': mediaIndependentInputSpeed, 'mediaIndependentOutputSpeed': mediaIndependentOutputSpeed, 'mediaIndependentDuplexMode': mediaIndependentDuplexMode, 'mediaIndependentDuplexChanges': mediaIndependentDuplexChanges, 'mediaIndependentDuplexLastChange': mediaIndependentDuplexLastChange, 'mediaIndependentOwner': mediaIndependentOwner, 'mediaIndependentStatus': mediaIndependentStatus}


# notifications (traps) 
# groups 
class mediaIndependentGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 1])
	group = [mediaIndependentDataSource, mediaIndependentDropEvents, mediaIndependentDroppedFrames, mediaIndependentInPkts, mediaIndependentInOverflowPkts, mediaIndependentInHighCapacityPkts, mediaIndependentOutPkts, mediaIndependentOutOverflowPkts, mediaIndependentOutHighCapacityPkts, mediaIndependentInOctets, mediaIndependentInOverflowOctets, mediaIndependentInHighCapacityOctets, mediaIndependentOutOctets, mediaIndependentOutOverflowOctets, mediaIndependentOutHighCapacityOctets, mediaIndependentInNUCastPkts, mediaIndependentInNUCastOverflowPkts, mediaIndependentInNUCastHighCapacityPkts, mediaIndependentOutNUCastPkts, mediaIndependentOutNUCastOverflowPkts, mediaIndependentOutNUCastHighCapacityPkts, mediaIndependentInErrors, mediaIndependentOutErrors, mediaIndependentInputSpeed, mediaIndependentOutputSpeed, mediaIndependentDuplexMode, mediaIndependentDuplexChanges, mediaIndependentDuplexLastChange, mediaIndependentOwner, mediaIndependentStatus]

class etherStatsHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 2])
	group = [etherStatsHighCapacityOverflowPkts, etherStatsHighCapacityPkts, etherStatsHighCapacityOverflowOctets, etherStatsHighCapacityOctets, etherStatsHighCapacityOverflowPkts64Octets, etherStatsHighCapacityPkts64Octets, etherStatsHighCapacityOverflowPkts65to127Octets, etherStatsHighCapacityPkts65to127Octets, etherStatsHighCapacityOverflowPkts128to255Octets, etherStatsHighCapacityPkts128to255Octets, etherStatsHighCapacityOverflowPkts256to511Octets, etherStatsHighCapacityPkts256to511Octets, etherStatsHighCapacityOverflowPkts512to1023Octets, etherStatsHighCapacityPkts512to1023Octets, etherStatsHighCapacityOverflowPkts1024to1518Octets, etherStatsHighCapacityPkts1024to1518Octets]

class etherHistoryHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 3])
	group = [etherHistoryHighCapacityOverflowPkts, etherHistoryHighCapacityPkts, etherHistoryHighCapacityOverflowOctets, etherHistoryHighCapacityOctets]

class hostHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 4])
	group = [hostHighCapacityInOverflowPkts, hostHighCapacityInPkts, hostHighCapacityOutOverflowPkts, hostHighCapacityOutPkts, hostHighCapacityInOverflowOctets, hostHighCapacityInOctets, hostHighCapacityOutOverflowOctets, hostHighCapacityOutOctets, hostTimeHighCapacityInOverflowPkts, hostTimeHighCapacityInPkts, hostTimeHighCapacityOutOverflowPkts, hostTimeHighCapacityOutPkts, hostTimeHighCapacityInOverflowOctets, hostTimeHighCapacityInOctets, hostTimeHighCapacityOutOverflowOctets, hostTimeHighCapacityOutOctets]

class hostTopNHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 5])
	group = [hostTopNHighCapacityAddress, hostTopNHighCapacityBaseRate, hostTopNHighCapacityOverflowRate, hostTopNHighCapacityRate]

class matrixHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 6])
	group = [matrixSDHighCapacityOverflowPkts, matrixSDHighCapacityPkts, matrixSDHighCapacityOverflowOctets, matrixSDHighCapacityOctets, matrixDSHighCapacityOverflowPkts, matrixDSHighCapacityPkts, matrixDSHighCapacityOverflowOctets, matrixDSHighCapacityOctets]

class captureBufferHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 7])
	group = [captureBufferPacketHighCapacityTime]

class protocolDistributionHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 8])
	group = [protocolDistStatsHighCapacityOverflowPkts, protocolDistStatsHighCapacityPkts, protocolDistStatsHighCapacityOverflowOctets, protocolDistStatsHighCapacityOctets]

class nlHostHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 9])
	group = [nlHostHighCapacityInOverflowPkts, nlHostHighCapacityInPkts, nlHostHighCapacityOutOverflowPkts, nlHostHighCapacityOutPkts, nlHostHighCapacityInOverflowOctets, nlHostHighCapacityInOctets, nlHostHighCapacityOutOverflowOctets, nlHostHighCapacityOutOctets]

class nlMatrixHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 10])
	group = [nlMatrixSDHighCapacityOverflowPkts, nlMatrixSDHighCapacityPkts, nlMatrixSDHighCapacityOverflowOctets, nlMatrixSDHighCapacityOctets, nlMatrixDSHighCapacityOverflowPkts, nlMatrixDSHighCapacityPkts, nlMatrixDSHighCapacityOverflowOctets, nlMatrixDSHighCapacityOctets]

class nlMatrixTopNHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 11])
	group = [nlMatrixTopNHighCapacityProtocolDirLocalIndex, nlMatrixTopNHighCapacitySourceAddress, nlMatrixTopNHighCapacityDestAddress, nlMatrixTopNHighCapacityBasePktRate, nlMatrixTopNHighCapacityOverflowPktRate, nlMatrixTopNHighCapacityPktRate, nlMatrixTopNHighCapacityReverseBasePktRate, nlMatrixTopNHighCapacityReverseOverflowPktRate, nlMatrixTopNHighCapacityReversePktRate, nlMatrixTopNHighCapacityBaseOctetRate, nlMatrixTopNHighCapacityOverflowOctetRate, nlMatrixTopNHighCapacityOctetRate, nlMatrixTopNHighCapacityReverseBaseOctetRate, nlMatrixTopNHighCapacityReverseOverflowOctetRate, nlMatrixTopNHighCapacityReverseOctetRate]

class alHostHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 12])
	group = [alHostHighCapacityInOverflowPkts, alHostHighCapacityInPkts, alHostHighCapacityOutOverflowPkts, alHostHighCapacityOutPkts, alHostHighCapacityInOverflowOctets, alHostHighCapacityInOctets, alHostHighCapacityOutOverflowOctets, alHostHighCapacityOutOctets]

class alMatrixHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 13])
	group = [alMatrixSDHighCapacityOverflowPkts, alMatrixSDHighCapacityPkts, alMatrixSDHighCapacityOverflowOctets, alMatrixSDHighCapacityOctets, alMatrixDSHighCapacityOverflowPkts, alMatrixDSHighCapacityPkts, alMatrixDSHighCapacityOverflowOctets, alMatrixDSHighCapacityOctets]

class alMatrixTopNHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 14])
	group = [alMatrixTopNHighCapacityProtocolDirLocalIndex, alMatrixTopNHighCapacitySourceAddress, alMatrixTopNHighCapacityDestAddress, alMatrixTopNHighCapacityAppProtocolDirLocalIndex, alMatrixTopNHighCapacityBasePktRate, alMatrixTopNHighCapacityOverflowPktRate, alMatrixTopNHighCapacityPktRate, alMatrixTopNHighCapacityReverseBasePktRate, alMatrixTopNHighCapacityReverseOverflowPktRate, alMatrixTopNHighCapacityReversePktRate, alMatrixTopNHighCapacityBaseOctetRate, alMatrixTopNHighCapacityOverflowOctetRate, alMatrixTopNHighCapacityOctetRate, alMatrixTopNHighCapacityReverseBaseOctetRate, alMatrixTopNHighCapacityReverseOverflowOctetRate, alMatrixTopNHighCapacityReverseOctetRate]

class usrHistoryHighCapacityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 15])
	group = [usrHistoryHighCapacityOverflowAbsValue, usrHistoryHighCapacityAbsValue]

class hcRMONInformationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 20, 7, 16])
	group = [hcRMONCapabilities]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
