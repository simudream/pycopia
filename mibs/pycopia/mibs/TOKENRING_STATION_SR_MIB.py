# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from RFC1213_MIB import mib_2, ifIndex
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, MacAddress

class TOKENRING_STATION_SR_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/TOKENRING-STATION-SR-MIB'
	conformance = 2
	name = 'TOKENRING-STATION-SR-MIB'
	language = 2
	description = 'The MIB module for managing source routes in\nend-stations on IEEE 802.5 Token Ring networks.'

# nodes
class dot5SrMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42])
	name = 'dot5SrMIB'

class dot5SrMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 1])
	name = 'dot5SrMIBObjects'

class dot5SrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 2])
	name = 'dot5SrConformance'

class dot5SrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 2, 1])
	name = 'dot5SrGroups'

class dot5SrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 2, 2])
	name = 'dot5SrCompliances'


# macros
# types 

class SourceRoute(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 30))
	format = '1x:'

# scalars 
# columns
class dot5SrRouteDestination(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class dot5SrRouteControl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class dot5SrRouteDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 4])
	syntaxobject = SourceRoute


class dot5SrRouteStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class dot5SrRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, dot5SrRouteDestination], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 1, 1, 1])
	access = 2
	rowstatus = dot5SrRouteStatus
	columns = {'dot5SrRouteDestination': dot5SrRouteDestination, 'dot5SrRouteControl': dot5SrRouteControl, 'dot5SrRouteDescr': dot5SrRouteDescr, 'dot5SrRouteStatus': dot5SrRouteStatus}


# notifications (traps) 
# groups 
class dot5SrRouteGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 42, 2, 1, 1])
	group = [dot5SrRouteControl, dot5SrRouteDescr, dot5SrRouteStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
