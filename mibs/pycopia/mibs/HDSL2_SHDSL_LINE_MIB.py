# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import ifIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Unsigned32, Gauge32, NOTIFICATION_TYPE, Integer32, transmission
from PerfHist_TC_MIB import PerfCurrentCount, PerfIntervalCount
from SNMPv2_TC import RowStatus, TEXTUAL_CONVENTION

class HDSL2_SHDSL_LINE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/HDSL2-SHDSL-LINE-MIB'
	conformance = 132
	name = 'HDSL2-SHDSL-LINE-MIB'
	language = 2
	description = 'This MIB module defines a collection of objects for managing\nHDSL2/SHDSL lines.  An agent may reside at either end of the\nline; however, the MIB module is designed to require no\nmanagement communication between the modems beyond that\ninherent in the low-level EOC line protocol as defined in\nANSI T1E1.4/2000-006 (for HDSL2 lines) or in ITU G.991.2\n(for SHDSL lines).\n\nCopyright (C) The Internet Society (2005).  This version of\nthis MIB module is part of RFC 4319; see the RFC itself for\nfull legal notices.'

# nodes
class hdsl2ShdslMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48])
	name = 'hdsl2ShdslMIB'

class hdsl2ShdslNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0])
	name = 'hdsl2ShdslNotifications'

class hdsl2ShdslMibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1])
	name = 'hdsl2ShdslMibObjects'

class hdsl2ShdslConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3])
	name = 'hdsl2ShdslConformance'

class hdsl2ShdslGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1])
	name = 'hdsl2ShdslGroups'

class hdsl2ShdslCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 2])
	name = 'hdsl2ShdslCompliances'


# macros
# types 

class Hdsl2ShdslPerfCurrDayCount(pycopia.SMI.Basetypes.Gauge32):
	status = 1
	format = 'd'


class Hdsl2Shdsl1DayIntervalCount(pycopia.SMI.Basetypes.Gauge32):
	status = 1
	format = 'd'


class Hdsl2ShdslPerfTimeElapsed(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 86399))
	format = 'd'


class Hdsl2ShdslPerfIntervalThreshold(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 900))
	format = 'd'


class Hdsl2ShdslUnitId(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'xtuC'), Enum(2, 'xtuR'), Enum(3, 'xru1'), Enum(4, 'xru2'), Enum(5, 'xru3'), Enum(6, 'xru4'), Enum(7, 'xru5'), Enum(8, 'xru6'), Enum(9, 'xru7'), Enum(10, 'xru8')]


class Hdsl2ShdslUnitSide(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'networkSide'), Enum(2, 'customerSide')]


class Hdsl2ShdslWirePair(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'wirePair1'), Enum(2, 'wirePair2'), Enum(3, 'wirePair3'), Enum(4, 'wirePair4')]


class Hdsl2ShdslTransmissionModeType(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'region1'), Enum(1, 'region2')]


class Hdsl2ShdslClockReferenceType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'localClk'), Enum(2, 'networkClk'), Enum(3, 'dataOrNetworkClk'), Enum(4, 'dataClk')]

# scalars 
# columns
class hdsl2ShdslSpanConfNumRepeaters(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'repeaters'


class hdsl2ShdslSpanConfProfile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1, 2])
	syntaxobject = SnmpAdminString


class hdsl2ShdslSpanConfAlarmProfile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1, 3])
	syntaxobject = SnmpAdminString


class hdsl2ShdslStatusNumAvailRepeaters(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hdsl2ShdslStatusMaxAttainableLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bps'


class hdsl2ShdslStatusActualLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bps'


class hdsl2ShdslStatusTransmissionModeCurrent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 4])
	syntaxobject = Hdsl2ShdslTransmissionModeType


class hdsl2ShdslStatusMaxAttainablePayloadRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bps'


class hdsl2ShdslStatusActualPayloadRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bps'


class hdsl2ShdslInvIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 1])
	syntaxobject = Hdsl2ShdslUnitId


class hdsl2ShdslInvVendorID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvVendorModelNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvVendorSerialNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvVendorEOCSoftwareVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hdsl2ShdslInvStandardVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hdsl2ShdslInvVendorListNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvVendorIssueNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvVendorSoftwareVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvEquipmentCode(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvVendorOther(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hdsl2ShdslInvTransmissionModeCapability(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 12])
	syntaxobject = Hdsl2ShdslTransmissionModeType


class hdsl2ShdslEndpointSide(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1, 1])
	syntaxobject = Hdsl2ShdslUnitSide


class hdsl2ShdslEndpointWirePair(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1, 2])
	syntaxobject = Hdsl2ShdslWirePair


class hdsl2ShdslEndpointAlarmConfProfile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1, 3])
	syntaxobject = SnmpAdminString


class hdsl2ShdslEndpointCurrAtn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class hdsl2ShdslEndpointCurrSnrMgn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'dB'


class hdsl2ShdslEndpointCurrStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class hdsl2ShdslEndpointES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointSES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCRCanomalies(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'detected CRC Anomalies'


class hdsl2ShdslEndpointLOSWS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointUAS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr15MinTimeElapsed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 9])
	syntaxobject = Hdsl2ShdslPerfTimeElapsed
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr15MinES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 10])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr15MinSES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 11])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr15MinCRCanomalies(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 12])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'detected CRC Anomalies'


class hdsl2ShdslEndpointCurr15MinLOSWS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 13])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr15MinUAS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 14])
	syntaxobject = PerfCurrentCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr1DayTimeElapsed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 15])
	syntaxobject = Hdsl2ShdslPerfTimeElapsed
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr1DayES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 16])
	syntaxobject = Hdsl2ShdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr1DaySES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 17])
	syntaxobject = Hdsl2ShdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr1DayCRCanomalies(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 18])
	syntaxobject = Hdsl2ShdslPerfCurrDayCount
	access = 4
	units = 'detected CRC Anomalies'


class hdsl2ShdslEndpointCurr1DayLOSWS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 19])
	syntaxobject = Hdsl2ShdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurr1DayUAS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 20])
	syntaxobject = Hdsl2ShdslPerfCurrDayCount
	access = 4
	units = 'seconds'


class hdsl2ShdslEndpointCurrTipRingReversal(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'reversed')]


class hdsl2ShdslEndpointCurrActivationState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'preActivation'), Enum(2, 'activation'), Enum(3, 'data')]


class hdsl2Shdsl15MinIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hdsl2Shdsl15MinIntervalES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 2])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl15MinIntervalSES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 3])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl15MinIntervalCRCanomalies(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 4])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'detected CRC Anomalies'


class hdsl2Shdsl15MinIntervalLOSWS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 5])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl15MinIntervalUAS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 6])
	syntaxobject = PerfIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl1DayIntervalNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hdsl2Shdsl1DayIntervalMoniSecs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 2])
	syntaxobject = Hdsl2ShdslPerfTimeElapsed
	access = 4
	units = 'seconds'


class hdsl2Shdsl1DayIntervalES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 3])
	syntaxobject = Hdsl2Shdsl1DayIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl1DayIntervalSES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 4])
	syntaxobject = Hdsl2Shdsl1DayIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl1DayIntervalCRCanomalies(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 5])
	syntaxobject = Hdsl2Shdsl1DayIntervalCount
	access = 4
	units = 'detected CRC Anomalies'


class hdsl2Shdsl1DayIntervalLOSWS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 6])
	syntaxobject = Hdsl2Shdsl1DayIntervalCount
	access = 4
	units = 'seconds'


class hdsl2Shdsl1DayIntervalUAS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 7])
	syntaxobject = Hdsl2Shdsl1DayIntervalCount
	access = 4
	units = 'seconds'


class hdsl2ShdslMaintLoopbackConfig(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noLoopback'), Enum(2, 'normalLoopback'), Enum(3, 'specialLoopback')]


class hdsl2ShdslMaintTipRingReversal(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'reversed')]


class hdsl2ShdslMaintPowerBackOff(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'default'), Enum(2, 'enhanced')]


class hdsl2ShdslMaintSoftRestart(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ready'), Enum(2, 'restart')]


class hdsl2ShdslMaintLoopbackTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class hdsl2ShdslMaintUnitPowerSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'local'), Enum(2, 'span')]


class hdsl2ShdslSpanConfProfileName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 1])
	syntaxobject = SnmpAdminString


class hdsl2ShdslSpanConfWireInterface(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'twoWire'), Enum(2, 'fourWire'), Enum(3, 'sixWire'), Enum(4, 'eightWire')]


class hdsl2ShdslSpanConfMinLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'bps'


class hdsl2ShdslSpanConfMaxLineRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'bps'


class hdsl2ShdslSpanConfPSD(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'symmetric'), Enum(2, 'asymmetric')]


class hdsl2ShdslSpanConfTransmissionMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 6])
	syntaxobject = Hdsl2ShdslTransmissionModeType


class hdsl2ShdslSpanConfRemoteEnabled(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class hdsl2ShdslSpanConfPowerFeeding(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPower'), Enum(2, 'powerFeed'), Enum(3, 'wettingCurrent')]


class hdsl2ShdslSpanConfCurrCondTargetMarginDown(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'dB'


class hdsl2ShdslSpanConfWorstCaseTargetMarginDown(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'dB'


class hdsl2ShdslSpanConfCurrCondTargetMarginUp(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'dB'


class hdsl2ShdslSpanConfWorstCaseTargetMarginUp(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'dB'


class hdsl2ShdslSpanConfUsedTargetMargins(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class hdsl2ShdslSpanConfReferenceClock(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 14])
	syntaxobject = Hdsl2ShdslClockReferenceType


class hdsl2ShdslSpanConfLineProbeEnable(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disable'), Enum(2, 'enable')]


class hdsl2ShdslSpanConfProfileRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hdsl2ShdslEndpointAlarmConfProfileName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 1])
	syntaxobject = SnmpAdminString


class hdsl2ShdslEndpointThreshLoopAttenuation(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'dB'


class hdsl2ShdslEndpointThreshSNRMargin(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'dB'


class hdsl2ShdslEndpointThreshES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 4])
	syntaxobject = Hdsl2ShdslPerfIntervalThreshold
	access = 5
	units = 'seconds'


class hdsl2ShdslEndpointThreshSES(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 5])
	syntaxobject = Hdsl2ShdslPerfIntervalThreshold
	access = 5
	units = 'seconds'


class hdsl2ShdslEndpointThreshCRCanomalies(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'detected CRC Anomalies'


class hdsl2ShdslEndpointThreshLOSWS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 7])
	syntaxobject = Hdsl2ShdslPerfIntervalThreshold
	access = 5
	units = 'seconds'


class hdsl2ShdslEndpointThreshUAS(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 8])
	syntaxobject = Hdsl2ShdslPerfIntervalThreshold
	access = 5
	units = 'seconds'


class hdsl2ShdslEndpointAlarmConfProfileRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class hdsl2ShdslSpanConfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1])
	access = 2
	columns = {'hdsl2ShdslSpanConfNumRepeaters': hdsl2ShdslSpanConfNumRepeaters, 'hdsl2ShdslSpanConfProfile': hdsl2ShdslSpanConfProfile, 'hdsl2ShdslSpanConfAlarmProfile': hdsl2ShdslSpanConfAlarmProfile}


class hdsl2ShdslSpanStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1])
	access = 2
	columns = {'hdsl2ShdslStatusNumAvailRepeaters': hdsl2ShdslStatusNumAvailRepeaters, 'hdsl2ShdslStatusMaxAttainableLineRate': hdsl2ShdslStatusMaxAttainableLineRate, 'hdsl2ShdslStatusActualLineRate': hdsl2ShdslStatusActualLineRate, 'hdsl2ShdslStatusTransmissionModeCurrent': hdsl2ShdslStatusTransmissionModeCurrent, 'hdsl2ShdslStatusMaxAttainablePayloadRate': hdsl2ShdslStatusMaxAttainablePayloadRate, 'hdsl2ShdslStatusActualPayloadRate': hdsl2ShdslStatusActualPayloadRate}


class hdsl2ShdslInventoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1])
	access = 2
	columns = {'hdsl2ShdslInvIndex': hdsl2ShdslInvIndex, 'hdsl2ShdslInvVendorID': hdsl2ShdslInvVendorID, 'hdsl2ShdslInvVendorModelNumber': hdsl2ShdslInvVendorModelNumber, 'hdsl2ShdslInvVendorSerialNumber': hdsl2ShdslInvVendorSerialNumber, 'hdsl2ShdslInvVendorEOCSoftwareVersion': hdsl2ShdslInvVendorEOCSoftwareVersion, 'hdsl2ShdslInvStandardVersion': hdsl2ShdslInvStandardVersion, 'hdsl2ShdslInvVendorListNumber': hdsl2ShdslInvVendorListNumber, 'hdsl2ShdslInvVendorIssueNumber': hdsl2ShdslInvVendorIssueNumber, 'hdsl2ShdslInvVendorSoftwareVersion': hdsl2ShdslInvVendorSoftwareVersion, 'hdsl2ShdslInvEquipmentCode': hdsl2ShdslInvEquipmentCode, 'hdsl2ShdslInvVendorOther': hdsl2ShdslInvVendorOther, 'hdsl2ShdslInvTransmissionModeCapability': hdsl2ShdslInvTransmissionModeCapability}


class hdsl2ShdslEndpointConfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex, hdsl2ShdslEndpointSide, hdsl2ShdslEndpointWirePair], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1])
	access = 2
	columns = {'hdsl2ShdslEndpointSide': hdsl2ShdslEndpointSide, 'hdsl2ShdslEndpointWirePair': hdsl2ShdslEndpointWirePair, 'hdsl2ShdslEndpointAlarmConfProfile': hdsl2ShdslEndpointAlarmConfProfile}


class hdsl2ShdslEndpointCurrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex, hdsl2ShdslEndpointSide, hdsl2ShdslEndpointWirePair], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1])
	access = 2
	columns = {'hdsl2ShdslEndpointCurrAtn': hdsl2ShdslEndpointCurrAtn, 'hdsl2ShdslEndpointCurrSnrMgn': hdsl2ShdslEndpointCurrSnrMgn, 'hdsl2ShdslEndpointCurrStatus': hdsl2ShdslEndpointCurrStatus, 'hdsl2ShdslEndpointES': hdsl2ShdslEndpointES, 'hdsl2ShdslEndpointSES': hdsl2ShdslEndpointSES, 'hdsl2ShdslEndpointCRCanomalies': hdsl2ShdslEndpointCRCanomalies, 'hdsl2ShdslEndpointLOSWS': hdsl2ShdslEndpointLOSWS, 'hdsl2ShdslEndpointUAS': hdsl2ShdslEndpointUAS, 'hdsl2ShdslEndpointCurr15MinTimeElapsed': hdsl2ShdslEndpointCurr15MinTimeElapsed, 'hdsl2ShdslEndpointCurr15MinES': hdsl2ShdslEndpointCurr15MinES, 'hdsl2ShdslEndpointCurr15MinSES': hdsl2ShdslEndpointCurr15MinSES, 'hdsl2ShdslEndpointCurr15MinCRCanomalies': hdsl2ShdslEndpointCurr15MinCRCanomalies, 'hdsl2ShdslEndpointCurr15MinLOSWS': hdsl2ShdslEndpointCurr15MinLOSWS, 'hdsl2ShdslEndpointCurr15MinUAS': hdsl2ShdslEndpointCurr15MinUAS, 'hdsl2ShdslEndpointCurr1DayTimeElapsed': hdsl2ShdslEndpointCurr1DayTimeElapsed, 'hdsl2ShdslEndpointCurr1DayES': hdsl2ShdslEndpointCurr1DayES, 'hdsl2ShdslEndpointCurr1DaySES': hdsl2ShdslEndpointCurr1DaySES, 'hdsl2ShdslEndpointCurr1DayCRCanomalies': hdsl2ShdslEndpointCurr1DayCRCanomalies, 'hdsl2ShdslEndpointCurr1DayLOSWS': hdsl2ShdslEndpointCurr1DayLOSWS, 'hdsl2ShdslEndpointCurr1DayUAS': hdsl2ShdslEndpointCurr1DayUAS, 'hdsl2ShdslEndpointCurrTipRingReversal': hdsl2ShdslEndpointCurrTipRingReversal, 'hdsl2ShdslEndpointCurrActivationState': hdsl2ShdslEndpointCurrActivationState}


class hdsl2Shdsl15MinIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex, hdsl2ShdslEndpointSide, hdsl2ShdslEndpointWirePair, hdsl2Shdsl15MinIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1])
	access = 2
	columns = {'hdsl2Shdsl15MinIntervalNumber': hdsl2Shdsl15MinIntervalNumber, 'hdsl2Shdsl15MinIntervalES': hdsl2Shdsl15MinIntervalES, 'hdsl2Shdsl15MinIntervalSES': hdsl2Shdsl15MinIntervalSES, 'hdsl2Shdsl15MinIntervalCRCanomalies': hdsl2Shdsl15MinIntervalCRCanomalies, 'hdsl2Shdsl15MinIntervalLOSWS': hdsl2Shdsl15MinIntervalLOSWS, 'hdsl2Shdsl15MinIntervalUAS': hdsl2Shdsl15MinIntervalUAS}


class hdsl2Shdsl1DayIntervalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex, hdsl2ShdslEndpointSide, hdsl2ShdslEndpointWirePair, hdsl2Shdsl1DayIntervalNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1])
	access = 2
	columns = {'hdsl2Shdsl1DayIntervalNumber': hdsl2Shdsl1DayIntervalNumber, 'hdsl2Shdsl1DayIntervalMoniSecs': hdsl2Shdsl1DayIntervalMoniSecs, 'hdsl2Shdsl1DayIntervalES': hdsl2Shdsl1DayIntervalES, 'hdsl2Shdsl1DayIntervalSES': hdsl2Shdsl1DayIntervalSES, 'hdsl2Shdsl1DayIntervalCRCanomalies': hdsl2Shdsl1DayIntervalCRCanomalies, 'hdsl2Shdsl1DayIntervalLOSWS': hdsl2Shdsl1DayIntervalLOSWS, 'hdsl2Shdsl1DayIntervalUAS': hdsl2Shdsl1DayIntervalUAS}


class hdsl2ShdslEndpointMaintEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex, hdsl2ShdslEndpointSide], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1])
	access = 2
	columns = {'hdsl2ShdslMaintLoopbackConfig': hdsl2ShdslMaintLoopbackConfig, 'hdsl2ShdslMaintTipRingReversal': hdsl2ShdslMaintTipRingReversal, 'hdsl2ShdslMaintPowerBackOff': hdsl2ShdslMaintPowerBackOff, 'hdsl2ShdslMaintSoftRestart': hdsl2ShdslMaintSoftRestart}


class hdsl2ShdslUnitMaintEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, hdsl2ShdslInvIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 9, 1])
	access = 2
	columns = {'hdsl2ShdslMaintLoopbackTimeout': hdsl2ShdslMaintLoopbackTimeout, 'hdsl2ShdslMaintUnitPowerSource': hdsl2ShdslMaintUnitPowerSource}


class hdsl2ShdslSpanConfProfileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hdsl2ShdslSpanConfProfileName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1])
	access = 2
	rowstatus = hdsl2ShdslSpanConfProfileRowStatus
	columns = {'hdsl2ShdslSpanConfProfileName': hdsl2ShdslSpanConfProfileName, 'hdsl2ShdslSpanConfWireInterface': hdsl2ShdslSpanConfWireInterface, 'hdsl2ShdslSpanConfMinLineRate': hdsl2ShdslSpanConfMinLineRate, 'hdsl2ShdslSpanConfMaxLineRate': hdsl2ShdslSpanConfMaxLineRate, 'hdsl2ShdslSpanConfPSD': hdsl2ShdslSpanConfPSD, 'hdsl2ShdslSpanConfTransmissionMode': hdsl2ShdslSpanConfTransmissionMode, 'hdsl2ShdslSpanConfRemoteEnabled': hdsl2ShdslSpanConfRemoteEnabled, 'hdsl2ShdslSpanConfPowerFeeding': hdsl2ShdslSpanConfPowerFeeding, 'hdsl2ShdslSpanConfCurrCondTargetMarginDown': hdsl2ShdslSpanConfCurrCondTargetMarginDown, 'hdsl2ShdslSpanConfWorstCaseTargetMarginDown': hdsl2ShdslSpanConfWorstCaseTargetMarginDown, 'hdsl2ShdslSpanConfCurrCondTargetMarginUp': hdsl2ShdslSpanConfCurrCondTargetMarginUp, 'hdsl2ShdslSpanConfWorstCaseTargetMarginUp': hdsl2ShdslSpanConfWorstCaseTargetMarginUp, 'hdsl2ShdslSpanConfUsedTargetMargins': hdsl2ShdslSpanConfUsedTargetMargins, 'hdsl2ShdslSpanConfReferenceClock': hdsl2ShdslSpanConfReferenceClock, 'hdsl2ShdslSpanConfLineProbeEnable': hdsl2ShdslSpanConfLineProbeEnable, 'hdsl2ShdslSpanConfProfileRowStatus': hdsl2ShdslSpanConfProfileRowStatus}


class hdsl2ShdslEndpointAlarmConfProfileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hdsl2ShdslEndpointAlarmConfProfileName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1])
	access = 2
	rowstatus = hdsl2ShdslEndpointAlarmConfProfileRowStatus
	columns = {'hdsl2ShdslEndpointAlarmConfProfileName': hdsl2ShdslEndpointAlarmConfProfileName, 'hdsl2ShdslEndpointThreshLoopAttenuation': hdsl2ShdslEndpointThreshLoopAttenuation, 'hdsl2ShdslEndpointThreshSNRMargin': hdsl2ShdslEndpointThreshSNRMargin, 'hdsl2ShdslEndpointThreshES': hdsl2ShdslEndpointThreshES, 'hdsl2ShdslEndpointThreshSES': hdsl2ShdslEndpointThreshSES, 'hdsl2ShdslEndpointThreshCRCanomalies': hdsl2ShdslEndpointThreshCRCanomalies, 'hdsl2ShdslEndpointThreshLOSWS': hdsl2ShdslEndpointThreshLOSWS, 'hdsl2ShdslEndpointThreshUAS': hdsl2ShdslEndpointThreshUAS, 'hdsl2ShdslEndpointAlarmConfProfileRowStatus': hdsl2ShdslEndpointAlarmConfProfileRowStatus}


# notifications (traps) 
class hdsl2ShdslLoopAttenCrossing(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 1])

class hdsl2ShdslSNRMarginCrossing(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 2])

class hdsl2ShdslPerfESThresh(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 3])

class hdsl2ShdslPerfSESThresh(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 4])

class hdsl2ShdslPerfCRCanomaliesThresh(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 5])

class hdsl2ShdslPerfLOSWSThresh(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 6])

class hdsl2ShdslPerfUASThresh(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 7])

class hdsl2ShdslSpanInvalidNumRepeaters(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 8])

class hdsl2ShdslLoopbackFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 9])

class hdsl2ShdslpowerBackoff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 10])

class hdsl2ShdsldeviceFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 11])

class hdsl2ShdsldcContinuityFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 12])

class hdsl2ShdslconfigInitFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 13])

class hdsl2ShdslprotocolInitFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 14])

class hdsl2ShdslnoNeighborPresent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 15])

class hdsl2ShdslLocalPowerLoss(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 0, 16])

# groups 
class hdsl2ShdslSpanConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 1])
	group = [hdsl2ShdslSpanConfNumRepeaters, hdsl2ShdslSpanConfProfile, hdsl2ShdslSpanConfAlarmProfile]

class hdsl2ShdslSpanStatusGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 2])
	group = [hdsl2ShdslStatusNumAvailRepeaters]

class hdsl2ShdslInventoryShdslGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 3])
	group = [hdsl2ShdslInvTransmissionModeCapability]

class hdsl2ShdslSpanShdslStatusGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 4])
	group = [hdsl2ShdslStatusMaxAttainableLineRate, hdsl2ShdslStatusActualLineRate, hdsl2ShdslStatusTransmissionModeCurrent]

class hdsl2ShdslInventoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 5])
	group = [hdsl2ShdslInvVendorID, hdsl2ShdslInvVendorModelNumber, hdsl2ShdslInvVendorSerialNumber, hdsl2ShdslInvVendorEOCSoftwareVersion, hdsl2ShdslInvStandardVersion, hdsl2ShdslInvVendorListNumber, hdsl2ShdslInvVendorIssueNumber, hdsl2ShdslInvVendorSoftwareVersion, hdsl2ShdslInvEquipmentCode, hdsl2ShdslInvVendorOther]

class hdsl2ShdslEndpointConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 6])
	group = [hdsl2ShdslEndpointCurrAtn]

class hdsl2ShdslEndpointCurrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 7])
	group = [hdsl2ShdslEndpointCurrAtn, hdsl2ShdslEndpointCurrSnrMgn, hdsl2ShdslEndpointCurrStatus, hdsl2ShdslEndpointES, hdsl2ShdslEndpointSES, hdsl2ShdslEndpointCRCanomalies, hdsl2ShdslEndpointLOSWS, hdsl2ShdslEndpointUAS, hdsl2ShdslEndpointCurr15MinTimeElapsed, hdsl2ShdslEndpointCurr15MinES, hdsl2ShdslEndpointCurr15MinSES, hdsl2ShdslEndpointCurr15MinCRCanomalies, hdsl2ShdslEndpointCurr15MinLOSWS, hdsl2ShdslEndpointCurr15MinUAS, hdsl2ShdslEndpointCurr1DayTimeElapsed, hdsl2ShdslEndpointCurr1DayES, hdsl2ShdslEndpointCurr1DaySES, hdsl2ShdslEndpointCurr1DayCRCanomalies, hdsl2ShdslEndpointCurr1DayLOSWS, hdsl2ShdslEndpointCurr1DayUAS]

class hdsl2Shdsl15MinIntervalGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 8])
	group = [hdsl2Shdsl15MinIntervalES, hdsl2Shdsl15MinIntervalSES, hdsl2Shdsl15MinIntervalCRCanomalies, hdsl2Shdsl15MinIntervalLOSWS, hdsl2Shdsl15MinIntervalUAS]

class hdsl2Shdsl1DayIntervalGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 9])
	group = [hdsl2Shdsl1DayIntervalMoniSecs, hdsl2Shdsl1DayIntervalES, hdsl2Shdsl1DayIntervalSES, hdsl2Shdsl1DayIntervalCRCanomalies, hdsl2Shdsl1DayIntervalLOSWS, hdsl2Shdsl1DayIntervalUAS]

class hdsl2ShdslMaintenanceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 10])
	group = [hdsl2ShdslMaintLoopbackConfig, hdsl2ShdslMaintTipRingReversal, hdsl2ShdslMaintPowerBackOff, hdsl2ShdslMaintSoftRestart, hdsl2ShdslMaintLoopbackTimeout, hdsl2ShdslMaintUnitPowerSource]

class hdsl2ShdslEndpointAlarmConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 11])
	group = [hdsl2ShdslEndpointAlarmConfProfile, hdsl2ShdslEndpointThreshLoopAttenuation, hdsl2ShdslEndpointThreshSNRMargin, hdsl2ShdslEndpointThreshES, hdsl2ShdslEndpointThreshSES, hdsl2ShdslEndpointThreshCRCanomalies, hdsl2ShdslEndpointThreshLOSWS, hdsl2ShdslEndpointThreshUAS, hdsl2ShdslEndpointAlarmConfProfileRowStatus]

class hdsl2ShdslNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 12])
	group = [hdsl2ShdslLoopAttenCrossing, hdsl2ShdslSNRMarginCrossing, hdsl2ShdslPerfESThresh, hdsl2ShdslPerfSESThresh, hdsl2ShdslPerfCRCanomaliesThresh, hdsl2ShdslPerfLOSWSThresh, hdsl2ShdslPerfUASThresh, hdsl2ShdslSpanInvalidNumRepeaters, hdsl2ShdslLoopbackFailure, hdsl2ShdslpowerBackoff, hdsl2ShdsldeviceFault, hdsl2ShdsldcContinuityFault, hdsl2ShdslconfigInitFailure, hdsl2ShdslprotocolInitFailure, hdsl2ShdslnoNeighborPresent, hdsl2ShdslLocalPowerLoss]

class hdsl2ShdslSpanConfProfileGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 13])
	group = [hdsl2ShdslSpanConfWireInterface, hdsl2ShdslSpanConfMinLineRate, hdsl2ShdslSpanConfMaxLineRate, hdsl2ShdslSpanConfPSD, hdsl2ShdslSpanConfTransmissionMode, hdsl2ShdslSpanConfRemoteEnabled, hdsl2ShdslSpanConfPowerFeeding, hdsl2ShdslSpanConfCurrCondTargetMarginDown, hdsl2ShdslSpanConfWorstCaseTargetMarginDown, hdsl2ShdslSpanConfCurrCondTargetMarginUp, hdsl2ShdslSpanConfWorstCaseTargetMarginUp, hdsl2ShdslSpanConfUsedTargetMargins, hdsl2ShdslSpanConfReferenceClock, hdsl2ShdslSpanConfLineProbeEnable, hdsl2ShdslSpanConfProfileRowStatus]

class hdsl2ShdslWirePairGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 14])
	group = [hdsl2ShdslEndpointCurrTipRingReversal, hdsl2ShdslEndpointCurrActivationState]

class hdsl2ShdslPayloadRateGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 15])
	group = [hdsl2ShdslStatusMaxAttainablePayloadRate, hdsl2ShdslStatusActualPayloadRate]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
