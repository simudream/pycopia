# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import InterfaceIndexOrZero
from SNMPv2_SMI import OBJECT_TYPE, MODULE_IDENTITY, Unsigned32
from MPLS_TC_STD_MIB import mplsStdMIB
from MPLS_LDP_STD_MIB import mplsLdpEntityLdpId, mplsLdpEntityIndex
from SNMPv2_TC import RowStatus, StorageType

class MPLS_LDP_GENERIC_STD_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/MPLS-LDP-GENERIC-STD-MIB'
	conformance = 4
	name = 'MPLS-LDP-GENERIC-STD-MIB'
	language = 2
	description = 'Copyright (C) The Internet Society (year). The\ninitial version of this MIB module was published\nin RFC 3815. For full legal notices see the RFC\nitself or see:\nhttp://www.ietf.org/copyrights/ianamib.html\n\nThis MIB contains managed object definitions for\nconfiguring and monitoring the Multiprotocol Label\nSwitching (MPLS), Label Distribution Protocol (LDP),\nutilizing ethernet as the Layer 2 media.'

# nodes
class mplsLdpGenericStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7])
	name = 'mplsLdpGenericStdMIB'

class mplsLdpGenericObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1])
	name = 'mplsLdpGenericObjects'

class mplsLdpEntityGenericObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1])
	name = 'mplsLdpEntityGenericObjects'

class mplsLdpGenericConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 2])
	name = 'mplsLdpGenericConformance'

class mplsLdpGenericGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 2, 1])
	name = 'mplsLdpGenericGroups'

class mplsLdpGenericCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 2, 2])
	name = 'mplsLdpGenericCompliances'


# macros
# types 
# scalars 
# columns
class mplsLdpEntityGenericLRMin(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpEntityGenericLRMax(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mplsLdpEntityGenericLabelSpace(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'perPlatform'), Enum(2, 'perInterface')]


class mplsLdpEntityGenericIfIndexOrZero(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1, 4])
	syntaxobject = InterfaceIndexOrZero


class mplsLdpEntityGenericLRStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsLdpEntityGenericLRRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class mplsLdpEntityGenericLREntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpEntityGenericLRMin, mplsLdpEntityGenericLRMax], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 1, 1, 1, 1])
	access = 2
	rowstatus = mplsLdpEntityGenericLRRowStatus
	columns = {'mplsLdpEntityGenericLRMin': mplsLdpEntityGenericLRMin, 'mplsLdpEntityGenericLRMax': mplsLdpEntityGenericLRMax, 'mplsLdpEntityGenericLabelSpace': mplsLdpEntityGenericLabelSpace, 'mplsLdpEntityGenericIfIndexOrZero': mplsLdpEntityGenericIfIndexOrZero, 'mplsLdpEntityGenericLRStorageType': mplsLdpEntityGenericLRStorageType, 'mplsLdpEntityGenericLRRowStatus': mplsLdpEntityGenericLRRowStatus}


# notifications (traps) 
# groups 
class mplsLdpGenericGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 7, 2, 1, 1])
	group = [mplsLdpEntityGenericLabelSpace, mplsLdpEntityGenericIfIndexOrZero, mplsLdpEntityGenericLRStorageType, mplsLdpEntityGenericLRRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
