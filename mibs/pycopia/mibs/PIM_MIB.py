# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, experimental, NOTIFICATION_TYPE, Integer32, IpAddress, TimeTicks
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import RowStatus, TruthValue
from IF_MIB import InterfaceIndex
from IPMROUTE_STD_MIB import ipMRouteGroup, ipMRouteSource, ipMRouteSourceMask, ipMRouteNextHopGroup, ipMRouteNextHopSource, ipMRouteNextHopSourceMask, ipMRouteNextHopIfIndex, ipMRouteNextHopAddress

class PIM_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/PIM-MIB'
	conformance = 5
	name = 'PIM-MIB'
	language = 2
	description = 'The MIB module for management of PIM routers.'

# nodes
class pimMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61])
	name = 'pimMIB'

class pimMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1])
	name = 'pimMIBObjects'

class pimTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 0])
	name = 'pimTraps'

class pim(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1])
	name = 'pim'

class pimMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2])
	name = 'pimMIBConformance'

class pimMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 1])
	name = 'pimMIBCompliances'

class pimMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2])
	name = 'pimMIBGroups'


# macros
# types 
# scalars 
class pimJoinPruneInterval(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


# columns
class pimInterfaceIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 1])
	syntaxobject = InterfaceIndex


class pimInterfaceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimInterfaceNetMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimInterfaceMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dense'), Enum(2, 'sparse'), Enum(3, 'sparseDense')]


class pimInterfaceDR(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimInterfaceHelloInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class pimInterfaceStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class pimInterfaceJoinPruneInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class pimInterfaceCBSRPreference(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class pimNeighborAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimNeighborIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 3, 1, 2])
	syntaxobject = InterfaceIndex


class pimNeighborUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimNeighborExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimNeighborMode(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dense'), Enum(2, 'sparse')]


class pimIpMRouteUpstreamAssertTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimIpMRouteAssertMetric(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class pimIpMRouteAssertMetricPref(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class pimIpMRouteAssertRPTBit(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class pimIpMRouteFlags(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class pimRPGroupAddress(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimRPAddress(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimRPState(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class pimRPStateTimer(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimRPLastChange(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimRPRowStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class pimRPSetGroupAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimRPSetGroupMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimRPSetAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimRPSetHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class pimRPSetExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimRPSetComponent(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class pimIpMRouteNextHopPruneReason(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'prune'), Enum(3, 'assert')]


class pimCandidateRPGroupAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimCandidateRPGroupMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimCandidateRPAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimCandidateRPRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 11, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class pimComponentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class pimComponentBSRAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class pimComponentBSRExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class pimComponentCRPHoldTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class pimComponentStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class pimInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pimInterfaceIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 2, 1])
	access = 2
	rowstatus = pimInterfaceStatus
	columns = {'pimInterfaceIfIndex': pimInterfaceIfIndex, 'pimInterfaceAddress': pimInterfaceAddress, 'pimInterfaceNetMask': pimInterfaceNetMask, 'pimInterfaceMode': pimInterfaceMode, 'pimInterfaceDR': pimInterfaceDR, 'pimInterfaceHelloInterval': pimInterfaceHelloInterval, 'pimInterfaceStatus': pimInterfaceStatus, 'pimInterfaceJoinPruneInterval': pimInterfaceJoinPruneInterval, 'pimInterfaceCBSRPreference': pimInterfaceCBSRPreference}


class pimNeighborEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pimNeighborAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 3, 1])
	access = 2
	columns = {'pimNeighborAddress': pimNeighborAddress, 'pimNeighborIfIndex': pimNeighborIfIndex, 'pimNeighborUpTime': pimNeighborUpTime, 'pimNeighborExpiryTime': pimNeighborExpiryTime, 'pimNeighborMode': pimNeighborMode}


class pimIpMRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipMRouteGroup, ipMRouteSource, ipMRouteSourceMask], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 4, 1])
	access = 2
	columns = {'pimIpMRouteUpstreamAssertTimer': pimIpMRouteUpstreamAssertTimer, 'pimIpMRouteAssertMetric': pimIpMRouteAssertMetric, 'pimIpMRouteAssertMetricPref': pimIpMRouteAssertMetricPref, 'pimIpMRouteAssertRPTBit': pimIpMRouteAssertRPTBit, 'pimIpMRouteFlags': pimIpMRouteFlags}


class pimRPEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([pimRPGroupAddress, pimRPAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 5, 1])
	access = 2
	rowstatus = pimRPRowStatus
	columns = {'pimRPGroupAddress': pimRPGroupAddress, 'pimRPAddress': pimRPAddress, 'pimRPState': pimRPState, 'pimRPStateTimer': pimRPStateTimer, 'pimRPLastChange': pimRPLastChange, 'pimRPRowStatus': pimRPRowStatus}


class pimRPSetEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pimRPSetComponent, pimRPSetGroupAddress, pimRPSetGroupMask, pimRPSetAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 6, 1])
	access = 2
	columns = {'pimRPSetGroupAddress': pimRPSetGroupAddress, 'pimRPSetGroupMask': pimRPSetGroupMask, 'pimRPSetAddress': pimRPSetAddress, 'pimRPSetHoldTime': pimRPSetHoldTime, 'pimRPSetExpiryTime': pimRPSetExpiryTime, 'pimRPSetComponent': pimRPSetComponent}


class pimIpMRouteNextHopEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipMRouteNextHopGroup, ipMRouteNextHopSource, ipMRouteNextHopSourceMask, ipMRouteNextHopIfIndex, ipMRouteNextHopAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 7, 1])
	access = 2
	columns = {'pimIpMRouteNextHopPruneReason': pimIpMRouteNextHopPruneReason}


class pimCandidateRPEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pimCandidateRPGroupAddress, pimCandidateRPGroupMask], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 11, 1])
	access = 2
	rowstatus = pimCandidateRPRowStatus
	columns = {'pimCandidateRPGroupAddress': pimCandidateRPGroupAddress, 'pimCandidateRPGroupMask': pimCandidateRPGroupMask, 'pimCandidateRPAddress': pimCandidateRPAddress, 'pimCandidateRPRowStatus': pimCandidateRPRowStatus}


class pimComponentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pimComponentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 1, 12, 1])
	access = 2
	rowstatus = pimComponentStatus
	columns = {'pimComponentIndex': pimComponentIndex, 'pimComponentBSRAddress': pimComponentBSRAddress, 'pimComponentBSRExpiryTime': pimComponentBSRExpiryTime, 'pimComponentCRPHoldTime': pimComponentCRPHoldTime, 'pimComponentStatus': pimComponentStatus}


# notifications (traps) 
class pimNeighborLoss(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 1, 0, 1])

# groups 
class pimNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 1])
	group = [pimNeighborLoss]

class pimV2MIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 2])
	group = [pimJoinPruneInterval, pimNeighborIfIndex, pimNeighborUpTime, pimNeighborExpiryTime, pimInterfaceAddress, pimInterfaceNetMask, pimInterfaceDR, pimInterfaceHelloInterval, pimInterfaceStatus, pimInterfaceJoinPruneInterval, pimInterfaceCBSRPreference, pimInterfaceMode, pimRPSetHoldTime, pimRPSetExpiryTime, pimComponentBSRAddress, pimComponentBSRExpiryTime, pimComponentCRPHoldTime, pimComponentStatus, pimIpMRouteFlags, pimIpMRouteUpstreamAssertTimer]

class pimV2CandidateRPMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 3])
	group = [pimCandidateRPAddress, pimCandidateRPRowStatus]

class pimV1MIBGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 4])
	group = [pimJoinPruneInterval, pimNeighborIfIndex, pimNeighborUpTime, pimNeighborExpiryTime, pimNeighborMode, pimInterfaceAddress, pimInterfaceNetMask, pimInterfaceJoinPruneInterval, pimInterfaceStatus, pimInterfaceMode, pimInterfaceDR, pimInterfaceHelloInterval, pimRPState, pimRPStateTimer, pimRPLastChange, pimRPRowStatus]

class pimDenseV2MIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 5])
	group = [pimNeighborIfIndex, pimNeighborUpTime, pimNeighborExpiryTime, pimInterfaceAddress, pimInterfaceNetMask, pimInterfaceDR, pimInterfaceHelloInterval, pimInterfaceStatus, pimInterfaceMode]

class pimNextHopGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 6])
	group = [pimIpMRouteNextHopPruneReason]

class pimAssertGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 61, 2, 2, 7])
	group = [pimIpMRouteAssertMetric, pimIpMRouteAssertMetricPref, pimIpMRouteAssertRPTBit]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
