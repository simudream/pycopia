# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32, Counter32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from TUBS_SMI import ibr
from SNMPv2_TC import TEXTUAL_CONVENTION
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class TUBS_IBR_XEN_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/tubs/TUBS-IBR-XEN-MIB'
	name = 'TUBS-IBR-XEN-MIB'
	language = 2
	description = 'Experimental MIB module for Xen Virtual Hosting.'

# nodes
class xenMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14])
	name = 'xenMIB'

class xenObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1])
	name = 'xenObjects'

class xenHost(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 1])
	name = 'xenHost'

class xenTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 2])
	name = 'xenTraps'

class xenConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 3])
	name = 'xenConformance'

class xenCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 3, 1])
	name = 'xenCompliances'

class xenGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 3, 2])
	name = 'xenGroups'


# macros
# types 

class XenDomainState(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'unknown'), Enum(2, 'running'), Enum(3, 'blocked'), Enum(4, 'paused'), Enum(5, 'crashed'), Enum(6, 'dying'), Enum(7, 'shutdown')]

# scalars 
class xenHostXenVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 1, 1])
	syntaxobject = SnmpAdminString


class xenHostTotalMemKBytes(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class xenHostCPUs(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class xenHostCPUMHz(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# columns
class xenDomainName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class xenDomainState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 2, 1, 2])
	syntaxobject = XenDomainState


class xenDomainMemKBytes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class xenDomainMaxMemKBytes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class xenVCPUIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class xenVCPUMilliseconds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class xenNetworkInKBytes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkInPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkInErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkInDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkOutKBytes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkOutPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkOutErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class xenNetworkOutDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class xenDomainEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([xenDomainName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 2, 1])
	access = 2
	columns = {'xenDomainName': xenDomainName, 'xenDomainState': xenDomainState, 'xenDomainMemKBytes': xenDomainMemKBytes, 'xenDomainMaxMemKBytes': xenDomainMaxMemKBytes}


class xenVCPUEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([xenDomainName, xenVCPUIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 3, 1])
	access = 2
	columns = {'xenVCPUIndex': xenVCPUIndex, 'xenVCPUMilliseconds': xenVCPUMilliseconds}


class xenNetworkEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([xenDomainName, xenNetworkIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 1, 4, 1])
	access = 2
	columns = {'xenNetworkIndex': xenNetworkIndex, 'xenNetworkInKBytes': xenNetworkInKBytes, 'xenNetworkInPkts': xenNetworkInPkts, 'xenNetworkInErrors': xenNetworkInErrors, 'xenNetworkInDiscards': xenNetworkInDiscards, 'xenNetworkOutKBytes': xenNetworkOutKBytes, 'xenNetworkOutPkts': xenNetworkOutPkts, 'xenNetworkOutErrors': xenNetworkOutErrors, 'xenNetworkOutDiscards': xenNetworkOutDiscards}


# notifications (traps) 
# groups 
class xenGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 14, 3, 2, 1])
	group = [xenHostXenVersion, xenHostTotalMemKBytes, xenHostCPUs, xenHostCPUMHz, xenDomainState, xenDomainMemKBytes, xenDomainMaxMemKBytes, xenVCPUMilliseconds, xenNetworkInKBytes, xenNetworkInPkts, xenNetworkInErrors, xenNetworkInDiscards, xenNetworkOutKBytes, xenNetworkOutPkts, xenNetworkOutErrors, xenNetworkOutDiscards]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
