# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, OBJECT_IDENTITY, Unsigned32, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, AutonomousType, StorageType
from IANA_ADDRESS_FAMILY_NUMBERS_MIB import AddressFamilyNumbers
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class IPS_AUTH_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IPS-AUTH-MIB'
	name = 'IPS-AUTH-MIB'
	language = 2
	description = 'The IP Storage Authorization MIB module.\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4545;  see the RFC itself for\nfull legal notices.'

# nodes
class ipsAuthMibModule(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141])
	name = 'ipsAuthMibModule'

class ipsAuthNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 0])
	name = 'ipsAuthNotifications'

class ipsAuthObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1])
	name = 'ipsAuthObjects'

class ipsAuthDescriptors(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 1])
	name = 'ipsAuthDescriptors'

class ipsAuthMethodTypes(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 1, 1])
	name = 'ipsAuthMethodTypes'

class ipsAuthMethodNone(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 1, 1, 1])
	name = 'ipsAuthMethodNone'

class ipsAuthMethodSrp(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 1, 1, 2])
	name = 'ipsAuthMethodSrp'

class ipsAuthMethodChap(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 1, 1, 3])
	name = 'ipsAuthMethodChap'

class ipsAuthMethodKerberos(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 1, 1, 4])
	name = 'ipsAuthMethodKerberos'

class ipsAuthInstance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 2])
	name = 'ipsAuthInstance'

class ipsAuthIdentity(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 3])
	name = 'ipsAuthIdentity'

class ipsAuthIdentityName(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 4])
	name = 'ipsAuthIdentityName'

class ipsAuthIdentityAddress(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5])
	name = 'ipsAuthIdentityAddress'

class ipsAuthCredential(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 6])
	name = 'ipsAuthCredential'

class ipsAuthCredChap(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 7])
	name = 'ipsAuthCredChap'

class ipsAuthCredSrp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 8])
	name = 'ipsAuthCredSrp'

class ipsAuthCredKerberos(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 9])
	name = 'ipsAuthCredKerberos'

class ipsAuthConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2])
	name = 'ipsAuthConformance'

class ipsAuthCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 1])
	name = 'ipsAuthCompliances'

class ipsAuthGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2])
	name = 'ipsAuthGroups'


# macros
# types 

class IpsAuthAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))

# scalars 
# columns
class ipsAuthInstIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipsAuthInstDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 2, 2, 1, 2])
	syntaxobject = SnmpAdminString


class ipsAuthInstStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthIdentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipsAuthIdentDescription(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 3, 1, 1, 2])
	syntaxobject = SnmpAdminString


class ipsAuthIdentRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthIdentStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthIdentNameIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipsAuthIdentName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 4, 1, 1, 2])
	syntaxobject = SnmpAdminString


class ipsAuthIdentNameRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthIdentNameStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthIdentAddrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipsAuthIdentAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1, 2])
	syntaxobject = AddressFamilyNumbers


class ipsAuthIdentAddrStart(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1, 3])
	syntaxobject = IpsAuthAddress


class ipsAuthIdentAddrEnd(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1, 4])
	syntaxobject = IpsAuthAddress


class ipsAuthIdentAddrRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthIdentAddrStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthCredIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class ipsAuthCredAuthMethod(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.AutonomousType


class ipsAuthCredRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthCredStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthCredChapUserName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 7, 1, 1, 1])
	syntaxobject = SnmpAdminString


class ipsAuthCredChapRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthCredChapStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthCredSrpUserName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 8, 1, 1, 1])
	syntaxobject = SnmpAdminString


class ipsAuthCredSrpRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthCredSrpStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class ipsAuthCredKerbPrincipal(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 9, 1, 1, 1])
	syntaxobject = SnmpAdminString


class ipsAuthCredKerbRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class ipsAuthCredKerbStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


# rows 
class ipsAuthInstanceAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 2, 2, 1])
	access = 2
	columns = {'ipsAuthInstIndex': ipsAuthInstIndex, 'ipsAuthInstDescr': ipsAuthInstDescr, 'ipsAuthInstStorageType': ipsAuthInstStorageType}


class ipsAuthIdentAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 3, 1, 1])
	access = 2
	rowstatus = ipsAuthIdentRowStatus
	columns = {'ipsAuthIdentIndex': ipsAuthIdentIndex, 'ipsAuthIdentDescription': ipsAuthIdentDescription, 'ipsAuthIdentRowStatus': ipsAuthIdentRowStatus, 'ipsAuthIdentStorageType': ipsAuthIdentStorageType}


class ipsAuthIdentNameAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex, ipsAuthIdentNameIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 4, 1, 1])
	access = 2
	rowstatus = ipsAuthIdentNameRowStatus
	columns = {'ipsAuthIdentNameIndex': ipsAuthIdentNameIndex, 'ipsAuthIdentName': ipsAuthIdentName, 'ipsAuthIdentNameRowStatus': ipsAuthIdentNameRowStatus, 'ipsAuthIdentNameStorageType': ipsAuthIdentNameStorageType}


class ipsAuthIdentAddrAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex, ipsAuthIdentAddrIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 5, 1, 1])
	access = 2
	rowstatus = ipsAuthIdentAddrRowStatus
	columns = {'ipsAuthIdentAddrIndex': ipsAuthIdentAddrIndex, 'ipsAuthIdentAddrType': ipsAuthIdentAddrType, 'ipsAuthIdentAddrStart': ipsAuthIdentAddrStart, 'ipsAuthIdentAddrEnd': ipsAuthIdentAddrEnd, 'ipsAuthIdentAddrRowStatus': ipsAuthIdentAddrRowStatus, 'ipsAuthIdentAddrStorageType': ipsAuthIdentAddrStorageType}


class ipsAuthCredentialAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex, ipsAuthCredIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 6, 1, 1])
	access = 2
	rowstatus = ipsAuthCredRowStatus
	columns = {'ipsAuthCredIndex': ipsAuthCredIndex, 'ipsAuthCredAuthMethod': ipsAuthCredAuthMethod, 'ipsAuthCredRowStatus': ipsAuthCredRowStatus, 'ipsAuthCredStorageType': ipsAuthCredStorageType}


class ipsAuthCredChapAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex, ipsAuthCredIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 7, 1, 1])
	access = 2
	rowstatus = ipsAuthCredChapRowStatus
	columns = {'ipsAuthCredChapUserName': ipsAuthCredChapUserName, 'ipsAuthCredChapRowStatus': ipsAuthCredChapRowStatus, 'ipsAuthCredChapStorageType': ipsAuthCredChapStorageType}


class ipsAuthCredSrpAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex, ipsAuthCredIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 8, 1, 1])
	access = 2
	rowstatus = ipsAuthCredSrpRowStatus
	columns = {'ipsAuthCredSrpUserName': ipsAuthCredSrpUserName, 'ipsAuthCredSrpRowStatus': ipsAuthCredSrpRowStatus, 'ipsAuthCredSrpStorageType': ipsAuthCredSrpStorageType}


class ipsAuthCredKerbAttributesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipsAuthInstIndex, ipsAuthIdentIndex, ipsAuthCredIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 1, 9, 1, 1])
	access = 2
	rowstatus = ipsAuthCredKerbRowStatus
	columns = {'ipsAuthCredKerbPrincipal': ipsAuthCredKerbPrincipal, 'ipsAuthCredKerbRowStatus': ipsAuthCredKerbRowStatus, 'ipsAuthCredKerbStorageType': ipsAuthCredKerbStorageType}


# notifications (traps) 
# groups 
class ipsAuthInstanceAttributesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 1])
	group = [ipsAuthInstDescr, ipsAuthInstStorageType]

class ipsAuthIdentAttributesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 2])
	group = [ipsAuthIdentDescription, ipsAuthIdentRowStatus, ipsAuthIdentStorageType]

class ipsAuthIdentNameAttributesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 3])
	group = [ipsAuthIdentName, ipsAuthIdentNameRowStatus, ipsAuthIdentNameStorageType]

class ipsAuthIdentAddrAttributesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 4])
	group = [ipsAuthIdentAddrType, ipsAuthIdentAddrStart, ipsAuthIdentAddrEnd, ipsAuthIdentAddrRowStatus, ipsAuthIdentAddrStorageType]

class ipsAuthIdentCredAttributesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 5])
	group = [ipsAuthCredAuthMethod, ipsAuthCredRowStatus, ipsAuthCredStorageType]

class ipsAuthIdentChapAttrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 6])
	group = [ipsAuthCredChapUserName, ipsAuthCredChapRowStatus, ipsAuthCredChapStorageType]

class ipsAuthIdentSrpAttrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 7])
	group = [ipsAuthCredSrpUserName, ipsAuthCredSrpRowStatus, ipsAuthCredSrpStorageType]

class ipsAuthIdentKerberosAttrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 141, 2, 2, 8])
	group = [ipsAuthCredKerbPrincipal, ipsAuthCredKerbRowStatus, ipsAuthCredKerbStorageType]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
