# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IPV6_MIB import ipv6IfEntry

class IPV6_ICMP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IPV6-ICMP-MIB'
	conformance = 3
	name = 'IPV6-ICMP-MIB'
	language = 2
	description = 'The MIB module for entities implementing\nthe ICMPv6.'

# nodes
class ipv6IcmpMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56])
	name = 'ipv6IcmpMIB'

class ipv6IcmpMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1])
	name = 'ipv6IcmpMIBObjects'

class ipv6IcmpConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 2])
	name = 'ipv6IcmpConformance'

class ipv6IcmpCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 2, 1])
	name = 'ipv6IcmpCompliances'

class ipv6IcmpGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 2, 2])
	name = 'ipv6IcmpGroups'


# macros
# types 
# scalars 
# columns
class ipv6IfIcmpInMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInDestUnreachs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInAdminProhibs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInTimeExcds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInParmProblems(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInPktTooBigs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInEchos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInEchoReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInRouterSolicits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInRouterAdvertisements(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInNeighborSolicits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInNeighborAdvertisements(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInRedirects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInGroupMembQueries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInGroupMembResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpInGroupMembReductions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutDestUnreachs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutAdminProhibs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutTimeExcds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutParmProblems(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutPktTooBigs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutEchos(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutEchoReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutRouterSolicits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutRouterAdvertisements(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutNeighborSolicits(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutNeighborAdvertisements(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutRedirects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutGroupMembQueries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutGroupMembResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipv6IfIcmpOutGroupMembReductions(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
from IPV6_MIB import ipv6IfIndex
class ipv6IfIcmpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipv6IfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 1, 1, 1])
	access = 2
	columns = {'ipv6IfIcmpInMsgs': ipv6IfIcmpInMsgs, 'ipv6IfIcmpInErrors': ipv6IfIcmpInErrors, 'ipv6IfIcmpInDestUnreachs': ipv6IfIcmpInDestUnreachs, 'ipv6IfIcmpInAdminProhibs': ipv6IfIcmpInAdminProhibs, 'ipv6IfIcmpInTimeExcds': ipv6IfIcmpInTimeExcds, 'ipv6IfIcmpInParmProblems': ipv6IfIcmpInParmProblems, 'ipv6IfIcmpInPktTooBigs': ipv6IfIcmpInPktTooBigs, 'ipv6IfIcmpInEchos': ipv6IfIcmpInEchos, 'ipv6IfIcmpInEchoReplies': ipv6IfIcmpInEchoReplies, 'ipv6IfIcmpInRouterSolicits': ipv6IfIcmpInRouterSolicits, 'ipv6IfIcmpInRouterAdvertisements': ipv6IfIcmpInRouterAdvertisements, 'ipv6IfIcmpInNeighborSolicits': ipv6IfIcmpInNeighborSolicits, 'ipv6IfIcmpInNeighborAdvertisements': ipv6IfIcmpInNeighborAdvertisements, 'ipv6IfIcmpInRedirects': ipv6IfIcmpInRedirects, 'ipv6IfIcmpInGroupMembQueries': ipv6IfIcmpInGroupMembQueries, 'ipv6IfIcmpInGroupMembResponses': ipv6IfIcmpInGroupMembResponses, 'ipv6IfIcmpInGroupMembReductions': ipv6IfIcmpInGroupMembReductions, 'ipv6IfIcmpOutMsgs': ipv6IfIcmpOutMsgs, 'ipv6IfIcmpOutErrors': ipv6IfIcmpOutErrors, 'ipv6IfIcmpOutDestUnreachs': ipv6IfIcmpOutDestUnreachs, 'ipv6IfIcmpOutAdminProhibs': ipv6IfIcmpOutAdminProhibs, 'ipv6IfIcmpOutTimeExcds': ipv6IfIcmpOutTimeExcds, 'ipv6IfIcmpOutParmProblems': ipv6IfIcmpOutParmProblems, 'ipv6IfIcmpOutPktTooBigs': ipv6IfIcmpOutPktTooBigs, 'ipv6IfIcmpOutEchos': ipv6IfIcmpOutEchos, 'ipv6IfIcmpOutEchoReplies': ipv6IfIcmpOutEchoReplies, 'ipv6IfIcmpOutRouterSolicits': ipv6IfIcmpOutRouterSolicits, 'ipv6IfIcmpOutRouterAdvertisements': ipv6IfIcmpOutRouterAdvertisements, 'ipv6IfIcmpOutNeighborSolicits': ipv6IfIcmpOutNeighborSolicits, 'ipv6IfIcmpOutNeighborAdvertisements': ipv6IfIcmpOutNeighborAdvertisements, 'ipv6IfIcmpOutRedirects': ipv6IfIcmpOutRedirects, 'ipv6IfIcmpOutGroupMembQueries': ipv6IfIcmpOutGroupMembQueries, 'ipv6IfIcmpOutGroupMembResponses': ipv6IfIcmpOutGroupMembResponses, 'ipv6IfIcmpOutGroupMembReductions': ipv6IfIcmpOutGroupMembReductions}


# notifications (traps) 
# groups 
class ipv6IcmpGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 56, 2, 2, 1])
	group = [ipv6IfIcmpInMsgs, ipv6IfIcmpInErrors, ipv6IfIcmpInDestUnreachs, ipv6IfIcmpInAdminProhibs, ipv6IfIcmpInTimeExcds, ipv6IfIcmpInParmProblems, ipv6IfIcmpInPktTooBigs, ipv6IfIcmpInEchos, ipv6IfIcmpInEchoReplies, ipv6IfIcmpInRouterSolicits, ipv6IfIcmpInRouterAdvertisements, ipv6IfIcmpInNeighborSolicits, ipv6IfIcmpInNeighborAdvertisements, ipv6IfIcmpInRedirects, ipv6IfIcmpInGroupMembQueries, ipv6IfIcmpInGroupMembResponses, ipv6IfIcmpInGroupMembReductions, ipv6IfIcmpOutMsgs, ipv6IfIcmpOutErrors, ipv6IfIcmpOutDestUnreachs, ipv6IfIcmpOutAdminProhibs, ipv6IfIcmpOutTimeExcds, ipv6IfIcmpOutParmProblems, ipv6IfIcmpOutPktTooBigs, ipv6IfIcmpOutEchos, ipv6IfIcmpOutEchoReplies, ipv6IfIcmpOutRouterSolicits, ipv6IfIcmpOutRouterAdvertisements, ipv6IfIcmpOutNeighborSolicits, ipv6IfIcmpOutNeighborAdvertisements, ipv6IfIcmpOutRedirects, ipv6IfIcmpOutGroupMembQueries, ipv6IfIcmpOutGroupMembResponses, ipv6IfIcmpOutGroupMembReductions]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
