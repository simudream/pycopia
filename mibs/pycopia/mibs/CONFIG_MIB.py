# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from HP_ICF_OID import hpSwitch
from SNMPv2_TC import DisplayString, RowStatus, MacAddress, TimeStamp
from HP_ICF_TC import HpSwitchPortType, ConfigStatus
from RFC1155_SMI import IpAddress

class CONFIG_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CONFIG-MIB'
	conformance = 2
	name = 'CONFIG-MIB'
	language = 1

# nodes
class hpConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7])
	name = 'hpConfig'

class hpSwitchConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1])
	name = 'hpSwitchConfig'

class hpSwitchSystemConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1])
	name = 'hpSwitchSystemConfig'

class hpSwitchConsoleConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 2])
	name = 'hpSwitchConsoleConfig'

class hpSwitchPortConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3])
	name = 'hpSwitchPortConfig'

class hpSwitchIpxConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 4])
	name = 'hpSwitchIpxConfig'

class hpSwitchIpConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 5])
	name = 'hpSwitchIpConfig'

class hpSwitchSerialLinkConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6])
	name = 'hpSwitchSerialLinkConfig'

class hpSwitchFilterConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8])
	name = 'hpSwitchFilterConfig'

class hpSwitchProbeConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 9])
	name = 'hpSwitchProbeConfig'

class hpSwitchFddiIpFragConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 11])
	name = 'hpSwitchFddiIpFragConfig'

class hpSwitchABCConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12])
	name = 'hpSwitchABCConfig'

class hpSwitchStpConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14])
	name = 'hpSwitchStpConfig'

class hpSwitchIgmpConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15])
	name = 'hpSwitchIgmpConfig'

class hpSwitchCosConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17])
	name = 'hpSwitchCosConfig'

class hpSwitchCosTosConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5])
	name = 'hpSwitchCosTosConfig'

class hpSwitchMeshConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 18])
	name = 'hpSwitchMeshConfig'

class hpSwitchPortIsolationConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 19])
	name = 'hpSwitchPortIsolationConfig'

class hpSwitchSshConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20])
	name = 'hpSwitchSshConfig'

class hpSwitchPendingConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 21])
	name = 'hpSwitchPendingConfig'

class hpSwitchBWMinConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22])
	name = 'hpSwitchBWMinConfig'

class hpSwitchRateLimitPortConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23])
	name = 'hpSwitchRateLimitPortConfig'


# macros
# types 

class Timeout(pycopia.SMI.Basetypes.Integer32):
	pass


class VlanID(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(1, 65535))

# scalars 
class hpSwitchAutoReboot(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class hpSwitchTimeZone(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchDaylightTimeRule(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'alaska'), Enum(3, 'canadaAndContinentalUS'), Enum(4, 'middleEuropeAndPortugal'), Enum(5, 'southernHemisphere'), Enum(6, 'westernEurop'), Enum(7, 'userDefined')]


class hpSwitchDaylightBeginningMonth(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchDaylightBeginningDay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchDaylightEndingMonth(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchDaylightEndingDay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchSystemConfigStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 8])
	syntaxobject = ConfigStatus


class hpSwitchSystemPortLEDMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'link-activity'), Enum(2, 'link-only')]


class hpSwitchControlUnknownIPMulticast(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchTerminalType(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'vt100'), Enum(4, 'ansi')]


class hpSwitchConsoleRefRate(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'refRate1'), Enum(3, 'refRate3'), Enum(5, 'refRate5'), Enum(10, 'refRate10'), Enum(20, 'refRate20'), Enum(30, 'refRate30'), Enum(45, 'refRate45'), Enum(60, 'refRate')]


class hpSwitchDisplayedEvent(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'major'), Enum(3, 'notInfo'), Enum(4, 'all'), Enum(5, 'debug')]


class hpSwitchConsoleConfigStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 2, 5])
	syntaxobject = ConfigStatus


class hpSwitchPortConfigStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 2])
	syntaxobject = ConfigStatus


class hpSwitchIpxConfigStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 4, 2])
	syntaxobject = ConfigStatus


class hpSwitchIpTimepAdminStatus(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'manual'), Enum(2, 'disable'), Enum(3, 'dhcp')]


class hpSwitchIpTimepServerAddr(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class hpSwitchIpTimepPollInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchIpTftpMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'secure'), Enum(2, 'unsecure')]


class hpSwitchSLinkBaudRate(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'speedSense'), Enum(2, 'baudRate300'), Enum(3, 'baudRate600'), Enum(4, 'baudRate1200'), Enum(5, 'baudRate2400'), Enum(6, 'baudRate4800'), Enum(7, 'baudRate9600'), Enum(8, 'baudRate19200'), Enum(9, 'baudRate38400'), Enum(10, 'baudRate57600'), Enum(11, 'baudRate115200')]


class hpSwitchSLinkFlowCtrl(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'xonXoff'), Enum(3, 'robustXonXoff')]


class hpSwitchSLinkConnInactTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchSLinkModemConnTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchSLinkModemLostRecvTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchSLinkModemDisConnTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchSLinkParity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'parityNone'), Enum(2, 'parityOdd'), Enum(3, 'parityEven')]


class hpSwitchSLinkCharBits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'char8Bits'), Enum(2, 'char7Bits')]


class hpSwitchSLinkStopBits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stop1Bits'), Enum(2, 'stop1andHalfBits'), Enum(3, 'stop2Bits')]


class hpSwitchSLinkConfigStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 6, 10])
	syntaxobject = ConfigStatus


class hpSwitchIgmpForcedLeaveInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosTosConfigMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disable'), Enum(2, 'ipprecedence'), Enum(3, 'diffserv')]


class hpSwitchCosLastChange(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class hpSwitchMeshBackwardCompatibility(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 18, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchPortIsolationMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 19, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchSshAdminStatus(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchSshVersion(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'version1'), Enum(2, 'version2'), Enum(3, 'version1or2')]


class hpSwitchSshTimeout(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20, 3])
	syntaxobject = Timeout


class hpSwitchSshPortNumber(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchSshServerKeySize(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'bits512'), Enum(2, 'bits768'), Enum(3, 'bits1024')]


class hpSwitchSshFileServerAdminStatus(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 20, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchPendingConfigControl(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 21, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'applyMstp'), Enum(2, 'resetMstp')]


# columns
class hpSwitchPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchPortType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 2])
	syntaxobject = HpSwitchPortType


class hpSwitchPortDescr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hpSwitchPortAdminStatus(ColumnObject):
	status = 5
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchPortEtherMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'half-duplex'), Enum(2, 'full-duplex')]


class hpSwitchPortVgMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'master'), Enum(2, 'endNode'), Enum(3, 'autoDetect')]


class hpSwitchPortLinkbeat(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchPortTrunkGroup(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchPortBcastLimit(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchPortFastEtherMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'half-duplex-10Mbits'), Enum(2, 'half-duplex-100Mbits'), Enum(3, 'full-duplex-10Mbits'), Enum(4, 'full-duplex-100Mbits'), Enum(5, 'auto-neg'), Enum(6, 'full-duplex-1000Mbits'), Enum(7, 'auto-10Mbits'), Enum(8, 'auto-100Mbits'), Enum(9, 'auto-1000Mbits')]


class hpSwitchPortFlowControl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disable'), Enum(2, 'enable')]


class hpSwitchPortTrunkType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trunk'), Enum(2, 'fecAuto'), Enum(3, 'saTrunk'), Enum(4, 'lacpTrk'), Enum(5, 'none')]


class hpSwitchPortTrunkLACPStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'active'), Enum(3, 'passive')]


class hpSwitchPortMDIXStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'not-applicable'), Enum(2, 'mdi'), Enum(3, 'mdix'), Enum(4, 'automdix')]


class hpSwitchPortAutoMDIX(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'not-applicable'), Enum(2, 'mdi'), Enum(3, 'mdix'), Enum(4, 'automdix')]


class hpSwitchFilterIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchFilterType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'multicast'), Enum(2, 'level-3'), Enum(3, 'port'), Enum(4, 'unicast')]


class hpSwitchFilterSrcPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchFilterMacAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class hpSwitchFilterProtocolType(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchFilterPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpSwitchFilterEntryStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpSwitchFddiIpFragConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 11, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchFddiIpFragConfigStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 11, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchABCConfigVlan(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1, 1])
	syntaxobject = VlanID


class hpSwitchABCConfigControl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ipipx'), Enum(2, 'ip'), Enum(3, 'ipx'), Enum(4, 'disable')]


class hpSwitchABCConfigIpRipControl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchABCConfigIpxRipSapControl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchABCConfigVlanBcastLimit(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchABCConfigAutoGatewayConfig(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchStpVlan(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1, 1])
	syntaxobject = VlanID


class hpSwitchStpAdminStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchStpPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchStpMaxAge(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1, 4])
	syntaxobject = Timeout


class hpSwitchStpHelloTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1, 5])
	syntaxobject = Timeout


class hpSwitchStpForwardDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1, 6])
	syntaxobject = Timeout


class hpSwitchStpPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchStpPortType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1, 2])
	syntaxobject = HpSwitchPortType


class hpSwitchStpPortSrcMac(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class hpSwitchStpPortPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchStpPortPathCost(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchStpPortMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'fast'), Enum(3, 'uplink')]


class hpSwitchIgmpVlanIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 1, 1, 1])
	syntaxobject = VlanID


class hpSwitchIgmpState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchIgmpQuerierState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchIgmpPriorityState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class hpSwitchIgmpPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchIgmpPortType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 2, 1, 2])
	syntaxobject = HpSwitchPortType


class hpSwitchIgmpIpMcastState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto'), Enum(2, 'blocked'), Enum(3, 'forward')]


class hpSwitchIgmpPortVlanIndex2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchIgmpPortIndex2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchIgmpPortType2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1, 3])
	syntaxobject = HpSwitchPortType


class hpSwitchIgmpIpMcastState2(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto'), Enum(2, 'blocked'), Enum(3, 'forward')]


class hpSwitchIgmpPortForcedLeaveState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class hpSwitchIgmpPortFastLeaveState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class hpSwitchCosPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosPortType(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1, 2])
	syntaxobject = HpSwitchPortType


class hpSwitchCosPortPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosPortDSCPPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosPortResolvedPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosPortApplyPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPolicyOverride'), Enum(2, 'applyHpSwitchCosPortPriority'), Enum(3, 'applyHpSwitchCosPortDSCPPolicy')]


class hpSwitchCosVlanIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 2, 1, 1])
	syntaxobject = VlanID


class hpSwitchCosVlanPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosVlanDSCPPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosVlanResolvedPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosVlanApplyPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPolicyOverride'), Enum(2, 'applyHpSwitchCosVlanPriority'), Enum(3, 'applyHpSwitchCosVlanDSCPPolicy')]


class hpSwitchCosProtocolType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ip'), Enum(2, 'ipx'), Enum(3, 'arp'), Enum(4, 'decnet'), Enum(5, 'appletalk'), Enum(6, 'sna'), Enum(7, 'netbios')]


class hpSwitchCosProtocolPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAddressIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAddressType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ip')]


class hpSwitchCosAddressIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class hpSwitchCosAddressPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAddressStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpSwitchCosAddressDSCPPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAddressResolvedPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAddressApplyPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'applyHpSwitchCosAddressPriority'), Enum(2, 'applyHpSwitchCosAddressDSCPPolicy')]


class hpSwitchCosTosIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosTosPriority(ColumnObject):
	access = 5
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosTosDSCPPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosTosResolvedPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosTosApplyPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'applyInheritedPriority'), Enum(2, 'applyHpSwitchCosTosDSCPPolicy')]


class hpSwitchCosDSCPPolicyIndex(ColumnObject):
	access = 2
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosDSCPPolicyPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosDSCPPolicyName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hpSwitchCosAppTypeConfigIndex(ColumnObject):
	access = 2
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAppTypeConfigType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'udpSrcPortConfig'), Enum(2, 'udpDestPortConfig'), Enum(3, 'udpBothPortsConfig'), Enum(4, 'tcpSrcPortConfig'), Enum(5, 'tcpDestPortConfig'), Enum(6, 'tcpBothPortsConfig')]


class hpSwitchCosAppTypeSrcPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAppTypeDestPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAppTypePriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAppTypeDSCPPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAppTypeResolvedPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchCosAppTypeApplyPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'applyHpSwitchCosAppTypePriority'), Enum(2, 'applyHpSwitchCosAppTypeDSCPPolicy')]


class hpSwitchCosAppTypeStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpSwitchPortIsolationPort(ColumnObject):
	access = 2
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 19, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchPortIsolationPortMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 19, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'uplink'), Enum(2, 'public'), Enum(3, 'private'), Enum(4, 'local'), Enum(5, 'group1'), Enum(6, 'group2')]


class hpSwitchBWMinIngressPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinIngressPortPrctLowPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinIngressPortPrctNormalPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinIngressPortPrctMedPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinIngressPortPrctHighPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinIngressPortStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpSwitchBWMinEgressPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinEgressPortPrctLowPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinEgressPortPrctNormalPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinEgressPortPrctMedPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinEgressPortPrctHighPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchBWMinEgressPortStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class hpSwitchRateLimitPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchRateLimitPortControlMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'rateLimitPerQueue'), Enum(3, 'rateLimitPerPortOnly')]


class hpSwitchRateLimitPortPrctLowPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchRateLimitPortPrctNormalPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchRateLimitPortPrctMedPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchRateLimitPortPrctHighPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchRateLimitPortSingleControlPrct(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hpSwitchRateLimitPortStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class hpSwitchPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 3, 1, 1])
	access = 2
	columns = {'hpSwitchPortIndex': hpSwitchPortIndex, 'hpSwitchPortType': hpSwitchPortType, 'hpSwitchPortDescr': hpSwitchPortDescr, 'hpSwitchPortAdminStatus': hpSwitchPortAdminStatus, 'hpSwitchPortEtherMode': hpSwitchPortEtherMode, 'hpSwitchPortVgMode': hpSwitchPortVgMode, 'hpSwitchPortLinkbeat': hpSwitchPortLinkbeat, 'hpSwitchPortTrunkGroup': hpSwitchPortTrunkGroup, 'hpSwitchPortBcastLimit': hpSwitchPortBcastLimit, 'hpSwitchPortFastEtherMode': hpSwitchPortFastEtherMode, 'hpSwitchPortFlowControl': hpSwitchPortFlowControl, 'hpSwitchPortTrunkType': hpSwitchPortTrunkType, 'hpSwitchPortTrunkLACPStatus': hpSwitchPortTrunkLACPStatus, 'hpSwitchPortMDIXStatus': hpSwitchPortMDIXStatus, 'hpSwitchPortAutoMDIX': hpSwitchPortAutoMDIX}


class hpSwitchFilterConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchFilterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 1, 1])
	access = 2
	rowstatus = hpSwitchFilterEntryStatus
	columns = {'hpSwitchFilterIndex': hpSwitchFilterIndex, 'hpSwitchFilterType': hpSwitchFilterType, 'hpSwitchFilterSrcPort': hpSwitchFilterSrcPort, 'hpSwitchFilterMacAddr': hpSwitchFilterMacAddr, 'hpSwitchFilterProtocolType': hpSwitchFilterProtocolType, 'hpSwitchFilterPortMask': hpSwitchFilterPortMask, 'hpSwitchFilterEntryStatus': hpSwitchFilterEntryStatus}


class hpSwitchFddiIpFragConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchFddiIpFragConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 11, 1, 1])
	access = 2
	columns = {'hpSwitchFddiIpFragConfigIndex': hpSwitchFddiIpFragConfigIndex, 'hpSwitchFddiIpFragConfigStatus': hpSwitchFddiIpFragConfigStatus}


class hpSwitchABCConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchABCConfigVlan], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 12, 1, 1])
	access = 2
	columns = {'hpSwitchABCConfigVlan': hpSwitchABCConfigVlan, 'hpSwitchABCConfigControl': hpSwitchABCConfigControl, 'hpSwitchABCConfigIpRipControl': hpSwitchABCConfigIpRipControl, 'hpSwitchABCConfigIpxRipSapControl': hpSwitchABCConfigIpxRipSapControl, 'hpSwitchABCConfigVlanBcastLimit': hpSwitchABCConfigVlanBcastLimit, 'hpSwitchABCConfigAutoGatewayConfig': hpSwitchABCConfigAutoGatewayConfig}


class hpSwitchStpVlanEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchStpVlan], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 1, 1])
	access = 2
	columns = {'hpSwitchStpVlan': hpSwitchStpVlan, 'hpSwitchStpAdminStatus': hpSwitchStpAdminStatus, 'hpSwitchStpPriority': hpSwitchStpPriority, 'hpSwitchStpMaxAge': hpSwitchStpMaxAge, 'hpSwitchStpHelloTime': hpSwitchStpHelloTime, 'hpSwitchStpForwardDelay': hpSwitchStpForwardDelay}


class hpSwitchStpPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchStpPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 14, 2, 1])
	access = 2
	columns = {'hpSwitchStpPort': hpSwitchStpPort, 'hpSwitchStpPortType': hpSwitchStpPortType, 'hpSwitchStpPortSrcMac': hpSwitchStpPortSrcMac, 'hpSwitchStpPortPriority': hpSwitchStpPortPriority, 'hpSwitchStpPortPathCost': hpSwitchStpPortPathCost, 'hpSwitchStpPortMode': hpSwitchStpPortMode}


class hpSwitchIgmpConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchIgmpVlanIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 1, 1])
	access = 2
	columns = {'hpSwitchIgmpVlanIndex': hpSwitchIgmpVlanIndex, 'hpSwitchIgmpState': hpSwitchIgmpState, 'hpSwitchIgmpQuerierState': hpSwitchIgmpQuerierState, 'hpSwitchIgmpPriorityState': hpSwitchIgmpPriorityState}


class hpSwitchIgmpPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchIgmpPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 2, 1])
	access = 2
	columns = {'hpSwitchIgmpPortIndex': hpSwitchIgmpPortIndex, 'hpSwitchIgmpPortType': hpSwitchIgmpPortType, 'hpSwitchIgmpIpMcastState': hpSwitchIgmpIpMcastState}


class hpSwitchIgmpPortConfigEntry2(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchIgmpPortVlanIndex2, hpSwitchIgmpPortIndex2], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 3, 1])
	access = 2
	columns = {'hpSwitchIgmpPortVlanIndex2': hpSwitchIgmpPortVlanIndex2, 'hpSwitchIgmpPortIndex2': hpSwitchIgmpPortIndex2, 'hpSwitchIgmpPortType2': hpSwitchIgmpPortType2, 'hpSwitchIgmpIpMcastState2': hpSwitchIgmpIpMcastState2, 'hpSwitchIgmpPortForcedLeaveState': hpSwitchIgmpPortForcedLeaveState, 'hpSwitchIgmpPortFastLeaveState': hpSwitchIgmpPortFastLeaveState}


class hpSwitchCosPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 1, 1])
	access = 2
	columns = {'hpSwitchCosPortIndex': hpSwitchCosPortIndex, 'hpSwitchCosPortType': hpSwitchCosPortType, 'hpSwitchCosPortPriority': hpSwitchCosPortPriority, 'hpSwitchCosPortDSCPPolicy': hpSwitchCosPortDSCPPolicy, 'hpSwitchCosPortResolvedPriority': hpSwitchCosPortResolvedPriority, 'hpSwitchCosPortApplyPolicy': hpSwitchCosPortApplyPolicy}


class hpSwitchCosVlanConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosVlanIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 2, 1])
	access = 2
	columns = {'hpSwitchCosVlanIndex': hpSwitchCosVlanIndex, 'hpSwitchCosVlanPriority': hpSwitchCosVlanPriority, 'hpSwitchCosVlanDSCPPolicy': hpSwitchCosVlanDSCPPolicy, 'hpSwitchCosVlanResolvedPriority': hpSwitchCosVlanResolvedPriority, 'hpSwitchCosVlanApplyPolicy': hpSwitchCosVlanApplyPolicy}


class hpSwitchCosProtocolConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosProtocolType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 3, 1])
	access = 2
	columns = {'hpSwitchCosProtocolType': hpSwitchCosProtocolType, 'hpSwitchCosProtocolPriority': hpSwitchCosProtocolPriority}


class hpSwitchCosAddressConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosAddressIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 4, 1])
	access = 2
	rowstatus = hpSwitchCosAddressStatus
	columns = {'hpSwitchCosAddressIndex': hpSwitchCosAddressIndex, 'hpSwitchCosAddressType': hpSwitchCosAddressType, 'hpSwitchCosAddressIp': hpSwitchCosAddressIp, 'hpSwitchCosAddressPriority': hpSwitchCosAddressPriority, 'hpSwitchCosAddressStatus': hpSwitchCosAddressStatus, 'hpSwitchCosAddressDSCPPolicy': hpSwitchCosAddressDSCPPolicy, 'hpSwitchCosAddressResolvedPriority': hpSwitchCosAddressResolvedPriority, 'hpSwitchCosAddressApplyPolicy': hpSwitchCosAddressApplyPolicy}


class hpSwitchCosTosConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosTosIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 5, 2, 1])
	access = 2
	columns = {'hpSwitchCosTosIndex': hpSwitchCosTosIndex, 'hpSwitchCosTosPriority': hpSwitchCosTosPriority, 'hpSwitchCosTosDSCPPolicy': hpSwitchCosTosDSCPPolicy, 'hpSwitchCosTosResolvedPriority': hpSwitchCosTosResolvedPriority, 'hpSwitchCosTosApplyPolicy': hpSwitchCosTosApplyPolicy}


class hpSwitchCosDSCPPolicyConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosDSCPPolicyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 6, 1])
	access = 2
	columns = {'hpSwitchCosDSCPPolicyIndex': hpSwitchCosDSCPPolicyIndex, 'hpSwitchCosDSCPPolicyPriority': hpSwitchCosDSCPPolicyPriority, 'hpSwitchCosDSCPPolicyName': hpSwitchCosDSCPPolicyName}


class hpSwitchCosAppTypeConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchCosAppTypeConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 17, 7, 1])
	access = 2
	rowstatus = hpSwitchCosAppTypeStatus
	columns = {'hpSwitchCosAppTypeConfigIndex': hpSwitchCosAppTypeConfigIndex, 'hpSwitchCosAppTypeConfigType': hpSwitchCosAppTypeConfigType, 'hpSwitchCosAppTypeSrcPort': hpSwitchCosAppTypeSrcPort, 'hpSwitchCosAppTypeDestPort': hpSwitchCosAppTypeDestPort, 'hpSwitchCosAppTypePriority': hpSwitchCosAppTypePriority, 'hpSwitchCosAppTypeDSCPPolicy': hpSwitchCosAppTypeDSCPPolicy, 'hpSwitchCosAppTypeResolvedPriority': hpSwitchCosAppTypeResolvedPriority, 'hpSwitchCosAppTypeApplyPolicy': hpSwitchCosAppTypeApplyPolicy, 'hpSwitchCosAppTypeStatus': hpSwitchCosAppTypeStatus}


class hpSwitchPortIsolationConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchPortIsolationPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 19, 2, 1])
	access = 2
	columns = {'hpSwitchPortIsolationPort': hpSwitchPortIsolationPort, 'hpSwitchPortIsolationPortMode': hpSwitchPortIsolationPortMode}


class hpSwitchBWMinIngressPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchBWMinIngressPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 1, 1])
	access = 2
	rowstatus = hpSwitchBWMinIngressPortStatus
	columns = {'hpSwitchBWMinIngressPortIndex': hpSwitchBWMinIngressPortIndex, 'hpSwitchBWMinIngressPortPrctLowPriority': hpSwitchBWMinIngressPortPrctLowPriority, 'hpSwitchBWMinIngressPortPrctNormalPriority': hpSwitchBWMinIngressPortPrctNormalPriority, 'hpSwitchBWMinIngressPortPrctMedPriority': hpSwitchBWMinIngressPortPrctMedPriority, 'hpSwitchBWMinIngressPortPrctHighPriority': hpSwitchBWMinIngressPortPrctHighPriority, 'hpSwitchBWMinIngressPortStatus': hpSwitchBWMinIngressPortStatus}


class hpSwitchBWMinEgressPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchBWMinEgressPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 22, 2, 1])
	access = 2
	rowstatus = hpSwitchBWMinEgressPortStatus
	columns = {'hpSwitchBWMinEgressPortIndex': hpSwitchBWMinEgressPortIndex, 'hpSwitchBWMinEgressPortPrctLowPriority': hpSwitchBWMinEgressPortPrctLowPriority, 'hpSwitchBWMinEgressPortPrctNormalPriority': hpSwitchBWMinEgressPortPrctNormalPriority, 'hpSwitchBWMinEgressPortPrctMedPriority': hpSwitchBWMinEgressPortPrctMedPriority, 'hpSwitchBWMinEgressPortPrctHighPriority': hpSwitchBWMinEgressPortPrctHighPriority, 'hpSwitchBWMinEgressPortStatus': hpSwitchBWMinEgressPortStatus}


class hpSwitchRateLimitPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([hpSwitchRateLimitPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 23, 1, 1])
	access = 2
	rowstatus = hpSwitchRateLimitPortStatus
	columns = {'hpSwitchRateLimitPortIndex': hpSwitchRateLimitPortIndex, 'hpSwitchRateLimitPortControlMode': hpSwitchRateLimitPortControlMode, 'hpSwitchRateLimitPortPrctLowPriority': hpSwitchRateLimitPortPrctLowPriority, 'hpSwitchRateLimitPortPrctNormalPriority': hpSwitchRateLimitPortPrctNormalPriority, 'hpSwitchRateLimitPortPrctMedPriority': hpSwitchRateLimitPortPrctMedPriority, 'hpSwitchRateLimitPortPrctHighPriority': hpSwitchRateLimitPortPrctHighPriority, 'hpSwitchRateLimitPortSingleControlPrct': hpSwitchRateLimitPortSingleControlPrct, 'hpSwitchRateLimitPortStatus': hpSwitchRateLimitPortStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
