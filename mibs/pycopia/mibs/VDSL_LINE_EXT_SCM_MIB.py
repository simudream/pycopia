# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, transmission, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, RowStatus
from IF_MIB import ifIndex
from VDSL_LINE_MIB import vdslLineConfProfileName

class VDSL_LINE_EXT_SCM_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/VDSL-LINE-EXT-SCM-MIB'
	conformance = 132
	name = 'VDSL-LINE-EXT-SCM-MIB'
	language = 2
	description = 'The VDSL-LINE-MIB found in RFC 3728 defines objects for the\nmanagement of a pair of VDSL transceivers at each end of the VDSL\nline.  The VDSL-LINE-MIB configures and monitors the line code\nindependent parameters (TC layer) of the VDSL line.  This MIB\nmodule is an optional extension of the VDSL-LINE-MIB and defines\nobjects for configuration and monitoring of the line code specific\n(LCS) elements (PMD layer) for VDSL lines using SCM coding.  The\nobjects in this extension MIB MUST NOT be used for VDSL lines\nusing Multiple Carrier Modulation (MCM) line coding.  If an object\nin this extension MIB is referenced by a line which does not use\nSCM, it has no effect on the operation of that line.\n\nNaming Conventions:\n\n   Vtuc -- VDSL transceiver at near (Central) end of line\n   Vtur -- VDSL transceiver at Remote end of line\n   Vtu  -- One of either Vtuc or Vtur\n   Curr -- Current\n   Atn  -- Attenuation\n   LCS  -- Line Code Specific\n   Max  -- Maximum\n   Mgn  -- Margin\n   PSD  -- Power Spectral Density\n   Rx   -- Receive\n   Snr  -- Signal to Noise Ratio\n   Tx   -- Transmit\n\nCopyright (C) The Internet Society (2005).  This version\nof this MIB module is part of RFC 4069: see the RFC\nitself for full legal notices.'

# nodes
class vdslExtSCMMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228])
	name = 'vdslExtSCMMIB'

class vdslLineExtSCMMib(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1])
	name = 'vdslLineExtSCMMib'

class vdslLineExtSCMMibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1])
	name = 'vdslLineExtSCMMibObjects'

class vdslLineExtSCMConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 2])
	name = 'vdslLineExtSCMConformance'

class vdslLineExtSCMGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 1])
	name = 'vdslLineExtSCMGroups'

class vdslLineExtSCMCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 2])
	name = 'vdslLineExtSCMCompliances'


# macros
# types 

class VdslSCMBandId(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'optionalBand'), Enum(2, 'firstDownstreamBand'), Enum(3, 'firstUpstreamBand'), Enum(4, 'secondDownstreamBand'), Enum(5, 'secondUpstreamBand'), Enum(6, 'thirdDownstreamBand'), Enum(7, 'thirdUpstreamBand')]

# scalars 
# columns
class vdslLineSCMConfProfileBandId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 1])
	syntaxobject = VdslSCMBandId


class vdslLineSCMConfProfileBandInUse(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vdslLineSCMConfProfileBandCenterFrequency(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Hz'


class vdslLineSCMConfProfileBandSymbolRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'baud'


class vdslLineSCMConfProfileBandConstellationSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'log2'


class vdslLineSCMConfProfileBandTransmitPSDLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = '-0.25 dBm/Hz'


class vdslLineSCMConfProfileBandRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class vdslLineSCMPhysBandId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 1])
	syntaxobject = VdslSCMBandId


class vdslLineSCMPhysBandInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class vdslLineSCMPhysBandCurrCenterFrequency(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Hz'


class vdslLineSCMPhysBandCurrSymbolRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'baud'


class vdslLineSCMPhysBandCurrConstellationSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'log2'


class vdslLineSCMPhysBandCurrPSDLevel(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '- 0.25 dBm/Hz'


class vdslLineSCMPhysBandCurrSnrMgn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = '0.25 dB'


class vdslLineSCMPhysBandCurrAtn(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '0.25 dB'


# rows 
class vdslLineSCMConfProfileBandEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([vdslLineConfProfileName, vdslLineSCMConfProfileBandId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1])
	access = 2
	rowstatus = vdslLineSCMConfProfileBandRowStatus
	columns = {'vdslLineSCMConfProfileBandId': vdslLineSCMConfProfileBandId, 'vdslLineSCMConfProfileBandInUse': vdslLineSCMConfProfileBandInUse, 'vdslLineSCMConfProfileBandCenterFrequency': vdslLineSCMConfProfileBandCenterFrequency, 'vdslLineSCMConfProfileBandSymbolRate': vdslLineSCMConfProfileBandSymbolRate, 'vdslLineSCMConfProfileBandConstellationSize': vdslLineSCMConfProfileBandConstellationSize, 'vdslLineSCMConfProfileBandTransmitPSDLevel': vdslLineSCMConfProfileBandTransmitPSDLevel, 'vdslLineSCMConfProfileBandRowStatus': vdslLineSCMConfProfileBandRowStatus}


class vdslLineSCMPhysBandEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, vdslLineSCMPhysBandId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1])
	access = 2
	columns = {'vdslLineSCMPhysBandId': vdslLineSCMPhysBandId, 'vdslLineSCMPhysBandInUse': vdslLineSCMPhysBandInUse, 'vdslLineSCMPhysBandCurrCenterFrequency': vdslLineSCMPhysBandCurrCenterFrequency, 'vdslLineSCMPhysBandCurrSymbolRate': vdslLineSCMPhysBandCurrSymbolRate, 'vdslLineSCMPhysBandCurrConstellationSize': vdslLineSCMPhysBandCurrConstellationSize, 'vdslLineSCMPhysBandCurrPSDLevel': vdslLineSCMPhysBandCurrPSDLevel, 'vdslLineSCMPhysBandCurrSnrMgn': vdslLineSCMPhysBandCurrSnrMgn, 'vdslLineSCMPhysBandCurrAtn': vdslLineSCMPhysBandCurrAtn}


# notifications (traps) 
# groups 
class vdslLineExtSCMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 1, 1])
	group = [vdslLineSCMConfProfileBandInUse, vdslLineSCMConfProfileBandTransmitPSDLevel, vdslLineSCMConfProfileBandSymbolRate, vdslLineSCMConfProfileBandConstellationSize, vdslLineSCMConfProfileBandCenterFrequency, vdslLineSCMConfProfileBandRowStatus, vdslLineSCMPhysBandInUse, vdslLineSCMPhysBandCurrPSDLevel, vdslLineSCMPhysBandCurrSymbolRate, vdslLineSCMPhysBandCurrConstellationSize, vdslLineSCMPhysBandCurrCenterFrequency, vdslLineSCMPhysBandCurrSnrMgn, vdslLineSCMPhysBandCurrAtn]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
