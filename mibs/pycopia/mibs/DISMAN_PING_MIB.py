# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndexOrZero
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, Gauge32, mib_2, NOTIFICATION_TYPE, OBJECT_IDENTITY
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, StorageType, DateAndTime, TruthValue

class DISMAN_PING_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/DISMAN-PING-MIB'
	name = 'DISMAN-PING-MIB'
	language = 2
	description = 'The Ping MIB (DISMAN-PING-MIB) provides the capability of\ncontrolling the use of the ping function at a remote\nhost.\n\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4560; see the RFC itself for\nfull legal notices.'

# nodes
class pingMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80])
	name = 'pingMIB'

class pingNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 0])
	name = 'pingNotifications'

class pingObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1])
	name = 'pingObjects'

class pingConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2])
	name = 'pingConformance'

class pingCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 1])
	name = 'pingCompliances'

class pingGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2])
	name = 'pingGroups'

class pingImplementationTypeDomains(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 3])
	name = 'pingImplementationTypeDomains'

class pingIcmpEcho(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 3, 1])
	name = 'pingIcmpEcho'

class pingUdpEcho(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 3, 2])
	name = 'pingUdpEcho'

class pingSnmpQuery(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 3, 3])
	name = 'pingSnmpQuery'

class pingTcpConnectionAttempt(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 3, 4])
	name = 'pingTcpConnectionAttempt'


# macros
# types 

class OperationResponseStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'responseReceived'), Enum(2, 'unknown'), Enum(3, 'internalError'), Enum(4, 'requestTimedOut'), Enum(5, 'unknownDestinationAddress'), Enum(6, 'noRouteToTarget'), Enum(7, 'interfaceInactiveToTarget'), Enum(8, 'arpFailure'), Enum(9, 'maxConcurrentLimitReached'), Enum(10, 'unableToResolveDnsName'), Enum(11, 'invalidHostAddress')]

# scalars 
class pingMaxConcurrentRequests(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'requests'


# columns
class pingCtlOwnerIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class pingCtlTestName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 2])
	syntaxobject = SnmpAdminString


class pingCtlTargetAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 3])
	syntaxobject = InetAddressType


class pingCtlTargetAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 4])
	syntaxobject = InetAddress


class pingCtlDataSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'octets'


class pingCtlTimeOut(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class pingCtlProbeCount(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'probes'


class pingCtlAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class pingCtlDataFill(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class pingCtlFrequency(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class pingCtlMaxRows(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'rows'


class pingCtlStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class pingCtlTrapGeneration(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class pingCtlTrapProbeFailureFilter(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pingCtlTrapTestFailureFilter(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pingCtlType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class pingCtlDescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 17])
	syntaxobject = SnmpAdminString


class pingCtlSourceAddressType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 18])
	syntaxobject = InetAddressType


class pingCtlSourceAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 19])
	syntaxobject = InetAddress


class pingCtlIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 20])
	syntaxobject = InterfaceIndexOrZero


class pingCtlByPassRouteTable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class pingCtlDSField(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pingCtlRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class pingResultsOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled'), Enum(3, 'completed')]


class pingResultsIpTargetAddressType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 2])
	syntaxobject = InetAddressType


class pingResultsIpTargetAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 3])
	syntaxobject = InetAddress


class pingResultsMinRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class pingResultsMaxRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class pingResultsAverageRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class pingResultsProbeResponses(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'responses'


class pingResultsSentProbes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'probes'


class pingResultsRttSumOfSquares(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class pingResultsLastGoodProbe(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class pingProbeHistoryIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class pingProbeHistoryResponse(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class pingProbeHistoryStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 4, 1, 3])
	syntaxobject = OperationResponseStatus


class pingProbeHistoryLastRC(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class pingProbeHistoryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# rows 
class pingCtlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pingCtlOwnerIndex, pingCtlTestName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 2, 1])
	access = 2
	rowstatus = pingCtlRowStatus
	columns = {'pingCtlOwnerIndex': pingCtlOwnerIndex, 'pingCtlTestName': pingCtlTestName, 'pingCtlTargetAddressType': pingCtlTargetAddressType, 'pingCtlTargetAddress': pingCtlTargetAddress, 'pingCtlDataSize': pingCtlDataSize, 'pingCtlTimeOut': pingCtlTimeOut, 'pingCtlProbeCount': pingCtlProbeCount, 'pingCtlAdminStatus': pingCtlAdminStatus, 'pingCtlDataFill': pingCtlDataFill, 'pingCtlFrequency': pingCtlFrequency, 'pingCtlMaxRows': pingCtlMaxRows, 'pingCtlStorageType': pingCtlStorageType, 'pingCtlTrapGeneration': pingCtlTrapGeneration, 'pingCtlTrapProbeFailureFilter': pingCtlTrapProbeFailureFilter, 'pingCtlTrapTestFailureFilter': pingCtlTrapTestFailureFilter, 'pingCtlType': pingCtlType, 'pingCtlDescr': pingCtlDescr, 'pingCtlSourceAddressType': pingCtlSourceAddressType, 'pingCtlSourceAddress': pingCtlSourceAddress, 'pingCtlIfIndex': pingCtlIfIndex, 'pingCtlByPassRouteTable': pingCtlByPassRouteTable, 'pingCtlDSField': pingCtlDSField, 'pingCtlRowStatus': pingCtlRowStatus}


class pingResultsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pingCtlOwnerIndex, pingCtlTestName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 3, 1])
	access = 2
	columns = {'pingResultsOperStatus': pingResultsOperStatus, 'pingResultsIpTargetAddressType': pingResultsIpTargetAddressType, 'pingResultsIpTargetAddress': pingResultsIpTargetAddress, 'pingResultsMinRtt': pingResultsMinRtt, 'pingResultsMaxRtt': pingResultsMaxRtt, 'pingResultsAverageRtt': pingResultsAverageRtt, 'pingResultsProbeResponses': pingResultsProbeResponses, 'pingResultsSentProbes': pingResultsSentProbes, 'pingResultsRttSumOfSquares': pingResultsRttSumOfSquares, 'pingResultsLastGoodProbe': pingResultsLastGoodProbe}


class pingProbeHistoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([pingCtlOwnerIndex, pingCtlTestName, pingProbeHistoryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 1, 4, 1])
	access = 2
	columns = {'pingProbeHistoryIndex': pingProbeHistoryIndex, 'pingProbeHistoryResponse': pingProbeHistoryResponse, 'pingProbeHistoryStatus': pingProbeHistoryStatus, 'pingProbeHistoryLastRC': pingProbeHistoryLastRC, 'pingProbeHistoryTime': pingProbeHistoryTime}


# notifications (traps) 
class pingProbeFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 0, 1])

class pingTestFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 0, 2])

class pingTestCompleted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 0, 3])

# groups 
class pingGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2, 1])
	group = [pingMaxConcurrentRequests, pingCtlTargetAddressType, pingCtlTargetAddress, pingCtlDataSize, pingCtlTimeOut, pingCtlProbeCount, pingCtlAdminStatus, pingCtlDataFill, pingCtlFrequency, pingCtlMaxRows, pingCtlStorageType, pingCtlTrapGeneration, pingCtlTrapProbeFailureFilter, pingCtlTrapTestFailureFilter, pingCtlType, pingCtlDescr, pingCtlByPassRouteTable, pingCtlSourceAddressType, pingCtlSourceAddress, pingCtlIfIndex, pingCtlDSField, pingCtlRowStatus, pingResultsOperStatus, pingResultsIpTargetAddressType, pingResultsIpTargetAddress, pingResultsMinRtt, pingResultsMaxRtt, pingResultsAverageRtt, pingResultsProbeResponses, pingResultsSentProbes, pingResultsRttSumOfSquares, pingProbeHistoryResponse, pingProbeHistoryStatus, pingProbeHistoryLastRC]

class pingTimeStampGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2, 2])
	group = [pingResultsLastGoodProbe, pingProbeHistoryTime]

class pingNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2, 3])
	group = [pingProbeFailed, pingTestFailed, pingTestCompleted]

class pingMinimumGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2, 4])
	group = [pingMaxConcurrentRequests, pingCtlTargetAddressType, pingCtlTargetAddress, pingCtlDataSize, pingCtlTimeOut, pingCtlProbeCount, pingCtlAdminStatus, pingCtlDataFill, pingCtlFrequency, pingCtlMaxRows, pingCtlStorageType, pingCtlTrapGeneration, pingCtlTrapProbeFailureFilter, pingCtlTrapTestFailureFilter, pingCtlType, pingCtlDescr, pingCtlByPassRouteTable, pingCtlSourceAddressType, pingCtlSourceAddress, pingCtlIfIndex, pingCtlDSField, pingResultsOperStatus, pingResultsIpTargetAddressType, pingResultsIpTargetAddress, pingResultsMinRtt, pingResultsMaxRtt, pingResultsAverageRtt, pingResultsProbeResponses, pingResultsSentProbes, pingResultsRttSumOfSquares, pingResultsLastGoodProbe]

class pingCtlRowStatusGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2, 5])
	group = [pingCtlRowStatus]

class pingHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 80, 2, 2, 6])
	group = [pingProbeHistoryResponse, pingProbeHistoryStatus, pingProbeHistoryLastRC, pingProbeHistoryTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
