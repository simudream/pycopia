# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Gauge32, Counter32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import PhysAddress, TruthValue, TEXTUAL_CONVENTION
from IF_MIB import ifIndex

class CISCO_VINES_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-VINES-MIB'
	conformance = 3
	name = 'CISCO-VINES-MIB'
	language = 2
	description = ''

# nodes
class ciscoVinesMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17])
	name = 'ciscoVinesMIB'

class ciscoVinesMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1])
	name = 'ciscoVinesMIBObjects'

class cvBasic(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 1])
	name = 'cvBasic'

class cvForwarding(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2])
	name = 'cvForwarding'

class cvTotal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3])
	name = 'cvTotal'

class cvInterface(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4])
	name = 'cvInterface'

class ciscoVinesMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 3])
	name = 'ciscoVinesMIBConformance'

class ciscoVinesMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 3, 1])
	name = 'ciscoVinesMIBCompliances'

class ciscoVinesMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 3, 2])
	name = 'ciscoVinesMIBGroups'


# macros
# types 

class VinesNetworkNumber(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))


class VinesHostNumber(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 65535))


class VinesMetric(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 819200))

# scalars 
class cvBasicNetwork(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 1, 1])
	syntaxobject = VinesNetworkNumber


class cvBasicHost(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 1, 2])
	syntaxobject = VinesHostNumber


class cvBasicNextClient(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 1, 3])
	syntaxobject = VinesHostNumber


class cvForwNeighborNeighborCount(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class cvForwNeighborPathCount(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class cvForwNeighborVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvForwRouteRouterCount(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class cvForwRouteRouteCount(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class cvForwRouteVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvForwRouteUpdateCountdown(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'seconds'


class cvTotalInputPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalOutputPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalLocalDestPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalForwardedPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalBroadcastInPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalBroadcastOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalBroadcastForwardPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalLanOnlyPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalNotOver4800Packets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalNoChargesPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalFormatErrors(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalChecksumErrors(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalHopCountsExceeded(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalNoRouteDrops(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalEncapsFailedDrops(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalUnknownPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalIcpInPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalIcpOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalMetricOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalMacEchoInPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalMacEchoOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalEchoInPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalEchoOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalProxyOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvTotalProxyReplyOutPackets(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 3, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class cvForwNeighborNetwork(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 1])
	syntaxobject = VinesNetworkNumber


class cvForwNeighborHost(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 2])
	syntaxobject = VinesHostNumber


class cvForwNeighborPhysAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class cvForwNeighborSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unrecognized'), Enum(2, 'self'), Enum(3, 'rtpRedirect'), Enum(4, 'rtpUpdate'), Enum(5, 'manualRoute'), Enum(6, 'igrp'), Enum(7, 'test'), Enum(8, 'manualNeighbor')]


class cvForwNeighborRtpVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvForwNeighborUsageType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'next'), Enum(2, 'roundRobin'), Enum(3, 'backup')]


class cvForwNeighborAge(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class cvForwNeighborMetric(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 8])
	syntaxobject = VinesMetric
	access = 4
	units = 'milleseconds'


class cvForwNeighborUses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvForwRouteNetworkNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 1])
	syntaxobject = VinesNetworkNumber


class cvForwRouteNeighborNetwork(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 2])
	syntaxobject = VinesNetworkNumber


class cvForwRouteSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unrecognized'), Enum(2, 'self'), Enum(3, 'rtpRedirect'), Enum(4, 'rtpUpdate'), Enum(5, 'manualRoute'), Enum(6, 'igrp'), Enum(7, 'test')]


class cvForwRouteRtpVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvForwRouteUseNext(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvForwRouteForwardBroadcast(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvForwRouteSuppress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvForwRouteLoadShareEligible(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvForwRouteAge(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class cvForwRouteMetric(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 10])
	syntaxobject = VinesMetric
	access = 4
	units = 'milleseconds'


class cvForwRouteUses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfConfigMetric(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 1])
	syntaxobject = VinesMetric


class cvIfConfigEncapsulation(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'arpa'), Enum(2, 'tokenRing'), Enum(3, 'snap')]


class cvIfConfigAccesslist(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvIfConfigPropagate(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'never'), Enum(2, 'always'), Enum(3, 'dynamic')]


class cvIfConfigArpEnabled(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'never'), Enum(2, 'always'), Enum(3, 'dynamic')]


class cvIfConfigServerless(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'never'), Enum(2, 'dynamic'), Enum(3, 'always'), Enum(4, 'alwaysBroadcast')]


class cvIfConfigRedirectInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milleseconds'


class cvIfConfigSplitDisabled(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvIfConfigLineup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvIfConfigFastokay(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvIfConfigRouteCache(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvIfConfigInputRouterFilter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvIfConfigInputNetworkFilter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvIfConfigOutputNetworkFilter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cvIfCountInNotEnabledDrops(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInFormatErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInLocalDestPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInBroadcastPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInForwardedPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInNoRouteDrops(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInZeroHopCountDrops(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInChecksumErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInArpQueryRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInArpQueryResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInArpAssignmentRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInArpAssignmentResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInArpIllegalMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInIcpErrorMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInIcpMetricMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInIcpIllegalMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInIpcMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtp0Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtp1Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtp2Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtp3Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtpUpdateMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtpResponseMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtpRedirectMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInRtpIllegalMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInSppMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInIpUnknownProtocols(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInIpcUnknownPorts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInBroadcastsHelpered(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInBroadcastsForwarded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInBroadcastDuplicates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInEchoPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInMacEchoPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountInProxyReplyPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutUnicastPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutBroadcastPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutForwardedPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutEncapsulationFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutAccessFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutDownFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutPacketsNotBroadcastToSource(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutPacketsNotBroadcastLanOnly(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutPacketsNotBroadcastNotOver4800(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutPacketsNotBroadcastNoCharge(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutBroadcastsForwarded(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutBroadcastsHelpered(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutArpQueryRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutArpQueryResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutArpAssignmentRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutArpAssignmentResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutIcpErrorMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutIcpMetricMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutIpcMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtp0Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtpRequestMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtp2Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtp3Messages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtpUpdateMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtpResponseMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutRtpRedirectMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutSppMessages(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutEchoPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutMacEchoPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvIfCountOutProxyPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class cvForwNeighborEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cvForwNeighborNetwork, cvForwNeighborHost, ifIndex, cvForwNeighborPhysAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 4, 1])
	access = 2
	columns = {'cvForwNeighborNetwork': cvForwNeighborNetwork, 'cvForwNeighborHost': cvForwNeighborHost, 'cvForwNeighborPhysAddress': cvForwNeighborPhysAddress, 'cvForwNeighborSource': cvForwNeighborSource, 'cvForwNeighborRtpVersion': cvForwNeighborRtpVersion, 'cvForwNeighborUsageType': cvForwNeighborUsageType, 'cvForwNeighborAge': cvForwNeighborAge, 'cvForwNeighborMetric': cvForwNeighborMetric, 'cvForwNeighborUses': cvForwNeighborUses}


class cvForwRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([cvForwRouteNetworkNumber, cvForwRouteNeighborNetwork], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 2, 9, 1])
	access = 2
	columns = {'cvForwRouteNetworkNumber': cvForwRouteNetworkNumber, 'cvForwRouteNeighborNetwork': cvForwRouteNeighborNetwork, 'cvForwRouteSource': cvForwRouteSource, 'cvForwRouteRtpVersion': cvForwRouteRtpVersion, 'cvForwRouteUseNext': cvForwRouteUseNext, 'cvForwRouteForwardBroadcast': cvForwRouteForwardBroadcast, 'cvForwRouteSuppress': cvForwRouteSuppress, 'cvForwRouteLoadShareEligible': cvForwRouteLoadShareEligible, 'cvForwRouteAge': cvForwRouteAge, 'cvForwRouteMetric': cvForwRouteMetric, 'cvForwRouteUses': cvForwRouteUses}


class cvIfConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 1, 1])
	access = 2
	columns = {'cvIfConfigMetric': cvIfConfigMetric, 'cvIfConfigEncapsulation': cvIfConfigEncapsulation, 'cvIfConfigAccesslist': cvIfConfigAccesslist, 'cvIfConfigPropagate': cvIfConfigPropagate, 'cvIfConfigArpEnabled': cvIfConfigArpEnabled, 'cvIfConfigServerless': cvIfConfigServerless, 'cvIfConfigRedirectInterval': cvIfConfigRedirectInterval, 'cvIfConfigSplitDisabled': cvIfConfigSplitDisabled, 'cvIfConfigLineup': cvIfConfigLineup, 'cvIfConfigFastokay': cvIfConfigFastokay, 'cvIfConfigRouteCache': cvIfConfigRouteCache, 'cvIfConfigInputRouterFilter': cvIfConfigInputRouterFilter, 'cvIfConfigInputNetworkFilter': cvIfConfigInputNetworkFilter, 'cvIfConfigOutputNetworkFilter': cvIfConfigOutputNetworkFilter}


class cvIfCountInEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 2, 1])
	access = 2
	columns = {'cvIfCountInNotEnabledDrops': cvIfCountInNotEnabledDrops, 'cvIfCountInFormatErrors': cvIfCountInFormatErrors, 'cvIfCountInLocalDestPackets': cvIfCountInLocalDestPackets, 'cvIfCountInBroadcastPackets': cvIfCountInBroadcastPackets, 'cvIfCountInForwardedPackets': cvIfCountInForwardedPackets, 'cvIfCountInNoRouteDrops': cvIfCountInNoRouteDrops, 'cvIfCountInZeroHopCountDrops': cvIfCountInZeroHopCountDrops, 'cvIfCountInChecksumErrors': cvIfCountInChecksumErrors, 'cvIfCountInArpQueryRequests': cvIfCountInArpQueryRequests, 'cvIfCountInArpQueryResponses': cvIfCountInArpQueryResponses, 'cvIfCountInArpAssignmentRequests': cvIfCountInArpAssignmentRequests, 'cvIfCountInArpAssignmentResponses': cvIfCountInArpAssignmentResponses, 'cvIfCountInArpIllegalMessages': cvIfCountInArpIllegalMessages, 'cvIfCountInIcpErrorMessages': cvIfCountInIcpErrorMessages, 'cvIfCountInIcpMetricMessages': cvIfCountInIcpMetricMessages, 'cvIfCountInIcpIllegalMessages': cvIfCountInIcpIllegalMessages, 'cvIfCountInIpcMessages': cvIfCountInIpcMessages, 'cvIfCountInRtp0Messages': cvIfCountInRtp0Messages, 'cvIfCountInRtp1Messages': cvIfCountInRtp1Messages, 'cvIfCountInRtp2Messages': cvIfCountInRtp2Messages, 'cvIfCountInRtp3Messages': cvIfCountInRtp3Messages, 'cvIfCountInRtpUpdateMessages': cvIfCountInRtpUpdateMessages, 'cvIfCountInRtpResponseMessages': cvIfCountInRtpResponseMessages, 'cvIfCountInRtpRedirectMessages': cvIfCountInRtpRedirectMessages, 'cvIfCountInRtpIllegalMessages': cvIfCountInRtpIllegalMessages, 'cvIfCountInSppMessages': cvIfCountInSppMessages, 'cvIfCountInIpUnknownProtocols': cvIfCountInIpUnknownProtocols, 'cvIfCountInIpcUnknownPorts': cvIfCountInIpcUnknownPorts, 'cvIfCountInBroadcastsHelpered': cvIfCountInBroadcastsHelpered, 'cvIfCountInBroadcastsForwarded': cvIfCountInBroadcastsForwarded, 'cvIfCountInBroadcastDuplicates': cvIfCountInBroadcastDuplicates, 'cvIfCountInEchoPackets': cvIfCountInEchoPackets, 'cvIfCountInMacEchoPackets': cvIfCountInMacEchoPackets, 'cvIfCountInProxyReplyPackets': cvIfCountInProxyReplyPackets}


class cvIfCountOutEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 1, 4, 3, 1])
	access = 2
	columns = {'cvIfCountOutUnicastPackets': cvIfCountOutUnicastPackets, 'cvIfCountOutBroadcastPackets': cvIfCountOutBroadcastPackets, 'cvIfCountOutForwardedPackets': cvIfCountOutForwardedPackets, 'cvIfCountOutEncapsulationFailures': cvIfCountOutEncapsulationFailures, 'cvIfCountOutAccessFailures': cvIfCountOutAccessFailures, 'cvIfCountOutDownFailures': cvIfCountOutDownFailures, 'cvIfCountOutPacketsNotBroadcastToSource': cvIfCountOutPacketsNotBroadcastToSource, 'cvIfCountOutPacketsNotBroadcastLanOnly': cvIfCountOutPacketsNotBroadcastLanOnly, 'cvIfCountOutPacketsNotBroadcastNotOver4800': cvIfCountOutPacketsNotBroadcastNotOver4800, 'cvIfCountOutPacketsNotBroadcastNoCharge': cvIfCountOutPacketsNotBroadcastNoCharge, 'cvIfCountOutBroadcastsForwarded': cvIfCountOutBroadcastsForwarded, 'cvIfCountOutBroadcastsHelpered': cvIfCountOutBroadcastsHelpered, 'cvIfCountOutArpQueryRequests': cvIfCountOutArpQueryRequests, 'cvIfCountOutArpQueryResponses': cvIfCountOutArpQueryResponses, 'cvIfCountOutArpAssignmentRequests': cvIfCountOutArpAssignmentRequests, 'cvIfCountOutArpAssignmentResponses': cvIfCountOutArpAssignmentResponses, 'cvIfCountOutIcpErrorMessages': cvIfCountOutIcpErrorMessages, 'cvIfCountOutIcpMetricMessages': cvIfCountOutIcpMetricMessages, 'cvIfCountOutIpcMessages': cvIfCountOutIpcMessages, 'cvIfCountOutRtp0Messages': cvIfCountOutRtp0Messages, 'cvIfCountOutRtpRequestMessages': cvIfCountOutRtpRequestMessages, 'cvIfCountOutRtp2Messages': cvIfCountOutRtp2Messages, 'cvIfCountOutRtp3Messages': cvIfCountOutRtp3Messages, 'cvIfCountOutRtpUpdateMessages': cvIfCountOutRtpUpdateMessages, 'cvIfCountOutRtpResponseMessages': cvIfCountOutRtpResponseMessages, 'cvIfCountOutRtpRedirectMessages': cvIfCountOutRtpRedirectMessages, 'cvIfCountOutSppMessages': cvIfCountOutSppMessages, 'cvIfCountOutEchoPackets': cvIfCountOutEchoPackets, 'cvIfCountOutMacEchoPackets': cvIfCountOutMacEchoPackets, 'cvIfCountOutProxyPackets': cvIfCountOutProxyPackets}


# notifications (traps) 
# groups 
class ciscoVinesMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 17, 3, 2, 1])
	group = [cvBasicNetwork, cvBasicHost, cvBasicNextClient, cvForwNeighborNeighborCount, cvForwNeighborPathCount, cvForwNeighborVersion, cvForwNeighborSource, cvForwNeighborRtpVersion, cvForwNeighborUsageType, cvForwNeighborAge, cvForwNeighborMetric, cvForwNeighborUses, cvForwRouteRouterCount, cvForwRouteRouteCount, cvForwRouteVersion, cvForwRouteUpdateCountdown, cvForwRouteSource, cvForwRouteRtpVersion, cvForwRouteUseNext, cvForwRouteForwardBroadcast, cvForwRouteSuppress, cvForwRouteLoadShareEligible, cvForwRouteAge, cvForwRouteMetric, cvForwRouteUses, cvTotalInputPackets, cvTotalOutputPackets, cvTotalLocalDestPackets, cvTotalForwardedPackets, cvTotalBroadcastInPackets, cvTotalBroadcastOutPackets, cvTotalBroadcastForwardPackets, cvTotalLanOnlyPackets, cvTotalNotOver4800Packets, cvTotalNoChargesPackets, cvTotalFormatErrors, cvTotalChecksumErrors, cvTotalHopCountsExceeded, cvTotalNoRouteDrops, cvTotalEncapsFailedDrops, cvTotalUnknownPackets, cvTotalIcpInPackets, cvTotalIcpOutPackets, cvTotalMetricOutPackets, cvTotalMacEchoInPackets, cvTotalMacEchoOutPackets, cvTotalEchoInPackets, cvTotalEchoOutPackets, cvTotalProxyOutPackets, cvTotalProxyReplyOutPackets, cvIfConfigMetric, cvIfConfigEncapsulation, cvIfConfigAccesslist, cvIfConfigPropagate, cvIfConfigArpEnabled, cvIfConfigServerless, cvIfConfigRedirectInterval, cvIfConfigSplitDisabled, cvIfConfigLineup, cvIfConfigFastokay, cvIfConfigRouteCache, cvIfConfigInputRouterFilter, cvIfConfigInputNetworkFilter, cvIfConfigOutputNetworkFilter, cvIfCountInNotEnabledDrops, cvIfCountInFormatErrors, cvIfCountInLocalDestPackets, cvIfCountInBroadcastPackets, cvIfCountInForwardedPackets, cvIfCountInNoRouteDrops, cvIfCountInZeroHopCountDrops, cvIfCountInChecksumErrors, cvIfCountInArpQueryRequests, cvIfCountInArpQueryResponses, cvIfCountInArpAssignmentRequests, cvIfCountInArpAssignmentResponses, cvIfCountInArpIllegalMessages, cvIfCountInIcpErrorMessages, cvIfCountInIcpMetricMessages, cvIfCountInIcpIllegalMessages, cvIfCountInIpcMessages, cvIfCountInRtp0Messages, cvIfCountInRtp1Messages, cvIfCountInRtp2Messages, cvIfCountInRtp3Messages, cvIfCountInRtpUpdateMessages, cvIfCountInRtpResponseMessages, cvIfCountInRtpRedirectMessages, cvIfCountInRtpIllegalMessages, cvIfCountInSppMessages, cvIfCountInIpUnknownProtocols, cvIfCountInIpcUnknownPorts, cvIfCountInBroadcastsHelpered, cvIfCountInBroadcastsForwarded, cvIfCountInBroadcastDuplicates, cvIfCountInEchoPackets, cvIfCountInMacEchoPackets, cvIfCountInProxyReplyPackets, cvIfCountOutUnicastPackets, cvIfCountOutBroadcastPackets, cvIfCountOutForwardedPackets, cvIfCountOutEncapsulationFailures, cvIfCountOutAccessFailures, cvIfCountOutDownFailures, cvIfCountOutPacketsNotBroadcastToSource, cvIfCountOutPacketsNotBroadcastLanOnly, cvIfCountOutPacketsNotBroadcastNotOver4800, cvIfCountOutPacketsNotBroadcastNoCharge, cvIfCountOutBroadcastsForwarded, cvIfCountOutBroadcastsHelpered, cvIfCountOutArpQueryRequests, cvIfCountOutArpQueryResponses, cvIfCountOutArpAssignmentRequests, cvIfCountOutArpAssignmentResponses, cvIfCountOutIcpErrorMessages, cvIfCountOutIcpMetricMessages, cvIfCountOutIpcMessages, cvIfCountOutRtp0Messages, cvIfCountOutRtpRequestMessages, cvIfCountOutRtp2Messages, cvIfCountOutRtp3Messages, cvIfCountOutRtpUpdateMessages, cvIfCountOutRtpResponseMessages, cvIfCountOutRtpRedirectMessages, cvIfCountOutSppMessages, cvIfCountOutEchoPackets, cvIfCountOutMacEchoPackets, cvIfCountOutProxyPackets]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
