# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32
from TUBS_SMI import ibr
from SNMPv2_TC import DisplayString, DateAndTime

class TUBS_IBR_PROC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/tubs/TUBS-IBR-PROC-MIB'
	conformance = 4
	name = 'TUBS-IBR-PROC-MIB'
	language = 2
	description = 'Experimental MIB module for listing processes.'

# nodes
class procMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 3])
	name = 'procMIB'


# macros
# types 
# scalars 
class procReload(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# columns
class procID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class procCmd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# rows 
class procEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([procID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 3, 2, 1])
	access = 2
	columns = {'procID': procID, 'procCmd': procCmd}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
