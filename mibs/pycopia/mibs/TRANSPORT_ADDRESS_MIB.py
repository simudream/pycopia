# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_IDENTITY, mib_2
from SNMPv2_TC import TEXTUAL_CONVENTION

class TRANSPORT_ADDRESS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/TRANSPORT-ADDRESS-MIB'
	conformance = 5
	name = 'TRANSPORT-ADDRESS-MIB'
	language = 2
	description = 'This MIB module provides commonly used transport\naddress definitions.\n\nCopyright (C) The Internet Society (2002). This version of\nthis MIB module is part of RFC 3419; see the RFC itself for\nfull legal notices.'

# nodes
class transportAddressMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100])
	name = 'transportAddressMIB'

class transportDomains(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1])
	name = 'transportDomains'

class transportDomainUdpIpv4(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 1])
	name = 'transportDomainUdpIpv4'

class transportDomainUdpIpv6(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 2])
	name = 'transportDomainUdpIpv6'

class transportDomainUdpIpv4z(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 3])
	name = 'transportDomainUdpIpv4z'

class transportDomainUdpIpv6z(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 4])
	name = 'transportDomainUdpIpv6z'

class transportDomainTcpIpv4(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 5])
	name = 'transportDomainTcpIpv4'

class transportDomainTcpIpv6(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 6])
	name = 'transportDomainTcpIpv6'

class transportDomainTcpIpv4z(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 7])
	name = 'transportDomainTcpIpv4z'

class transportDomainTcpIpv6z(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 8])
	name = 'transportDomainTcpIpv6z'

class transportDomainSctpIpv4(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 9])
	name = 'transportDomainSctpIpv4'

class transportDomainSctpIpv6(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 10])
	name = 'transportDomainSctpIpv6'

class transportDomainSctpIpv4z(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 11])
	name = 'transportDomainSctpIpv4z'

class transportDomainSctpIpv6z(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 12])
	name = 'transportDomainSctpIpv6z'

class transportDomainLocal(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 13])
	name = 'transportDomainLocal'

class transportDomainUdpDns(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 14])
	name = 'transportDomainUdpDns'

class transportDomainTcpDns(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 15])
	name = 'transportDomainTcpDns'

class transportDomainSctpDns(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 100, 1, 16])
	name = 'transportDomainSctpDns'


# macros
# types 

class TransportDomain(pycopia.SMI.Basetypes.ObjectIdentifier):
	status = 1


class TransportAddressType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'unknown'), Enum(1, 'udpIpv4'), Enum(2, 'udpIpv6'), Enum(3, 'udpIpv4z'), Enum(4, 'udpIpv6z'), Enum(5, 'tcpIpv4'), Enum(6, 'tcpIpv6'), Enum(7, 'tcpIpv4z'), Enum(8, 'tcpIpv6z'), Enum(9, 'sctpIpv4'), Enum(10, 'sctpIpv6'), Enum(11, 'sctpIpv4z'), Enum(12, 'sctpIpv6z'), Enum(13, 'local'), Enum(14, 'udpDns'), Enum(15, 'tcpDns'), Enum(16, 'sctpDns')]


class TransportAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))


class TransportAddressIPv4(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(6, 6))
	format = '1d.1d.1d.1d:2d'


class TransportAddressIPv6(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(18, 18))
	format = '0a[2x:2x:2x:2x:2x:2x:2x:2x]0a:2d'


class TransportAddressIPv4z(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(10, 10))
	format = '1d.1d.1d.1d%4d:2d'


class TransportAddressIPv6z(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(22, 22))
	format = '0a[2x:2x:2x:2x:2x:2x:2x:2x%4d]0a:2d'


class TransportAddressLocal(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 255))
	format = '1a'


class TransportAddressDns(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 255))
	format = '1a'

# scalars 
# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
