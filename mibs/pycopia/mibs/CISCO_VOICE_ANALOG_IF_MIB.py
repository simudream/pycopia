# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Counter32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TruthValue
from IF_MIB import ifIndex

class CISCO_VOICE_ANALOG_IF_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-VOICE-ANALOG-IF-MIB'
	conformance = 3
	name = 'CISCO-VOICE-ANALOG-IF-MIB'
	language = 2
	description = 'Analog Voice Interface MIB module.\nThis MIB manages the E&M, FXO, FXS         \nInterfaces in the router.'

# nodes
class ciscoVoiceAnalogIfMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62])
	name = 'ciscoVoiceAnalogIfMIB'

class cvaIfObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1])
	name = 'cvaIfObjects'

class cvaIfGeneralObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1])
	name = 'cvaIfGeneralObjects'

class cvaIfEMObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2])
	name = 'cvaIfEMObjects'

class cvaIfFXOObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3])
	name = 'cvaIfFXOObjects'

class cvaIfFXSObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4])
	name = 'cvaIfFXSObjects'

class cvaIfMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3])
	name = 'cvaIfMIBConformance'

class cvaIfMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3, 1])
	name = 'cvaIfMIBCompliances'

class cvaIfMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3, 2])
	name = 'cvaIfMIBGroups'


# macros
# types 
# scalars 
# columns
class cvaIfCfgImpedance(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'ohms600Real'), Enum(3, 'ohms600Complex'), Enum(4, 'ohms900Complex'), Enum(5, 'ohmsComplex1'), Enum(6, 'ohmsComplex2')]


class cvaIfCfgIntegratedDSP(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfStatusInfoType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'voice'), Enum(3, 'g3Fax')]


class cvaIfMaintenanceMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'hostCompressedLoopback'), Enum(3, 'hostUncompressedLoopback'), Enum(4, 'ifCompressedLoopback'), Enum(5, 'ifUncompressedLoopback')]


class cvaIfStatusSignalErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class cvaIfEMCfgSignalType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'winkStart'), Enum(2, 'immediateDial'), Enum(3, 'delayDial')]


class cvaIfEMCfgOperation(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'twoWires'), Enum(2, 'fourWires')]


class cvaIfEMCfgType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'typeI'), Enum(2, 'typeII'), Enum(3, 'typeIII'), Enum(4, 'typeIV'), Enum(5, 'typeV')]


class cvaIfEMCfgDialType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dtmf'), Enum(2, 'pulse')]


class cvaIfEMInSeizureActive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfEMOutSeizureActive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfEMTimingDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingInterDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingPulseRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'pulses per second'


class cvaIfEMTimingPulseInterDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingClearWaitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingMaxWinkWaitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingMaxWinkDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingDelayStart(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingMaxDelayDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfEMTimingMinDelayPulseWidth(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfFXOCfgSignalType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fxoLoopStart'), Enum(2, 'fxoGroundStart')]


class cvaIfFXOCfgNumberRings(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'rings'


class cvaIfFXOCfgSupDisconnect(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXOCfgDialType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dtmf'), Enum(2, 'pulse')]


class cvaIfFXOHookStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'onHook'), Enum(2, 'offHook')]


class cvaIfFXORingDetect(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXORingGround(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXOTipGround(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXOTimingDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfFXOTimingInterDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfFXOTimingPulseRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'pulses per second'


class cvaIfFXOTimingPulseInterDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfFXSCfgSignalType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fxsLoopStart'), Enum(2, 'fxsGroundStart')]


class cvaIfFXSRingFrequency(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ringFrequency25'), Enum(2, 'ringFrequency50'), Enum(3, 'ringFrequency20'), Enum(4, 'ringFrequency30')]


class cvaIfFXSHookStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'onHook'), Enum(2, 'offHook')]


class cvaIfFXSRingActive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXSRingGround(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXSTipGround(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class cvaIfFXSTimingDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class cvaIfFXSTimingInterDigitDuration(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


# rows 
class cvaIfCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 1, 1])
	access = 2
	columns = {'cvaIfCfgImpedance': cvaIfCfgImpedance, 'cvaIfCfgIntegratedDSP': cvaIfCfgIntegratedDSP}


from IF_MIB import ifIndex
class cvaIfStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 1, 2, 1])
	access = 2
	columns = {'cvaIfStatusInfoType': cvaIfStatusInfoType, 'cvaIfMaintenanceMode': cvaIfMaintenanceMode, 'cvaIfStatusSignalErrors': cvaIfStatusSignalErrors}


class cvaIfEMCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 1, 1])
	access = 2
	columns = {'cvaIfEMCfgSignalType': cvaIfEMCfgSignalType, 'cvaIfEMCfgOperation': cvaIfEMCfgOperation, 'cvaIfEMCfgType': cvaIfEMCfgType, 'cvaIfEMCfgDialType': cvaIfEMCfgDialType}


from IF_MIB import ifIndex
class cvaIfEMStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 2, 1])
	access = 2
	columns = {'cvaIfEMInSeizureActive': cvaIfEMInSeizureActive, 'cvaIfEMOutSeizureActive': cvaIfEMOutSeizureActive}


from IF_MIB import ifIndex
class cvaIfEMTimingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 2, 3, 1])
	access = 2
	columns = {'cvaIfEMTimingDigitDuration': cvaIfEMTimingDigitDuration, 'cvaIfEMTimingInterDigitDuration': cvaIfEMTimingInterDigitDuration, 'cvaIfEMTimingPulseRate': cvaIfEMTimingPulseRate, 'cvaIfEMTimingPulseInterDigitDuration': cvaIfEMTimingPulseInterDigitDuration, 'cvaIfEMTimingClearWaitDuration': cvaIfEMTimingClearWaitDuration, 'cvaIfEMTimingMaxWinkWaitDuration': cvaIfEMTimingMaxWinkWaitDuration, 'cvaIfEMTimingMaxWinkDuration': cvaIfEMTimingMaxWinkDuration, 'cvaIfEMTimingDelayStart': cvaIfEMTimingDelayStart, 'cvaIfEMTimingMaxDelayDuration': cvaIfEMTimingMaxDelayDuration, 'cvaIfEMTimingMinDelayPulseWidth': cvaIfEMTimingMinDelayPulseWidth}


class cvaIfFXOCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 1, 1])
	access = 2
	columns = {'cvaIfFXOCfgSignalType': cvaIfFXOCfgSignalType, 'cvaIfFXOCfgNumberRings': cvaIfFXOCfgNumberRings, 'cvaIfFXOCfgSupDisconnect': cvaIfFXOCfgSupDisconnect, 'cvaIfFXOCfgDialType': cvaIfFXOCfgDialType}


from IF_MIB import ifIndex
class cvaIfFXOStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 2, 1])
	access = 2
	columns = {'cvaIfFXOHookStatus': cvaIfFXOHookStatus, 'cvaIfFXORingDetect': cvaIfFXORingDetect, 'cvaIfFXORingGround': cvaIfFXORingGround, 'cvaIfFXOTipGround': cvaIfFXOTipGround}


from IF_MIB import ifIndex
class cvaIfFXOTimingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 3, 3, 1])
	access = 2
	columns = {'cvaIfFXOTimingDigitDuration': cvaIfFXOTimingDigitDuration, 'cvaIfFXOTimingInterDigitDuration': cvaIfFXOTimingInterDigitDuration, 'cvaIfFXOTimingPulseRate': cvaIfFXOTimingPulseRate, 'cvaIfFXOTimingPulseInterDigitDuration': cvaIfFXOTimingPulseInterDigitDuration}


class cvaIfFXSCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 1, 1])
	access = 2
	columns = {'cvaIfFXSCfgSignalType': cvaIfFXSCfgSignalType, 'cvaIfFXSRingFrequency': cvaIfFXSRingFrequency}


from IF_MIB import ifIndex
class cvaIfFXSStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 2, 1])
	access = 2
	columns = {'cvaIfFXSHookStatus': cvaIfFXSHookStatus, 'cvaIfFXSRingActive': cvaIfFXSRingActive, 'cvaIfFXSRingGround': cvaIfFXSRingGround, 'cvaIfFXSTipGround': cvaIfFXSTipGround}


from IF_MIB import ifIndex
class cvaIfFXSTimingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 1, 4, 3, 1])
	access = 2
	columns = {'cvaIfFXSTimingDigitDuration': cvaIfFXSTimingDigitDuration, 'cvaIfFXSTimingInterDigitDuration': cvaIfFXSTimingInterDigitDuration}


# notifications (traps) 
# groups 
class cvaIfGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3, 2, 1])
	group = [cvaIfCfgIntegratedDSP, cvaIfCfgImpedance, cvaIfStatusInfoType, cvaIfMaintenanceMode, cvaIfStatusSignalErrors]

class cvaIfEMGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3, 2, 2])
	group = [cvaIfEMInSeizureActive, cvaIfEMOutSeizureActive, cvaIfEMCfgSignalType, cvaIfEMCfgOperation, cvaIfEMCfgType, cvaIfEMCfgDialType, cvaIfEMTimingDigitDuration, cvaIfEMTimingInterDigitDuration, cvaIfEMTimingPulseRate, cvaIfEMTimingPulseInterDigitDuration, cvaIfEMTimingClearWaitDuration, cvaIfEMTimingMaxWinkWaitDuration, cvaIfEMTimingMaxWinkDuration, cvaIfEMTimingDelayStart, cvaIfEMTimingMaxDelayDuration, cvaIfEMTimingMinDelayPulseWidth]

class cvaIfFXOGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3, 2, 3])
	group = [cvaIfFXOHookStatus, cvaIfFXORingDetect, cvaIfFXORingGround, cvaIfFXOTipGround, cvaIfFXOCfgSignalType, cvaIfFXOCfgNumberRings, cvaIfFXOCfgSupDisconnect, cvaIfFXOCfgDialType, cvaIfFXOTimingDigitDuration, cvaIfFXOTimingInterDigitDuration, cvaIfFXOTimingPulseRate, cvaIfFXOTimingPulseInterDigitDuration]

class cvaIfFXSGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 62, 3, 2, 4])
	group = [cvaIfFXSHookStatus, cvaIfFXSRingActive, cvaIfFXSRingGround, cvaIfFXSTipGround, cvaIfFXSCfgSignalType, cvaIfFXSRingFrequency, cvaIfFXSTimingDigitDuration, cvaIfFXSTimingInterDigitDuration]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
