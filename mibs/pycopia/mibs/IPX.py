# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1213_MIB import PhysAddress
from RFC1155_SMI import enterprises, Counter
from RFC_1215 import TRAP_TYPE

class IPX(ModuleObject):
	path = '/usr/share/snmp/mibs/site/IPX'
	conformance = 2
	name = 'IPX'
	language = 1

# nodes
class novell(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23])
	name = 'novell'

class mibDoc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2])
	name = 'mibDoc'

class ipx(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5])
	name = 'ipx'

class ipxSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1])
	name = 'ipxSystem'

class ipxCircuit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2])
	name = 'ipxCircuit'

class ipxForwarding(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3])
	name = 'ipxForwarding'

class ipxServices(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 4])
	name = 'ipxServices'

class ipxTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 5])
	name = 'ipxTraps'


# macros
# types 

class NetNumber(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(4, 4))

# scalars 
# columns
class ipxBasicSysInstance(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxBasicSysExistState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class ipxBasicSysNetNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 3])
	syntaxobject = NetNumber


class ipxBasicSysNode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ipxBasicSysName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ipxBasicSysInReceives(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysInHdrErrors(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysInUnknownSockets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysInDiscards(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysInBadChecksums(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysInDelivers(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysNoRoutes(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysOutRequests(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysOutMalformedRequests(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysOutDiscards(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysOutPackets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxBasicSysConfigSockets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxBasicSysOpenSocketFails(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysInstance(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxAdvSysMaxPathSplits(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxAdvSysMaxHops(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxAdvSysInTooManyHops(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysInFiltered(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysInCompressDiscards(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysNETBIOSPackets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysForwPackets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysOutFiltered(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysOutCompressDiscards(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxAdvSysCircCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxAdvSysDestCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxAdvSysServCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircSysInstance(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircExistState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class ipxCircOperState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(2, 'up'), Enum(3, 'sleeping')]


class ipxCircIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ipxCircType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'broadcast'), Enum(3, 'ptToPt'), Enum(4, 'wanRIP'), Enum(5, 'unnumberedRIP'), Enum(6, 'dynamic'), Enum(7, 'wanWS')]


class ipxCircDialName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ipxCircLocalMaxPacketSize(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircCompressState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class ipxCircCompressSlots(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircStaticStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'current'), Enum(3, 'changed'), Enum(4, 'read'), Enum(5, 'reading'), Enum(6, 'write'), Enum(7, 'writing')]


class ipxCircCompressedSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircCompressedInitSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircCompressedRejectsSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircUncompressedSent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircCompressedReceived(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircCompressedInitReceived(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircCompressedRejectsReceived(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircUncompressedReceived(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircMediaType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ipxCircNetNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 22])
	syntaxobject = NetNumber


class ipxCircStateChanges(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircInitFails(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ipxCircDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircThroughput(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxCircNeighRouterName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class ipxCircNeighInternalNetNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 28])
	syntaxobject = NetNumber


class ipxDestSysInstance(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxDestNetNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 2])
	syntaxobject = NetNumber


class ipxDestProtocol(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'local'), Enum(3, 'rip'), Enum(4, 'nlsp'), Enum(5, 'static')]


class ipxDestTicks(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxDestHopCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxDestNextHopCircIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ipxDestNextHopNICAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class ipxDestNextHopNetNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 8])
	syntaxobject = NetNumber


# rows 
class ipxBasicSysEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ipxBasicSysInstance], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1])
	access = 2
	columns = {'ipxBasicSysInstance': ipxBasicSysInstance, 'ipxBasicSysExistState': ipxBasicSysExistState, 'ipxBasicSysNetNumber': ipxBasicSysNetNumber, 'ipxBasicSysNode': ipxBasicSysNode, 'ipxBasicSysName': ipxBasicSysName, 'ipxBasicSysInReceives': ipxBasicSysInReceives, 'ipxBasicSysInHdrErrors': ipxBasicSysInHdrErrors, 'ipxBasicSysInUnknownSockets': ipxBasicSysInUnknownSockets, 'ipxBasicSysInDiscards': ipxBasicSysInDiscards, 'ipxBasicSysInBadChecksums': ipxBasicSysInBadChecksums, 'ipxBasicSysInDelivers': ipxBasicSysInDelivers, 'ipxBasicSysNoRoutes': ipxBasicSysNoRoutes, 'ipxBasicSysOutRequests': ipxBasicSysOutRequests, 'ipxBasicSysOutMalformedRequests': ipxBasicSysOutMalformedRequests, 'ipxBasicSysOutDiscards': ipxBasicSysOutDiscards, 'ipxBasicSysOutPackets': ipxBasicSysOutPackets, 'ipxBasicSysConfigSockets': ipxBasicSysConfigSockets, 'ipxBasicSysOpenSocketFails': ipxBasicSysOpenSocketFails}


class ipxAdvSysEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ipxAdvSysInstance], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1])
	access = 2
	columns = {'ipxAdvSysInstance': ipxAdvSysInstance, 'ipxAdvSysMaxPathSplits': ipxAdvSysMaxPathSplits, 'ipxAdvSysMaxHops': ipxAdvSysMaxHops, 'ipxAdvSysInTooManyHops': ipxAdvSysInTooManyHops, 'ipxAdvSysInFiltered': ipxAdvSysInFiltered, 'ipxAdvSysInCompressDiscards': ipxAdvSysInCompressDiscards, 'ipxAdvSysNETBIOSPackets': ipxAdvSysNETBIOSPackets, 'ipxAdvSysForwPackets': ipxAdvSysForwPackets, 'ipxAdvSysOutFiltered': ipxAdvSysOutFiltered, 'ipxAdvSysOutCompressDiscards': ipxAdvSysOutCompressDiscards, 'ipxAdvSysCircCount': ipxAdvSysCircCount, 'ipxAdvSysDestCount': ipxAdvSysDestCount, 'ipxAdvSysServCount': ipxAdvSysServCount}


class ipxCircEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ipxCircSysInstance, ipxCircIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1])
	access = 2
	columns = {'ipxCircSysInstance': ipxCircSysInstance, 'ipxCircIndex': ipxCircIndex, 'ipxCircExistState': ipxCircExistState, 'ipxCircOperState': ipxCircOperState, 'ipxCircIfIndex': ipxCircIfIndex, 'ipxCircName': ipxCircName, 'ipxCircType': ipxCircType, 'ipxCircDialName': ipxCircDialName, 'ipxCircLocalMaxPacketSize': ipxCircLocalMaxPacketSize, 'ipxCircCompressState': ipxCircCompressState, 'ipxCircCompressSlots': ipxCircCompressSlots, 'ipxCircStaticStatus': ipxCircStaticStatus, 'ipxCircCompressedSent': ipxCircCompressedSent, 'ipxCircCompressedInitSent': ipxCircCompressedInitSent, 'ipxCircCompressedRejectsSent': ipxCircCompressedRejectsSent, 'ipxCircUncompressedSent': ipxCircUncompressedSent, 'ipxCircCompressedReceived': ipxCircCompressedReceived, 'ipxCircCompressedInitReceived': ipxCircCompressedInitReceived, 'ipxCircCompressedRejectsReceived': ipxCircCompressedRejectsReceived, 'ipxCircUncompressedReceived': ipxCircUncompressedReceived, 'ipxCircMediaType': ipxCircMediaType, 'ipxCircNetNumber': ipxCircNetNumber, 'ipxCircStateChanges': ipxCircStateChanges, 'ipxCircInitFails': ipxCircInitFails, 'ipxCircDelay': ipxCircDelay, 'ipxCircThroughput': ipxCircThroughput, 'ipxCircNeighRouterName': ipxCircNeighRouterName, 'ipxCircNeighInternalNetNum': ipxCircNeighInternalNetNum}


class ipxDestEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([ipxDestSysInstance, ipxDestNetNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1])
	access = 2
	columns = {'ipxDestSysInstance': ipxDestSysInstance, 'ipxDestNetNum': ipxDestNetNum, 'ipxDestProtocol': ipxDestProtocol, 'ipxDestTicks': ipxDestTicks, 'ipxDestHopCount': ipxDestHopCount, 'ipxDestNextHopCircIndex': ipxDestNextHopCircIndex, 'ipxDestNextHopNICAddress': ipxDestNextHopNICAddress, 'ipxDestNextHopNetNum': ipxDestNextHopNetNum}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
