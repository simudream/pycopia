# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1213_MIB import transmission
from RFC1155_SMI import Counter

class RFC1285_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RFC1285-MIB'
	conformance = 5
	name = 'RFC1285-MIB'
	language = 1

# nodes
class fddi(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15])
	name = 'fddi'

class snmpFddiSMT(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1])
	name = 'snmpFddiSMT'

class snmpFddiMAC(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2])
	name = 'snmpFddiMAC'

class snmpFddiPATH(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 3])
	name = 'snmpFddiPATH'

class snmpFddiPORT(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4])
	name = 'snmpFddiPORT'

class snmpFddiATTACHMENT(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5])
	name = 'snmpFddiATTACHMENT'

class snmpFddiChipSets(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 6])
	name = 'snmpFddiChipSets'

class snmpFddiPHYChipSets(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 6, 1])
	name = 'snmpFddiPHYChipSets'

class snmpFddiMACChipSets(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 6, 2])
	name = 'snmpFddiMACChipSets'

class snmpFddiPHYMACChipSets(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 6, 3])
	name = 'snmpFddiPHYMACChipSets'


# macros
# types 

class FddiTime(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 2147483647))


class FddiResourceId(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 65535))


class FddiSMTStationIdType(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(8, 8))


class FddiMACLongAddressType(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(6, 6))

# scalars 
class snmpFddiSMTNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiATTACHMENTNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class snmpFddiSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTStationId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 2])
	syntaxobject = FddiSMTStationIdType


class snmpFddiSMTOpVersionId(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTHiVersionId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTLoVersionId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTMACCt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTNonMasterCt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTMasterCt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTPathsAvailable(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTConfigCapabilities(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTConfigPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTConnectionPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTTNotify(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiSMTStatusReporting(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiSMTECMState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ec0'), Enum(2, 'ec1'), Enum(3, 'ec2'), Enum(4, 'ec3'), Enum(5, 'ec4'), Enum(6, 'ec5'), Enum(7, 'ec6'), Enum(8, 'ec7')]


class snmpFddiSMTCFState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'cf0'), Enum(2, 'cf1'), Enum(3, 'cf2'), Enum(4, 'cf3'), Enum(5, 'cf4'), Enum(6, 'cf5')]


class snmpFddiSMTHoldState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'not-implemented'), Enum(2, 'not-holding'), Enum(3, 'holding-prm'), Enum(4, 'holding-sec')]


class snmpFddiSMTRemoteDisconnectFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiSMTStationAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'connect'), Enum(3, 'disconnect'), Enum(4, 'path-Test'), Enum(5, 'self-Test')]


class snmpFddiMACSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACFrameStatusCapabilities(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACTMaxGreatestLowerBound(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 4])
	syntaxobject = FddiTime


class snmpFddiMACTVXGreatestLowerBound(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 5])
	syntaxobject = FddiTime


class snmpFddiMACPathsAvailable(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACCurrentPath(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'primary'), Enum(4, 'secondary'), Enum(8, 'local'), Enum(16, 'isolated')]


class snmpFddiMACUpstreamNbr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 8])
	syntaxobject = FddiMACLongAddressType


class snmpFddiMACOldUpstreamNbr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 9])
	syntaxobject = FddiMACLongAddressType


class snmpFddiMACDupAddrTest(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'pass'), Enum(3, 'fail')]


class snmpFddiMACPathsRequested(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACDownstreamPORTType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'a'), Enum(2, 'b'), Enum(3, 's'), Enum(4, 'm'), Enum(5, 'unknown')]


class snmpFddiMACSMTAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 13])
	syntaxobject = FddiMACLongAddressType


class snmpFddiMACTReq(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 14])
	syntaxobject = FddiTime


class snmpFddiMACTNeg(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 15])
	syntaxobject = FddiTime


class snmpFddiMACTMax(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 16])
	syntaxobject = FddiTime


class snmpFddiMACTvxValue(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 17])
	syntaxobject = FddiTime


class snmpFddiMACTMin(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 18])
	syntaxobject = FddiTime


class snmpFddiMACCurrentFrameStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACFrameCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snmpFddiMACErrorCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snmpFddiMACLostCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snmpFddiMACFrameErrorThreshold(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACFrameErrorRatio(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiMACRMTState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rm0'), Enum(2, 'rm1'), Enum(3, 'rm2'), Enum(4, 'rm3'), Enum(5, 'rm4'), Enum(6, 'rm5'), Enum(7, 'rm6'), Enum(8, 'rm7')]


class snmpFddiMACDaFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiMACUnaDaFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiMACFrameCondition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiMACChipSet(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class snmpFddiMACAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'enableLLCService'), Enum(3, 'disableLLCService'), Enum(4, 'connectMAC'), Enum(5, 'disconnectMAC')]


class snmpFddiPORTSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTPCType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'a'), Enum(2, 'b'), Enum(3, 's'), Enum(4, 'm')]


class snmpFddiPORTPCNeighbor(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'a'), Enum(2, 'b'), Enum(3, 's'), Enum(4, 'm'), Enum(5, 'unknown')]


class snmpFddiPORTConnectionPolicies(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTRemoteMACIndicated(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiPORTCEState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ce0'), Enum(2, 'ce1'), Enum(3, 'ce2'), Enum(4, 'ce3'), Enum(5, 'ce4')]


class snmpFddiPORTPathsRequested(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTMACPlacement(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 9])
	syntaxobject = FddiResourceId


class snmpFddiPORTAvailablePaths(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTMACLoopTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 11])
	syntaxobject = FddiTime


class snmpFddiPORTTBMax(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 12])
	syntaxobject = FddiTime


class snmpFddiPORTBSFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiPORTLCTFailCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snmpFddiPORTLerEstimate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTLemRejectCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snmpFddiPORTLemCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snmpFddiPORTLerCutoff(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTLerAlarm(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiPORTConnectState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'connecting'), Enum(3, 'standby'), Enum(4, 'active')]


class snmpFddiPORTPCMState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pc0'), Enum(2, 'pc1'), Enum(3, 'pc2'), Enum(4, 'pc3'), Enum(5, 'pc4'), Enum(6, 'pc5'), Enum(7, 'pc6'), Enum(8, 'pc7'), Enum(9, 'pc8'), Enum(10, 'pc9')]


class snmpFddiPORTPCWithhold(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'm-m'), Enum(3, 'other')]


class snmpFddiPORTLerCondition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiPORTChipSet(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class snmpFddiPORTAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'maintPORT'), Enum(3, 'enablePORT'), Enum(4, 'disablePORT'), Enum(5, 'startPORT'), Enum(6, 'stopPORT')]


class snmpFddiATTACHMENTSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiATTACHMENTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snmpFddiATTACHMENTClass(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'single-attachment'), Enum(2, 'dual-attachment'), Enum(3, 'concentrator')]


class snmpFddiATTACHMENTOpticalBypassPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class snmpFddiATTACHMENTIMaxExpiration(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 5])
	syntaxobject = FddiTime


class snmpFddiATTACHMENTInsertedStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'unimplemented')]


class snmpFddiATTACHMENTInsertPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'unimplemented')]


# rows 
class snmpFddiSMTEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snmpFddiSMTIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 1, 2, 1])
	access = 2
	columns = {'snmpFddiSMTIndex': snmpFddiSMTIndex, 'snmpFddiSMTStationId': snmpFddiSMTStationId, 'snmpFddiSMTOpVersionId': snmpFddiSMTOpVersionId, 'snmpFddiSMTHiVersionId': snmpFddiSMTHiVersionId, 'snmpFddiSMTLoVersionId': snmpFddiSMTLoVersionId, 'snmpFddiSMTMACCt': snmpFddiSMTMACCt, 'snmpFddiSMTNonMasterCt': snmpFddiSMTNonMasterCt, 'snmpFddiSMTMasterCt': snmpFddiSMTMasterCt, 'snmpFddiSMTPathsAvailable': snmpFddiSMTPathsAvailable, 'snmpFddiSMTConfigCapabilities': snmpFddiSMTConfigCapabilities, 'snmpFddiSMTConfigPolicy': snmpFddiSMTConfigPolicy, 'snmpFddiSMTConnectionPolicy': snmpFddiSMTConnectionPolicy, 'snmpFddiSMTTNotify': snmpFddiSMTTNotify, 'snmpFddiSMTStatusReporting': snmpFddiSMTStatusReporting, 'snmpFddiSMTECMState': snmpFddiSMTECMState, 'snmpFddiSMTCFState': snmpFddiSMTCFState, 'snmpFddiSMTHoldState': snmpFddiSMTHoldState, 'snmpFddiSMTRemoteDisconnectFlag': snmpFddiSMTRemoteDisconnectFlag, 'snmpFddiSMTStationAction': snmpFddiSMTStationAction}


class snmpFddiMACEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snmpFddiMACSMTIndex, snmpFddiMACIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 2, 2, 1])
	access = 2
	columns = {'snmpFddiMACSMTIndex': snmpFddiMACSMTIndex, 'snmpFddiMACIndex': snmpFddiMACIndex, 'snmpFddiMACFrameStatusCapabilities': snmpFddiMACFrameStatusCapabilities, 'snmpFddiMACTMaxGreatestLowerBound': snmpFddiMACTMaxGreatestLowerBound, 'snmpFddiMACTVXGreatestLowerBound': snmpFddiMACTVXGreatestLowerBound, 'snmpFddiMACPathsAvailable': snmpFddiMACPathsAvailable, 'snmpFddiMACCurrentPath': snmpFddiMACCurrentPath, 'snmpFddiMACUpstreamNbr': snmpFddiMACUpstreamNbr, 'snmpFddiMACOldUpstreamNbr': snmpFddiMACOldUpstreamNbr, 'snmpFddiMACDupAddrTest': snmpFddiMACDupAddrTest, 'snmpFddiMACPathsRequested': snmpFddiMACPathsRequested, 'snmpFddiMACDownstreamPORTType': snmpFddiMACDownstreamPORTType, 'snmpFddiMACSMTAddress': snmpFddiMACSMTAddress, 'snmpFddiMACTReq': snmpFddiMACTReq, 'snmpFddiMACTNeg': snmpFddiMACTNeg, 'snmpFddiMACTMax': snmpFddiMACTMax, 'snmpFddiMACTvxValue': snmpFddiMACTvxValue, 'snmpFddiMACTMin': snmpFddiMACTMin, 'snmpFddiMACCurrentFrameStatus': snmpFddiMACCurrentFrameStatus, 'snmpFddiMACFrameCts': snmpFddiMACFrameCts, 'snmpFddiMACErrorCts': snmpFddiMACErrorCts, 'snmpFddiMACLostCts': snmpFddiMACLostCts, 'snmpFddiMACFrameErrorThreshold': snmpFddiMACFrameErrorThreshold, 'snmpFddiMACFrameErrorRatio': snmpFddiMACFrameErrorRatio, 'snmpFddiMACRMTState': snmpFddiMACRMTState, 'snmpFddiMACDaFlag': snmpFddiMACDaFlag, 'snmpFddiMACUnaDaFlag': snmpFddiMACUnaDaFlag, 'snmpFddiMACFrameCondition': snmpFddiMACFrameCondition, 'snmpFddiMACChipSet': snmpFddiMACChipSet, 'snmpFddiMACAction': snmpFddiMACAction}


class snmpFddiPORTEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snmpFddiPORTSMTIndex, snmpFddiPORTIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 4, 2, 1])
	access = 2
	columns = {'snmpFddiPORTSMTIndex': snmpFddiPORTSMTIndex, 'snmpFddiPORTIndex': snmpFddiPORTIndex, 'snmpFddiPORTPCType': snmpFddiPORTPCType, 'snmpFddiPORTPCNeighbor': snmpFddiPORTPCNeighbor, 'snmpFddiPORTConnectionPolicies': snmpFddiPORTConnectionPolicies, 'snmpFddiPORTRemoteMACIndicated': snmpFddiPORTRemoteMACIndicated, 'snmpFddiPORTCEState': snmpFddiPORTCEState, 'snmpFddiPORTPathsRequested': snmpFddiPORTPathsRequested, 'snmpFddiPORTMACPlacement': snmpFddiPORTMACPlacement, 'snmpFddiPORTAvailablePaths': snmpFddiPORTAvailablePaths, 'snmpFddiPORTMACLoopTime': snmpFddiPORTMACLoopTime, 'snmpFddiPORTTBMax': snmpFddiPORTTBMax, 'snmpFddiPORTBSFlag': snmpFddiPORTBSFlag, 'snmpFddiPORTLCTFailCts': snmpFddiPORTLCTFailCts, 'snmpFddiPORTLerEstimate': snmpFddiPORTLerEstimate, 'snmpFddiPORTLemRejectCts': snmpFddiPORTLemRejectCts, 'snmpFddiPORTLemCts': snmpFddiPORTLemCts, 'snmpFddiPORTLerCutoff': snmpFddiPORTLerCutoff, 'snmpFddiPORTLerAlarm': snmpFddiPORTLerAlarm, 'snmpFddiPORTConnectState': snmpFddiPORTConnectState, 'snmpFddiPORTPCMState': snmpFddiPORTPCMState, 'snmpFddiPORTPCWithhold': snmpFddiPORTPCWithhold, 'snmpFddiPORTLerCondition': snmpFddiPORTLerCondition, 'snmpFddiPORTChipSet': snmpFddiPORTChipSet, 'snmpFddiPORTAction': snmpFddiPORTAction}


class snmpFddiATTACHMENTEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snmpFddiATTACHMENTSMTIndex, snmpFddiATTACHMENTIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 5, 2, 1])
	access = 2
	columns = {'snmpFddiATTACHMENTSMTIndex': snmpFddiATTACHMENTSMTIndex, 'snmpFddiATTACHMENTIndex': snmpFddiATTACHMENTIndex, 'snmpFddiATTACHMENTClass': snmpFddiATTACHMENTClass, 'snmpFddiATTACHMENTOpticalBypassPresent': snmpFddiATTACHMENTOpticalBypassPresent, 'snmpFddiATTACHMENTIMaxExpiration': snmpFddiATTACHMENTIMaxExpiration, 'snmpFddiATTACHMENTInsertedStatus': snmpFddiATTACHMENTInsertedStatus, 'snmpFddiATTACHMENTInsertPolicy': snmpFddiATTACHMENTInsertPolicy}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
