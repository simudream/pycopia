# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, experimental, Unsigned32, OBJECT_TYPE, Opaque
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from RMON_MIB import OwnerString
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_TC import RowStatus, StorageType, TEXTUAL_CONVENTION

class AGGREGATE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/AGGREGATE-MIB'
	conformance = 4
	name = 'AGGREGATE-MIB'
	language = 2
	description = 'The MIB for servicing aggregate objects.\n\nCopyright (C) The Internet Society (2006).  This\nversion of this MIB module is part of RFC 4498;\nsee the RFC itself for full legal notices.'

# nodes
class aggrMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123])
	name = 'aggrMIB'

class aggrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 4])
	name = 'aggrConformance'

class aggrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 4, 1])
	name = 'aggrGroups'

class aggrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 4, 2])
	name = 'aggrCompliances'


# macros
# types 

class AggrMOErrorStatus(pycopia.SMI.Basetypes.Opaque):
	status = 1
	ranges = Ranges(Range(0, 1024))


class AggrMOValue(pycopia.SMI.Basetypes.Opaque):
	status = 1
	ranges = Ranges(Range(0, 1024))


class AggrMOCompressedValue(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 1024))

# scalars 
# columns
class aggrCtlEntryID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 1])
	syntaxobject = SnmpAdminString


class aggrCtlMOIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class aggrCtlMODescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 3])
	syntaxobject = SnmpAdminString


class aggrCtlCompressionAlgorithm(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'deflate')]


class aggrCtlEntryOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 5])
	syntaxobject = OwnerString


class aggrCtlEntryStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class aggrCtlEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class aggrMOEntryID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class aggrMOEntryMOID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class aggrMOInstance(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class aggrMODescr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1, 4])
	syntaxobject = SnmpAdminString


class aggrMOEntryStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class aggrMOEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class aggrDataRecord(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 3, 1, 1])
	syntaxobject = AggrMOValue


class aggrDataRecordCompressed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 3, 1, 2])
	syntaxobject = AggrMOCompressedValue


class aggrDataErrorRecord(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 3, 1, 3])
	syntaxobject = AggrMOErrorStatus


# rows 
class aggrCtlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([aggrCtlEntryID], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 1, 1])
	access = 2
	rowstatus = aggrCtlEntryStatus
	columns = {'aggrCtlEntryID': aggrCtlEntryID, 'aggrCtlMOIndex': aggrCtlMOIndex, 'aggrCtlMODescr': aggrCtlMODescr, 'aggrCtlCompressionAlgorithm': aggrCtlCompressionAlgorithm, 'aggrCtlEntryOwner': aggrCtlEntryOwner, 'aggrCtlEntryStorageType': aggrCtlEntryStorageType, 'aggrCtlEntryStatus': aggrCtlEntryStatus}


class aggrMOEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([aggrMOEntryID, aggrMOEntryMOID], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 2, 1])
	access = 2
	rowstatus = aggrMOEntryStatus
	columns = {'aggrMOEntryID': aggrMOEntryID, 'aggrMOEntryMOID': aggrMOEntryMOID, 'aggrMOInstance': aggrMOInstance, 'aggrMODescr': aggrMODescr, 'aggrMOEntryStorageType': aggrMOEntryStorageType, 'aggrMOEntryStatus': aggrMOEntryStatus}


class aggrDataEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([aggrCtlEntryID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 3, 1])
	access = 2
	columns = {'aggrDataRecord': aggrDataRecord, 'aggrDataRecordCompressed': aggrDataRecordCompressed, 'aggrDataErrorRecord': aggrDataErrorRecord}


# notifications (traps) 
# groups 
class aggrMibBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 123, 4, 1, 1])
	group = [aggrCtlMOIndex, aggrCtlMODescr, aggrCtlCompressionAlgorithm, aggrCtlEntryOwner, aggrCtlEntryStorageType, aggrCtlEntryStatus, aggrMOInstance, aggrMODescr, aggrMOEntryStorageType, aggrMOEntryStatus, aggrDataRecord, aggrDataRecordCompressed, aggrDataErrorRecord]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
