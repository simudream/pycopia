# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndex, InterfaceIndexOrZero, ifIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Gauge32, Counter32, Integer32
from ATM_TC_MIB import AtmAddr, AtmSigDescrParamIndex, AtmInterfaceType, AtmIlmiNetworkPrefix, AtmVcIdentifier, AtmVpIdentifier, AtmTrafficDescrParamIndex
from ATM_MIB import atmMIBObjects, atmInterfaceConfEntry, atmVplEntry, atmVplVpi, atmVclEntry, atmVclVpi, atmVclVci, atmVpCrossConnectEntry, atmVcCrossConnectEntry
from SNMPv2_TC import TruthValue, RowStatus, TimeStamp

class ATM2_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ATM2-MIB'
	conformance = 3
	name = 'ATM2-MIB'
	language = 2
	description = 'Copyright (C) The Internet Society (2003). This version of\nthis MIB module is part of RFC 3606; see the RFC itself for\nfull legal notices.\n\nThis MIB Module is a supplement to the ATM-MIB\ndefined in RFC 2515.'

# nodes
class atm2MIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14])
	name = 'atm2MIB'

class atm2MIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1])
	name = 'atm2MIBObjects'

class atm2MIBTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 2])
	name = 'atm2MIBTraps'

class atmPvcTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 2, 1])
	name = 'atmPvcTraps'

class atmPvcTrapsPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 2, 1, 0])
	name = 'atmPvcTrapsPrefix'

class atm2MIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3])
	name = 'atm2MIBConformance'

class atm2MIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1])
	name = 'atm2MIBGroups'

class atm2MIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 2])
	name = 'atm2MIBCompliances'


# macros
# types 
# scalars 
# columns
class atmSvcVpCrossConnectIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmSvcVpCrossConnectLowIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 2])
	syntaxobject = InterfaceIndex


class atmSvcVpCrossConnectLowVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 3])
	syntaxobject = AtmVpIdentifier


class atmSvcVpCrossConnectHighIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 4])
	syntaxobject = InterfaceIndex


class atmSvcVpCrossConnectHighVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 5])
	syntaxobject = AtmVpIdentifier


class atmSvcVpCrossConnectCreationTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class atmSvcVpCrossConnectRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmSvcVcCrossConnectIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmSvcVcCrossConnectLowIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 2])
	syntaxobject = InterfaceIndex


class atmSvcVcCrossConnectLowVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 3])
	syntaxobject = AtmVpIdentifier


class atmSvcVcCrossConnectLowVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 4])
	syntaxobject = AtmVcIdentifier


class atmSvcVcCrossConnectHighIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 5])
	syntaxobject = InterfaceIndex


class atmSvcVcCrossConnectHighVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 6])
	syntaxobject = AtmVpIdentifier


class atmSvcVcCrossConnectHighVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 7])
	syntaxobject = AtmVcIdentifier


class atmSvcVcCrossConnectCreationTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class atmSvcVcCrossConnectRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmSigSSCOPConEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigSSCOPErrdPdus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectSetupAttempts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitSetupAttempts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectUnavailRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitUnavailRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectUnavailResrcs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitUnavailResrcs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectCldPtyEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitCldPtyEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectMsgErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitMsgErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectClgPtyEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitClgPtyEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectTimerExpireds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitTimerExpireds(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigDetectRestarts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigEmitRestarts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigInEstabls(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigOutEstabls(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmSigSupportClgPtyNumDel(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportClgPtySubAddr(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportCldPtySubAddr(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportHiLyrInfo(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportLoLyrInfo(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportBlliRepeatInd(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportAALInfo(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class atmSigSupportPrefCarrier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class atmSigDescrParamIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 1])
	syntaxobject = AtmSigDescrParamIndex


class atmSigDescrParamAalType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'aal1'), Enum(3, 'aal34'), Enum(4, 'aal5'), Enum(5, 'userDefined'), Enum(6, 'aal2')]


class atmSigDescrParamAalSscsType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'assured'), Enum(3, 'nonassured'), Enum(4, 'frameRelay'), Enum(5, 'null')]


class atmSigDescrParamBhliType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'iso'), Enum(3, 'user'), Enum(4, 'hiProfile'), Enum(5, 'vendorSpecific')]


class atmSigDescrParamBhliInfo(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class atmSigDescrParamBbcConnConf(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ptp'), Enum(2, 'ptmp')]


class atmSigDescrParamBlliLayer2(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'iso1745'), Enum(3, 'q921'), Enum(4, 'x25linklayer'), Enum(5, 'x25multilink'), Enum(6, 'lapb'), Enum(7, 'hdlcArm'), Enum(8, 'hdlcNrm'), Enum(9, 'hdlcAbm'), Enum(10, 'iso88022'), Enum(11, 'x75slp'), Enum(12, 'q922'), Enum(13, 'userDef'), Enum(14, 'iso7776')]


class atmSigDescrParamBlliLayer3(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'x25pkt'), Enum(3, 'isoiec8208'), Enum(4, 'x223iso8878'), Enum(5, 'isoiec8473'), Enum(6, 't70'), Enum(7, 'tr9577'), Enum(8, 'userDef')]


class atmSigDescrParamBlliPktSize(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 's16'), Enum(3, 's32'), Enum(4, 's64'), Enum(5, 's128'), Enum(6, 's256'), Enum(7, 's512'), Enum(8, 's1024'), Enum(9, 's2048'), Enum(10, 's4096')]


class atmSigDescrParamBlliSnapId(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'true'), Enum(3, 'false')]


class atmSigDescrParamBlliOuiPid(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class atmSigDescrParamRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmIfRegAddrAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 6, 1, 1])
	syntaxobject = AtmAddr


class atmIfRegAddrAddressSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'static'), Enum(3, 'dynamic')]


class atmIfRegAddrOrgScope(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'localNetwork'), Enum(2, 'localNetworkPlusOne'), Enum(3, 'localNetworkPlusTwo'), Enum(4, 'siteMinusOne'), Enum(5, 'intraSite'), Enum(6, 'sitePlusOne'), Enum(7, 'organizationMinusOne'), Enum(8, 'intraOrganization'), Enum(9, 'organizationPlusOne'), Enum(10, 'communityMinusOne'), Enum(11, 'intraCommunity'), Enum(12, 'communityPlusOne'), Enum(13, 'regional'), Enum(14, 'interRegional'), Enum(15, 'global')]


class atmIfRegAddrRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmVclAddrAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 7, 1, 1])
	syntaxobject = AtmAddr


class atmVclAddrType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'callingParty'), Enum(2, 'calledParty')]


class atmVclAddrRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmAddrVclAtmIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 8, 1, 1])
	syntaxobject = InterfaceIndex


class atmAddrVclVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 8, 1, 2])
	syntaxobject = AtmVpIdentifier


class atmAddrVclVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 8, 1, 3])
	syntaxobject = AtmVcIdentifier


class atmAddrVclAddrType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'callingParty'), Enum(2, 'calledParty')]


class atmVplStatTotalCellIns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplStatClp0CellIns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplStatTotalDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplStatClp0Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplStatTotalCellOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplStatClp0CellOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplStatClp0Tagged(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVplLogicalPortDef(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notLogicalIf'), Enum(2, 'isLogicalIf')]


class atmVplLogicalPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 10, 1, 2])
	syntaxobject = InterfaceIndexOrZero


class atmVclStatTotalCellIns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclStatClp0CellIns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclStatTotalDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclStatClp0Discards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclStatTotalCellOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclStatClp0CellOuts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclStatClp0Tagged(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmAal5VclInPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmAal5VclOutPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmAal5VclInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmAal5VclOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmVclGenSigDescrIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 13, 1, 1])
	syntaxobject = AtmSigDescrParamIndex


class atmIntfConfigType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 1])
	syntaxobject = AtmInterfaceType


class atmIntfActualType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 2])
	syntaxobject = AtmInterfaceType


class atmIntfConfigSide(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'user'), Enum(3, 'network')]


class atmIntfActualSide(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'user'), Enum(3, 'network'), Enum(4, 'symmetric')]


class atmIntfIlmiAdminStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class atmIntfIlmiOperStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class atmIntfIlmiFsmState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stopped'), Enum(2, 'linkFailing'), Enum(3, 'establishing'), Enum(4, 'configuring'), Enum(5, 'retrievingNetworkPrefixes'), Enum(6, 'registeringNetworkPrefixes'), Enum(7, 'retrievingAddresses'), Enum(8, 'registeringAddresses'), Enum(9, 'verifying')]


class atmIntfIlmiEstablishConPollIntvl(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class atmIntfIlmiCheckConPollIntvl(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class atmIntfIlmiConPollInactFactor(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmIntfIlmiPublicPrivateIndctr(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'public'), Enum(3, 'private')]


class atmInterfaceConfMaxSvpcVpi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmInterfaceCurrentMaxSvpcVpi(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmInterfaceConfMaxSvccVpi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmInterfaceCurrentMaxSvccVpi(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmInterfaceConfMinSvccVci(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmInterfaceCurrentMinSvccVci(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmIntfSigVccRxTrafficDescrIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 18])
	syntaxobject = AtmTrafficDescrParamIndex


class atmIntfSigVccTxTrafficDescrIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 19])
	syntaxobject = AtmTrafficDescrParamIndex


class atmIntfPvcFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmIntfCurrentlyFailingPVpls(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class atmIntfCurrentlyFailingPVcls(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class atmIntfPvcFailuresTrapEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class atmIntfPvcNotificationInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class atmIntfLeafSetupFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmIntfLeafSetupRequests(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class atmIlmiSrvcRegIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class atmIlmiSrvcRegServiceID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class atmIlmiSrvcRegAddressIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmIlmiSrvcRegATMAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1, 4])
	syntaxobject = AtmAddr


class atmIlmiSrvcRegParm1(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class atmIlmiSrvcRegRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmIlmiNetPrefixPrefix(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 16, 1, 1])
	syntaxobject = AtmIlmiNetworkPrefix


class atmIlmiNetPrefixRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmSwitchAddressIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 17, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atmSwitchAddressAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 17, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class atmSwitchAddressRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 17, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class atmVpCrossConnectUserName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 18, 1, 1])
	syntaxobject = SnmpAdminString


class atmVpCrossConnectProviderName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 18, 1, 2])
	syntaxobject = SnmpAdminString


class atmVcCrossConnectUserName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 19, 1, 1])
	syntaxobject = SnmpAdminString


class atmVcCrossConnectProviderName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 19, 1, 2])
	syntaxobject = SnmpAdminString


class atmCurrentlyFailingPVplTimeStamp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class atmCurrentlyFailingPVclTimeStamp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 21, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# rows 
class atmSvcVpCrossConnectEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmSvcVpCrossConnectIndex, atmSvcVpCrossConnectLowIfIndex, atmSvcVpCrossConnectLowVpi, atmSvcVpCrossConnectHighIfIndex, atmSvcVpCrossConnectHighVpi], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 1, 1])
	access = 2
	rowstatus = atmSvcVpCrossConnectRowStatus
	columns = {'atmSvcVpCrossConnectIndex': atmSvcVpCrossConnectIndex, 'atmSvcVpCrossConnectLowIfIndex': atmSvcVpCrossConnectLowIfIndex, 'atmSvcVpCrossConnectLowVpi': atmSvcVpCrossConnectLowVpi, 'atmSvcVpCrossConnectHighIfIndex': atmSvcVpCrossConnectHighIfIndex, 'atmSvcVpCrossConnectHighVpi': atmSvcVpCrossConnectHighVpi, 'atmSvcVpCrossConnectCreationTime': atmSvcVpCrossConnectCreationTime, 'atmSvcVpCrossConnectRowStatus': atmSvcVpCrossConnectRowStatus}


class atmSvcVcCrossConnectEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmSvcVcCrossConnectIndex, atmSvcVcCrossConnectLowIfIndex, atmSvcVcCrossConnectLowVpi, atmSvcVcCrossConnectLowVci, atmSvcVcCrossConnectHighIfIndex, atmSvcVcCrossConnectHighVpi, atmSvcVcCrossConnectHighVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 2, 1])
	access = 2
	rowstatus = atmSvcVcCrossConnectRowStatus
	columns = {'atmSvcVcCrossConnectIndex': atmSvcVcCrossConnectIndex, 'atmSvcVcCrossConnectLowIfIndex': atmSvcVcCrossConnectLowIfIndex, 'atmSvcVcCrossConnectLowVpi': atmSvcVcCrossConnectLowVpi, 'atmSvcVcCrossConnectLowVci': atmSvcVcCrossConnectLowVci, 'atmSvcVcCrossConnectHighIfIndex': atmSvcVcCrossConnectHighIfIndex, 'atmSvcVcCrossConnectHighVpi': atmSvcVcCrossConnectHighVpi, 'atmSvcVcCrossConnectHighVci': atmSvcVcCrossConnectHighVci, 'atmSvcVcCrossConnectCreationTime': atmSvcVcCrossConnectCreationTime, 'atmSvcVcCrossConnectRowStatus': atmSvcVcCrossConnectRowStatus}


class atmSigStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 3, 1])
	access = 2
	columns = {'atmSigSSCOPConEvents': atmSigSSCOPConEvents, 'atmSigSSCOPErrdPdus': atmSigSSCOPErrdPdus, 'atmSigDetectSetupAttempts': atmSigDetectSetupAttempts, 'atmSigEmitSetupAttempts': atmSigEmitSetupAttempts, 'atmSigDetectUnavailRoutes': atmSigDetectUnavailRoutes, 'atmSigEmitUnavailRoutes': atmSigEmitUnavailRoutes, 'atmSigDetectUnavailResrcs': atmSigDetectUnavailResrcs, 'atmSigEmitUnavailResrcs': atmSigEmitUnavailResrcs, 'atmSigDetectCldPtyEvents': atmSigDetectCldPtyEvents, 'atmSigEmitCldPtyEvents': atmSigEmitCldPtyEvents, 'atmSigDetectMsgErrors': atmSigDetectMsgErrors, 'atmSigEmitMsgErrors': atmSigEmitMsgErrors, 'atmSigDetectClgPtyEvents': atmSigDetectClgPtyEvents, 'atmSigEmitClgPtyEvents': atmSigEmitClgPtyEvents, 'atmSigDetectTimerExpireds': atmSigDetectTimerExpireds, 'atmSigEmitTimerExpireds': atmSigEmitTimerExpireds, 'atmSigDetectRestarts': atmSigDetectRestarts, 'atmSigEmitRestarts': atmSigEmitRestarts, 'atmSigInEstabls': atmSigInEstabls, 'atmSigOutEstabls': atmSigOutEstabls}


class atmSigSupportEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 4, 1])
	access = 2
	columns = {'atmSigSupportClgPtyNumDel': atmSigSupportClgPtyNumDel, 'atmSigSupportClgPtySubAddr': atmSigSupportClgPtySubAddr, 'atmSigSupportCldPtySubAddr': atmSigSupportCldPtySubAddr, 'atmSigSupportHiLyrInfo': atmSigSupportHiLyrInfo, 'atmSigSupportLoLyrInfo': atmSigSupportLoLyrInfo, 'atmSigSupportBlliRepeatInd': atmSigSupportBlliRepeatInd, 'atmSigSupportAALInfo': atmSigSupportAALInfo, 'atmSigSupportPrefCarrier': atmSigSupportPrefCarrier}


class atmSigDescrParamEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmSigDescrParamIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 5, 1])
	access = 2
	rowstatus = atmSigDescrParamRowStatus
	columns = {'atmSigDescrParamIndex': atmSigDescrParamIndex, 'atmSigDescrParamAalType': atmSigDescrParamAalType, 'atmSigDescrParamAalSscsType': atmSigDescrParamAalSscsType, 'atmSigDescrParamBhliType': atmSigDescrParamBhliType, 'atmSigDescrParamBhliInfo': atmSigDescrParamBhliInfo, 'atmSigDescrParamBbcConnConf': atmSigDescrParamBbcConnConf, 'atmSigDescrParamBlliLayer2': atmSigDescrParamBlliLayer2, 'atmSigDescrParamBlliLayer3': atmSigDescrParamBlliLayer3, 'atmSigDescrParamBlliPktSize': atmSigDescrParamBlliPktSize, 'atmSigDescrParamBlliSnapId': atmSigDescrParamBlliSnapId, 'atmSigDescrParamBlliOuiPid': atmSigDescrParamBlliOuiPid, 'atmSigDescrParamRowStatus': atmSigDescrParamRowStatus}


class atmIfRegisteredAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmIfRegAddrAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 6, 1])
	access = 2
	rowstatus = atmIfRegAddrRowStatus
	columns = {'atmIfRegAddrAddress': atmIfRegAddrAddress, 'atmIfRegAddrAddressSource': atmIfRegAddrAddressSource, 'atmIfRegAddrOrgScope': atmIfRegAddrOrgScope, 'atmIfRegAddrRowStatus': atmIfRegAddrRowStatus}


class atmVclAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVclVpi, atmVclVci, atmVclAddrAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 7, 1])
	access = 2
	rowstatus = atmVclAddrRowStatus
	columns = {'atmVclAddrAddr': atmVclAddrAddr, 'atmVclAddrType': atmVclAddrType, 'atmVclAddrRowStatus': atmVclAddrRowStatus}


class atmAddrVclEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmVclAddrAddr, atmAddrVclAtmIfIndex, atmAddrVclVpi, atmAddrVclVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 8, 1])
	access = 2
	columns = {'atmAddrVclAtmIfIndex': atmAddrVclAtmIfIndex, 'atmAddrVclVpi': atmAddrVclVpi, 'atmAddrVclVci': atmAddrVclVci, 'atmAddrVclAddrType': atmAddrVclAddrType}


class atmVplStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVplVpi], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 9, 1])
	access = 2
	columns = {'atmVplStatTotalCellIns': atmVplStatTotalCellIns, 'atmVplStatClp0CellIns': atmVplStatClp0CellIns, 'atmVplStatTotalDiscards': atmVplStatTotalDiscards, 'atmVplStatClp0Discards': atmVplStatClp0Discards, 'atmVplStatTotalCellOuts': atmVplStatTotalCellOuts, 'atmVplStatClp0CellOuts': atmVplStatClp0CellOuts, 'atmVplStatClp0Tagged': atmVplStatClp0Tagged}


from IF_MIB import ifIndex
from ATM_MIB import atmVplVpi
class atmVplLogicalPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVplVpi], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 10, 1])
	access = 2
	columns = {'atmVplLogicalPortDef': atmVplLogicalPortDef, 'atmVplLogicalPortIndex': atmVplLogicalPortIndex}


class atmVclStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVclVpi, atmVclVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 11, 1])
	access = 2
	columns = {'atmVclStatTotalCellIns': atmVclStatTotalCellIns, 'atmVclStatClp0CellIns': atmVclStatClp0CellIns, 'atmVclStatTotalDiscards': atmVclStatTotalDiscards, 'atmVclStatClp0Discards': atmVclStatClp0Discards, 'atmVclStatTotalCellOuts': atmVclStatTotalCellOuts, 'atmVclStatClp0CellOuts': atmVclStatClp0CellOuts, 'atmVclStatClp0Tagged': atmVclStatClp0Tagged}


class atmAal5VclStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVclVpi, atmVclVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 12, 1])
	access = 2
	columns = {'atmAal5VclInPkts': atmAal5VclInPkts, 'atmAal5VclOutPkts': atmAal5VclOutPkts, 'atmAal5VclInOctets': atmAal5VclInOctets, 'atmAal5VclOutOctets': atmAal5VclOutOctets}


from IF_MIB import ifIndex
from ATM_MIB import atmVclVpi
from ATM_MIB import atmVclVci
class atmVclGenEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVclVpi, atmVclVci], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 13, 1])
	access = 2
	columns = {'atmVclGenSigDescrIndex': atmVclGenSigDescrIndex}


from IF_MIB import ifIndex
class atmInterfaceExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 14, 1])
	access = 2
	columns = {'atmIntfConfigType': atmIntfConfigType, 'atmIntfActualType': atmIntfActualType, 'atmIntfConfigSide': atmIntfConfigSide, 'atmIntfActualSide': atmIntfActualSide, 'atmIntfIlmiAdminStatus': atmIntfIlmiAdminStatus, 'atmIntfIlmiOperStatus': atmIntfIlmiOperStatus, 'atmIntfIlmiFsmState': atmIntfIlmiFsmState, 'atmIntfIlmiEstablishConPollIntvl': atmIntfIlmiEstablishConPollIntvl, 'atmIntfIlmiCheckConPollIntvl': atmIntfIlmiCheckConPollIntvl, 'atmIntfIlmiConPollInactFactor': atmIntfIlmiConPollInactFactor, 'atmIntfIlmiPublicPrivateIndctr': atmIntfIlmiPublicPrivateIndctr, 'atmInterfaceConfMaxSvpcVpi': atmInterfaceConfMaxSvpcVpi, 'atmInterfaceCurrentMaxSvpcVpi': atmInterfaceCurrentMaxSvpcVpi, 'atmInterfaceConfMaxSvccVpi': atmInterfaceConfMaxSvccVpi, 'atmInterfaceCurrentMaxSvccVpi': atmInterfaceCurrentMaxSvccVpi, 'atmInterfaceConfMinSvccVci': atmInterfaceConfMinSvccVci, 'atmInterfaceCurrentMinSvccVci': atmInterfaceCurrentMinSvccVci, 'atmIntfSigVccRxTrafficDescrIndex': atmIntfSigVccRxTrafficDescrIndex, 'atmIntfSigVccTxTrafficDescrIndex': atmIntfSigVccTxTrafficDescrIndex, 'atmIntfPvcFailures': atmIntfPvcFailures, 'atmIntfCurrentlyFailingPVpls': atmIntfCurrentlyFailingPVpls, 'atmIntfCurrentlyFailingPVcls': atmIntfCurrentlyFailingPVcls, 'atmIntfPvcFailuresTrapEnable': atmIntfPvcFailuresTrapEnable, 'atmIntfPvcNotificationInterval': atmIntfPvcNotificationInterval, 'atmIntfLeafSetupFailures': atmIntfLeafSetupFailures, 'atmIntfLeafSetupRequests': atmIntfLeafSetupRequests}


class atmIlmiSrvcRegEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmIlmiSrvcRegIndex, atmIlmiSrvcRegServiceID, atmIlmiSrvcRegAddressIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 15, 1])
	access = 2
	rowstatus = atmIlmiSrvcRegRowStatus
	columns = {'atmIlmiSrvcRegIndex': atmIlmiSrvcRegIndex, 'atmIlmiSrvcRegServiceID': atmIlmiSrvcRegServiceID, 'atmIlmiSrvcRegAddressIndex': atmIlmiSrvcRegAddressIndex, 'atmIlmiSrvcRegATMAddress': atmIlmiSrvcRegATMAddress, 'atmIlmiSrvcRegParm1': atmIlmiSrvcRegParm1, 'atmIlmiSrvcRegRowStatus': atmIlmiSrvcRegRowStatus}


class atmIlmiNetworkPrefixEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmIlmiNetPrefixPrefix], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 16, 1])
	access = 2
	rowstatus = atmIlmiNetPrefixRowStatus
	columns = {'atmIlmiNetPrefixPrefix': atmIlmiNetPrefixPrefix, 'atmIlmiNetPrefixRowStatus': atmIlmiNetPrefixRowStatus}


class atmSwitchAddressEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmSwitchAddressIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 17, 1])
	access = 2
	rowstatus = atmSwitchAddressRowStatus
	columns = {'atmSwitchAddressIndex': atmSwitchAddressIndex, 'atmSwitchAddressAddress': atmSwitchAddressAddress, 'atmSwitchAddressRowStatus': atmSwitchAddressRowStatus}


from ATM_MIB import atmVpCrossConnectIndex
from ATM_MIB import atmVpCrossConnectLowIfIndex
from ATM_MIB import atmVpCrossConnectLowVpi
from ATM_MIB import atmVpCrossConnectHighIfIndex
from ATM_MIB import atmVpCrossConnectHighVpi
class atmVpCrossConnectXEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmVpCrossConnectIndex, atmVpCrossConnectLowIfIndex, atmVpCrossConnectLowVpi, atmVpCrossConnectHighIfIndex, atmVpCrossConnectHighVpi], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 18, 1])
	access = 2
	columns = {'atmVpCrossConnectUserName': atmVpCrossConnectUserName, 'atmVpCrossConnectProviderName': atmVpCrossConnectProviderName}


from ATM_MIB import atmVcCrossConnectIndex
from ATM_MIB import atmVcCrossConnectLowIfIndex
from ATM_MIB import atmVcCrossConnectLowVpi
from ATM_MIB import atmVcCrossConnectLowVci
from ATM_MIB import atmVcCrossConnectHighIfIndex
from ATM_MIB import atmVcCrossConnectHighVpi
from ATM_MIB import atmVcCrossConnectHighVci
class atmVcCrossConnectXEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([atmVcCrossConnectIndex, atmVcCrossConnectLowIfIndex, atmVcCrossConnectLowVpi, atmVcCrossConnectLowVci, atmVcCrossConnectHighIfIndex, atmVcCrossConnectHighVpi, atmVcCrossConnectHighVci], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 19, 1])
	access = 2
	columns = {'atmVcCrossConnectUserName': atmVcCrossConnectUserName, 'atmVcCrossConnectProviderName': atmVcCrossConnectProviderName}


class atmCurrentlyFailingPVplEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVplVpi], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 20, 1])
	access = 2
	columns = {'atmCurrentlyFailingPVplTimeStamp': atmCurrentlyFailingPVplTimeStamp}


class atmCurrentlyFailingPVclEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, atmVclVpi, atmVclVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 1, 21, 1])
	access = 2
	columns = {'atmCurrentlyFailingPVclTimeStamp': atmCurrentlyFailingPVclTimeStamp}


# notifications (traps) 
class atmIntfPvcFailuresTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 2, 1, 0, 1])

# groups 
class atmCommonGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 1])
	group = [atmSigSSCOPConEvents, atmSigSSCOPErrdPdus, atmSigDetectSetupAttempts, atmSigEmitSetupAttempts, atmSigDetectUnavailRoutes, atmSigEmitUnavailRoutes, atmSigDetectUnavailResrcs, atmSigEmitUnavailResrcs, atmSigDetectCldPtyEvents, atmSigEmitCldPtyEvents, atmSigDetectMsgErrors, atmSigEmitMsgErrors, atmSigDetectClgPtyEvents, atmSigEmitClgPtyEvents, atmSigDetectTimerExpireds, atmSigEmitTimerExpireds, atmSigDetectRestarts, atmSigEmitRestarts, atmSigInEstabls, atmSigOutEstabls, atmVplLogicalPortDef, atmVplLogicalPortIndex, atmInterfaceConfMaxSvpcVpi, atmInterfaceCurrentMaxSvpcVpi, atmInterfaceConfMaxSvccVpi, atmInterfaceCurrentMaxSvccVpi, atmInterfaceConfMinSvccVci, atmInterfaceCurrentMinSvccVci, atmIntfSigVccRxTrafficDescrIndex, atmIntfSigVccTxTrafficDescrIndex, atmIntfPvcFailures, atmIntfCurrentlyFailingPVpls, atmIntfCurrentlyFailingPVcls, atmIntfPvcNotificationInterval, atmIntfPvcFailuresTrapEnable, atmIntfLeafSetupFailures, atmIntfLeafSetupRequests, atmIntfConfigType, atmIntfActualType, atmIntfConfigSide, atmIntfActualSide, atmIntfIlmiAdminStatus, atmIntfIlmiOperStatus, atmIntfIlmiFsmState, atmIntfIlmiEstablishConPollIntvl, atmIntfIlmiCheckConPollIntvl, atmIntfIlmiConPollInactFactor, atmIntfIlmiPublicPrivateIndctr, atmCurrentlyFailingPVplTimeStamp, atmCurrentlyFailingPVclTimeStamp]

class atmCommonStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 2])
	group = [atmVclStatTotalCellIns, atmVclStatClp0CellIns, atmVclStatTotalDiscards, atmVclStatClp0Discards, atmVclStatTotalCellOuts, atmVclStatClp0CellOuts, atmVclStatClp0Tagged, atmVplStatTotalCellIns, atmVplStatClp0CellIns, atmVplStatTotalDiscards, atmVplStatClp0Discards, atmVplStatTotalCellOuts, atmVplStatClp0CellOuts, atmVplStatClp0Tagged]

class atmSwitchServcGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 3])
	group = [atmIlmiSrvcRegATMAddress, atmIlmiSrvcRegParm1, atmIlmiSrvcRegRowStatus, atmIlmiNetPrefixRowStatus, atmSvcVpCrossConnectCreationTime, atmSvcVpCrossConnectRowStatus, atmSvcVcCrossConnectCreationTime, atmSvcVcCrossConnectRowStatus, atmIfRegAddrAddressSource, atmIfRegAddrOrgScope, atmIfRegAddrRowStatus]

class atmSwitchServcSigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 4])
	group = [atmSigSupportClgPtyNumDel, atmSigSupportClgPtySubAddr, atmSigSupportCldPtySubAddr, atmSigSupportHiLyrInfo, atmSigSupportLoLyrInfo, atmSigSupportBlliRepeatInd, atmSigSupportAALInfo, atmSigSupportPrefCarrier]

class atmSwitchServcNotifGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 5])
	group = [atmIntfPvcFailuresTrap]

class atmSwitchGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 6])
	group = [atmSwitchAddressAddress, atmSwitchAddressRowStatus]

class atmServcGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 7])
	group = [atmVpCrossConnectUserName, atmVpCrossConnectProviderName, atmVcCrossConnectUserName, atmVcCrossConnectProviderName]

class atmHostGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 8])
	group = [atmAal5VclInPkts, atmAal5VclOutPkts, atmAal5VclInOctets, atmAal5VclOutOctets, atmVclAddrType, atmVclAddrRowStatus, atmAddrVclAddrType, atmVclGenSigDescrIndex]

class atmHostSigDescrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 37, 1, 14, 3, 1, 9])
	group = [atmSigDescrParamAalType, atmSigDescrParamAalSscsType, atmSigDescrParamBhliType, atmSigDescrParamBhliInfo, atmSigDescrParamBbcConnConf, atmSigDescrParamBlliLayer2, atmSigDescrParamBlliLayer3, atmSigDescrParamBlliPktSize, atmSigDescrParamBlliSnapId, atmSigDescrParamBlliOuiPid, atmSigDescrParamRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
