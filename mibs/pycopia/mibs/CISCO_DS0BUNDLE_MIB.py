# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoExperiment
from SNMPv2_TC import RowStatus, TestAndIncr
from IF_MIB import InterfaceIndex

class CISCO_DS0BUNDLE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-DS0BUNDLE-MIB'
	conformance = 3
	name = 'CISCO-DS0BUNDLE-MIB'
	language = 2
	description = 'The MIB module to describe DS0 Bundle interfaces\nobjects.\n\n\nNote: This contains a subset of the MIB objects\ndefined in DS0BUNDLE-MIB of\ndraft-ietf-trunkmib-ds0-mib-06.txt, section 6; it does\nnot include the DS0 Bonding group.'

# nodes
class ds0Bundle(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32])
	name = 'ds0Bundle'

class ds0BundleConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 4])
	name = 'ds0BundleConformance'

class ds0BundleGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 4, 1])
	name = 'ds0BundleGroups'

class ds0BundleCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 4, 2])
	name = 'ds0BundleCompliances'


# macros
# types 
# scalars 
class dsx0BundleNextIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 2])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


# columns
class dsx0BundleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dsx0BundleIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 3, 1, 2])
	syntaxobject = InterfaceIndex


class dsx0BundleRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class dsx0BundleEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dsx0BundleIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 3, 1])
	access = 2
	rowstatus = dsx0BundleRowStatus
	columns = {'dsx0BundleIndex': dsx0BundleIndex, 'dsx0BundleIfIndex': dsx0BundleIfIndex, 'dsx0BundleRowStatus': dsx0BundleRowStatus}


# notifications (traps) 
# groups 
class ds0BundleConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 32, 4, 1, 2])
	group = [dsx0BundleNextIndex, dsx0BundleIfIndex, dsx0BundleRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
