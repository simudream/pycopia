# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, TimeTicks, Integer32, Counter32, IpAddress
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import DisplayString, TEXTUAL_CONVENTION

class CISCO_CONFIG_MAN_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-CONFIG-MAN-MIB'
	conformance = 4
	name = 'CISCO-CONFIG-MAN-MIB'
	language = 2
	description = "Configuration management MIB.\n\nThe MIB represents a model of configuration data that\nexists in various locations:\n\nrunning\t\tin use by the running system\nterminal\toperator's mind or attached hardware\nlocal\t\tsaved locally in NVRAM or flash\nremote\t\tsaved to some server on the network\n\nAlthough some of the system functions that relate here\ncan be used for general file storage and transfer, this\nMIB intends to include only such operations as clearly\nrelate to configuration.  Its primary emphasis is to\ntrack changes and saves of the running configuration.\n\nAs saved data moves further from startup use, such as\ninto different local flash files or onto the network,\ntracking becomes difficult to impossible, so the MIB's\ninterest and functions are confined in that area."

# nodes
class ciscoConfigManMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43])
	name = 'ciscoConfigManMIB'

class ciscoConfigManMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1])
	name = 'ciscoConfigManMIBObjects'

class ccmHistory(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1])
	name = 'ccmHistory'

class ciscoConfigManMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 2])
	name = 'ciscoConfigManMIBNotificationPrefix'

class ciscoConfigManMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 2, 0])
	name = 'ciscoConfigManMIBNotifications'

class ciscoConfigManMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 3])
	name = 'ciscoConfigManMIBConformance'

class ciscoConfigManMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 3, 1])
	name = 'ciscoConfigManMIBCompliances'

class ciscoConfigManMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 3, 2])
	name = 'ciscoConfigManMIBGroups'


# macros
# types 

class HistoryEventMedium(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'erase'), Enum(2, 'commandSource'), Enum(3, 'running'), Enum(4, 'startup'), Enum(5, 'local'), Enum(6, 'networkTftp'), Enum(7, 'networkRcp')]

# scalars 
class ccmHistoryRunningLastChanged(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ccmHistoryRunningLastSaved(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ccmHistoryStartupLastChanged(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ccmHistoryMaxEventEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ccmHistoryEventEntriesBumped(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class ccmHistoryEventIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ccmHistoryEventTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class ccmHistoryEventCommandSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commandLine'), Enum(2, 'snmp')]


class ccmHistoryEventConfigSource(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 4])
	syntaxobject = HistoryEventMedium


class ccmHistoryEventConfigDestination(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 5])
	syntaxobject = HistoryEventMedium


class ccmHistoryEventTerminalType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notApplicable'), Enum(2, 'unknown'), Enum(3, 'console'), Enum(4, 'terminal'), Enum(5, 'virtual'), Enum(6, 'auxiliary')]


class ccmHistoryEventTerminalNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ccmHistoryEventTerminalUser(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ccmHistoryEventTerminalLocation(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ccmHistoryEventCommandSourceAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ccmHistoryEventVirtualHostName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ccmHistoryEventServerAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ccmHistoryEventFile(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ccmHistoryEventRcpUser(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# rows 
class ccmHistoryEventEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ccmHistoryEventIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 1, 1, 6, 1])
	access = 2
	columns = {'ccmHistoryEventIndex': ccmHistoryEventIndex, 'ccmHistoryEventTime': ccmHistoryEventTime, 'ccmHistoryEventCommandSource': ccmHistoryEventCommandSource, 'ccmHistoryEventConfigSource': ccmHistoryEventConfigSource, 'ccmHistoryEventConfigDestination': ccmHistoryEventConfigDestination, 'ccmHistoryEventTerminalType': ccmHistoryEventTerminalType, 'ccmHistoryEventTerminalNumber': ccmHistoryEventTerminalNumber, 'ccmHistoryEventTerminalUser': ccmHistoryEventTerminalUser, 'ccmHistoryEventTerminalLocation': ccmHistoryEventTerminalLocation, 'ccmHistoryEventCommandSourceAddress': ccmHistoryEventCommandSourceAddress, 'ccmHistoryEventVirtualHostName': ccmHistoryEventVirtualHostName, 'ccmHistoryEventServerAddress': ccmHistoryEventServerAddress, 'ccmHistoryEventFile': ccmHistoryEventFile, 'ccmHistoryEventRcpUser': ccmHistoryEventRcpUser}


# notifications (traps) 
class ciscoConfigManEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 2, 0, 1])

# groups 
class ciscoConfigManHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 43, 3, 2, 1])
	group = [ccmHistoryRunningLastChanged, ccmHistoryRunningLastSaved, ccmHistoryStartupLastChanged, ccmHistoryMaxEventEntries, ccmHistoryEventEntriesBumped, ccmHistoryEventTime, ccmHistoryEventCommandSource, ccmHistoryEventConfigSource, ccmHistoryEventConfigDestination, ccmHistoryEventTerminalType, ccmHistoryEventTerminalNumber, ccmHistoryEventTerminalUser, ccmHistoryEventTerminalLocation, ccmHistoryEventCommandSourceAddress, ccmHistoryEventVirtualHostName, ccmHistoryEventServerAddress, ccmHistoryEventFile, ccmHistoryEventRcpUser]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
