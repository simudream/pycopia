# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Counter64, Integer32, mib_2
from SNMPv2_CONF import OBJECT_GROUP, MODULE_COMPLIANCE
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TimeStamp, TruthValue
from IF_MIB import ifIndex
from RMON2_MIB import TimeFilter

class FLOW_METER_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/FLOW-METER-MIB'
	conformance = 3
	name = 'FLOW-METER-MIB'
	language = 2
	description = 'MIB for the RTFM Traffic Flow Meter.'

# nodes
class flowMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40])
	name = 'flowMIB'

class flowControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1])
	name = 'flowControl'

class flowData(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2])
	name = 'flowData'

class flowRules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3])
	name = 'flowRules'

class flowMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4])
	name = 'flowMIBConformance'

class flowMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 1])
	name = 'flowMIBCompliances'

class flowMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2])
	name = 'flowMIBGroups'


# macros
# types 

class UTF8OwnerString(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 127))
	format = '127t'


class PeerType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'ipv4'), Enum(2, 'ipv6'), Enum(3, 'nsap'), Enum(11, 'ipx'), Enum(12, 'appletalk'), Enum(13, 'decnet')]


class PeerAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(3, 20))


class AdjacentType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'ip'), Enum(3, 'nsap'), Enum(7, 'ethernet'), Enum(9, 'tokenring'), Enum(11, 'ipx'), Enum(12, 'appletalk'), Enum(13, 'decnet'), Enum(15, 'fddi')]


class AdjacentAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(3, 20))


class TransportType(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 255))


class TransportAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(2, 2))


class RuleAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(2, 20))


class FlowAttributeNumber(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'flowIndex'), Enum(2, 'flowStatus'), Enum(3, 'flowTimeMark'), Enum(4, 'sourceInterface'), Enum(5, 'sourceAdjacentType'), Enum(6, 'sourceAdjacentAddress'), Enum(7, 'sourceAdjacentMask'), Enum(8, 'sourcePeerType'), Enum(9, 'sourcePeerAddress'), Enum(10, 'sourcePeerMask'), Enum(11, 'sourceTransType'), Enum(12, 'sourceTransAddress'), Enum(13, 'sourceTransMask'), Enum(14, 'destInterface'), Enum(15, 'destAdjacentType'), Enum(16, 'destAdjacentAddress'), Enum(17, 'destAdjacentMask'), Enum(18, 'destPeerType'), Enum(19, 'destPeerAddress'), Enum(20, 'destPeerMask'), Enum(21, 'destTransType'), Enum(22, 'destTransAddress'), Enum(23, 'destTransMask'), Enum(24, 'pduScale'), Enum(25, 'octetScale'), Enum(26, 'ruleSet'), Enum(27, 'toOctets'), Enum(28, 'toPDUs'), Enum(29, 'fromOctets'), Enum(30, 'fromPDUs'), Enum(31, 'firstTime'), Enum(32, 'lastActiveTime'), Enum(33, 'sourceSubscriberID'), Enum(34, 'destSubscriberID'), Enum(35, 'sessionID'), Enum(36, 'sourceClass'), Enum(37, 'destClass'), Enum(38, 'flowClass'), Enum(39, 'sourceKind'), Enum(40, 'destKind'), Enum(41, 'flowKind')]


class RuleAttributeNumber(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'null'), Enum(4, 'sourceInterface'), Enum(5, 'sourceAdjacentType'), Enum(6, 'sourceAdjacentAddress'), Enum(8, 'sourcePeerType'), Enum(9, 'sourcePeerAddress'), Enum(11, 'sourceTransType'), Enum(12, 'sourceTransAddress'), Enum(14, 'destInterface'), Enum(15, 'destAdjacentType'), Enum(16, 'destAdjacentAddress'), Enum(18, 'destPeerType'), Enum(19, 'destPeerAddress'), Enum(21, 'destTransType'), Enum(22, 'destTransAddress'), Enum(33, 'sourceSubscriberID'), Enum(34, 'destSubscriberID'), Enum(35, 'sessionID'), Enum(36, 'sourceClass'), Enum(37, 'destClass'), Enum(38, 'flowClass'), Enum(39, 'sourceKind'), Enum(40, 'destKind'), Enum(41, 'flowKind'), Enum(50, 'matchingStoD'), Enum(51, 'v1'), Enum(52, 'v2'), Enum(53, 'v3'), Enum(54, 'v4'), Enum(55, 'v5')]


class ActionNumber(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'ignore'), Enum(2, 'noMatch'), Enum(3, 'count'), Enum(4, 'countPkt'), Enum(5, 'return'), Enum(6, 'gosub'), Enum(7, 'gosubAct'), Enum(8, 'assign'), Enum(9, 'assignAct'), Enum(10, 'goto'), Enum(11, 'gotoAct'), Enum(12, 'pushRuleTo'), Enum(13, 'pushRuleToAct'), Enum(14, 'pushPktTo'), Enum(15, 'pushPktToAct'), Enum(16, 'popTo'), Enum(17, 'popToAct')]

# scalars 
class flowFloodMark(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowInactivityTimeout(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowActiveFlows(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowMaxFlows(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowFloodMode(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class flowRuleInfoIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowRuleInfoSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowRuleInfoOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 3])
	syntaxobject = UTF8OwnerString


class flowRuleInfoTimeStamp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class flowRuleInfoStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class flowRuleInfoName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowRuleInfoRulesReady(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class flowRuleInfoFlowRecords(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowInterfaceSampleRate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowInterfaceLostPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class flowReaderIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowReaderTimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowReaderOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 3])
	syntaxobject = UTF8OwnerString


class flowReaderLastTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class flowReaderPreviousTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class flowReaderStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class flowReaderRuleSet(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowManagerIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowManagerCurrentRuleSet(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowManagerStandbyRuleSet(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowManagerHighWaterMark(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowManagerCounterWrap(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'wrap'), Enum(2, 'scale')]


class flowManagerOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 6])
	syntaxobject = UTF8OwnerString


class flowManagerTimeStamp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class flowManagerStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class flowManagerRunningStandby(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class flowDataIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataTimeMark(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 2])
	syntaxobject = TimeFilter


class flowDataStatus(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'current')]


class flowDataSourceInterface(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataSourceAdjacentType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 5])
	syntaxobject = AdjacentType


class flowDataSourceAdjacentAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 6])
	syntaxobject = AdjacentAddress


class flowDataSourceAdjacentMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 7])
	syntaxobject = AdjacentAddress


class flowDataSourcePeerType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 8])
	syntaxobject = PeerType


class flowDataSourcePeerAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 9])
	syntaxobject = PeerAddress


class flowDataSourcePeerMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 10])
	syntaxobject = PeerAddress


class flowDataSourceTransType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 11])
	syntaxobject = TransportType


class flowDataSourceTransAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 12])
	syntaxobject = TransportAddress


class flowDataSourceTransMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 13])
	syntaxobject = TransportAddress


class flowDataDestInterface(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataDestAdjacentType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 15])
	syntaxobject = AdjacentType


class flowDataDestAdjacentAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 16])
	syntaxobject = AdjacentAddress


class flowDataDestAdjacentMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 17])
	syntaxobject = AdjacentAddress


class flowDataDestPeerType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 18])
	syntaxobject = PeerType


class flowDataDestPeerAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 19])
	syntaxobject = PeerAddress


class flowDataDestPeerMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 20])
	syntaxobject = PeerAddress


class flowDataDestTransType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 21])
	syntaxobject = TransportType


class flowDataDestTransAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 22])
	syntaxobject = TransportAddress


class flowDataDestTransMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 23])
	syntaxobject = TransportAddress


class flowDataPDUScale(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataOctetScale(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataRuleSet(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataToOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class flowDataToPDUs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class flowDataFromOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class flowDataFromPDUs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class flowDataFirstTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class flowDataLastActiveTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class flowDataSourceSubscriberID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowDataDestSubscriberID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowDataSessionID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowDataSourceClass(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataDestClass(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataClass(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataSourceKind(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataDestKind(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowDataKind(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowColumnActivityAttribute(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 2, 1, 1])
	syntaxobject = FlowAttributeNumber


class flowColumnActivityTime(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 2, 1, 2])
	syntaxobject = TimeFilter


class flowColumnActivityIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowColumnActivityData(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowPackageSelector(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowPackageRuleSet(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowPackageTime(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 3, 1, 3])
	syntaxobject = TimeFilter


class flowPackageIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowPackageData(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class flowRuleSet(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowRuleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class flowRuleSelector(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 3])
	syntaxobject = RuleAttributeNumber


class flowRuleMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 4])
	syntaxobject = RuleAddress


class flowRuleMatchedValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 5])
	syntaxobject = RuleAddress


class flowRuleAction(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 6])
	syntaxobject = ActionNumber


class flowRuleParameter(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class flowRuleSetInfoEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([flowRuleInfoIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 1, 1])
	access = 2
	rowstatus = flowRuleInfoStatus
	columns = {'flowRuleInfoIndex': flowRuleInfoIndex, 'flowRuleInfoSize': flowRuleInfoSize, 'flowRuleInfoOwner': flowRuleInfoOwner, 'flowRuleInfoTimeStamp': flowRuleInfoTimeStamp, 'flowRuleInfoStatus': flowRuleInfoStatus, 'flowRuleInfoName': flowRuleInfoName, 'flowRuleInfoRulesReady': flowRuleInfoRulesReady, 'flowRuleInfoFlowRecords': flowRuleInfoFlowRecords}


class flowInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 2, 1])
	access = 2
	columns = {'flowInterfaceSampleRate': flowInterfaceSampleRate, 'flowInterfaceLostPackets': flowInterfaceLostPackets}


class flowReaderInfoEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([flowReaderIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 3, 1])
	access = 2
	rowstatus = flowReaderStatus
	columns = {'flowReaderIndex': flowReaderIndex, 'flowReaderTimeout': flowReaderTimeout, 'flowReaderOwner': flowReaderOwner, 'flowReaderLastTime': flowReaderLastTime, 'flowReaderPreviousTime': flowReaderPreviousTime, 'flowReaderStatus': flowReaderStatus, 'flowReaderRuleSet': flowReaderRuleSet}


class flowManagerInfoEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([flowManagerIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 1, 4, 1])
	access = 2
	rowstatus = flowManagerStatus
	columns = {'flowManagerIndex': flowManagerIndex, 'flowManagerCurrentRuleSet': flowManagerCurrentRuleSet, 'flowManagerStandbyRuleSet': flowManagerStandbyRuleSet, 'flowManagerHighWaterMark': flowManagerHighWaterMark, 'flowManagerCounterWrap': flowManagerCounterWrap, 'flowManagerOwner': flowManagerOwner, 'flowManagerTimeStamp': flowManagerTimeStamp, 'flowManagerStatus': flowManagerStatus, 'flowManagerRunningStandby': flowManagerRunningStandby}


class flowDataEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([flowDataRuleSet, flowDataTimeMark, flowDataIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 1, 1])
	access = 2
	columns = {'flowDataIndex': flowDataIndex, 'flowDataTimeMark': flowDataTimeMark, 'flowDataStatus': flowDataStatus, 'flowDataSourceInterface': flowDataSourceInterface, 'flowDataSourceAdjacentType': flowDataSourceAdjacentType, 'flowDataSourceAdjacentAddress': flowDataSourceAdjacentAddress, 'flowDataSourceAdjacentMask': flowDataSourceAdjacentMask, 'flowDataSourcePeerType': flowDataSourcePeerType, 'flowDataSourcePeerAddress': flowDataSourcePeerAddress, 'flowDataSourcePeerMask': flowDataSourcePeerMask, 'flowDataSourceTransType': flowDataSourceTransType, 'flowDataSourceTransAddress': flowDataSourceTransAddress, 'flowDataSourceTransMask': flowDataSourceTransMask, 'flowDataDestInterface': flowDataDestInterface, 'flowDataDestAdjacentType': flowDataDestAdjacentType, 'flowDataDestAdjacentAddress': flowDataDestAdjacentAddress, 'flowDataDestAdjacentMask': flowDataDestAdjacentMask, 'flowDataDestPeerType': flowDataDestPeerType, 'flowDataDestPeerAddress': flowDataDestPeerAddress, 'flowDataDestPeerMask': flowDataDestPeerMask, 'flowDataDestTransType': flowDataDestTransType, 'flowDataDestTransAddress': flowDataDestTransAddress, 'flowDataDestTransMask': flowDataDestTransMask, 'flowDataPDUScale': flowDataPDUScale, 'flowDataOctetScale': flowDataOctetScale, 'flowDataRuleSet': flowDataRuleSet, 'flowDataToOctets': flowDataToOctets, 'flowDataToPDUs': flowDataToPDUs, 'flowDataFromOctets': flowDataFromOctets, 'flowDataFromPDUs': flowDataFromPDUs, 'flowDataFirstTime': flowDataFirstTime, 'flowDataLastActiveTime': flowDataLastActiveTime, 'flowDataSourceSubscriberID': flowDataSourceSubscriberID, 'flowDataDestSubscriberID': flowDataDestSubscriberID, 'flowDataSessionID': flowDataSessionID, 'flowDataSourceClass': flowDataSourceClass, 'flowDataDestClass': flowDataDestClass, 'flowDataClass': flowDataClass, 'flowDataSourceKind': flowDataSourceKind, 'flowDataDestKind': flowDataDestKind, 'flowDataKind': flowDataKind}


class flowColumnActivityEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([flowColumnActivityAttribute, flowColumnActivityTime, flowColumnActivityIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 2, 1])
	access = 2
	columns = {'flowColumnActivityAttribute': flowColumnActivityAttribute, 'flowColumnActivityTime': flowColumnActivityTime, 'flowColumnActivityIndex': flowColumnActivityIndex, 'flowColumnActivityData': flowColumnActivityData}


class flowDataPackageEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([flowPackageSelector, flowPackageRuleSet, flowPackageTime, flowPackageIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 2, 3, 1])
	access = 2
	columns = {'flowPackageSelector': flowPackageSelector, 'flowPackageRuleSet': flowPackageRuleSet, 'flowPackageTime': flowPackageTime, 'flowPackageIndex': flowPackageIndex, 'flowPackageData': flowPackageData}


class flowRuleEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([flowRuleSet, flowRuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 3, 1, 1])
	access = 2
	columns = {'flowRuleSet': flowRuleSet, 'flowRuleIndex': flowRuleIndex, 'flowRuleSelector': flowRuleSelector, 'flowRuleMask': flowRuleMask, 'flowRuleMatchedValue': flowRuleMatchedValue, 'flowRuleAction': flowRuleAction, 'flowRuleParameter': flowRuleParameter}


# notifications (traps) 
# groups 
class flowControlGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 1])
	group = [flowRuleInfoSize, flowRuleInfoOwner, flowRuleInfoTimeStamp, flowRuleInfoStatus, flowRuleInfoName, flowRuleInfoRulesReady, flowRuleInfoFlowRecords, flowInterfaceSampleRate, flowInterfaceLostPackets, flowReaderTimeout, flowReaderOwner, flowReaderLastTime, flowReaderPreviousTime, flowReaderStatus, flowReaderRuleSet, flowManagerCurrentRuleSet, flowManagerStandbyRuleSet, flowManagerHighWaterMark, flowManagerCounterWrap, flowManagerOwner, flowManagerTimeStamp, flowManagerStatus, flowManagerRunningStandby, flowFloodMark, flowInactivityTimeout, flowActiveFlows, flowMaxFlows, flowFloodMode]

class flowDataTableGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 2])
	group = [flowDataStatus, flowDataSourceInterface, flowDataSourceAdjacentType, flowDataSourceAdjacentAddress, flowDataSourceAdjacentMask, flowDataSourcePeerType, flowDataSourcePeerAddress, flowDataSourcePeerMask, flowDataSourceTransType, flowDataSourceTransAddress, flowDataSourceTransMask, flowDataDestInterface, flowDataDestAdjacentType, flowDataDestAdjacentAddress, flowDataDestAdjacentMask, flowDataDestPeerType, flowDataDestPeerAddress, flowDataDestPeerMask, flowDataDestTransType, flowDataDestTransAddress, flowDataDestTransMask, flowDataToOctets, flowDataToPDUs, flowDataFromOctets, flowDataFromPDUs, flowDataFirstTime, flowDataLastActiveTime, flowDataSourceClass, flowDataDestClass, flowDataClass, flowDataSourceKind, flowDataDestKind, flowDataKind]

class flowDataScaleGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 3])
	group = [flowManagerCounterWrap, flowDataPDUScale, flowDataOctetScale]

class flowDataSubscriberGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 4])
	group = [flowDataSourceSubscriberID, flowDataDestSubscriberID, flowDataSessionID]

class flowDataColumnTableGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 5])
	group = [flowColumnActivityAttribute, flowColumnActivityIndex, flowColumnActivityTime, flowColumnActivityData]

class flowDataPackageGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 6])
	group = [flowPackageData]

class flowRuleTableGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 7])
	group = [flowRuleSelector, flowRuleMask, flowRuleMatchedValue, flowRuleAction, flowRuleParameter]

class flowDataScaleGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 8])
	group = [flowDataPDUScale, flowDataOctetScale]

class flowControlGroup2(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 40, 4, 2, 9])
	group = [flowRuleInfoSize, flowRuleInfoOwner, flowRuleInfoTimeStamp, flowRuleInfoStatus, flowRuleInfoName, flowRuleInfoFlowRecords, flowInterfaceSampleRate, flowInterfaceLostPackets, flowReaderTimeout, flowReaderOwner, flowReaderLastTime, flowReaderPreviousTime, flowReaderStatus, flowReaderRuleSet, flowManagerCurrentRuleSet, flowManagerStandbyRuleSet, flowManagerHighWaterMark, flowManagerOwner, flowManagerTimeStamp, flowManagerStatus, flowManagerRunningStandby, flowFloodMark, flowInactivityTimeout, flowActiveFlows, flowMaxFlows, flowFloodMode]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
