# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Integer32, Counter32, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import RowStatus, VariablePointer, StorageType, TEXTUAL_CONVENTION
from HCNUM_TC import CounterBasedGauge64
from RMON_MIB import rmon, OwnerString, rmonEventGroup

class HC_ALARM_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/HC-ALARM-MIB'
	conformance = 4
	name = 'HC-ALARM-MIB'
	language = 2
	description = 'This module defines Remote Monitoring MIB extensions for\nHigh Capacity Alarms.\n\nCopyright (C) The Internet Society (2002). This version\nof this MIB module is part of RFC 3434; see the RFC\nitself for full legal notices.'

# nodes
class hcAlarmMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29])
	name = 'hcAlarmMIB'

class hcAlarmObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1])
	name = 'hcAlarmObjects'

class hcAlarmControlObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1])
	name = 'hcAlarmControlObjects'

class hcAlarmCapabilitiesObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 2])
	name = 'hcAlarmCapabilitiesObjects'

class hcAlarmNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 2])
	name = 'hcAlarmNotifications'

class hcAlarmNotifPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 2, 0])
	name = 'hcAlarmNotifPrefix'

class hcAlarmConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 3])
	name = 'hcAlarmConformance'

class hcAlarmCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 3, 1])
	name = 'hcAlarmCompliances'

class hcAlarmGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 3, 2])
	name = 'hcAlarmGroups'


# macros
# types 

class HcValueStatus(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'valueNotAvailable'), Enum(2, 'valuePositive'), Enum(3, 'valueNegative')]

# scalars 
class hcAlarmCapabilities(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.BITS


# columns
class hcAlarmIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hcAlarmInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class hcAlarmVariable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.VariablePointer


class hcAlarmSampleType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'absoluteValue'), Enum(2, 'deltaValue')]


class hcAlarmAbsValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 5])
	syntaxobject = CounterBasedGauge64


class hcAlarmValueStatus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 6])
	syntaxobject = HcValueStatus


class hcAlarmStartupAlarm(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'risingAlarm'), Enum(2, 'fallingAlarm'), Enum(3, 'risingOrFallingAlarm')]


class hcAlarmRisingThreshAbsValueLo(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hcAlarmRisingThreshAbsValueHi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hcAlarmRisingThresholdValStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 10])
	syntaxobject = HcValueStatus


class hcAlarmFallingThreshAbsValueLo(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hcAlarmFallingThreshAbsValueHi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class hcAlarmFallingThresholdValStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 13])
	syntaxobject = HcValueStatus


class hcAlarmRisingEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hcAlarmFallingEventIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hcAlarmValueFailedAttempts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hcAlarmOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 17])
	syntaxobject = OwnerString


class hcAlarmStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class hcAlarmStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class hcAlarmEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hcAlarmIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 1, 1, 1, 1])
	access = 2
	rowstatus = hcAlarmStatus
	columns = {'hcAlarmIndex': hcAlarmIndex, 'hcAlarmInterval': hcAlarmInterval, 'hcAlarmVariable': hcAlarmVariable, 'hcAlarmSampleType': hcAlarmSampleType, 'hcAlarmAbsValue': hcAlarmAbsValue, 'hcAlarmValueStatus': hcAlarmValueStatus, 'hcAlarmStartupAlarm': hcAlarmStartupAlarm, 'hcAlarmRisingThreshAbsValueLo': hcAlarmRisingThreshAbsValueLo, 'hcAlarmRisingThreshAbsValueHi': hcAlarmRisingThreshAbsValueHi, 'hcAlarmRisingThresholdValStatus': hcAlarmRisingThresholdValStatus, 'hcAlarmFallingThreshAbsValueLo': hcAlarmFallingThreshAbsValueLo, 'hcAlarmFallingThreshAbsValueHi': hcAlarmFallingThreshAbsValueHi, 'hcAlarmFallingThresholdValStatus': hcAlarmFallingThresholdValStatus, 'hcAlarmRisingEventIndex': hcAlarmRisingEventIndex, 'hcAlarmFallingEventIndex': hcAlarmFallingEventIndex, 'hcAlarmValueFailedAttempts': hcAlarmValueFailedAttempts, 'hcAlarmOwner': hcAlarmOwner, 'hcAlarmStorageType': hcAlarmStorageType, 'hcAlarmStatus': hcAlarmStatus}


# notifications (traps) 
class hcRisingAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 2, 0, 1])

class hcFallingAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 2, 0, 2])

# groups 
class hcAlarmControlGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 3, 2, 1])
	group = [hcAlarmInterval, hcAlarmVariable, hcAlarmSampleType, hcAlarmAbsValue, hcAlarmValueStatus, hcAlarmStartupAlarm, hcAlarmRisingThreshAbsValueLo, hcAlarmRisingThreshAbsValueHi, hcAlarmRisingThresholdValStatus, hcAlarmFallingThreshAbsValueLo, hcAlarmFallingThreshAbsValueHi, hcAlarmFallingThresholdValStatus, hcAlarmRisingEventIndex, hcAlarmFallingEventIndex, hcAlarmValueFailedAttempts, hcAlarmOwner, hcAlarmStorageType, hcAlarmStatus]

class hcAlarmCapabilitiesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 3, 2, 2])
	group = [hcAlarmCapabilities]

class hcAlarmNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 16, 29, 3, 2, 3])
	group = [hcRisingAlarm, hcFallingAlarm]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
