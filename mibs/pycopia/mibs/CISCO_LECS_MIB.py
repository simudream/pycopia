# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import ifIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32
from LAN_EMULATION_CLIENT_MIB import VpiInteger, VciInteger, AtmLaneAddress
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import RowStatus, DisplayString, MacAddress, TimeStamp, TruthValue

class CISCO_LECS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-LECS-MIB'
	conformance = 3
	name = 'CISCO-LECS-MIB'
	language = 2
	description = ' The   MIB   module  for   the  management    of LANE\nConfiguration in Cisco devices.'

# nodes
class ciscoLecsMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38])
	name = 'ciscoLecsMIB'

class ciscoLecsMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1])
	name = 'ciscoLecsMIBObjects'

class lecs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1])
	name = 'lecs'

class config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2])
	name = 'config'

class lecsMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 2])
	name = 'lecsMIBConformance'

class lecsMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 2, 1])
	name = 'lecsMIBCompliances'

class lecsMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 2, 2])
	name = 'lecsMIBGroups'


# macros
# types 
# scalars 
# columns
class lecsConfigTableName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lecsInConfigReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lecsInConfigErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lecsOutConfigFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lecsLastFailCause(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lecsLastFailLec(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 7])
	syntaxobject = AtmLaneAddress


class lecsOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class lecsAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class lecsStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsMasterState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lecsAtmAddrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lecsAtmAddrSpec(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1, 2])
	syntaxobject = AtmLaneAddress


class lecsAtmAddrMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lecsAtmAddrActual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1, 4])
	syntaxobject = AtmLaneAddress


class lecsAtmAddrState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'actualValueInvalid'), Enum(2, 'actualValueValid'), Enum(3, 'registeredWithSignalling'), Enum(4, 'regSigAndValid'), Enum(5, 'registeredWithIlmi'), Enum(6, 'regIlmiAndValid'), Enum(7, 'regSigandIlmi'), Enum(8, 'regSigIlmiAndValid')]


class lecsAtmAddrStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsConfigDirectConnVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1, 1])
	syntaxobject = VpiInteger


class lecsConfigDirectConnVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1, 2])
	syntaxobject = VciInteger


class lecsConfigDirectConnVCType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svc')]


class lecsConfigDirectConnSrc(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1, 4])
	syntaxobject = AtmLaneAddress


class lecsConfigDirectConnDst(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1, 5])
	syntaxobject = AtmLaneAddress


class lecsConfigDirectDstType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'laneClient'), Enum(2, 'laneServer'), Enum(3, 'laneConfig'), Enum(4, 'unknown')]


class lecsConfigTblName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsConfigTblDefaultElanName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsConfigTblStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsElanConfigName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsElanLesAtmAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 2, 1, 2])
	syntaxobject = AtmLaneAddress


class lecsElanAccess(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class lecsElanConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsElanSegmentId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lecsMacConfigAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class lecsMacConfigElanName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsMacConfigLastUsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lecsMacConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsAtmAddrConfigAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lecsAtmAddrConfigMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lecsAtmAddrConfigElanName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsAtmAddrLastUsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lecsAtmAddrConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsLesAtmAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lecsLesPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lecsLesConnState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive'), Enum(3, 'notConnected')]


class lecsLesConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lecsRDConfigSegmentId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lecsRDConfigBridgeNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lecsRDConfigElanName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lecsRDConfigLastUsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lecsRDConfigStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class lecsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 1, 1])
	access = 2
	rowstatus = lecsStatus
	columns = {'lecsConfigTableName': lecsConfigTableName, 'lecsUpTime': lecsUpTime, 'lecsInConfigReqs': lecsInConfigReqs, 'lecsInConfigErrors': lecsInConfigErrors, 'lecsOutConfigFails': lecsOutConfigFails, 'lecsLastFailCause': lecsLastFailCause, 'lecsLastFailLec': lecsLastFailLec, 'lecsOperStatus': lecsOperStatus, 'lecsAdminStatus': lecsAdminStatus, 'lecsStatus': lecsStatus, 'lecsMasterState': lecsMasterState}


class lecsAtmAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, lecsAtmAddrIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 2, 1])
	access = 2
	rowstatus = lecsAtmAddrStatus
	columns = {'lecsAtmAddrIndex': lecsAtmAddrIndex, 'lecsAtmAddrSpec': lecsAtmAddrSpec, 'lecsAtmAddrMask': lecsAtmAddrMask, 'lecsAtmAddrActual': lecsAtmAddrActual, 'lecsAtmAddrState': lecsAtmAddrState, 'lecsAtmAddrStatus': lecsAtmAddrStatus}


class lecsConfigDirectConnEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, lecsConfigDirectConnVpi, lecsConfigDirectConnVci], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 1, 3, 1])
	access = 2
	columns = {'lecsConfigDirectConnVpi': lecsConfigDirectConnVpi, 'lecsConfigDirectConnVci': lecsConfigDirectConnVci, 'lecsConfigDirectConnVCType': lecsConfigDirectConnVCType, 'lecsConfigDirectConnSrc': lecsConfigDirectConnSrc, 'lecsConfigDirectConnDst': lecsConfigDirectConnDst, 'lecsConfigDirectDstType': lecsConfigDirectDstType}


class lecsConfigTblEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecsConfigTblName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 1, 1])
	access = 2
	rowstatus = lecsConfigTblStatus
	columns = {'lecsConfigTblName': lecsConfigTblName, 'lecsConfigTblDefaultElanName': lecsConfigTblDefaultElanName, 'lecsConfigTblStatus': lecsConfigTblStatus}


class lecsElanConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecsConfigTblName, lecsElanConfigName], True)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 2, 1])
	access = 2
	rowstatus = lecsElanConfigStatus
	columns = {'lecsElanConfigName': lecsElanConfigName, 'lecsElanLesAtmAddr': lecsElanLesAtmAddr, 'lecsElanAccess': lecsElanAccess, 'lecsElanConfigStatus': lecsElanConfigStatus, 'lecsElanSegmentId': lecsElanSegmentId}


class lecsMacConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecsConfigTblName, lecsMacConfigAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 3, 1])
	access = 2
	rowstatus = lecsMacConfigStatus
	columns = {'lecsMacConfigAddress': lecsMacConfigAddress, 'lecsMacConfigElanName': lecsMacConfigElanName, 'lecsMacConfigLastUsed': lecsMacConfigLastUsed, 'lecsMacConfigStatus': lecsMacConfigStatus}


class lecsAtmAddrConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecsConfigTblName, lecsAtmAddrConfigAddress, lecsAtmAddrConfigMask], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 4, 1])
	access = 2
	rowstatus = lecsAtmAddrConfigStatus
	columns = {'lecsAtmAddrConfigAddress': lecsAtmAddrConfigAddress, 'lecsAtmAddrConfigMask': lecsAtmAddrConfigMask, 'lecsAtmAddrConfigElanName': lecsAtmAddrConfigElanName, 'lecsAtmAddrLastUsed': lecsAtmAddrLastUsed, 'lecsAtmAddrConfigStatus': lecsAtmAddrConfigStatus}


class lecsLesConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecsConfigTblName, lecsElanConfigName, lecsLesAtmAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 5, 1])
	access = 2
	rowstatus = lecsLesConfigStatus
	columns = {'lecsLesAtmAddr': lecsLesAtmAddr, 'lecsLesPriority': lecsLesPriority, 'lecsLesConnState': lecsLesConnState, 'lecsLesConfigStatus': lecsLesConfigStatus}


class lecsRDConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lecsConfigTblName, lecsRDConfigSegmentId, lecsRDConfigBridgeNum], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 1, 2, 6, 1])
	access = 2
	rowstatus = lecsRDConfigStatus
	columns = {'lecsRDConfigSegmentId': lecsRDConfigSegmentId, 'lecsRDConfigBridgeNum': lecsRDConfigBridgeNum, 'lecsRDConfigElanName': lecsRDConfigElanName, 'lecsRDConfigLastUsed': lecsRDConfigLastUsed, 'lecsRDConfigStatus': lecsRDConfigStatus}


# notifications (traps) 
# groups 
class lecsMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 2, 2, 1])
	group = [lecsConfigTableName, lecsUpTime, lecsInConfigReqs, lecsInConfigErrors, lecsOutConfigFails, lecsLastFailCause, lecsLastFailLec, lecsOperStatus, lecsAdminStatus, lecsStatus, lecsAtmAddrSpec, lecsAtmAddrMask, lecsAtmAddrActual, lecsAtmAddrState, lecsAtmAddrStatus, lecsConfigDirectConnSrc, lecsConfigDirectConnDst, lecsConfigTblStatus, lecsElanLesAtmAddr, lecsElanConfigStatus, lecsMacConfigElanName, lecsMacConfigLastUsed, lecsMacConfigStatus, lecsAtmAddrConfigElanName, lecsAtmAddrLastUsed, lecsAtmAddrConfigStatus, lecsConfigDirectConnVCType, lecsConfigTblDefaultElanName, lecsElanAccess]

class lecsTokenRingMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 2, 2, 2])
	group = [lecsElanSegmentId, lecsRDConfigElanName, lecsRDConfigLastUsed, lecsRDConfigStatus]

class lecsRedundancyMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 38, 2, 2, 3])
	group = [lecsMasterState, lecsConfigDirectDstType, lecsLesPriority, lecsLesConnState, lecsLesConfigStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
