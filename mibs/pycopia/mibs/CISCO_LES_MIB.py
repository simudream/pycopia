# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Integer32
from LAN_EMULATION_CLIENT_MIB import AtmLaneAddress
from CISCO_SMI import ciscoMgmt
from CISCO_BUS_MIB import CiscoVpiInteger, CiscoVciInteger
from SNMPv2_TC import RowStatus, DisplayString, MacAddress, TimeStamp

class CISCO_LES_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-LES-MIB'
	conformance = 3
	name = 'CISCO-LES-MIB'
	language = 2
	description = ' The MIB module for the management of LANE Service \nin Cisco devices.'

# nodes
class ciscoLesMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39])
	name = 'ciscoLesMIB'

class ciscoLesMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1])
	name = 'ciscoLesMIBObjects'

class les(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1])
	name = 'les'

class leClient(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2])
	name = 'leClient'

class register(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3])
	name = 'register'

class ciscoLesMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2])
	name = 'ciscoLesMIBConformance'

class ciscoLesMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1])
	name = 'ciscoLesMIBGroups'

class ciscoLesMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 2])
	name = 'ciscoLesMIBCompliances'


# macros
# types 
# scalars 
# columns
class lesElanName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class lesIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesAtmAddrSpec(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 3])
	syntaxobject = AtmLaneAddress


class lesAtmAddrMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lesAtmAddrActual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 5])
	syntaxobject = AtmLaneAddress


class lesIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesSubIfNum(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesColocBusAtmAddrSpec(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 8])
	syntaxobject = AtmLaneAddress


class lesColocBusAtmAddrMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lesColocBusAtmAddrActl(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 10])
	syntaxobject = AtmLaneAddress


class lesUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lesLanType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dot3'), Enum(2, 'dot5')]


class lesMaxFrm(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1516, 'dot3'), Enum(4544, 'tr4Mb'), Enum(9234, 'rfc1626'), Enum(18190, 'tr16Mb')]


class lesJoinTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class lesLecsAtmAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 15])
	syntaxobject = AtmLaneAddress


class lesControlDistVpi(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 16])
	syntaxobject = CiscoVpiInteger


class lesControlDistVci(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 17])
	syntaxobject = CiscoVciInteger


class lesOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class lesAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class lesStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lesSegmentID(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesInErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInErrorLastLec(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 2])
	syntaxobject = AtmLaneAddress


class lesInFlushReplies(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInJoinReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesOutJoinFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesJoinLastFailCause(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesJoinLastFailLec(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 7])
	syntaxobject = AtmLaneAddress


class lesOutConfigReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInConfigResps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInConfigFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInRegisReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesOutRegisFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesRegisLastFailCause(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesRegisLastFailLec(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 14])
	syntaxobject = AtmLaneAddress


class lesInUnregReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInLearpUcasts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInLearpBroadcasts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesOutLearpFwd(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInLearpResps(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInNarpReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesInTopolReqs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class lesClientLecid(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesClientAtmAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 2])
	syntaxobject = AtmLaneAddress


class lesClientState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'connected'), Enum(2, 'joinRecv'), Enum(3, 'verify'), Enum(4, 'addLec'), Enum(5, 'busConnect'), Enum(6, 'operational'), Enum(7, 'terminating')]


class lesClientIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesClientControlVpi(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 5])
	syntaxobject = CiscoVpiInteger


class lesClientControlVci(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 6])
	syntaxobject = CiscoVciInteger


class lesClientStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lesMacRegMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class lesMacRegAtmAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 1, 1, 3])
	syntaxobject = AtmLaneAddress


class lesMacRegLecid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesRDRegSegmentId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesRDRegBridgeNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lesRDRegAtmAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 2, 1, 3])
	syntaxobject = AtmLaneAddress


class lesRDRegLecid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class lesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lesElanName, lesIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 1, 1])
	access = 2
	rowstatus = lesStatus
	columns = {'lesElanName': lesElanName, 'lesIndex': lesIndex, 'lesAtmAddrSpec': lesAtmAddrSpec, 'lesAtmAddrMask': lesAtmAddrMask, 'lesAtmAddrActual': lesAtmAddrActual, 'lesIfIndex': lesIfIndex, 'lesSubIfNum': lesSubIfNum, 'lesColocBusAtmAddrSpec': lesColocBusAtmAddrSpec, 'lesColocBusAtmAddrMask': lesColocBusAtmAddrMask, 'lesColocBusAtmAddrActl': lesColocBusAtmAddrActl, 'lesUpTime': lesUpTime, 'lesLanType': lesLanType, 'lesMaxFrm': lesMaxFrm, 'lesJoinTimeout': lesJoinTimeout, 'lesLecsAtmAddr': lesLecsAtmAddr, 'lesControlDistVpi': lesControlDistVpi, 'lesControlDistVci': lesControlDistVci, 'lesOperStatus': lesOperStatus, 'lesAdminStatus': lesAdminStatus, 'lesStatus': lesStatus, 'lesSegmentID': lesSegmentID}


class lesStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lesElanName, lesIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 1, 2, 1])
	access = 2
	columns = {'lesInErrors': lesInErrors, 'lesInErrorLastLec': lesInErrorLastLec, 'lesInFlushReplies': lesInFlushReplies, 'lesInJoinReqs': lesInJoinReqs, 'lesOutJoinFails': lesOutJoinFails, 'lesJoinLastFailCause': lesJoinLastFailCause, 'lesJoinLastFailLec': lesJoinLastFailLec, 'lesOutConfigReqs': lesOutConfigReqs, 'lesInConfigResps': lesInConfigResps, 'lesInConfigFails': lesInConfigFails, 'lesInRegisReqs': lesInRegisReqs, 'lesOutRegisFails': lesOutRegisFails, 'lesRegisLastFailCause': lesRegisLastFailCause, 'lesRegisLastFailLec': lesRegisLastFailLec, 'lesInUnregReqs': lesInUnregReqs, 'lesInLearpUcasts': lesInLearpUcasts, 'lesInLearpBroadcasts': lesInLearpBroadcasts, 'lesOutLearpFwd': lesOutLearpFwd, 'lesInLearpResps': lesInLearpResps, 'lesInNarpReqs': lesInNarpReqs, 'lesInTopolReqs': lesInTopolReqs}


class lesClientEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lesElanName, lesIndex, lesClientLecid], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 2, 1, 1])
	access = 2
	rowstatus = lesClientStatus
	columns = {'lesClientLecid': lesClientLecid, 'lesClientAtmAddr': lesClientAtmAddr, 'lesClientState': lesClientState, 'lesClientIfIndex': lesClientIfIndex, 'lesClientControlVpi': lesClientControlVpi, 'lesClientControlVci': lesClientControlVci, 'lesClientStatus': lesClientStatus}


class lesMacRegEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lesElanName, lesIndex, lesMacRegMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 1, 1])
	access = 2
	columns = {'lesMacRegMacAddress': lesMacRegMacAddress, 'lesMacRegAtmAddr': lesMacRegAtmAddr, 'lesMacRegLecid': lesMacRegLecid}


class lesRDRegEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lesElanName, lesIndex, lesRDRegSegmentId, lesRDRegBridgeNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 1, 3, 2, 1])
	access = 2
	columns = {'lesRDRegSegmentId': lesRDRegSegmentId, 'lesRDRegBridgeNum': lesRDRegBridgeNum, 'lesRDRegAtmAddr': lesRDRegAtmAddr, 'lesRDRegLecid': lesRDRegLecid}


# notifications (traps) 
# groups 
class ciscoLesGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 1])
	group = [lesAtmAddrSpec, lesAtmAddrMask, lesAtmAddrActual, lesIfIndex, lesUpTime, lesLanType, lesMaxFrm, lesJoinTimeout, lesControlDistVpi, lesControlDistVci, lesOperStatus, lesAdminStatus, lesStatus]

class ciscoLesStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 2])
	group = [lesInErrors, lesInErrorLastLec, lesInFlushReplies, lesInJoinReqs, lesOutJoinFails, lesJoinLastFailCause, lesJoinLastFailLec, lesInRegisReqs, lesOutRegisFails, lesRegisLastFailCause, lesRegisLastFailLec, lesInUnregReqs, lesInLearpUcasts, lesInLearpBroadcasts, lesOutLearpFwd, lesInLearpResps, lesInNarpReqs, lesInTopolReqs]

class ciscoLesColocatedGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 3])
	group = [lesColocBusAtmAddrSpec, lesColocBusAtmAddrMask, lesColocBusAtmAddrActl]

class ciscoLesLecsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 4])
	group = [lesLecsAtmAddr, lesOutConfigReqs, lesInConfigResps, lesInConfigFails]

class ciscoLesCntrlDistGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 5])
	group = [lesControlDistVpi, lesControlDistVci]

class ciscoLesSubIfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 6])
	group = [lesSubIfNum]

class ciscoLesClientGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 7])
	group = [lesClientAtmAddr, lesClientState, lesClientIfIndex, lesClientControlVpi, lesClientControlVci, lesClientStatus, lesMacRegAtmAddr, lesMacRegLecid]

class ciscoLesTokenRingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 39, 2, 1, 8])
	group = [lesSegmentID, lesRDRegAtmAddr, lesRDRegLecid]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
