# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from IF_MIB import InterfaceIndexOrZero
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32, Integer32
from MPLS_TC_STD_MIB import MplsLabel, mplsStdMIB
from GMPLS_TC_STD_MIB import GmplsLabelTypeTC, GmplsFreeformLabelTC
from SNMPv2_TC import RowStatus, StorageType
from DIFFSERV_MIB import IndexIntegerNextFree

class GMPLS_LABEL_STD_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/GMPLS-LABEL-STD-MIB'
	conformance = 4
	name = 'GMPLS-LABEL-STD-MIB'
	language = 2
	description = 'Copyright (C) The IETF Trust (2007).  This version of\nthis MIB module is part of RFC 4803; see the RFC itself for\nfull legal notices.\n\n\n\n\nThis MIB module contains managed object definitions for labels\nwithin GMPLS systems as defined in\nGeneralized Multi-Protocol Label Switching (GMPLS) Signaling\nFunctional Description, Berger, L. (Editor), RFC 3471,\nJanuary 2003.'

# nodes
class gmplsLabelStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16])
	name = 'gmplsLabelStdMIB'

class gmplsLabelObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1])
	name = 'gmplsLabelObjects'

class gmplsLabelConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2])
	name = 'gmplsLabelConformance'

class gmplsLabelGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1])
	name = 'gmplsLabelGroups'

class gmplsLabelCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 2])
	name = 'gmplsLabelCompliances'


# macros
# types 
# scalars 
class gmplsLabelIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 1])
	syntaxobject = IndexIntegerNextFree


# columns
class gmplsLabelInterface(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class gmplsLabelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsLabelSubindex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsLabelType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 4])
	syntaxobject = GmplsLabelTypeTC


class gmplsLabelMplsLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 5])
	syntaxobject = MplsLabel


class gmplsLabelPortWavelength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsLabelFreeform(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 7])
	syntaxobject = GmplsFreeformLabelTC


class gmplsLabelSonetSdhSignalIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class gmplsLabelSdhVc(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class gmplsLabelSdhVcBranch(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class gmplsLabelSonetSdhBranch(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class gmplsLabelSonetSdhGroupBranch(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class gmplsLabelWavebandId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsLabelWavebandStart(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsLabelWavebandEnd(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class gmplsLabelStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class gmplsLabelRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class gmplsLabelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([gmplsLabelInterface, gmplsLabelIndex, gmplsLabelSubindex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1])
	access = 2
	rowstatus = gmplsLabelRowStatus
	columns = {'gmplsLabelInterface': gmplsLabelInterface, 'gmplsLabelIndex': gmplsLabelIndex, 'gmplsLabelSubindex': gmplsLabelSubindex, 'gmplsLabelType': gmplsLabelType, 'gmplsLabelMplsLabel': gmplsLabelMplsLabel, 'gmplsLabelPortWavelength': gmplsLabelPortWavelength, 'gmplsLabelFreeform': gmplsLabelFreeform, 'gmplsLabelSonetSdhSignalIndex': gmplsLabelSonetSdhSignalIndex, 'gmplsLabelSdhVc': gmplsLabelSdhVc, 'gmplsLabelSdhVcBranch': gmplsLabelSdhVcBranch, 'gmplsLabelSonetSdhBranch': gmplsLabelSonetSdhBranch, 'gmplsLabelSonetSdhGroupBranch': gmplsLabelSonetSdhGroupBranch, 'gmplsLabelWavebandId': gmplsLabelWavebandId, 'gmplsLabelWavebandStart': gmplsLabelWavebandStart, 'gmplsLabelWavebandEnd': gmplsLabelWavebandEnd, 'gmplsLabelStorageType': gmplsLabelStorageType, 'gmplsLabelRowStatus': gmplsLabelRowStatus}


# notifications (traps) 
# groups 
class gmplsLabelTableGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 1])
	group = [gmplsLabelIndexNext, gmplsLabelType, gmplsLabelStorageType, gmplsLabelRowStatus]

class gmplsLabelPacketGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 2])
	group = [gmplsLabelMplsLabel]

class gmplsLabelPortWavelengthGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 3])
	group = [gmplsLabelPortWavelength]

class gmplsLabelFreeformGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 4])
	group = [gmplsLabelFreeform]

class gmplsLabelSonetSdhGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 5])
	group = [gmplsLabelSonetSdhSignalIndex, gmplsLabelSdhVc, gmplsLabelSdhVcBranch, gmplsLabelSonetSdhBranch, gmplsLabelSonetSdhGroupBranch]

class gmplsLabelWavebandGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 6])
	group = [gmplsLabelWavebandId, gmplsLabelWavebandStart, gmplsLabelWavebandEnd]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
