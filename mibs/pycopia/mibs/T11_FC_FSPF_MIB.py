# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from FC_MGMT_MIB import fcmInstanceIndex, fcmSwitchIndex, FcDomainIdOrZero
from IF_MIB import ifIndex, InterfaceIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, Integer32, Unsigned32, TimeTicks, Gauge32, mib_2
from T11_FC_FABRIC_ADDR_MGR_MIB import t11FamConfigDomainId
from T11_TC_MIB import T11FabricIndex
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, StorageType, TruthValue

class T11_FC_FSPF_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/T11-FC-FSPF-MIB'
	conformance = 5
	name = 'T11-FC-FSPF-MIB'
	language = 2
	description = 'The MIB module for managing the Fabric Shortest Path\nFirst (FSPF) protocol.  FSPF is specified in FC-SW-4.\n\nCopyright (C) The Internet Society (2006).  This version of\nthis MIB module is part of RFC 4626;  see the RFC itself for\nfull legal notices.'

# nodes
class t11FcFspfMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143])
	name = 't11FcFspfMIB'

class t11FspfNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 0])
	name = 't11FspfNotifications'

class t11FspfObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1])
	name = 't11FspfObjects'

class t11FspfConfiguration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1])
	name = 't11FspfConfiguration'

class t11FspfDatabase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2])
	name = 't11FspfDatabase'

class t11FspfConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2])
	name = 't11FspfConformance'

class t11FspfMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 1])
	name = 't11FspfMIBCompliances'

class t11FspfMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 2])
	name = 't11FspfMIBGroups'


# macros
# types 

class T11FspfLsrType(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 255))


class T11FspfLinkType(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 255))


class T11FspfInterfaceState(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'down'), Enum(2, 'init'), Enum(3, 'dbExchange'), Enum(4, 'dbAckwait'), Enum(5, 'dbWait'), Enum(6, 'full')]


class T11FspfLastCreationTime(pycopia.SMI.Basetypes.TimeTicks):
	status = 1

# scalars 
class t11FspfIfPrevNbrState(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 3])
	syntaxobject = T11FspfInterfaceState


class t11FspfLinkNumber(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# columns
class t11FspfFabricIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 1])
	syntaxobject = T11FabricIndex


class t11FspfMinLsArrival(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliSeconds'


class t11FspfMinLsInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliSeconds'


class t11FspfLsRefreshTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Minutes'


class t11FspfMaxAge(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Minutes'


class t11FspfMaxAgeDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfPathComputations(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfChecksumErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfLsrs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class t11FspfCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 10])
	syntaxobject = T11FspfLastCreationTime


class t11FspfAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class t11FspfOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class t11FspfNbrStateChangNotifyEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class t11FspfSetToDefault(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'default'), Enum(2, 'noOp')]


class t11FspfStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class t11FspfIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 1])
	syntaxobject = InterfaceIndex


class t11FspfIfHelloInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class t11FspfIfDeadInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class t11FspfIfRetransmitInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds'


class t11FspfIfInLsuPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfInLsaPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfOutLsuPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfOutLsaPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfOutHelloPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfInHelloPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfRetransmittedLsuPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfInErrorPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class t11FspfIfNbrState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 13])
	syntaxobject = T11FspfInterfaceState


class t11FspfIfNbrDomainId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 14])
	syntaxobject = FcDomainIdOrZero


class t11FspfIfNbrPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfIfAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class t11FspfIfCreateTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 17])
	syntaxobject = T11FspfLastCreationTime


class t11FspfIfSetToDefault(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'default'), Enum(2, 'noOp')]


class t11FspfIfLinkCostFactor(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfIfStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class t11FspfIfRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class t11FspfLsrDomainId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 1])
	syntaxobject = FcDomainIdOrZero


class t11FspfLsrType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 2])
	syntaxobject = T11FspfLsrType


class t11FspfLsrAdvDomainId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 3])
	syntaxobject = FcDomainIdOrZero


class t11FspfLsrAge(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'Seconds'


class t11FspfLsrIncarnationNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfLsrCheckSum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfLsrLinks(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfLinkIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfLinkNbrDomainId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 2])
	syntaxobject = FcDomainIdOrZero


class t11FspfLinkPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfLinkNbrPortIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FspfLinkType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 5])
	syntaxobject = T11FspfLinkType


class t11FspfLinkCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class t11FspfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex, t11FspfFabricIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1])
	access = 2
	columns = {'t11FspfFabricIndex': t11FspfFabricIndex, 't11FspfMinLsArrival': t11FspfMinLsArrival, 't11FspfMinLsInterval': t11FspfMinLsInterval, 't11FspfLsRefreshTime': t11FspfLsRefreshTime, 't11FspfMaxAge': t11FspfMaxAge, 't11FspfMaxAgeDiscards': t11FspfMaxAgeDiscards, 't11FspfPathComputations': t11FspfPathComputations, 't11FspfChecksumErrors': t11FspfChecksumErrors, 't11FspfLsrs': t11FspfLsrs, 't11FspfCreateTime': t11FspfCreateTime, 't11FspfAdminStatus': t11FspfAdminStatus, 't11FspfOperStatus': t11FspfOperStatus, 't11FspfNbrStateChangNotifyEnable': t11FspfNbrStateChangNotifyEnable, 't11FspfSetToDefault': t11FspfSetToDefault, 't11FspfStorageType': t11FspfStorageType}


class t11FspfIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex, t11FspfFabricIndex, t11FspfIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1])
	access = 2
	rowstatus = t11FspfIfRowStatus
	columns = {'t11FspfIfIndex': t11FspfIfIndex, 't11FspfIfHelloInterval': t11FspfIfHelloInterval, 't11FspfIfDeadInterval': t11FspfIfDeadInterval, 't11FspfIfRetransmitInterval': t11FspfIfRetransmitInterval, 't11FspfIfInLsuPkts': t11FspfIfInLsuPkts, 't11FspfIfInLsaPkts': t11FspfIfInLsaPkts, 't11FspfIfOutLsuPkts': t11FspfIfOutLsuPkts, 't11FspfIfOutLsaPkts': t11FspfIfOutLsaPkts, 't11FspfIfOutHelloPkts': t11FspfIfOutHelloPkts, 't11FspfIfInHelloPkts': t11FspfIfInHelloPkts, 't11FspfIfRetransmittedLsuPkts': t11FspfIfRetransmittedLsuPkts, 't11FspfIfInErrorPkts': t11FspfIfInErrorPkts, 't11FspfIfNbrState': t11FspfIfNbrState, 't11FspfIfNbrDomainId': t11FspfIfNbrDomainId, 't11FspfIfNbrPortIndex': t11FspfIfNbrPortIndex, 't11FspfIfAdminStatus': t11FspfIfAdminStatus, 't11FspfIfCreateTime': t11FspfIfCreateTime, 't11FspfIfSetToDefault': t11FspfIfSetToDefault, 't11FspfIfLinkCostFactor': t11FspfIfLinkCostFactor, 't11FspfIfStorageType': t11FspfIfStorageType, 't11FspfIfRowStatus': t11FspfIfRowStatus}


class t11FspfLsrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex, t11FspfFabricIndex, t11FspfLsrDomainId, t11FspfLsrType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1])
	access = 2
	columns = {'t11FspfLsrDomainId': t11FspfLsrDomainId, 't11FspfLsrType': t11FspfLsrType, 't11FspfLsrAdvDomainId': t11FspfLsrAdvDomainId, 't11FspfLsrAge': t11FspfLsrAge, 't11FspfLsrIncarnationNumber': t11FspfLsrIncarnationNumber, 't11FspfLsrCheckSum': t11FspfLsrCheckSum, 't11FspfLsrLinks': t11FspfLsrLinks}


class t11FspfLinkEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex, t11FspfFabricIndex, t11FspfLsrDomainId, t11FspfLsrType, t11FspfLinkIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1])
	access = 2
	columns = {'t11FspfLinkIndex': t11FspfLinkIndex, 't11FspfLinkNbrDomainId': t11FspfLinkNbrDomainId, 't11FspfLinkPortIndex': t11FspfLinkPortIndex, 't11FspfLinkNbrPortIndex': t11FspfLinkNbrPortIndex, 't11FspfLinkType': t11FspfLinkType, 't11FspfLinkCost': t11FspfLinkCost}


# notifications (traps) 
class t11FspfNbrStateChangNotify(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 0, 1])

# groups 
class t11FspfGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 2, 1])
	group = [t11FspfMinLsArrival, t11FspfMinLsInterval, t11FspfLsRefreshTime, t11FspfMaxAge, t11FspfMaxAgeDiscards, t11FspfPathComputations, t11FspfChecksumErrors, t11FspfLsrs, t11FspfCreateTime, t11FspfAdminStatus, t11FspfOperStatus, t11FspfNbrStateChangNotifyEnable, t11FspfSetToDefault, t11FspfStorageType]

class t11FspfIfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 2, 2])
	group = [t11FspfIfHelloInterval, t11FspfIfDeadInterval, t11FspfIfRetransmitInterval, t11FspfIfNbrState, t11FspfIfNbrDomainId, t11FspfIfNbrPortIndex, t11FspfIfAdminStatus, t11FspfIfCreateTime, t11FspfIfSetToDefault, t11FspfIfLinkCostFactor, t11FspfIfRowStatus, t11FspfIfStorageType, t11FspfIfPrevNbrState]

class t11FspfIfCounterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 2, 3])
	group = [t11FspfIfInLsuPkts, t11FspfIfInLsaPkts, t11FspfIfOutLsuPkts, t11FspfIfOutLsaPkts, t11FspfIfOutHelloPkts, t11FspfIfInHelloPkts, t11FspfIfRetransmittedLsuPkts, t11FspfIfInErrorPkts]

class t11FspfDatabaseGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 2, 4])
	group = [t11FspfLsrAdvDomainId, t11FspfLsrAge, t11FspfLsrIncarnationNumber, t11FspfLsrCheckSum, t11FspfLsrLinks, t11FspfLinkNbrDomainId, t11FspfLinkPortIndex, t11FspfLinkNbrPortIndex, t11FspfLinkType, t11FspfLinkCost, t11FspfLinkNumber]

class t11FspfNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 143, 2, 2, 5])
	group = [t11FspfNbrStateChangNotify]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
