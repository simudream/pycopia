# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Unsigned32, Counter32, mib_2
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetAddressPrefixLength
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TruthValue, TimeStamp
from DIFFSERV_MIB import IndexInteger, IndexIntegerNextFree

class ISIS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ISIS-MIB'
	conformance = 5
	name = 'ISIS-MIB'
	language = 2
	description = 'This document describes a management information base for\nthe IS-IS Routing protocol, as described in ISO 10589,\nwhen it is used to construct routing tables for IP\nnetworks, as described in RFC 1195.\n\nThis document is based on a 1994 IETF document by Chris\nGunner.  This version has been modified to include\ncurrent syntax, to exclude portions of the protocol that\nare not relevant to IP, and to add management support for\ncurrent practice.\n\n\n\n\n\n\nCopyright (C) The Internet Society (2006).  This version\nof this MIB module is part of RFC 4444; see the RFC\nitself for full legal notices.'

# nodes
class isisMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138])
	name = 'isisMIB'

class isisNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0])
	name = 'isisNotifications'

class isisObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1])
	name = 'isisObjects'

class isisSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1])
	name = 'isisSystem'

class isisSysObject(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1])
	name = 'isisSysObject'

class isisSysLevel(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2])
	name = 'isisSysLevel'

class isisCirc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3])
	name = 'isisCirc'

class isisCircLevelValues(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4])
	name = 'isisCircLevelValues'

class isisCounters(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5])
	name = 'isisCounters'

class isisISAdj(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6])
	name = 'isisISAdj'

class isisReachAddr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7])
	name = 'isisReachAddr'

class isisIPReachAddr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8])
	name = 'isisIPReachAddr'

class isisLSPDataBase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9])
	name = 'isisLSPDataBase'

class isisNotification(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10])
	name = 'isisNotification'

class isisNotificationEntry(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1])
	name = 'isisNotificationEntry'

class isisConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2])
	name = 'isisConformance'

class isisCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 1])
	name = 'isisCompliances'

class isisGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2])
	name = 'isisGroups'


# macros
# types 

class IsisOSINSAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 20))


class IsisSystemID(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(6, 6))


class IsisLinkStatePDUID(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(8, 8))


class IsisAdminState(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'on'), Enum(2, 'off')]


class IsisLSPBuffSize(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(512, 16000))
	format = 'd'


class IsisLevelState(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'off'), Enum(2, 'on'), Enum(3, 'waiting'), Enum(4, 'overloaded')]


class IsisSupportedProtocol(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(129, 'iso8473'), Enum(142, 'ipV6'), Enum(204, 'ip')]


class IsisDefaultMetric(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 63))
	format = 'd'


class IsisWideMetric(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 16777215))
	format = 'd'


class IsisFullMetric(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	format = 'd'


class IsisMetricType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'internal'), Enum(2, 'external')]


class IsisMetricStyle(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'narrow'), Enum(2, 'wide'), Enum(3, 'both')]


class IsisISLevel(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'area'), Enum(2, 'domain')]


class IsisLevel(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'level1'), Enum(2, 'level2'), Enum(3, 'level1and2')]


class IsisPDUHeader(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 64))


class IsisCircuitID(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 0), Range(7, 7))


class IsisISPriority(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 127))
	format = 'd'


class IsisUnsigned16TC(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 65535))
	format = 'd'


class IsisUnsigned8TC(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 255))
	format = 'd'

# scalars 
class isisSysVersion(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'unknown'), Enum(1, 'one')]


class isisSysLevelType(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 2])
	syntaxobject = IsisLevel


class isisSysID(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 3])
	syntaxobject = IsisSystemID


class isisSysMaxPathSplits(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisSysMaxLSPGenInt(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class isisSysPollESHelloRate(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 6])
	syntaxobject = IsisUnsigned16TC
	access = 5
	units = 'seconds'


class isisSysWaitTime(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 7])
	syntaxobject = IsisUnsigned16TC
	access = 5
	units = 'seconds'


class isisSysAdminState(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 8])
	syntaxobject = IsisAdminState


class isisSysL2toL1Leaking(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisSysMaxAge(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 10])
	syntaxobject = IsisUnsigned16TC
	access = 5
	units = 'seconds'


class isisSysReceiveLSPBufferSize(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 11])
	syntaxobject = IsisUnsigned16TC
	access = 5
	units = 'bytes'


class isisSysProtSupported(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class isisSysNotificationEnable(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisNextCircIndex(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 1])
	syntaxobject = IndexIntegerNextFree


class isisNotificationSysLevelIndex(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 1])
	syntaxobject = IsisLevel


class isisNotificationCircIfIndex(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisPduLspId(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 3])
	syntaxobject = IsisLinkStatePDUID


class isisPduFragment(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 4])
	syntaxobject = IsisPDUHeader


class isisPduFieldLen(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 5])
	syntaxobject = IsisUnsigned8TC


class isisPduMaxAreaAddress(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 6])
	syntaxobject = IsisUnsigned8TC


class isisPduProtocolVersion(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 7])
	syntaxobject = IsisUnsigned8TC


class isisPduLspSize(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisPduOriginatingBufferSize(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 9])
	syntaxobject = IsisUnsigned16TC


class isisPduBufferSize(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 10])
	syntaxobject = IsisUnsigned16TC


class isisPduProtocolsSupported(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class isisAdjState(ScalarObject):
	status = 1
	access = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(2, 'initializing'), Enum(3, 'up'), Enum(4, 'failed')]


class isisErrorOffset(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisErrorTLVType(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisNotificationAreaAddress(ScalarObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 15])
	syntaxobject = IsisOSINSAddress


# columns
class isisManAreaAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 2, 1, 1])
	syntaxobject = IsisOSINSAddress


class isisManAreaAddrExistState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isisAreaAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 3, 1, 1])
	syntaxobject = IsisOSINSAddress


class isisSummAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 1])
	syntaxobject = InetAddressType


class isisSummAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 2])
	syntaxobject = InetAddress


class isisSummAddrPrefixLen(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 3])
	syntaxobject = InetAddressPrefixLength


class isisSummAddrExistState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isisSummAddrMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 5])
	syntaxobject = IsisDefaultMetric


class isisSummAddrFullMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 6])
	syntaxobject = IsisFullMetric


class isisRedistributeAddrType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 1])
	syntaxobject = InetAddressType


class isisRedistributeAddrAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 2])
	syntaxobject = InetAddress


class isisRedistributeAddrPrefixLen(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 3])
	syntaxobject = InetAddressPrefixLength


class isisRedistributeAddrExistState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isisRouterSysID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 1])
	syntaxobject = IsisSystemID


class isisRouterLevel(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 2])
	syntaxobject = IsisISLevel


class isisRouterHostName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 3])
	syntaxobject = SnmpAdminString


class isisRouterID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisSysLevelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 1])
	syntaxobject = IsisISLevel


class isisSysLevelOrigLSPBuffSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 2])
	syntaxobject = IsisLSPBuffSize


class isisSysLevelMinLSPGenInt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 3])
	syntaxobject = IsisUnsigned16TC
	access = 5
	units = 'seconds'


class isisSysLevelState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 4])
	syntaxobject = IsisLevelState


class isisSysLevelSetOverload(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisSysLevelSetOverloadUntil(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'Seconds until clearing manually set Overload Bit'


class isisSysLevelMetricStyle(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 7])
	syntaxobject = IsisMetricStyle


class isisSysLevelSPFConsiders(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 8])
	syntaxobject = IsisMetricStyle


class isisSysLevelTEEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisCircIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 1])
	syntaxobject = IndexInteger


class isisCircIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 2])
	syntaxobject = InterfaceIndex


class isisCircAdminState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 3])
	syntaxobject = IsisAdminState


class isisCircExistState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isisCircType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'broadcast'), Enum(2, 'ptToPt'), Enum(3, 'staticIn'), Enum(4, 'staticOut'), Enum(5, 'dA')]


class isisCircExtDomain(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisCircLevelType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 7])
	syntaxobject = IsisLevel


class isisCircPassiveCircuit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisCircMeshGroupEnabled(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'blocked'), Enum(3, 'set')]


class isisCircMeshGroup(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisCircSmallHellos(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisCircLastUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class isisCirc3WayEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisCircExtendedCircID(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisCircLevelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 1])
	syntaxobject = IsisISLevel


class isisCircLevelMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 2])
	syntaxobject = IsisDefaultMetric


class isisCircLevelWideMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 3])
	syntaxobject = IsisWideMetric


class isisCircLevelISPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 4])
	syntaxobject = IsisISPriority


class isisCircLevelIDOctet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisCircLevelID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 6])
	syntaxobject = IsisCircuitID


class isisCircLevelDesIS(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 7])
	syntaxobject = IsisCircuitID


class isisCircLevelHelloMultiplier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisCircLevelHelloTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class isisCircLevelDRHelloTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'milliseconds'


class isisCircLevelLSPThrottle(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 11])
	syntaxobject = IsisUnsigned16TC
	access = 5
	units = 'milliseconds'


class isisCircLevelMinLSPRetransInt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class isisCircLevelCSNPInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class isisCircLevelPartSNPInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class isisSysStatLevel(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 1])
	syntaxobject = IsisISLevel


class isisSysStatCorrLSPs(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of corrupted in-memory frames'


class isisSysStatAuthTypeFails(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of frames with authentication type mismatches'


class isisSysStatAuthFails(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of frames with authentication key failures'


class isisSysStatLSPDbaseOloads(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatManAddrDropFromAreas(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatAttmptToExMaxSeqNums(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatSeqNumSkips(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatOwnLSPPurges(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatIDFieldLenMismatches(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of frames with ID length mismatches'


class isisSysStatPartChanges(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatSPFRuns(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisSysStatLSPErrors(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of frames with errors that we have received'


class isisCircuitType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lanlevel1'), Enum(2, 'lanlevel2'), Enum(3, 'p2pcircuit')]


class isisCircAdjChanges(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisCircNumAdj(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisCircInitFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisCircRejAdjs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisCircIDFieldLenMismatches(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of frames with ID field length mismatch'


class isisCircMaxAreaAddrMismatches(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisCircAuthTypeFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisCircAuthFails(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisCircLANDesISChanges(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class isisPacketCountLevel(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 1])
	syntaxobject = IsisISLevel


class isisPacketCountDirection(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sending'), Enum(2, 'receiving')]


class isisPacketCountIIHello(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of IS-IS Hellos frames seen in this direction\nat this level'


class isisPacketCountISHello(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of ES-IS frames seen in this direction at\nthis level.'


class isisPacketCountESHello(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of ES Hello frames seen in this direction at\nthis level'


class isisPacketCountLSP(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of IS-IS LSP frames seen in this direction at\nthis level'


class isisPacketCountCSNP(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of IS-IS CSNP frames seen in this direction at\nthis level'


class isisPacketCountPSNP(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of IS-IS PSNP frames seen in this direction at\nthis level'


class isisPacketCountUnknown(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'Number of unknown IS-IS frames seen at this level'


class isisISAdjIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisISAdjState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'down'), Enum(2, 'initializing'), Enum(3, 'up'), Enum(4, 'failed')]


class isisISAdj3WayState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'up'), Enum(1, 'initializing'), Enum(2, 'down'), Enum(3, 'failed')]


class isisISAdjNeighSNPAAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 4])
	syntaxobject = IsisOSINSAddress


class isisISAdjNeighSysType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'l1IntermediateSystem'), Enum(2, 'l2IntermediateSystem'), Enum(3, 'l1L2IntermediateSystem'), Enum(4, 'unknown')]


class isisISAdjNeighSysID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 6])
	syntaxobject = IsisSystemID


class isisISAdjNbrExtendedCircID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisISAdjUsage(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 8])
	syntaxobject = IsisLevel


class isisISAdjHoldTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 9])
	syntaxobject = IsisUnsigned16TC
	access = 4
	units = 'seconds'


class isisISAdjNeighPriority(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 10])
	syntaxobject = IsisISPriority


class isisISAdjLastUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class isisISAdjAreaAddrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisISAdjAreaAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 2, 1, 2])
	syntaxobject = IsisOSINSAddress


class isisISAdjIPAddrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisISAdjIPAddrType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1, 2])
	syntaxobject = InetAddressType


class isisISAdjIPAddrAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1, 3])
	syntaxobject = InetAddress


class isisISAdjProtSuppProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 4, 1, 1])
	syntaxobject = IsisSupportedProtocol


class isisRAIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisRAExistState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isisRAAdminState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 3])
	syntaxobject = IsisAdminState


class isisRAAddrPrefix(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 4])
	syntaxobject = IsisOSINSAddress


class isisRAMapType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'explicit'), Enum(3, 'extractIDI'), Enum(4, 'extractDSP')]


class isisRAMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 6])
	syntaxobject = IsisDefaultMetric


class isisRAMetricType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 7])
	syntaxobject = IsisMetricType


class isisRASNPAAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 8])
	syntaxobject = IsisOSINSAddress


class isisRASNPAMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 9])
	syntaxobject = IsisOSINSAddress


class isisRASNPAPrefix(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 10])
	syntaxobject = IsisOSINSAddress


class isisRAType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'manual'), Enum(2, 'automatic')]


class isisIPRADestType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 1])
	syntaxobject = InetAddressType


class isisIPRADest(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 2])
	syntaxobject = InetAddress


class isisIPRADestPrefixLen(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 3])
	syntaxobject = InetAddressPrefixLength


class isisIPRANextHopIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisIPRANextHopType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 5])
	syntaxobject = InetAddressType


class isisIPRANextHop(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 6])
	syntaxobject = InetAddress


class isisIPRAType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'manual'), Enum(2, 'automatic')]


class isisIPRAExistState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class isisIPRAAdminState(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 9])
	syntaxobject = IsisAdminState


class isisIPRAMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 10])
	syntaxobject = IsisDefaultMetric


class isisIPRAMetricType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 11])
	syntaxobject = IsisMetricType


class isisIPRAFullMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 12])
	syntaxobject = IsisFullMetric


class isisIPRASNPAAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 13])
	syntaxobject = IsisOSINSAddress


class isisIPRASourceType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'direct'), Enum(3, 'ospfv2'), Enum(4, 'ospfv3'), Enum(5, 'isis'), Enum(6, 'rip'), Enum(7, 'igrp'), Enum(8, 'eigrp'), Enum(9, 'bgp'), Enum(10, 'other')]


class isisLSPLevel(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 1])
	syntaxobject = IsisISLevel


class isisLSPID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 2])
	syntaxobject = IsisLinkStatePDUID


class isisLSPSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisLSPZeroLife(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class isisLSPChecksum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 5])
	syntaxobject = IsisUnsigned16TC


class isisLSPLifetimeRemain(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 6])
	syntaxobject = IsisUnsigned16TC
	access = 4
	units = 'seconds'


class isisLSPPDULength(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 7])
	syntaxobject = IsisUnsigned16TC


class isisLSPAttributes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 8])
	syntaxobject = IsisUnsigned8TC


class isisLSPTLVIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisLSPTLVSeq(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class isisLSPTLVChecksum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 3])
	syntaxobject = IsisUnsigned16TC


class isisLSPTLVType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 4])
	syntaxobject = IsisUnsigned8TC


class isisLSPTLVLen(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 5])
	syntaxobject = IsisUnsigned8TC


class isisLSPTLVValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


# rows 
class isisManAreaAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisManAreaAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 2, 1])
	access = 2
	rowstatus = isisManAreaAddrExistState
	columns = {'isisManAreaAddr': isisManAreaAddr, 'isisManAreaAddrExistState': isisManAreaAddrExistState}


class isisAreaAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisAreaAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 3, 1])
	access = 2
	columns = {'isisAreaAddr': isisAreaAddr}


class isisSummAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisSummAddressType, isisSummAddress, isisSummAddrPrefixLen], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1])
	access = 2
	rowstatus = isisSummAddrExistState
	columns = {'isisSummAddressType': isisSummAddressType, 'isisSummAddress': isisSummAddress, 'isisSummAddrPrefixLen': isisSummAddrPrefixLen, 'isisSummAddrExistState': isisSummAddrExistState, 'isisSummAddrMetric': isisSummAddrMetric, 'isisSummAddrFullMetric': isisSummAddrFullMetric}


class isisRedistributeAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisRedistributeAddrType, isisRedistributeAddrAddress, isisRedistributeAddrPrefixLen], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1])
	access = 2
	rowstatus = isisRedistributeAddrExistState
	columns = {'isisRedistributeAddrType': isisRedistributeAddrType, 'isisRedistributeAddrAddress': isisRedistributeAddrAddress, 'isisRedistributeAddrPrefixLen': isisRedistributeAddrPrefixLen, 'isisRedistributeAddrExistState': isisRedistributeAddrExistState}


class isisRouterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisRouterSysID, isisRouterLevel], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1])
	access = 2
	columns = {'isisRouterSysID': isisRouterSysID, 'isisRouterLevel': isisRouterLevel, 'isisRouterHostName': isisRouterHostName, 'isisRouterID': isisRouterID}


class isisSysLevelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisSysLevelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1])
	access = 2
	columns = {'isisSysLevelIndex': isisSysLevelIndex, 'isisSysLevelOrigLSPBuffSize': isisSysLevelOrigLSPBuffSize, 'isisSysLevelMinLSPGenInt': isisSysLevelMinLSPGenInt, 'isisSysLevelState': isisSysLevelState, 'isisSysLevelSetOverload': isisSysLevelSetOverload, 'isisSysLevelSetOverloadUntil': isisSysLevelSetOverloadUntil, 'isisSysLevelMetricStyle': isisSysLevelMetricStyle, 'isisSysLevelSPFConsiders': isisSysLevelSPFConsiders, 'isisSysLevelTEEnabled': isisSysLevelTEEnabled}


class isisCircEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1])
	access = 2
	rowstatus = isisCircExistState
	columns = {'isisCircIndex': isisCircIndex, 'isisCircIfIndex': isisCircIfIndex, 'isisCircAdminState': isisCircAdminState, 'isisCircExistState': isisCircExistState, 'isisCircType': isisCircType, 'isisCircExtDomain': isisCircExtDomain, 'isisCircLevelType': isisCircLevelType, 'isisCircPassiveCircuit': isisCircPassiveCircuit, 'isisCircMeshGroupEnabled': isisCircMeshGroupEnabled, 'isisCircMeshGroup': isisCircMeshGroup, 'isisCircSmallHellos': isisCircSmallHellos, 'isisCircLastUpTime': isisCircLastUpTime, 'isisCirc3WayEnabled': isisCirc3WayEnabled, 'isisCircExtendedCircID': isisCircExtendedCircID}


class isisCircLevelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisCircLevelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1])
	access = 2
	columns = {'isisCircLevelIndex': isisCircLevelIndex, 'isisCircLevelMetric': isisCircLevelMetric, 'isisCircLevelWideMetric': isisCircLevelWideMetric, 'isisCircLevelISPriority': isisCircLevelISPriority, 'isisCircLevelIDOctet': isisCircLevelIDOctet, 'isisCircLevelID': isisCircLevelID, 'isisCircLevelDesIS': isisCircLevelDesIS, 'isisCircLevelHelloMultiplier': isisCircLevelHelloMultiplier, 'isisCircLevelHelloTimer': isisCircLevelHelloTimer, 'isisCircLevelDRHelloTimer': isisCircLevelDRHelloTimer, 'isisCircLevelLSPThrottle': isisCircLevelLSPThrottle, 'isisCircLevelMinLSPRetransInt': isisCircLevelMinLSPRetransInt, 'isisCircLevelCSNPInterval': isisCircLevelCSNPInterval, 'isisCircLevelPartSNPInterval': isisCircLevelPartSNPInterval}


class isisSystemCounterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisSysStatLevel], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1])
	access = 2
	columns = {'isisSysStatLevel': isisSysStatLevel, 'isisSysStatCorrLSPs': isisSysStatCorrLSPs, 'isisSysStatAuthTypeFails': isisSysStatAuthTypeFails, 'isisSysStatAuthFails': isisSysStatAuthFails, 'isisSysStatLSPDbaseOloads': isisSysStatLSPDbaseOloads, 'isisSysStatManAddrDropFromAreas': isisSysStatManAddrDropFromAreas, 'isisSysStatAttmptToExMaxSeqNums': isisSysStatAttmptToExMaxSeqNums, 'isisSysStatSeqNumSkips': isisSysStatSeqNumSkips, 'isisSysStatOwnLSPPurges': isisSysStatOwnLSPPurges, 'isisSysStatIDFieldLenMismatches': isisSysStatIDFieldLenMismatches, 'isisSysStatPartChanges': isisSysStatPartChanges, 'isisSysStatSPFRuns': isisSysStatSPFRuns, 'isisSysStatLSPErrors': isisSysStatLSPErrors}


class isisCircuitCounterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisCircuitType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1])
	access = 2
	columns = {'isisCircuitType': isisCircuitType, 'isisCircAdjChanges': isisCircAdjChanges, 'isisCircNumAdj': isisCircNumAdj, 'isisCircInitFails': isisCircInitFails, 'isisCircRejAdjs': isisCircRejAdjs, 'isisCircIDFieldLenMismatches': isisCircIDFieldLenMismatches, 'isisCircMaxAreaAddrMismatches': isisCircMaxAreaAddrMismatches, 'isisCircAuthTypeFails': isisCircAuthTypeFails, 'isisCircAuthFails': isisCircAuthFails, 'isisCircLANDesISChanges': isisCircLANDesISChanges}


class isisPacketCounterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisPacketCountLevel, isisPacketCountDirection], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1])
	access = 2
	columns = {'isisPacketCountLevel': isisPacketCountLevel, 'isisPacketCountDirection': isisPacketCountDirection, 'isisPacketCountIIHello': isisPacketCountIIHello, 'isisPacketCountISHello': isisPacketCountISHello, 'isisPacketCountESHello': isisPacketCountESHello, 'isisPacketCountLSP': isisPacketCountLSP, 'isisPacketCountCSNP': isisPacketCountCSNP, 'isisPacketCountPSNP': isisPacketCountPSNP, 'isisPacketCountUnknown': isisPacketCountUnknown}


class isisISAdjEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisISAdjIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1])
	access = 2
	columns = {'isisISAdjIndex': isisISAdjIndex, 'isisISAdjState': isisISAdjState, 'isisISAdj3WayState': isisISAdj3WayState, 'isisISAdjNeighSNPAAddress': isisISAdjNeighSNPAAddress, 'isisISAdjNeighSysType': isisISAdjNeighSysType, 'isisISAdjNeighSysID': isisISAdjNeighSysID, 'isisISAdjNbrExtendedCircID': isisISAdjNbrExtendedCircID, 'isisISAdjUsage': isisISAdjUsage, 'isisISAdjHoldTimer': isisISAdjHoldTimer, 'isisISAdjNeighPriority': isisISAdjNeighPriority, 'isisISAdjLastUpTime': isisISAdjLastUpTime}


class isisISAdjAreaAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisISAdjIndex, isisISAdjAreaAddrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 2, 1])
	access = 2
	columns = {'isisISAdjAreaAddrIndex': isisISAdjAreaAddrIndex, 'isisISAdjAreaAddress': isisISAdjAreaAddress}


class isisISAdjIPAddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisISAdjIndex, isisISAdjIPAddrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1])
	access = 2
	columns = {'isisISAdjIPAddrIndex': isisISAdjIPAddrIndex, 'isisISAdjIPAddrType': isisISAdjIPAddrType, 'isisISAdjIPAddrAddress': isisISAdjIPAddrAddress}


class isisISAdjProtSuppEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisISAdjIndex, isisISAdjProtSuppProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 6, 4, 1])
	access = 2
	columns = {'isisISAdjProtSuppProtocol': isisISAdjProtSuppProtocol}


class isisRAEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisCircIndex, isisRAIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1])
	access = 2
	rowstatus = isisRAExistState
	columns = {'isisRAIndex': isisRAIndex, 'isisRAExistState': isisRAExistState, 'isisRAAdminState': isisRAAdminState, 'isisRAAddrPrefix': isisRAAddrPrefix, 'isisRAMapType': isisRAMapType, 'isisRAMetric': isisRAMetric, 'isisRAMetricType': isisRAMetricType, 'isisRASNPAAddress': isisRASNPAAddress, 'isisRASNPAMask': isisRASNPAMask, 'isisRASNPAPrefix': isisRASNPAPrefix, 'isisRAType': isisRAType}


class isisIPRAEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisSysLevelIndex, isisIPRADestType, isisIPRADest, isisIPRADestPrefixLen, isisIPRANextHopIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1])
	access = 2
	rowstatus = isisIPRAExistState
	columns = {'isisIPRADestType': isisIPRADestType, 'isisIPRADest': isisIPRADest, 'isisIPRADestPrefixLen': isisIPRADestPrefixLen, 'isisIPRANextHopIndex': isisIPRANextHopIndex, 'isisIPRANextHopType': isisIPRANextHopType, 'isisIPRANextHop': isisIPRANextHop, 'isisIPRAType': isisIPRAType, 'isisIPRAExistState': isisIPRAExistState, 'isisIPRAAdminState': isisIPRAAdminState, 'isisIPRAMetric': isisIPRAMetric, 'isisIPRAMetricType': isisIPRAMetricType, 'isisIPRAFullMetric': isisIPRAFullMetric, 'isisIPRASNPAAddress': isisIPRASNPAAddress, 'isisIPRASourceType': isisIPRASourceType}


class isisLSPSummaryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisLSPLevel, isisLSPID], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1])
	access = 2
	columns = {'isisLSPLevel': isisLSPLevel, 'isisLSPID': isisLSPID, 'isisLSPSeq': isisLSPSeq, 'isisLSPZeroLife': isisLSPZeroLife, 'isisLSPChecksum': isisLSPChecksum, 'isisLSPLifetimeRemain': isisLSPLifetimeRemain, 'isisLSPPDULength': isisLSPPDULength, 'isisLSPAttributes': isisLSPAttributes}


class isisLSPTLVEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([isisLSPLevel, isisLSPID, isisLSPTLVIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1])
	access = 2
	columns = {'isisLSPTLVIndex': isisLSPTLVIndex, 'isisLSPTLVSeq': isisLSPTLVSeq, 'isisLSPTLVChecksum': isisLSPTLVChecksum, 'isisLSPTLVType': isisLSPTLVType, 'isisLSPTLVLen': isisLSPTLVLen, 'isisLSPTLVValue': isisLSPTLVValue}


# notifications (traps) 
class isisDatabaseOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 1])

class isisManualAddressDrops(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 2])

class isisCorruptedLSPDetected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 3])

class isisAttemptToExceedMaxSequence(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 4])

class isisIDLenMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 5])

class isisMaxAreaAddressesMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 6])

class isisOwnLSPPurge(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 7])

class isisSequenceNumberSkip(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 8])

class isisAuthenticationTypeFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 9])

class isisAuthenticationFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 10])

class isisVersionSkew(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 11])

class isisAreaMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 12])

class isisRejectedAdjacency(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 13])

class isisLSPTooLargeToPropagate(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 14])

class isisOrigLSPBuffSizeMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 15])

class isisProtocolsSupportedMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 16])

class isisAdjacencyChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 17])

class isisLSPErrorDetected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 0, 18])

# groups 
class isisSystemGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 1])
	group = [isisSysVersion, isisSysLevelType, isisSysID, isisSysMaxPathSplits, isisSysMaxLSPGenInt, isisSysPollESHelloRate, isisSysWaitTime, isisSysAdminState, isisSysL2toL1Leaking, isisSysMaxAge, isisSysProtSupported, isisSysNotificationEnable, isisManAreaAddrExistState, isisSysLevelOrigLSPBuffSize, isisSysLevelMinLSPGenInt, isisSysLevelState, isisSysLevelSetOverload, isisSysLevelSetOverloadUntil, isisSysLevelMetricStyle, isisSysLevelSPFConsiders, isisSysLevelTEEnabled, isisSysReceiveLSPBufferSize, isisSummAddrExistState, isisSummAddrMetric, isisAreaAddr, isisSummAddrFullMetric, isisRedistributeAddrExistState, isisRouterHostName, isisRouterID, isisSysStatCorrLSPs, isisSysStatLSPDbaseOloads, isisSysStatManAddrDropFromAreas, isisSysStatAttmptToExMaxSeqNums, isisSysStatSeqNumSkips, isisSysStatOwnLSPPurges, isisSysStatIDFieldLenMismatches, isisSysStatPartChanges, isisSysStatSPFRuns, isisSysStatAuthTypeFails, isisSysStatAuthFails, isisSysStatLSPErrors]

class isisCircuitGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 2])
	group = [isisNextCircIndex, isisCircAdminState, isisCircExistState, isisCircType, isisCircExtDomain, isisCircLevelType, isisCircAdjChanges, isisCircNumAdj, isisCircInitFails, isisCircRejAdjs, isisCircIDFieldLenMismatches, isisCircMaxAreaAddrMismatches, isisCircAuthTypeFails, isisCircAuthFails, isisCircLANDesISChanges, isisCircPassiveCircuit, isisCircMeshGroupEnabled, isisCircMeshGroup, isisCircSmallHellos, isisCircLastUpTime, isisCirc3WayEnabled, isisCircExtendedCircID, isisCircIfIndex, isisCircLevelMetric, isisCircLevelWideMetric, isisCircLevelISPriority, isisCircLevelIDOctet, isisCircLevelID, isisCircLevelDesIS, isisCircLevelHelloMultiplier, isisCircLevelHelloTimer, isisCircLevelDRHelloTimer, isisCircLevelLSPThrottle, isisCircLevelMinLSPRetransInt, isisCircLevelCSNPInterval, isisCircLevelPartSNPInterval]

class isisISAdjGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 3])
	group = [isisISAdjState, isisISAdj3WayState, isisISAdjNeighSNPAAddress, isisISAdjNeighSysType, isisISAdjNeighSysID, isisISAdjNbrExtendedCircID, isisISAdjUsage, isisISAdjHoldTimer, isisISAdjNeighPriority, isisISAdjLastUpTime, isisISAdjAreaAddress, isisISAdjIPAddrType, isisISAdjIPAddrAddress, isisISAdjProtSuppProtocol]

class isisNotificationObjectGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 4])
	group = [isisNotificationSysLevelIndex, isisNotificationCircIfIndex, isisPduLspId, isisPduFragment, isisPduFieldLen, isisPduMaxAreaAddress, isisPduProtocolVersion, isisPduLspSize, isisPduOriginatingBufferSize, isisPduBufferSize, isisPduProtocolsSupported, isisAdjState, isisErrorOffset, isisErrorTLVType, isisNotificationAreaAddress]

class isisNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 5])
	group = [isisDatabaseOverload, isisManualAddressDrops, isisCorruptedLSPDetected, isisAttemptToExceedMaxSequence, isisIDLenMismatch, isisMaxAreaAddressesMismatch, isisOwnLSPPurge, isisSequenceNumberSkip, isisAuthenticationTypeFailure, isisAuthenticationFailure, isisVersionSkew, isisAreaMismatch, isisRejectedAdjacency, isisLSPTooLargeToPropagate, isisOrigLSPBuffSizeMismatch, isisProtocolsSupportedMismatch, isisAdjacencyChange, isisLSPErrorDetected]

class isisISPDUCounterGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 6])
	group = [isisPacketCountIIHello, isisPacketCountISHello, isisPacketCountESHello, isisPacketCountLSP, isisPacketCountCSNP, isisPacketCountPSNP, isisPacketCountUnknown]

class isisRATableGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 7])
	group = [isisRAExistState, isisRAAdminState, isisRAAddrPrefix, isisRAMapType, isisRAMetric, isisRAMetricType, isisRASNPAAddress, isisRASNPAMask, isisRASNPAPrefix, isisRAType]

class isisISIPRADestGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 8])
	group = [isisIPRANextHopType, isisIPRANextHop, isisIPRAType, isisIPRAExistState, isisIPRAAdminState, isisIPRAMetric, isisIPRAFullMetric, isisIPRAMetricType, isisIPRASNPAAddress, isisIPRASourceType]

class isisLSPGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 138, 2, 2, 9])
	group = [isisLSPSeq, isisLSPZeroLife, isisLSPChecksum, isisLSPLifetimeRemain, isisLSPPDULength, isisLSPAttributes, isisLSPTLVSeq, isisLSPTLVChecksum, isisLSPTLVType, isisLSPTLVLen, isisLSPTLVValue]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
