# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoExperiment
from SNMPv2_TC import TruthValue, RowStatus
from IF_MIB import OwnerString

class CISCO_OAM_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-OAM-MIB'
	conformance = 3
	name = 'CISCO-OAM-MIB'
	language = 2
	description = 'A MIB module for invoking OAM loopback Ping on ATM\nconnections.'

# nodes
class ciscoOamPingMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15])
	name = 'ciscoOamPingMIB'

class ciscoOamPingMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1])
	name = 'ciscoOamPingMIBObjects'

class oamLoopbackPingMIBTrapPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 2])
	name = 'oamLoopbackPingMIBTrapPrefix'

class oamLoopbackPingMIBTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 2, 0])
	name = 'oamLoopbackPingMIBTraps'

class ciscoOamPingMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 3])
	name = 'ciscoOamPingMIBConformance'

class ciscoOamPingMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 3, 1])
	name = 'ciscoOamPingMIBCompliances'

class ciscoOamPingMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 3, 2])
	name = 'ciscoOamPingMIBGroups'


# macros
# types 
# scalars 
# columns
class oamLoopbackPingSerialNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class oamLoopbackPingInterface(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class oamLoopbackPingVpi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class oamLoopbackPingVci(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class oamLoopbackPingType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'segment'), Enum(2, 'end2end')]


class oamLoopbackPingLocation(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class oamLoopbackPingLocationFlag(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ipAddress'), Enum(2, 'nsapPrefix'), Enum(3, 'fixed16byteValue')]


class oamLoopbackPingCount(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class oamLoopbackPingTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class oamLoopbackPingDelay(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'milliseconds'


class oamLoopbackPingTrapOnCompletion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class oamLoopbackPingSentCells(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class oamLoopbackPingReceivedCells(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class oamLoopbackPingMinRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class oamLoopbackPingAvgRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class oamLoopbackPingMaxRtt(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'milliseconds'


class oamLoopbackPingCompleted(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class oamLoopbackPingEntryOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 18])
	syntaxobject = OwnerString


class oamLoopbackPingEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class oamLoopbackPingEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([oamLoopbackPingSerialNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 1, 1, 1])
	access = 2
	rowstatus = oamLoopbackPingEntryStatus
	columns = {'oamLoopbackPingSerialNumber': oamLoopbackPingSerialNumber, 'oamLoopbackPingInterface': oamLoopbackPingInterface, 'oamLoopbackPingVpi': oamLoopbackPingVpi, 'oamLoopbackPingVci': oamLoopbackPingVci, 'oamLoopbackPingType': oamLoopbackPingType, 'oamLoopbackPingLocation': oamLoopbackPingLocation, 'oamLoopbackPingLocationFlag': oamLoopbackPingLocationFlag, 'oamLoopbackPingCount': oamLoopbackPingCount, 'oamLoopbackPingTimeout': oamLoopbackPingTimeout, 'oamLoopbackPingDelay': oamLoopbackPingDelay, 'oamLoopbackPingTrapOnCompletion': oamLoopbackPingTrapOnCompletion, 'oamLoopbackPingSentCells': oamLoopbackPingSentCells, 'oamLoopbackPingReceivedCells': oamLoopbackPingReceivedCells, 'oamLoopbackPingMinRtt': oamLoopbackPingMinRtt, 'oamLoopbackPingAvgRtt': oamLoopbackPingAvgRtt, 'oamLoopbackPingMaxRtt': oamLoopbackPingMaxRtt, 'oamLoopbackPingCompleted': oamLoopbackPingCompleted, 'oamLoopbackPingEntryOwner': oamLoopbackPingEntryOwner, 'oamLoopbackPingEntryStatus': oamLoopbackPingEntryStatus}


# notifications (traps) 
class oamLoopbackPingCompletionTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 2, 0, 1])

# groups 
class ciscoOamPingMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 15, 3, 2, 1])
	group = [oamLoopbackPingInterface, oamLoopbackPingVpi, oamLoopbackPingVci, oamLoopbackPingCount, oamLoopbackPingType, oamLoopbackPingLocation, oamLoopbackPingLocationFlag, oamLoopbackPingTimeout, oamLoopbackPingDelay, oamLoopbackPingTrapOnCompletion, oamLoopbackPingSentCells, oamLoopbackPingReceivedCells, oamLoopbackPingMinRtt, oamLoopbackPingAvgRtt, oamLoopbackPingMaxRtt, oamLoopbackPingCompleted, oamLoopbackPingEntryOwner, oamLoopbackPingEntryStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
