# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Counter32, Gauge32, Integer32, IpAddress
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoExperiment
from SNMPv2_TC import DisplayString, TruthValue

class CISCO_5800_HEALTH_MON_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-5800-HEALTH-MON-MIB'
	conformance = 2
	name = 'CISCO-5800-HEALTH-MON-MIB'
	language = 2
	description = "This MIB provides a means to monitor the status of a\nsystem's health."

# nodes
class cisco5800HealthMonMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28])
	name = 'cisco5800HealthMonMIB'

class cisco5800HealthMonObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1])
	name = 'cisco5800HealthMonObjects'

class ciscoHealthMonMIBNotificationEnables(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 2])
	name = 'ciscoHealthMonMIBNotificationEnables'

class ciscoHealthMonMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 3])
	name = 'ciscoHealthMonMIBNotificationPrefix'

class ciscoHealthMonMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 3, 0])
	name = 'ciscoHealthMonMIBNotifications'

class cisco5800HealthMonMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 4])
	name = 'cisco5800HealthMonMIBConformance'

class cisco5800HealthMonMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 4, 1])
	name = 'cisco5800HealthMonMIBCompliances'

class cisco5800HealthMonMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 4, 2])
	name = 'cisco5800HealthMonMIBGroups'


# macros
# types 
# scalars 
class ciscoHealthMonNumShelves(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonNumT1E1LinesUp(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonNumT1E1LinesDown(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonNumActiveDS0(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonNumTotalDS0(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonNumTotalModems(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonNumModemsInUse(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonNumUnavailableModems(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonEnableNotification(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class ciscoHealthMonStatusIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonStatusType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonShelfId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class ciscoHealthMonDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class ciscoHealthMonValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonThreshold(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonThresholdExceedCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonCountIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonT1E1LinesUp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonT1E1LinesDown(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonActiveDS0(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonTotalDS0(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonTotalModems(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonModemsInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonUnavailableModems(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class ciscoHealthMonIOMemUsed(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes'


class ciscoHealthMonIOMemFree(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'bytes'


class ciscoHealthMonCPUavgBusy5(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class ciscoHealthMonUtilEgressInOctet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoHealthMonUtilEgressOutOctet(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class ciscoHealthMonShelfLastUpdate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# rows 
class ciscoHealthMonStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoHealthMonStatusIndex, ciscoHealthMonStatusType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 1, 1])
	access = 2
	columns = {'ciscoHealthMonStatusIndex': ciscoHealthMonStatusIndex, 'ciscoHealthMonStatusType': ciscoHealthMonStatusType, 'ciscoHealthMonShelfId': ciscoHealthMonShelfId, 'ciscoHealthMonAddress': ciscoHealthMonAddress, 'ciscoHealthMonDescr': ciscoHealthMonDescr, 'ciscoHealthMonValue': ciscoHealthMonValue, 'ciscoHealthMonThreshold': ciscoHealthMonThreshold, 'ciscoHealthMonThresholdExceedCount': ciscoHealthMonThresholdExceedCount}


class ciscoHealthMonCountEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ciscoHealthMonCountIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 1, 2, 1])
	access = 2
	columns = {'ciscoHealthMonCountIndex': ciscoHealthMonCountIndex, 'ciscoHealthMonT1E1LinesUp': ciscoHealthMonT1E1LinesUp, 'ciscoHealthMonT1E1LinesDown': ciscoHealthMonT1E1LinesDown, 'ciscoHealthMonActiveDS0': ciscoHealthMonActiveDS0, 'ciscoHealthMonTotalDS0': ciscoHealthMonTotalDS0, 'ciscoHealthMonTotalModems': ciscoHealthMonTotalModems, 'ciscoHealthMonModemsInUse': ciscoHealthMonModemsInUse, 'ciscoHealthMonUnavailableModems': ciscoHealthMonUnavailableModems, 'ciscoHealthMonIOMemUsed': ciscoHealthMonIOMemUsed, 'ciscoHealthMonIOMemFree': ciscoHealthMonIOMemFree, 'ciscoHealthMonCPUavgBusy5': ciscoHealthMonCPUavgBusy5, 'ciscoHealthMonUtilEgressInOctet': ciscoHealthMonUtilEgressInOctet, 'ciscoHealthMonUtilEgressOutOctet': ciscoHealthMonUtilEgressOutOctet, 'ciscoHealthMonShelfLastUpdate': ciscoHealthMonShelfLastUpdate}


# notifications (traps) 
class ciscoHealthMonNotification(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 3, 0, 1])

# groups 
class cisco5800HealthMonMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 10, 28, 4, 2, 1])
	group = [ciscoHealthMonStatusType, ciscoHealthMonShelfId, ciscoHealthMonAddress, ciscoHealthMonDescr, ciscoHealthMonValue, ciscoHealthMonThreshold, ciscoHealthMonThresholdExceedCount, ciscoHealthMonT1E1LinesUp, ciscoHealthMonT1E1LinesDown, ciscoHealthMonActiveDS0, ciscoHealthMonTotalDS0, ciscoHealthMonTotalModems, ciscoHealthMonModemsInUse, ciscoHealthMonUnavailableModems, ciscoHealthMonIOMemUsed, ciscoHealthMonIOMemFree, ciscoHealthMonCPUavgBusy5, ciscoHealthMonUtilEgressInOctet, ciscoHealthMonUtilEgressOutOctet, ciscoHealthMonShelfLastUpdate, ciscoHealthMonNumShelves, ciscoHealthMonNumT1E1LinesUp, ciscoHealthMonNumT1E1LinesDown, ciscoHealthMonNumActiveDS0, ciscoHealthMonNumTotalDS0, ciscoHealthMonNumTotalModems, ciscoHealthMonNumModemsInUse, ciscoHealthMonNumUnavailableModems, ciscoHealthMonEnableNotification]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
