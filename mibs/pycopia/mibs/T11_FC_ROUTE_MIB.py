# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from FC_MGMT_MIB import fcmInstanceIndex, fcmSwitchIndex, FcAddressIdOrZero, FcDomainIdOrZero
from IF_MIB import InterfaceIndex, InterfaceIndexOrZero
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Unsigned32, mib_2
from T11_TC_MIB import T11FabricIndex
from SNMPv2_TC import RowStatus, TimeStamp, StorageType

class T11_FC_ROUTE_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/T11-FC-ROUTE-MIB'
	name = 'T11-FC-ROUTE-MIB'
	language = 2
	description = 'The MIB module for configuring and displaying Fibre\nChannel Route Information.\n\nCopyright (C) The Internet Society (2006).  This version\nof this MIB module is part of RFC 4625;  see the RFC\nitself for full legal notices.'

# nodes
class t11FcRouteMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144])
	name = 't11FcRouteMIB'

class t11FcRouteNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 0])
	name = 't11FcRouteNotifications'

class t11FcRouteObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1])
	name = 't11FcRouteObjects'

class t11FcRouteConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 2])
	name = 't11FcRouteConformance'

class t11FcRouteCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 2, 1])
	name = 't11FcRouteCompliances'

class t11FcRouteGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 2, 2])
	name = 't11FcRouteGroups'


# macros
# types 
# scalars 
# columns
class t11FcRouteFabricIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 1, 1, 1])
	syntaxobject = T11FabricIndex


class t11FcRouteFabricLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class t11FcRouteDestAddrId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 1])
	syntaxobject = FcAddressIdOrZero


class t11FcRouteDestMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 2])
	syntaxobject = FcAddressIdOrZero


class t11FcRouteSrcAddrId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 3])
	syntaxobject = FcAddressIdOrZero


class t11FcRouteSrcMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 4])
	syntaxobject = FcAddressIdOrZero


class t11FcRouteInInterface(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 5])
	syntaxobject = InterfaceIndexOrZero


class t11FcRouteProto(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'local'), Enum(3, 'netmgmt'), Enum(4, 'fspf')]


class t11FcRouteOutInterface(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 7])
	syntaxobject = InterfaceIndex


class t11FcRouteDomainId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 8])
	syntaxobject = FcDomainIdOrZero


class t11FcRouteMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class t11FcRouteType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'local'), Enum(2, 'remote')]


class t11FcRouteIfDown(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'remove'), Enum(2, 'retain')]


class t11FcRouteStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class t11FcRouteRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class t11FcRouteFabricEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex, t11FcRouteFabricIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 1, 1])
	access = 2
	columns = {'t11FcRouteFabricIndex': t11FcRouteFabricIndex, 't11FcRouteFabricLastChange': t11FcRouteFabricLastChange}


class t11FcRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([fcmInstanceIndex, fcmSwitchIndex, t11FcRouteFabricIndex, t11FcRouteDestAddrId, t11FcRouteDestMask, t11FcRouteSrcAddrId, t11FcRouteSrcMask, t11FcRouteInInterface, t11FcRouteProto, t11FcRouteOutInterface], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 1, 2, 1])
	access = 2
	rowstatus = t11FcRouteRowStatus
	columns = {'t11FcRouteDestAddrId': t11FcRouteDestAddrId, 't11FcRouteDestMask': t11FcRouteDestMask, 't11FcRouteSrcAddrId': t11FcRouteSrcAddrId, 't11FcRouteSrcMask': t11FcRouteSrcMask, 't11FcRouteInInterface': t11FcRouteInInterface, 't11FcRouteProto': t11FcRouteProto, 't11FcRouteOutInterface': t11FcRouteOutInterface, 't11FcRouteDomainId': t11FcRouteDomainId, 't11FcRouteMetric': t11FcRouteMetric, 't11FcRouteType': t11FcRouteType, 't11FcRouteIfDown': t11FcRouteIfDown, 't11FcRouteStorageType': t11FcRouteStorageType, 't11FcRouteRowStatus': t11FcRouteRowStatus}


# notifications (traps) 
# groups 
class t11FcRouteGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 144, 2, 2, 1])
	group = [t11FcRouteFabricLastChange, t11FcRouteDomainId, t11FcRouteMetric, t11FcRouteType, t11FcRouteIfDown, t11FcRouteStorageType, t11FcRouteRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
