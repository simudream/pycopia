# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Gauge32, IpAddress
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, MacAddress, TimeStamp, TruthValue

class CISCO_TN3270SERVER_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-TN3270SERVER-MIB'
	conformance = 2
	name = 'CISCO-TN3270SERVER-MIB'
	language = 2
	description = 'The MIB module for TN3270 Server.\n\nMIB description\n\nThe PU and LU MIB are defined in RFC 1666. This MIB provides\nadditional information on IP and LU mapping. The following \nentities are managed:\n\n1) TN3270S Global\n2) TN3270S Stats on Listen IP/Port basis\n3) TN3270S PU\n4) TN3270S IP to LU Mapping\n5) TN3270S LU to IP Mapping'

# nodes
class ciscoTn3270ServerMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54])
	name = 'ciscoTn3270ServerMIB'

class tn3270sObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1])
	name = 'tn3270sObjects'

class tn3270sGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1])
	name = 'tn3270sGlobal'

class tn3270sStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2])
	name = 'tn3270sStats'

class tn3270sPu(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3])
	name = 'tn3270sPu'

class tn3270sIp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4])
	name = 'tn3270sIp'

class tn3270sLu(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5])
	name = 'tn3270sLu'

class tn3270sPuNail(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6])
	name = 'tn3270sPuNail'

class tn3270sIpNail(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7])
	name = 'tn3270sIpNail'

class ciscoTn3270ServerMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 2])
	name = 'ciscoTn3270ServerMIBNotificationPrefix'

class ciscoTn3270ServerMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 3])
	name = 'ciscoTn3270ServerMIBConformance'

class ciscoTn3270ServerMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 1])
	name = 'ciscoTn3270ServerMIBCompliances'

class ciscoTn3270ServerMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2])
	name = 'ciscoTn3270ServerMIBGroups'


# macros
# types 

class Tn3270sUnsigned32(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(-1, 0))


class Tn3270sTCPPort(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 65535))


class Tn3270sPUIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1


class Tn3270sLUIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1


class Tn3270sCpuCard(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(10, 16))

# scalars 
# columns
class tn3270sIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 1])
	syntaxobject = Tn3270sUnsigned32


class tn3270sCpuCard(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 2])
	syntaxobject = Tn3270sCpuCard


class tn3270sMaxLus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 3])
	syntaxobject = Tn3270sUnsigned32


class tn3270sLusInUse(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class tn3270sStartupTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class tn3270sGlobalTcpPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 6])
	syntaxobject = Tn3270sTCPPort


class tn3270sGlobalIdleTimeout(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class tn3270sGlobalKeepAlive(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class tn3270sGlobalUnbindAction(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'keep'), Enum(2, 'disconnect')]


class tn3270sGlobalGenericPool(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'permit'), Enum(2, 'deny')]


class tn3270sTimingMarkSupported(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tn3270sRunningTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 12])
	syntaxobject = Tn3270sUnsigned32
	access = 4
	units = 'seconds'


class tn3270sStatsServerAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sStatsServerTcpPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 2])
	syntaxobject = Tn3270sTCPPort


class tn3270sStatsMaxSess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class tn3270sStatsSpareSess(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class tn3270sStatsConnectsIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsDisconnects(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsTN3270ConnectsFailed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsInboundChains(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsOutboundChains(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsSampledHostResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsNetSampledHostResponseTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 11])
	syntaxobject = Tn3270sUnsigned32
	access = 4
	units = '10milliseconds'


class tn3270sStatsSampledClientResponses(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class tn3270sStatsNetSampledClientResponseTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 13])
	syntaxobject = Tn3270sUnsigned32
	access = 4
	units = '10milliseconds'


class tn3270sPuIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 1])
	syntaxobject = Tn3270sPUIndex


class tn3270sPuIpAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sPuTcpPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 3])
	syntaxobject = Tn3270sTCPPort


class tn3270sPuIdleTimeout(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sPuKeepAlive(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sPuUnbindAction(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'keep'), Enum(2, 'disconnect'), Enum(3, 'inherit')]


class tn3270sPuGenericPool(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'permit'), Enum(2, 'deny'), Enum(3, 'inherit')]


class tn3270sPuState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'shut'), Enum(2, 'reset'), Enum(3, 'inactive'), Enum(4, 'test'), Enum(5, 'xid'), Enum(6, 'pActpu'), Enum(7, 'active'), Enum(8, 'actBusy')]


class tn3270sPuType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dlur'), Enum(2, 'direct')]


class tn3270sPuLuSeed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tn3270sLocalSapAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sRemoteSapAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sRemoteMacAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class tn3270sPuIpPrecedenceScreen(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sPuIpPrecedencePrinter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sPuIpTosScreen(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sPuIpTosPrinter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sIpClientAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sIpClientTcpPort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 2])
	syntaxobject = Tn3270sTCPPort


class tn3270sIpPuIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 3])
	syntaxobject = Tn3270sPUIndex


class tn3270sIpLuIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 4])
	syntaxobject = Tn3270sLUIndex


class tn3270sLuPuIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 1])
	syntaxobject = Tn3270sPUIndex


class tn3270sLuIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 2])
	syntaxobject = Tn3270sLUIndex


class tn3270sLuClientAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sLuClientTcpPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 4])
	syntaxobject = Tn3270sTCPPort


class tn3270sLuTelnetType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tn3270'), Enum(2, 'tn3270e'), Enum(3, 'neverConnect')]


class tn3270sLuTermModel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tn3270sLuState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active'), Enum(3, 'pSdt'), Enum(4, 'actSession'), Enum(5, 'pActlu'), Enum(6, 'pNotifyAv'), Enum(7, 'pNotifyUa'), Enum(8, 'pReset'), Enum(9, 'pPsid'), Enum(10, 'pBind'), Enum(11, 'pUnbind'), Enum(12, 'unbindWt'), Enum(13, 'sdtWt')]


class tn3270sLuCurInbPacing(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sLuCurInbQsize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sLuCurOutQsize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sLuIdleTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'seconds'


class tn3270sLuType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dynamic'), Enum(2, 'static')]


class tn3270sLuAppnLinkIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class tn3270sLuLfsid(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sLuLastEvent(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class tn3270sLuEvents(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class tn3270sLuNail(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class tn3270sPuNailClientIpAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sPuNailClientIpMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sPuNailType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'screen'), Enum(2, 'printer')]


class tn3270sPuNailLuFirst(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sPuNailLuLast(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sIpNailClientIpAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sIpNailClientIpMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class tn3270sIpNailType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'screen'), Enum(2, 'printer')]


class tn3270sIpNailLuFirst(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class tn3270sIpNailLuLast(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class tn3270sGlobalEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1])
	access = 2
	columns = {'tn3270sIndex': tn3270sIndex, 'tn3270sCpuCard': tn3270sCpuCard, 'tn3270sMaxLus': tn3270sMaxLus, 'tn3270sLusInUse': tn3270sLusInUse, 'tn3270sStartupTime': tn3270sStartupTime, 'tn3270sGlobalTcpPort': tn3270sGlobalTcpPort, 'tn3270sGlobalIdleTimeout': tn3270sGlobalIdleTimeout, 'tn3270sGlobalKeepAlive': tn3270sGlobalKeepAlive, 'tn3270sGlobalUnbindAction': tn3270sGlobalUnbindAction, 'tn3270sGlobalGenericPool': tn3270sGlobalGenericPool, 'tn3270sTimingMarkSupported': tn3270sTimingMarkSupported, 'tn3270sRunningTime': tn3270sRunningTime}


class tn3270sStatsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex, tn3270sStatsServerAddr, tn3270sStatsServerTcpPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1])
	access = 2
	columns = {'tn3270sStatsServerAddr': tn3270sStatsServerAddr, 'tn3270sStatsServerTcpPort': tn3270sStatsServerTcpPort, 'tn3270sStatsMaxSess': tn3270sStatsMaxSess, 'tn3270sStatsSpareSess': tn3270sStatsSpareSess, 'tn3270sStatsConnectsIn': tn3270sStatsConnectsIn, 'tn3270sStatsDisconnects': tn3270sStatsDisconnects, 'tn3270sStatsTN3270ConnectsFailed': tn3270sStatsTN3270ConnectsFailed, 'tn3270sStatsInboundChains': tn3270sStatsInboundChains, 'tn3270sStatsOutboundChains': tn3270sStatsOutboundChains, 'tn3270sStatsSampledHostResponses': tn3270sStatsSampledHostResponses, 'tn3270sStatsNetSampledHostResponseTime': tn3270sStatsNetSampledHostResponseTime, 'tn3270sStatsSampledClientResponses': tn3270sStatsSampledClientResponses, 'tn3270sStatsNetSampledClientResponseTime': tn3270sStatsNetSampledClientResponseTime}


class tn3270sPuEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex, tn3270sPuIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1])
	access = 2
	columns = {'tn3270sPuIndex': tn3270sPuIndex, 'tn3270sPuIpAddr': tn3270sPuIpAddr, 'tn3270sPuTcpPort': tn3270sPuTcpPort, 'tn3270sPuIdleTimeout': tn3270sPuIdleTimeout, 'tn3270sPuKeepAlive': tn3270sPuKeepAlive, 'tn3270sPuUnbindAction': tn3270sPuUnbindAction, 'tn3270sPuGenericPool': tn3270sPuGenericPool, 'tn3270sPuState': tn3270sPuState, 'tn3270sPuType': tn3270sPuType, 'tn3270sPuLuSeed': tn3270sPuLuSeed, 'tn3270sLocalSapAddress': tn3270sLocalSapAddress, 'tn3270sRemoteSapAddress': tn3270sRemoteSapAddress, 'tn3270sRemoteMacAddress': tn3270sRemoteMacAddress, 'tn3270sPuIpPrecedenceScreen': tn3270sPuIpPrecedenceScreen, 'tn3270sPuIpPrecedencePrinter': tn3270sPuIpPrecedencePrinter, 'tn3270sPuIpTosScreen': tn3270sPuIpTosScreen, 'tn3270sPuIpTosPrinter': tn3270sPuIpTosPrinter}


class tn3270sIpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex, tn3270sIpClientAddr, tn3270sIpClientTcpPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1])
	access = 2
	columns = {'tn3270sIpClientAddr': tn3270sIpClientAddr, 'tn3270sIpClientTcpPort': tn3270sIpClientTcpPort, 'tn3270sIpPuIndex': tn3270sIpPuIndex, 'tn3270sIpLuIndex': tn3270sIpLuIndex}


class tn3270sLuEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex, tn3270sLuPuIndex, tn3270sLuIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1])
	access = 2
	columns = {'tn3270sLuPuIndex': tn3270sLuPuIndex, 'tn3270sLuIndex': tn3270sLuIndex, 'tn3270sLuClientAddr': tn3270sLuClientAddr, 'tn3270sLuClientTcpPort': tn3270sLuClientTcpPort, 'tn3270sLuTelnetType': tn3270sLuTelnetType, 'tn3270sLuTermModel': tn3270sLuTermModel, 'tn3270sLuState': tn3270sLuState, 'tn3270sLuCurInbPacing': tn3270sLuCurInbPacing, 'tn3270sLuCurInbQsize': tn3270sLuCurInbQsize, 'tn3270sLuCurOutQsize': tn3270sLuCurOutQsize, 'tn3270sLuIdleTime': tn3270sLuIdleTime, 'tn3270sLuType': tn3270sLuType, 'tn3270sLuAppnLinkIndex': tn3270sLuAppnLinkIndex, 'tn3270sLuLfsid': tn3270sLuLfsid, 'tn3270sLuLastEvent': tn3270sLuLastEvent, 'tn3270sLuEvents': tn3270sLuEvents, 'tn3270sLuNail': tn3270sLuNail}


class tn3270sPuNailEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex, tn3270sPuIndex, tn3270sPuNailClientIpAddr, tn3270sPuNailLuFirst], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1])
	access = 2
	columns = {'tn3270sPuNailClientIpAddr': tn3270sPuNailClientIpAddr, 'tn3270sPuNailClientIpMask': tn3270sPuNailClientIpMask, 'tn3270sPuNailType': tn3270sPuNailType, 'tn3270sPuNailLuFirst': tn3270sPuNailLuFirst, 'tn3270sPuNailLuLast': tn3270sPuNailLuLast}


class tn3270sIpNailEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([tn3270sIndex, tn3270sIpNailClientIpAddr, tn3270sPuIndex, tn3270sIpNailLuFirst], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1])
	access = 2
	columns = {'tn3270sIpNailClientIpAddr': tn3270sIpNailClientIpAddr, 'tn3270sIpNailClientIpMask': tn3270sIpNailClientIpMask, 'tn3270sIpNailType': tn3270sIpNailType, 'tn3270sIpNailLuFirst': tn3270sIpNailLuFirst, 'tn3270sIpNailLuLast': tn3270sIpNailLuLast}


# notifications (traps) 
# groups 
class ciscoTn3270ServerMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2, 1])
	group = [tn3270sCpuCard, tn3270sMaxLus, tn3270sLusInUse, tn3270sStartupTime, tn3270sGlobalTcpPort, tn3270sGlobalIdleTimeout, tn3270sGlobalKeepAlive, tn3270sGlobalUnbindAction, tn3270sGlobalGenericPool, tn3270sTimingMarkSupported, tn3270sRunningTime, tn3270sStatsMaxSess, tn3270sStatsSpareSess, tn3270sStatsConnectsIn, tn3270sStatsDisconnects, tn3270sStatsTN3270ConnectsFailed, tn3270sStatsInboundChains, tn3270sStatsOutboundChains, tn3270sStatsSampledHostResponses, tn3270sStatsNetSampledHostResponseTime, tn3270sStatsSampledClientResponses, tn3270sStatsNetSampledClientResponseTime, tn3270sPuIpAddr, tn3270sPuTcpPort, tn3270sPuIdleTimeout, tn3270sPuKeepAlive, tn3270sPuUnbindAction, tn3270sPuGenericPool, tn3270sPuState, tn3270sPuType, tn3270sPuLuSeed, tn3270sLocalSapAddress, tn3270sRemoteSapAddress, tn3270sRemoteMacAddress, tn3270sIpPuIndex, tn3270sIpLuIndex, tn3270sLuClientAddr, tn3270sLuClientTcpPort, tn3270sLuTelnetType, tn3270sLuTermModel, tn3270sLuState, tn3270sLuCurInbPacing, tn3270sLuCurInbQsize, tn3270sLuCurOutQsize, tn3270sLuIdleTime, tn3270sLuType, tn3270sLuAppnLinkIndex, tn3270sLuLfsid, tn3270sLuEvents]

class ciscoTn3270ServerMIBGroupRev1(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2, 3])
	group = [tn3270sPuIpPrecedenceScreen, tn3270sPuIpPrecedencePrinter, tn3270sPuIpTosScreen, tn3270sPuIpTosPrinter, tn3270sLuNail, tn3270sPuNailClientIpAddr, tn3270sPuNailClientIpMask, tn3270sPuNailType, tn3270sPuNailLuFirst, tn3270sPuNailLuLast, tn3270sIpNailClientIpAddr, tn3270sIpNailClientIpMask, tn3270sIpNailType, tn3270sIpNailLuFirst, tn3270sIpNailLuLast]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
