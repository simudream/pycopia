# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, mib_2, Integer32, Counter32, Gauge32, TimeTicks
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, TruthValue, DateAndTime, AutonomousType
from IF_MIB import InterfaceIndexOrZero

class HOST_RESOURCES_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/HOST-RESOURCES-MIB'
	conformance = 4
	name = 'HOST-RESOURCES-MIB'
	language = 2
	description = "This MIB is for use in managing host systems. The term\n`host' is construed to mean any computer that communicates\nwith other similar computers attached to the internet and\nthat is directly used by one or more human beings. Although\nthis MIB does not necessarily apply to devices whose primary\nfunction is communications services (e.g., terminal servers,\nrouters, bridges, monitoring equipment), such relevance is\nnot explicitly precluded.  This MIB instruments attributes\ncommon to all internet hosts including, for example, both\npersonal computers and systems that run variants of Unix."

# nodes
class host(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25])
	name = 'host'

class hrSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1])
	name = 'hrSystem'

class hrStorage(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2])
	name = 'hrStorage'

class hrStorageTypes(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 1])
	name = 'hrStorageTypes'

class hrDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3])
	name = 'hrDevice'

class hrDeviceTypes(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 1])
	name = 'hrDeviceTypes'

class hrFSTypes(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 9])
	name = 'hrFSTypes'

class hrSWRun(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4])
	name = 'hrSWRun'

class hrSWRunPerf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 5])
	name = 'hrSWRunPerf'

class hrSWInstalled(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6])
	name = 'hrSWInstalled'

class hrMIBAdminInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7])
	name = 'hrMIBAdminInfo'

class hostResourcesMibModule(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 1])
	name = 'hostResourcesMibModule'

class hrMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 2])
	name = 'hrMIBCompliances'

class hrMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3])
	name = 'hrMIBGroups'


# macros
# types 

class KBytes(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 2147483647))


class ProductID(pycopia.SMI.Basetypes.ObjectIdentifier):
	status = 1


class InternationalDisplayString(pycopia.SMI.Basetypes.OctetString):
	status = 1

# scalars 
class hrSystemUptime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class hrSystemDate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class hrSystemInitialLoadDevice(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrSystemInitialLoadParameters(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 4])
	syntaxobject = InternationalDisplayString


class hrSystemNumUsers(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class hrSystemProcesses(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class hrSystemMaxProcesses(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrMemorySize(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 2])
	syntaxobject = KBytes
	access = 4
	units = 'KBytes'


class hrSWOSIndex(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrSWInstalledLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class hrSWInstalledLastUpdateTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


# columns
class hrStorageIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrStorageType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.AutonomousType


class hrStorageDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hrStorageAllocationUnits(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'Bytes'


class hrStorageSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrStorageUsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrStorageAllocationFailures(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hrDeviceIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrDeviceType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.AutonomousType


class hrDeviceDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class hrDeviceID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 4])
	syntaxobject = ProductID


class hrDeviceStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'running'), Enum(3, 'warning'), Enum(4, 'testing'), Enum(5, 'down')]


class hrDeviceErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class hrProcessorFrwID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 1])
	syntaxobject = ProductID


class hrProcessorLoad(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrNetworkIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 4, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class hrPrinterStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'unknown'), Enum(3, 'idle'), Enum(4, 'printing'), Enum(5, 'warmup')]


class hrPrinterDetectedErrorState(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hrDiskStorageAccess(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'readWrite'), Enum(2, 'readOnly')]


class hrDiskStorageMedia(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'unknown'), Enum(3, 'hardDisk'), Enum(4, 'floppyDisk'), Enum(5, 'opticalDiskROM'), Enum(6, 'opticalDiskWORM'), Enum(7, 'opticalDiskRW'), Enum(8, 'ramDisk')]


class hrDiskStorageRemoveble(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hrDiskStorageCapacity(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 4])
	syntaxobject = KBytes
	access = 4
	units = 'KBytes'


class hrPartitionIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrPartitionLabel(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 2])
	syntaxobject = InternationalDisplayString


class hrPartitionID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class hrPartitionSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 4])
	syntaxobject = KBytes
	access = 4
	units = 'KBytes'


class hrPartitionFSIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrFSIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrFSMountPoint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 2])
	syntaxobject = InternationalDisplayString


class hrFSRemoteMountPoint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 3])
	syntaxobject = InternationalDisplayString


class hrFSType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.AutonomousType


class hrFSAccess(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'readWrite'), Enum(2, 'readOnly')]


class hrFSBootable(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class hrFSStorageIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrFSLastFullBackupDate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class hrFSLastPartialBackupDate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class hrSWRunIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrSWRunName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 2])
	syntaxobject = InternationalDisplayString


class hrSWRunID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 3])
	syntaxobject = ProductID


class hrSWRunPath(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 4])
	syntaxobject = InternationalDisplayString


class hrSWRunParameters(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 5])
	syntaxobject = InternationalDisplayString


class hrSWRunType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'operatingSystem'), Enum(3, 'deviceDriver'), Enum(4, 'application')]


class hrSWRunStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'running'), Enum(2, 'runnable'), Enum(3, 'notRunnable'), Enum(4, 'invalid')]


class hrSWRunPerfCPU(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrSWRunPerfMem(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 2])
	syntaxobject = KBytes
	access = 4
	units = 'KBytes'


class hrSWInstalledIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class hrSWInstalledName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 2])
	syntaxobject = InternationalDisplayString


class hrSWInstalledID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 3])
	syntaxobject = ProductID


class hrSWInstalledType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'operatingSystem'), Enum(3, 'deviceDriver'), Enum(4, 'application')]


class hrSWInstalledDate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


# rows 
class hrStorageEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrStorageIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 2, 3, 1])
	access = 2
	columns = {'hrStorageIndex': hrStorageIndex, 'hrStorageType': hrStorageType, 'hrStorageDescr': hrStorageDescr, 'hrStorageAllocationUnits': hrStorageAllocationUnits, 'hrStorageSize': hrStorageSize, 'hrStorageUsed': hrStorageUsed, 'hrStorageAllocationFailures': hrStorageAllocationFailures}


class hrDeviceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 2, 1])
	access = 2
	columns = {'hrDeviceIndex': hrDeviceIndex, 'hrDeviceType': hrDeviceType, 'hrDeviceDescr': hrDeviceDescr, 'hrDeviceID': hrDeviceID, 'hrDeviceStatus': hrDeviceStatus, 'hrDeviceErrors': hrDeviceErrors}


class hrProcessorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 3, 1])
	access = 2
	columns = {'hrProcessorFrwID': hrProcessorFrwID, 'hrProcessorLoad': hrProcessorLoad}


class hrNetworkEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 4, 1])
	access = 2
	columns = {'hrNetworkIfIndex': hrNetworkIfIndex}


class hrPrinterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 5, 1])
	access = 2
	columns = {'hrPrinterStatus': hrPrinterStatus, 'hrPrinterDetectedErrorState': hrPrinterDetectedErrorState}


class hrDiskStorageEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 6, 1])
	access = 2
	columns = {'hrDiskStorageAccess': hrDiskStorageAccess, 'hrDiskStorageMedia': hrDiskStorageMedia, 'hrDiskStorageRemoveble': hrDiskStorageRemoveble, 'hrDiskStorageCapacity': hrDiskStorageCapacity}


class hrPartitionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrDeviceIndex, hrPartitionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 7, 1])
	access = 2
	columns = {'hrPartitionIndex': hrPartitionIndex, 'hrPartitionLabel': hrPartitionLabel, 'hrPartitionID': hrPartitionID, 'hrPartitionSize': hrPartitionSize, 'hrPartitionFSIndex': hrPartitionFSIndex}


class hrFSEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrFSIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 3, 8, 1])
	access = 2
	columns = {'hrFSIndex': hrFSIndex, 'hrFSMountPoint': hrFSMountPoint, 'hrFSRemoteMountPoint': hrFSRemoteMountPoint, 'hrFSType': hrFSType, 'hrFSAccess': hrFSAccess, 'hrFSBootable': hrFSBootable, 'hrFSStorageIndex': hrFSStorageIndex, 'hrFSLastFullBackupDate': hrFSLastFullBackupDate, 'hrFSLastPartialBackupDate': hrFSLastPartialBackupDate}


class hrSWRunEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrSWRunIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 4, 2, 1])
	access = 2
	columns = {'hrSWRunIndex': hrSWRunIndex, 'hrSWRunName': hrSWRunName, 'hrSWRunID': hrSWRunID, 'hrSWRunPath': hrSWRunPath, 'hrSWRunParameters': hrSWRunParameters, 'hrSWRunType': hrSWRunType, 'hrSWRunStatus': hrSWRunStatus}


from HOST_RESOURCES_MIB import hrSWRunIndex
class hrSWRunPerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrSWRunIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 5, 1, 1])
	access = 2
	columns = {'hrSWRunPerfCPU': hrSWRunPerfCPU, 'hrSWRunPerfMem': hrSWRunPerfMem}


class hrSWInstalledEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([hrSWInstalledIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 6, 3, 1])
	access = 2
	columns = {'hrSWInstalledIndex': hrSWInstalledIndex, 'hrSWInstalledName': hrSWInstalledName, 'hrSWInstalledID': hrSWInstalledID, 'hrSWInstalledType': hrSWInstalledType, 'hrSWInstalledDate': hrSWInstalledDate}


# notifications (traps) 
# groups 
class hrSystemGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3, 1])
	group = [hrSystemUptime, hrSystemDate, hrSystemInitialLoadDevice, hrSystemInitialLoadParameters, hrSystemNumUsers, hrSystemProcesses, hrSystemMaxProcesses]

class hrStorageGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3, 2])
	group = [hrMemorySize, hrStorageIndex, hrStorageType, hrStorageDescr, hrStorageAllocationUnits, hrStorageSize, hrStorageUsed, hrStorageAllocationFailures]

class hrDeviceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3, 3])
	group = [hrDeviceIndex, hrDeviceType, hrDeviceDescr, hrDeviceID, hrDeviceStatus, hrDeviceErrors, hrProcessorFrwID, hrProcessorLoad, hrNetworkIfIndex, hrPrinterStatus, hrPrinterDetectedErrorState, hrDiskStorageAccess, hrDiskStorageMedia, hrDiskStorageRemoveble, hrDiskStorageCapacity, hrPartitionIndex, hrPartitionLabel, hrPartitionID, hrPartitionSize, hrPartitionFSIndex, hrFSIndex, hrFSMountPoint, hrFSRemoteMountPoint, hrFSType, hrFSAccess, hrFSBootable, hrFSStorageIndex, hrFSLastFullBackupDate, hrFSLastPartialBackupDate]

class hrSWRunGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3, 4])
	group = [hrSWOSIndex, hrSWRunIndex, hrSWRunName, hrSWRunID, hrSWRunPath, hrSWRunParameters, hrSWRunType, hrSWRunStatus]

class hrSWRunPerfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3, 5])
	group = [hrSWRunPerfCPU, hrSWRunPerfMem]

class hrSWInstalledGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 25, 7, 3, 6])
	group = [hrSWInstalledLastChange, hrSWInstalledLastUpdateTime, hrSWInstalledIndex, hrSWInstalledName, hrSWInstalledID, hrSWInstalledType, hrSWInstalledDate]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
