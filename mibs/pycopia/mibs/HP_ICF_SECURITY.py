# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import Integer32, IpAddress, TimeTicks, OBJECT_TYPE, MODULE_IDENTITY
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import DisplayString, RowStatus
from HP_ICF_OID import hpicfObjectModules, icfSecurity

class HP_ICF_SECURITY(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-ICF-SECURITY'
	conformance = 5
	name = 'HP-ICF-SECURITY'
	language = 2
	description = 'This MIB module describes objects for managing\nthe SNMPv1 authorization configuration for\ndevices in the HP Integrated Communication\nFacility product line.'

# nodes
class icfSecurIntruder(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 4])
	name = 'icfSecurIntruder'

class icfSecurityMib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1])
	name = 'icfSecurityMib'

class icfSecurityConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1, 1])
	name = 'icfSecurityConformance'

class icfSecurityCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1, 1, 1])
	name = 'icfSecurityCompliances'

class icfSecurityGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1, 1, 2])
	name = 'icfSecurityGroups'


# macros
# types 
# scalars 
class icfSecurPassword(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class icfSecurAuthAnyMgr(ScalarObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class icfSecurIntruderFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'valid'), Enum(2, 'invalid')]


class icfSecurIntruderIpAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class icfSecurIntruderIpxAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class icfSecurIntruderTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


# columns
class icfAuthMgrIndex(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class icfAuthMgrIpAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class icfAuthMgrIpxAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class icfAuthMgrRcvTraps(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class icfCommunityIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class icfCommunityName(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class icfCommunityReadView(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'discovery'), Enum(3, 'restricted'), Enum(4, 'user'), Enum(5, 'root')]


class icfCommunityWriteView(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'discovery'), Enum(3, 'restricted'), Enum(4, 'user'), Enum(5, 'root')]


class icfCommunityStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class icfAuthMgrSubIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class icfAuthMgrAddrType(ColumnObject):
	status = 2
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ip'), Enum(2, 'ipx')]


class icfAuthMgrAddress(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class icfAuthMgrMask(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class icfAuthMgrStatus(ColumnObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class icfAuthIPMgrIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class icfAuthIPMgrAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class icfAuthIPMgrMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class icfAuthIPMgrAccess(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'operator'), Enum(2, 'manager')]


class icfAuthIPMgrStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class icfSecurAuthMgrEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([icfAuthMgrIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 3, 1])
	access = 2
	columns = {'icfAuthMgrIndex': icfAuthMgrIndex, 'icfAuthMgrIpAddress': icfAuthMgrIpAddress, 'icfAuthMgrIpxAddress': icfAuthMgrIpxAddress, 'icfAuthMgrRcvTraps': icfAuthMgrRcvTraps}


class icfCommunityEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([icfCommunityIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 5, 1])
	access = 2
	rowstatus = icfCommunityStatus
	columns = {'icfCommunityIndex': icfCommunityIndex, 'icfCommunityName': icfCommunityName, 'icfCommunityReadView': icfCommunityReadView, 'icfCommunityWriteView': icfCommunityWriteView, 'icfCommunityStatus': icfCommunityStatus}


class icfAuthMgrEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([icfCommunityIndex, icfAuthMgrSubIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 6, 1])
	access = 2
	rowstatus = icfAuthMgrStatus
	columns = {'icfAuthMgrSubIndex': icfAuthMgrSubIndex, 'icfAuthMgrAddrType': icfAuthMgrAddrType, 'icfAuthMgrAddress': icfAuthMgrAddress, 'icfAuthMgrMask': icfAuthMgrMask, 'icfAuthMgrStatus': icfAuthMgrStatus}


class icfAuthIPMgrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([icfAuthIPMgrIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 4, 7, 1])
	access = 2
	rowstatus = icfAuthIPMgrStatus
	columns = {'icfAuthIPMgrIndex': icfAuthIPMgrIndex, 'icfAuthIPMgrAddress': icfAuthIPMgrAddress, 'icfAuthIPMgrMask': icfAuthIPMgrMask, 'icfAuthIPMgrAccess': icfAuthIPMgrAccess, 'icfAuthIPMgrStatus': icfAuthIPMgrStatus}


# notifications (traps) 
# groups 
class icfSecIntruderGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1, 1, 2, 2])
	group = [icfSecurIntruderFlag, icfSecurIntruderIpAddress, icfSecurIntruderIpxAddress, icfSecurIntruderTime]

class icfV1CommunityGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1, 1, 2, 13])
	group = [icfCommunityName, icfCommunityReadView, icfCommunityWriteView, icfCommunityStatus, icfAuthMgrAddrType, icfAuthMgrAddress, icfAuthMgrMask, icfAuthMgrStatus]

class icfAuthIPMgrGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1, 1, 2, 14])
	group = [icfAuthIPMgrAddress, icfAuthIPMgrMask, icfAuthIPMgrAccess, icfAuthIPMgrStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
