# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1213_MIB import transmission
from RFC1155_SMI import Counter

class FDDI_SMT73_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/FDDI-SMT73-MIB'
	conformance = 5
	name = 'FDDI-SMT73-MIB'
	language = 1

# nodes
class fddi(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15])
	name = 'fddi'

class fddimib(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73])
	name = 'fddimib'

class fddimibSMT(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1])
	name = 'fddimibSMT'

class fddimibMAC(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2])
	name = 'fddimibMAC'

class fddimibMACCounters(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3])
	name = 'fddimibMACCounters'

class fddimibPATH(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4])
	name = 'fddimibPATH'

class fddimibPORT(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5])
	name = 'fddimibPORT'


# macros
# types 

class FddiTimeNano(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 2147483647))


class FddiTimeMilli(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 2147483647))


class FddiResourceId(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 65535))


class FddiSMTStationIdType(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(8, 8))


class FddiMACLongAddressType(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(6, 6))

# scalars 
class fddimibSMTNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# columns
class fddimibSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTStationId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 2])
	syntaxobject = FddiSMTStationIdType


class fddimibSMTOpVersionId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTHiVersionId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTLoVersionId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTUserData(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class fddimibSMTMIBVersionId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTMACCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTNonMasterCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTMasterCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTAvailablePaths(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTConfigCapabilities(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTConfigPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTConnectionPolicy(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTTNotify(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibSMTStatRptPolicy(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibSMTTraceMaxExpiration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 17])
	syntaxobject = FddiTimeMilli


class fddimibSMTBypassPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibSMTECMState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ec0'), Enum(2, 'ec1'), Enum(3, 'ec2'), Enum(4, 'ec3'), Enum(5, 'ec4'), Enum(6, 'ec5'), Enum(7, 'ec6'), Enum(8, 'ec7')]


class fddimibSMTCFState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'cf0'), Enum(2, 'cf1'), Enum(3, 'cf2'), Enum(4, 'cf3'), Enum(5, 'cf4'), Enum(6, 'cf5'), Enum(7, 'cf6'), Enum(8, 'cf7'), Enum(9, 'cf8'), Enum(10, 'cf9'), Enum(11, 'cf10'), Enum(12, 'cf11'), Enum(13, 'cf12')]


class fddimibSMTRemoteDisconnectFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibSMTStationStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'concatenated'), Enum(2, 'separated'), Enum(3, 'thru')]


class fddimibSMTPeerWrapFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibSMTTimeStamp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 24])
	syntaxobject = FddiTimeMilli


class fddimibSMTTransitionTimeStamp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 25])
	syntaxobject = FddiTimeMilli


class fddimibSMTStationAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'connect'), Enum(3, 'disconnect'), Enum(4, 'path-Test'), Enum(5, 'self-Test'), Enum(6, 'disable-a'), Enum(7, 'disable-b'), Enum(8, 'disable-m')]


class fddimibMACSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACIfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACFrameStatusFunctions(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACTMaxCapability(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 5])
	syntaxobject = FddiTimeNano


class fddimibMACTVXCapability(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 6])
	syntaxobject = FddiTimeNano


class fddimibMACAvailablePaths(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACCurrentPath(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'isolated'), Enum(2, 'local'), Enum(3, 'secondary'), Enum(4, 'primary'), Enum(5, 'concatenated'), Enum(6, 'thru')]


class fddimibMACUpstreamNbr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 9])
	syntaxobject = FddiMACLongAddressType


class fddimibMACDownstreamNbr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 10])
	syntaxobject = FddiMACLongAddressType


class fddimibMACOldUpstreamNbr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 11])
	syntaxobject = FddiMACLongAddressType


class fddimibMACOldDownstreamNbr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 12])
	syntaxobject = FddiMACLongAddressType


class fddimibMACDupAddressTest(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'pass'), Enum(3, 'fail')]


class fddimibMACRequestedPaths(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACDownstreamPORTType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'a'), Enum(2, 'b'), Enum(3, 's'), Enum(4, 'm'), Enum(5, 'none')]


class fddimibMACSMTAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 16])
	syntaxobject = FddiMACLongAddressType


class fddimibMACTReq(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 17])
	syntaxobject = FddiTimeNano


class fddimibMACTNeg(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 18])
	syntaxobject = FddiTimeNano


class fddimibMACTMax(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 19])
	syntaxobject = FddiTimeNano


class fddimibMACTvxValue(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 20])
	syntaxobject = FddiTimeNano


class fddimibMACFrameCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACCopiedCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACTransmitCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACErrorCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACLostCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACFrameErrorThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACFrameErrorRatio(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACRMTState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rm0'), Enum(2, 'rm1'), Enum(3, 'rm2'), Enum(4, 'rm3'), Enum(5, 'rm4'), Enum(6, 'rm5'), Enum(7, 'rm6'), Enum(8, 'rm7')]


class fddimibMACDaFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACUnaDaFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACFrameErrorFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACMAUnitdataAvailable(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACHardwarePresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACMAUnitdataEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACTokenCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACTvxExpiredCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACNotCopiedCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACLateCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACRingOpCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibMACNotCopiedRatio(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibMACNotCopiedFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibMACNotCopiedThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHTVXLowerBound(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 2, 1, 3])
	syntaxobject = FddiTimeNano


class fddimibPATHTMaxLowerBound(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 2, 1, 4])
	syntaxobject = FddiTimeNano


class fddimibPATHMaxTReq(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 2, 1, 5])
	syntaxobject = FddiTimeNano


class fddimibPATHConfigSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHConfigPATHIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHConfigTokenOrder(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHConfigResourceType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'mac'), Enum(4, 'port')]


class fddimibPATHConfigResourceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPATHConfigCurrentPath(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'isolated'), Enum(2, 'local'), Enum(3, 'secondary'), Enum(4, 'primary'), Enum(5, 'concatenated'), Enum(6, 'thru')]


class fddimibPORTSMTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTMyType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'a'), Enum(2, 'b'), Enum(3, 's'), Enum(4, 'm'), Enum(5, 'none')]


class fddimibPORTNeighborType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'a'), Enum(2, 'b'), Enum(3, 's'), Enum(4, 'm'), Enum(5, 'none')]


class fddimibPORTConnectionPolicies(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTMACIndicated(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tVal9FalseRVal9False'), Enum(2, 'tVal9FalseRVal9True'), Enum(3, 'tVal9TrueRVal9False'), Enum(4, 'tVal9TrueRVal9True')]


class fddimibPORTCurrentPath(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ce0'), Enum(2, 'ce1'), Enum(3, 'ce2'), Enum(4, 'ce3'), Enum(5, 'ce4'), Enum(6, 'ce5')]


class fddimibPORTRequestedPaths(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class fddimibPORTMACPlacement(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 9])
	syntaxobject = FddiResourceId


class fddimibPORTAvailablePaths(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTPMDClass(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'multimode'), Enum(2, 'single-mode1'), Enum(3, 'single-mode2'), Enum(4, 'sonet'), Enum(5, 'low-cost-fiber'), Enum(6, 'twisted-pair'), Enum(7, 'unknown'), Enum(8, 'unspecified')]


class fddimibPORTConnectionCapabilities(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTBSFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibPORTLCTFailCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibPORTLerEstimate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTLemRejectCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibPORTLemCts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class fddimibPORTLerCutoff(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTLerAlarm(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class fddimibPORTConnectState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'connecting'), Enum(3, 'standby'), Enum(4, 'active')]


class fddimibPORTPCMState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pc0'), Enum(2, 'pc1'), Enum(3, 'pc2'), Enum(4, 'pc3'), Enum(5, 'pc4'), Enum(6, 'pc5'), Enum(7, 'pc6'), Enum(8, 'pc7'), Enum(9, 'pc8'), Enum(10, 'pc9')]


class fddimibPORTPCWithhold(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'm-m'), Enum(3, 'otherincompatible'), Enum(4, 'pathnotavailable')]


class fddimibPORTLerFlag(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibPORTHardwarePresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class fddimibPORTAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'maintPORT'), Enum(3, 'enablePORT'), Enum(4, 'disablePORT'), Enum(5, 'startPORT'), Enum(6, 'stopPORT')]


# rows 
class fddimibSMTEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([fddimibSMTIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 1, 2, 1])
	access = 2
	columns = {'fddimibSMTIndex': fddimibSMTIndex, 'fddimibSMTStationId': fddimibSMTStationId, 'fddimibSMTOpVersionId': fddimibSMTOpVersionId, 'fddimibSMTHiVersionId': fddimibSMTHiVersionId, 'fddimibSMTLoVersionId': fddimibSMTLoVersionId, 'fddimibSMTUserData': fddimibSMTUserData, 'fddimibSMTMIBVersionId': fddimibSMTMIBVersionId, 'fddimibSMTMACCts': fddimibSMTMACCts, 'fddimibSMTNonMasterCts': fddimibSMTNonMasterCts, 'fddimibSMTMasterCts': fddimibSMTMasterCts, 'fddimibSMTAvailablePaths': fddimibSMTAvailablePaths, 'fddimibSMTConfigCapabilities': fddimibSMTConfigCapabilities, 'fddimibSMTConfigPolicy': fddimibSMTConfigPolicy, 'fddimibSMTConnectionPolicy': fddimibSMTConnectionPolicy, 'fddimibSMTTNotify': fddimibSMTTNotify, 'fddimibSMTStatRptPolicy': fddimibSMTStatRptPolicy, 'fddimibSMTTraceMaxExpiration': fddimibSMTTraceMaxExpiration, 'fddimibSMTBypassPresent': fddimibSMTBypassPresent, 'fddimibSMTECMState': fddimibSMTECMState, 'fddimibSMTCFState': fddimibSMTCFState, 'fddimibSMTRemoteDisconnectFlag': fddimibSMTRemoteDisconnectFlag, 'fddimibSMTStationStatus': fddimibSMTStationStatus, 'fddimibSMTPeerWrapFlag': fddimibSMTPeerWrapFlag, 'fddimibSMTTimeStamp': fddimibSMTTimeStamp, 'fddimibSMTTransitionTimeStamp': fddimibSMTTransitionTimeStamp, 'fddimibSMTStationAction': fddimibSMTStationAction}


class fddimibMACEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([fddimibMACSMTIndex, fddimibMACIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 2, 2, 1])
	access = 2
	columns = {'fddimibMACSMTIndex': fddimibMACSMTIndex, 'fddimibMACIndex': fddimibMACIndex, 'fddimibMACIfIndex': fddimibMACIfIndex, 'fddimibMACFrameStatusFunctions': fddimibMACFrameStatusFunctions, 'fddimibMACTMaxCapability': fddimibMACTMaxCapability, 'fddimibMACTVXCapability': fddimibMACTVXCapability, 'fddimibMACAvailablePaths': fddimibMACAvailablePaths, 'fddimibMACCurrentPath': fddimibMACCurrentPath, 'fddimibMACUpstreamNbr': fddimibMACUpstreamNbr, 'fddimibMACDownstreamNbr': fddimibMACDownstreamNbr, 'fddimibMACOldUpstreamNbr': fddimibMACOldUpstreamNbr, 'fddimibMACOldDownstreamNbr': fddimibMACOldDownstreamNbr, 'fddimibMACDupAddressTest': fddimibMACDupAddressTest, 'fddimibMACRequestedPaths': fddimibMACRequestedPaths, 'fddimibMACDownstreamPORTType': fddimibMACDownstreamPORTType, 'fddimibMACSMTAddress': fddimibMACSMTAddress, 'fddimibMACTReq': fddimibMACTReq, 'fddimibMACTNeg': fddimibMACTNeg, 'fddimibMACTMax': fddimibMACTMax, 'fddimibMACTvxValue': fddimibMACTvxValue, 'fddimibMACFrameCts': fddimibMACFrameCts, 'fddimibMACCopiedCts': fddimibMACCopiedCts, 'fddimibMACTransmitCts': fddimibMACTransmitCts, 'fddimibMACErrorCts': fddimibMACErrorCts, 'fddimibMACLostCts': fddimibMACLostCts, 'fddimibMACFrameErrorThreshold': fddimibMACFrameErrorThreshold, 'fddimibMACFrameErrorRatio': fddimibMACFrameErrorRatio, 'fddimibMACRMTState': fddimibMACRMTState, 'fddimibMACDaFlag': fddimibMACDaFlag, 'fddimibMACUnaDaFlag': fddimibMACUnaDaFlag, 'fddimibMACFrameErrorFlag': fddimibMACFrameErrorFlag, 'fddimibMACMAUnitdataAvailable': fddimibMACMAUnitdataAvailable, 'fddimibMACHardwarePresent': fddimibMACHardwarePresent, 'fddimibMACMAUnitdataEnable': fddimibMACMAUnitdataEnable}


class fddimibMACCountersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([fddimibMACSMTIndex, fddimibMACIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 3, 1, 1])
	access = 2
	columns = {'fddimibMACTokenCts': fddimibMACTokenCts, 'fddimibMACTvxExpiredCts': fddimibMACTvxExpiredCts, 'fddimibMACNotCopiedCts': fddimibMACNotCopiedCts, 'fddimibMACLateCts': fddimibMACLateCts, 'fddimibMACRingOpCts': fddimibMACRingOpCts, 'fddimibMACNotCopiedRatio': fddimibMACNotCopiedRatio, 'fddimibMACNotCopiedFlag': fddimibMACNotCopiedFlag, 'fddimibMACNotCopiedThreshold': fddimibMACNotCopiedThreshold}


class fddimibPATHEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([fddimibPATHSMTIndex, fddimibPATHIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 2, 1])
	access = 2
	columns = {'fddimibPATHSMTIndex': fddimibPATHSMTIndex, 'fddimibPATHIndex': fddimibPATHIndex, 'fddimibPATHTVXLowerBound': fddimibPATHTVXLowerBound, 'fddimibPATHTMaxLowerBound': fddimibPATHTMaxLowerBound, 'fddimibPATHMaxTReq': fddimibPATHMaxTReq}


class fddimibPATHConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([fddimibPATHConfigSMTIndex, fddimibPATHConfigPATHIndex, fddimibPATHConfigTokenOrder], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 4, 3, 1])
	access = 2
	columns = {'fddimibPATHConfigSMTIndex': fddimibPATHConfigSMTIndex, 'fddimibPATHConfigPATHIndex': fddimibPATHConfigPATHIndex, 'fddimibPATHConfigTokenOrder': fddimibPATHConfigTokenOrder, 'fddimibPATHConfigResourceType': fddimibPATHConfigResourceType, 'fddimibPATHConfigResourceIndex': fddimibPATHConfigResourceIndex, 'fddimibPATHConfigCurrentPath': fddimibPATHConfigCurrentPath}


class fddimibPORTEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([fddimibPORTSMTIndex, fddimibPORTIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 10, 15, 73, 5, 2, 1])
	access = 2
	columns = {'fddimibPORTSMTIndex': fddimibPORTSMTIndex, 'fddimibPORTIndex': fddimibPORTIndex, 'fddimibPORTMyType': fddimibPORTMyType, 'fddimibPORTNeighborType': fddimibPORTNeighborType, 'fddimibPORTConnectionPolicies': fddimibPORTConnectionPolicies, 'fddimibPORTMACIndicated': fddimibPORTMACIndicated, 'fddimibPORTCurrentPath': fddimibPORTCurrentPath, 'fddimibPORTRequestedPaths': fddimibPORTRequestedPaths, 'fddimibPORTMACPlacement': fddimibPORTMACPlacement, 'fddimibPORTAvailablePaths': fddimibPORTAvailablePaths, 'fddimibPORTPMDClass': fddimibPORTPMDClass, 'fddimibPORTConnectionCapabilities': fddimibPORTConnectionCapabilities, 'fddimibPORTBSFlag': fddimibPORTBSFlag, 'fddimibPORTLCTFailCts': fddimibPORTLCTFailCts, 'fddimibPORTLerEstimate': fddimibPORTLerEstimate, 'fddimibPORTLemRejectCts': fddimibPORTLemRejectCts, 'fddimibPORTLemCts': fddimibPORTLemCts, 'fddimibPORTLerCutoff': fddimibPORTLerCutoff, 'fddimibPORTLerAlarm': fddimibPORTLerAlarm, 'fddimibPORTConnectState': fddimibPORTConnectState, 'fddimibPORTPCMState': fddimibPORTPCMState, 'fddimibPORTPCWithhold': fddimibPORTPCWithhold, 'fddimibPORTLerFlag': fddimibPORTLerFlag, 'fddimibPORTHardwarePresent': fddimibPORTHardwarePresent, 'fddimibPORTAction': fddimibPORTAction}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
