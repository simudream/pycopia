# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, TimeTicks, IpAddress
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from RFC1213_MIB import mib_2
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus

class RIPv2_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RIPv2-MIB'
	conformance = 3
	name = 'RIPv2-MIB'
	language = 2
	description = 'The MIB module to describe the RIP2 Version 2 Protocol'

# nodes
class rip2(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23])
	name = 'rip2'

class rip2Globals(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 1])
	name = 'rip2Globals'

class rip2Conformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5])
	name = 'rip2Conformance'

class rip2Groups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5, 1])
	name = 'rip2Groups'

class rip2Compliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5, 2])
	name = 'rip2Compliances'


# macros
# types 

class RouteTag(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(2, 2))

# scalars 
class rip2GlobalRouteChanges(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rip2GlobalQueries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# columns
class rip2IfStatAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class rip2IfStatRcvBadPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rip2IfStatRcvBadRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rip2IfStatSentUpdates(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rip2IfStatStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class rip2IfConfAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class rip2IfConfDomain(ColumnObject):
	access = 5
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 2])
	syntaxobject = RouteTag


class rip2IfConfAuthType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noAuthentication'), Enum(2, 'simplePassword'), Enum(3, 'md5')]


class rip2IfConfAuthKey(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class rip2IfConfSend(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'doNotSend'), Enum(2, 'ripVersion1'), Enum(3, 'rip1Compatible'), Enum(4, 'ripVersion2'), Enum(5, 'ripV1Demand'), Enum(6, 'ripV2Demand')]


class rip2IfConfReceive(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rip1'), Enum(2, 'rip2'), Enum(3, 'rip1OrRip2'), Enum(4, 'doNotRecieve')]


class rip2IfConfDefaultMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rip2IfConfStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class rip2IfConfSrcAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class rip2PeerAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class rip2PeerDomain(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1, 2])
	syntaxobject = RouteTag


class rip2PeerLastUpdate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class rip2PeerVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rip2PeerRcvBadPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class rip2PeerRcvBadRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class rip2IfStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rip2IfStatAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 2, 1])
	access = 2
	rowstatus = rip2IfStatStatus
	columns = {'rip2IfStatAddress': rip2IfStatAddress, 'rip2IfStatRcvBadPackets': rip2IfStatRcvBadPackets, 'rip2IfStatRcvBadRoutes': rip2IfStatRcvBadRoutes, 'rip2IfStatSentUpdates': rip2IfStatSentUpdates, 'rip2IfStatStatus': rip2IfStatStatus}


class rip2IfConfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rip2IfConfAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 3, 1])
	access = 2
	rowstatus = rip2IfConfStatus
	columns = {'rip2IfConfAddress': rip2IfConfAddress, 'rip2IfConfDomain': rip2IfConfDomain, 'rip2IfConfAuthType': rip2IfConfAuthType, 'rip2IfConfAuthKey': rip2IfConfAuthKey, 'rip2IfConfSend': rip2IfConfSend, 'rip2IfConfReceive': rip2IfConfReceive, 'rip2IfConfDefaultMetric': rip2IfConfDefaultMetric, 'rip2IfConfStatus': rip2IfConfStatus, 'rip2IfConfSrcAddress': rip2IfConfSrcAddress}


class rip2PeerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rip2PeerAddress, rip2PeerDomain], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 4, 1])
	access = 2
	columns = {'rip2PeerAddress': rip2PeerAddress, 'rip2PeerDomain': rip2PeerDomain, 'rip2PeerLastUpdate': rip2PeerLastUpdate, 'rip2PeerVersion': rip2PeerVersion, 'rip2PeerRcvBadPackets': rip2PeerRcvBadPackets, 'rip2PeerRcvBadRoutes': rip2PeerRcvBadRoutes}


# notifications (traps) 
# groups 
class rip2GlobalGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5, 1, 1])
	group = [rip2GlobalRouteChanges, rip2GlobalQueries]

class rip2IfStatGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5, 1, 2])
	group = [rip2IfStatAddress, rip2IfStatRcvBadPackets, rip2IfStatRcvBadRoutes, rip2IfStatSentUpdates, rip2IfStatStatus]

class rip2IfConfGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5, 1, 3])
	group = [rip2IfConfAddress, rip2IfConfAuthType, rip2IfConfAuthKey, rip2IfConfSend, rip2IfConfReceive, rip2IfConfDefaultMetric, rip2IfConfStatus, rip2IfConfSrcAddress]

class rip2PeerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 23, 5, 1, 4])
	group = [rip2PeerAddress, rip2PeerDomain, rip2PeerLastUpdate, rip2PeerVersion, rip2PeerRcvBadPackets, rip2PeerRcvBadRoutes]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
