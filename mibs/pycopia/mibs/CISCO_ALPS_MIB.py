# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter32, Gauge32, IpAddress, TimeTicks, NOTIFICATION_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from CISCO_SMI import ciscoMgmt
from SNMPv2_TC import DisplayString, TEXTUAL_CONVENTION, TruthValue, RowStatus, TimeInterval
from IF_MIB import ifIndex, InterfaceIndex

class CISCO_ALPS_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/CISCO-ALPS-MIB'
	conformance = 3
	name = 'CISCO-ALPS-MIB'
	language = 2
	description = "The MIB module for Airline Protocol Support.\n\n**************************************************************\n* \t\t\tAcronym Definitions\t\t      \t*\n*\t\t\t\t\t\t\t\t*\n* ALPS\t: AirLine Protocol Support\t\t\t*\n* AX.25      : Airline X.25                                  *\n* EMTOX\t: Exchange of Mixed Traffic over X.25 \t        *\n* ASCU\t: Agent Set Control Unit\t\t\t*\n* \t\t\t\t\t\t\t        *\n**************************************************************      \t \n\n         \nOverview of ALPS(AirLine Protocol Support) MIB\n==============================================\n\nMIB description\n\nDocument to refer: 'Configuring ALPS' section in Cisco IOS Command\n\t\tReference & Configuration Guide.\n\nThe ALPS MIB provides configuration and operational information\nfor Cisco's Airline protocol support for IBM-P1024B(ALC) and  \nUnisys-P1024C(UTS) protocols encapsulation over TCP/IP. The \nfollowing entities are managed:\n\n1. Peers\n2. ALPS Circuits\n3. ASCUs (Agent Set Control Units)\n4. ALC interface\n5. ALPS Host link interface to the host\n\nHOST(Emtox/Ax.25) <----> Central <---> IP Network <---> Remote <----> ASCU\n\t\t\t  router\t\t\t router\n\nThe router connected to the Host is called the Central router and the router \nconnected to the ASCU is called the Remote router. We anticipate one Central \nrouter connecting to a large number of Remote routers. Each router has a \nlocal peer, which connects to its counterpart on the other router (referred \nto as the remote peer) via a TCP connection. ALPS circuits are set up over \nthis TCP connection either on a permanent or on-demand basis. \n\nA logical grouping of ASCUs are connected via a single circuit - this has \nno connection to the physical interfaces that the ASCUs are connected to. \nThe only restriction is that all the ASCUs should be directly connected to \nthe same router.\n\nMultiple ASCUs can connect to a single serial interface and several terminals\nconnect to an ASCU. However, terminals are not visible to the ALPS feature\n- the router talks only to the ASCUs. An ASCU can be identified by \n* the interface it is on and its Interface Address (IA) or \n* the circuit it is on, and its A1 and A2 values, which identify it \n\t\twithin the circuit. \nThus there are two ways of identifying an ASCU - <interface,IA> or \n<circuit-name,A1,A2> Circuit names are globally unique.\n\nThe connection to the host is via one of two flavors of X.25 - either \nAX.25 (for PVCs) or EMTOX (for SVCs). Each X.25 VC corresponds to one ALPS\ncircuit. There are several hostlinks between a host and the Central router\nand load balancing is done across these. EMTOX allows the host to\ndial out to a terminal. This requires the use of an X.121 to IP address\ntranslation table to connect to the appropriate remote peer."

# nodes
class ciscoAlpsMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95])
	name = 'ciscoAlpsMIB'

class ciscoAlpsMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1])
	name = 'ciscoAlpsMIBObjects'

class alpsGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 1])
	name = 'alpsGroups'

class alpsPeerObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2])
	name = 'alpsPeerObjects'

class alpsPeer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 1])
	name = 'alpsPeer'

class alpsCktObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3])
	name = 'alpsCktObjects'

class alpsIfObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4])
	name = 'alpsIfObjects'

class alpsAscuObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5])
	name = 'alpsAscuObjects'

class alpsGlobalObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6])
	name = 'alpsGlobalObjects'

class ciscoAlpsMIBNotificationPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 2])
	name = 'ciscoAlpsMIBNotificationPrefix'

class ciscoAlpsMIBNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 2, 0])
	name = 'ciscoAlpsMIBNotifications'

class alpsMibConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3])
	name = 'alpsMibConformance'

class alpsMibCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 1])
	name = 'alpsMibCompliances'

class alpsMibGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2])
	name = 'alpsMibGroups'


# macros
# types 

class X121Address(pycopia.SMI.Basetypes.OctetString):
	ranges = Ranges(Range(0, 17))


class AlpsCktName(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(1, 12))


class AlpsAscuA1A2Value(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 255))

# scalars 
class alpsPeerLocalIpAddr(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class alpsPeerLocalAtpPort(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsPeerKeepaliveTimeout(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsPeerKeepaliveMaxRetries(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsPeerInCallsAcceptFlag(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class alpsRemPeerIpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class alpsRemPeerConnType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'permanent'), Enum(2, 'dynamic')]


class alpsRemPeerLocalPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsRemPeerRemotePort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsRemPeerState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'closed'), Enum(2, 'opening'), Enum(3, 'opened')]


class alpsRemPeerUptime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class alpsRemPeerNumActiveCkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class alpsRemPeerIdleTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsRemPeerAlarmsEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class alpsRemPeerTCPQlen(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'packets'


class alpsRemPeerOutPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsRemPeerOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class alpsRemPeerInPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsRemPeerInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class alpsRemPeerDropsGiant(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsRemPeerDropsQFull(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsRemPeerDropsPeerUnreach(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsRemPeerRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class alpsCktBaseName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 1])
	syntaxobject = AlpsCktName


class alpsCktBaseDlcType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'emtox'), Enum(2, 'ax25'), Enum(3, 'alc'), Enum(4, 'uts')]


class alpsCktBasePriPeerAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class alpsCktBaseAlarmsEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class alpsCktBaseConnType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'permanent'), Enum(2, 'dynamic')]


class alpsCktBaseState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'inoperable'), Enum(3, 'opening'), Enum(4, 'opened')]


class alpsCktBaseNumActiveAscus(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktBaseCurrentPeer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class alpsCktBaseLifeTimeTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsCktBaseHostLinkNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktBaseHostLinkType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ax25'), Enum(2, 'emtox')]


class alpsCktBaseRemHld(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktBaseLocalHld(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktBaseDownReason(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'noReason'), Enum(3, 'hostLinkDown'), Enum(4, 'cktDisabled'), Enum(5, 'hostLinkDisabled'), Enum(6, 'noHostLinkMatched'), Enum(7, 'noHldMatched'), Enum(8, 'cktNameInUse'), Enum(9, 'pvcLcnOutOfRange'), Enum(10, 'x25ParamInvalid'), Enum(11, 'cktOpeningTimeout'), Enum(12, 'x25ClearDteNoReason'), Enum(13, 'configMismatch'), Enum(14, 'noResourcesAvail'), Enum(15, 'incompatibleA1A2'), Enum(16, 'cktIdle'), Enum(17, 'peerDown'), Enum(18, 'noAscusConfigured'), Enum(19, 'x25ClearHostUnknown'), Enum(20, 'x25ClearHostDown'), Enum(21, 'x25ClearHostDisabled'), Enum(22, 'x25ClearHostSaturated'), Enum(23, 'x25ClearCallerUnknown'), Enum(24, 'x25ClearCallerUnauth'), Enum(25, 'x25ClearConfigRejected'), Enum(26, 'x25ClearConfigFallback'), Enum(27, 'x25ClearConfigIncompat'), Enum(28, 'x25ClearHLDUnknown'), Enum(29, 'x25ClearPIDUnknown'), Enum(30, 'x25ClearFacilRejected'), Enum(31, 'x25ClearNetNoReason'), Enum(32, 'pvcLcnInUse'), Enum(33, 'noSvcLcnAvail')]


class alpsCktBaseOutPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsCktBaseOutOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class alpsCktBaseInPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsCktBaseInOctets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'octets'


class alpsCktBaseDropsCktDisabled(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsCktBaseDropsQOverflow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsCktBaseDropsLifeTimeExpd(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsCktBaseEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class alpsCktBaseRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class alpsCktX25DlcType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'emtox'), Enum(2, 'ax25')]


class alpsCktX25IfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1, 2])
	syntaxobject = InterfaceIndex


class alpsCktX25LCN(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktX25HostX121(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1, 4])
	syntaxobject = X121Address


class alpsCktX25RemoteX121(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1, 5])
	syntaxobject = X121Address


class alpsCktX25DropsVcReset(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alpsCktP1024DlcType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(3, 'alc'), Enum(4, 'uts')]


class alpsCktP1024BackupPeerAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class alpsCktP1024RetryTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsCktP1024IdleTimer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsCktP1024EmtoxX121(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 5])
	syntaxobject = X121Address


class alpsCktP1024Ax25LCN(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktP1024WinOut(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktP1024WinIn(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktP1024OutPktSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bytes'


class alpsCktP1024InPktSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bytes'


class alpsCktP1024SvcMsgList(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktP1024SvcMsgIntvl(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class alpsCktP1024DropsUnkAscu(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsCktP1024RowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class alpsCktAscuCktName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 1])
	syntaxobject = AlpsCktName


class alpsCktAscuCktDlcType(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'emtox'), Enum(2, 'ax25'), Enum(3, 'alc'), Enum(4, 'uts')]


class alpsCktAscuA1(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 3])
	syntaxobject = AlpsAscuA1A2Value


class alpsCktAscuA2(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 4])
	syntaxobject = AlpsAscuA1A2Value


class alpsCktAscuIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 5])
	syntaxobject = InterfaceIndex


class alpsCktAscuId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsCktAscuStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'ok'), Enum(3, 'reject'), Enum(4, 'new')]


class alpsIfP1024EncapType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alc'), Enum(2, 'uts')]


class alpsIfP1024PollRespTimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsIfP1024GATimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsIfP1024PollPauseTimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsIfP1024MaxErrCnt(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfP1024MaxRetrans(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfP1024CurrErrCnt(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfP1024MinGoodPollResp(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfP1024PollingRatio(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfP1024NumAscus(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'Ascus'


class alpsIfHLinkHostHld(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfHLinkNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsIfHLinkX25ProtocolType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ax25'), Enum(2, 'emtox')]


class alpsIfHLinkAx25PvcDamp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeInterval


class alpsIfHLinkEmtoxHostX121(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1, 5])
	syntaxobject = X121Address


class alpsIfHLinkActiveCkts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'circuits'


class alpsAscuId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsAscuA1(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 2])
	syntaxobject = AlpsAscuA1A2Value


class alpsAscuA2(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 3])
	syntaxobject = AlpsAscuA1A2Value


class alpsAscuCktName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 4])
	syntaxobject = AlpsCktName


class alpsAscuAlarmsEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class alpsAscuRetryOption(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'resend'), Enum(2, 'reenter'), Enum(3, 'none')]


class alpsAscuMaxMsgLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bytes'


class alpsAscuFwdStatusOption(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class alpsAscuState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'unknown'), Enum(3, 'down'), Enum(4, 'up')]


class alpsAscuDownReason(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'noReason'), Enum(3, 'notDown'), Enum(4, 'ascuDisabled'), Enum(5, 'errorThresholdExceeded')]


class alpsAscuOutPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsAscuOutOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alpsAscuInPackets(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class alpsAscuInOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alpsAscuDropsGarbledPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alpsAscuDropsAscuDown(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alpsAscuDropsAscuDisabled(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class alpsAscuEnabled(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class alpsAscuRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class alpsSvcMsgListNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsSvcMsgNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class alpsSvcMsg(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class alpsSvcMsgRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class alpsX121(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 2, 1, 1])
	syntaxobject = X121Address


class alpsIpAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class alpsX121ToIpTransRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class alpsRemPeerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alpsRemPeerIpAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 2, 2, 1])
	access = 2
	rowstatus = alpsRemPeerRowStatus
	columns = {'alpsRemPeerIpAddr': alpsRemPeerIpAddr, 'alpsRemPeerConnType': alpsRemPeerConnType, 'alpsRemPeerLocalPort': alpsRemPeerLocalPort, 'alpsRemPeerRemotePort': alpsRemPeerRemotePort, 'alpsRemPeerState': alpsRemPeerState, 'alpsRemPeerUptime': alpsRemPeerUptime, 'alpsRemPeerNumActiveCkts': alpsRemPeerNumActiveCkts, 'alpsRemPeerIdleTimer': alpsRemPeerIdleTimer, 'alpsRemPeerAlarmsEnabled': alpsRemPeerAlarmsEnabled, 'alpsRemPeerTCPQlen': alpsRemPeerTCPQlen, 'alpsRemPeerOutPackets': alpsRemPeerOutPackets, 'alpsRemPeerOutOctets': alpsRemPeerOutOctets, 'alpsRemPeerInPackets': alpsRemPeerInPackets, 'alpsRemPeerInOctets': alpsRemPeerInOctets, 'alpsRemPeerDropsGiant': alpsRemPeerDropsGiant, 'alpsRemPeerDropsQFull': alpsRemPeerDropsQFull, 'alpsRemPeerDropsPeerUnreach': alpsRemPeerDropsPeerUnreach, 'alpsRemPeerRowStatus': alpsRemPeerRowStatus}


class alpsCktBaseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alpsCktBaseName, alpsCktBaseDlcType], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 1, 1])
	access = 2
	rowstatus = alpsCktBaseRowStatus
	columns = {'alpsCktBaseName': alpsCktBaseName, 'alpsCktBaseDlcType': alpsCktBaseDlcType, 'alpsCktBasePriPeerAddr': alpsCktBasePriPeerAddr, 'alpsCktBaseAlarmsEnabled': alpsCktBaseAlarmsEnabled, 'alpsCktBaseConnType': alpsCktBaseConnType, 'alpsCktBaseState': alpsCktBaseState, 'alpsCktBaseNumActiveAscus': alpsCktBaseNumActiveAscus, 'alpsCktBaseCurrentPeer': alpsCktBaseCurrentPeer, 'alpsCktBaseLifeTimeTimer': alpsCktBaseLifeTimeTimer, 'alpsCktBaseHostLinkNumber': alpsCktBaseHostLinkNumber, 'alpsCktBaseHostLinkType': alpsCktBaseHostLinkType, 'alpsCktBaseRemHld': alpsCktBaseRemHld, 'alpsCktBaseLocalHld': alpsCktBaseLocalHld, 'alpsCktBaseDownReason': alpsCktBaseDownReason, 'alpsCktBaseOutPackets': alpsCktBaseOutPackets, 'alpsCktBaseOutOctets': alpsCktBaseOutOctets, 'alpsCktBaseInPackets': alpsCktBaseInPackets, 'alpsCktBaseInOctets': alpsCktBaseInOctets, 'alpsCktBaseDropsCktDisabled': alpsCktBaseDropsCktDisabled, 'alpsCktBaseDropsQOverflow': alpsCktBaseDropsQOverflow, 'alpsCktBaseDropsLifeTimeExpd': alpsCktBaseDropsLifeTimeExpd, 'alpsCktBaseEnabled': alpsCktBaseEnabled, 'alpsCktBaseRowStatus': alpsCktBaseRowStatus}


class alpsCktX25Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alpsCktBaseName, alpsCktX25DlcType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 2, 1])
	access = 2
	columns = {'alpsCktX25DlcType': alpsCktX25DlcType, 'alpsCktX25IfIndex': alpsCktX25IfIndex, 'alpsCktX25LCN': alpsCktX25LCN, 'alpsCktX25HostX121': alpsCktX25HostX121, 'alpsCktX25RemoteX121': alpsCktX25RemoteX121, 'alpsCktX25DropsVcReset': alpsCktX25DropsVcReset}


class alpsCktP1024Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alpsCktBaseName, alpsCktP1024DlcType], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 3, 1])
	access = 2
	rowstatus = alpsCktP1024RowStatus
	columns = {'alpsCktP1024DlcType': alpsCktP1024DlcType, 'alpsCktP1024BackupPeerAddr': alpsCktP1024BackupPeerAddr, 'alpsCktP1024RetryTimer': alpsCktP1024RetryTimer, 'alpsCktP1024IdleTimer': alpsCktP1024IdleTimer, 'alpsCktP1024EmtoxX121': alpsCktP1024EmtoxX121, 'alpsCktP1024Ax25LCN': alpsCktP1024Ax25LCN, 'alpsCktP1024WinOut': alpsCktP1024WinOut, 'alpsCktP1024WinIn': alpsCktP1024WinIn, 'alpsCktP1024OutPktSize': alpsCktP1024OutPktSize, 'alpsCktP1024InPktSize': alpsCktP1024InPktSize, 'alpsCktP1024SvcMsgList': alpsCktP1024SvcMsgList, 'alpsCktP1024SvcMsgIntvl': alpsCktP1024SvcMsgIntvl, 'alpsCktP1024DropsUnkAscu': alpsCktP1024DropsUnkAscu, 'alpsCktP1024RowStatus': alpsCktP1024RowStatus}


class alpsCktAscuEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alpsCktAscuCktName, alpsCktAscuCktDlcType, alpsCktAscuA1, alpsCktAscuA2], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 3, 4, 1])
	access = 2
	columns = {'alpsCktAscuCktName': alpsCktAscuCktName, 'alpsCktAscuCktDlcType': alpsCktAscuCktDlcType, 'alpsCktAscuA1': alpsCktAscuA1, 'alpsCktAscuA2': alpsCktAscuA2, 'alpsCktAscuIfIndex': alpsCktAscuIfIndex, 'alpsCktAscuId': alpsCktAscuId, 'alpsCktAscuStatus': alpsCktAscuStatus}


class alpsIfP1024Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 1, 1])
	access = 2
	columns = {'alpsIfP1024EncapType': alpsIfP1024EncapType, 'alpsIfP1024PollRespTimeout': alpsIfP1024PollRespTimeout, 'alpsIfP1024GATimeout': alpsIfP1024GATimeout, 'alpsIfP1024PollPauseTimeout': alpsIfP1024PollPauseTimeout, 'alpsIfP1024MaxErrCnt': alpsIfP1024MaxErrCnt, 'alpsIfP1024MaxRetrans': alpsIfP1024MaxRetrans, 'alpsIfP1024CurrErrCnt': alpsIfP1024CurrErrCnt, 'alpsIfP1024MinGoodPollResp': alpsIfP1024MinGoodPollResp, 'alpsIfP1024PollingRatio': alpsIfP1024PollingRatio, 'alpsIfP1024NumAscus': alpsIfP1024NumAscus}


class alpsIfHLinkEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, alpsIfHLinkHostHld, alpsIfHLinkNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 4, 2, 1])
	access = 2
	columns = {'alpsIfHLinkHostHld': alpsIfHLinkHostHld, 'alpsIfHLinkNumber': alpsIfHLinkNumber, 'alpsIfHLinkX25ProtocolType': alpsIfHLinkX25ProtocolType, 'alpsIfHLinkAx25PvcDamp': alpsIfHLinkAx25PvcDamp, 'alpsIfHLinkEmtoxHostX121': alpsIfHLinkEmtoxHostX121, 'alpsIfHLinkActiveCkts': alpsIfHLinkActiveCkts}


class alpsAscuEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, alpsAscuId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 5, 1, 1])
	access = 2
	rowstatus = alpsAscuRowStatus
	columns = {'alpsAscuId': alpsAscuId, 'alpsAscuA1': alpsAscuA1, 'alpsAscuA2': alpsAscuA2, 'alpsAscuCktName': alpsAscuCktName, 'alpsAscuAlarmsEnabled': alpsAscuAlarmsEnabled, 'alpsAscuRetryOption': alpsAscuRetryOption, 'alpsAscuMaxMsgLength': alpsAscuMaxMsgLength, 'alpsAscuFwdStatusOption': alpsAscuFwdStatusOption, 'alpsAscuState': alpsAscuState, 'alpsAscuDownReason': alpsAscuDownReason, 'alpsAscuOutPackets': alpsAscuOutPackets, 'alpsAscuOutOctets': alpsAscuOutOctets, 'alpsAscuInPackets': alpsAscuInPackets, 'alpsAscuInOctets': alpsAscuInOctets, 'alpsAscuDropsGarbledPkts': alpsAscuDropsGarbledPkts, 'alpsAscuDropsAscuDown': alpsAscuDropsAscuDown, 'alpsAscuDropsAscuDisabled': alpsAscuDropsAscuDisabled, 'alpsAscuEnabled': alpsAscuEnabled, 'alpsAscuRowStatus': alpsAscuRowStatus}


class alpsSvcMsgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([alpsSvcMsgListNum, alpsSvcMsgNum], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 1, 1])
	access = 2
	rowstatus = alpsSvcMsgRowStatus
	columns = {'alpsSvcMsgListNum': alpsSvcMsgListNum, 'alpsSvcMsgNum': alpsSvcMsgNum, 'alpsSvcMsg': alpsSvcMsg, 'alpsSvcMsgRowStatus': alpsSvcMsgRowStatus}


class alpsX121ToIpTransEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, alpsX121], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 1, 6, 2, 1])
	access = 2
	rowstatus = alpsX121ToIpTransRowStatus
	columns = {'alpsX121': alpsX121, 'alpsIpAddress': alpsIpAddress, 'alpsX121ToIpTransRowStatus': alpsX121ToIpTransRowStatus}


# notifications (traps) 
class alpsPeerStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 2, 0, 1])

class alpsCktStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 2, 0, 2])

class alpsAscuStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 2, 0, 3])

# groups 
class alpsPeerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 1])
	group = [alpsPeerLocalIpAddr, alpsPeerLocalAtpPort, alpsPeerKeepaliveTimeout, alpsPeerKeepaliveMaxRetries, alpsPeerInCallsAcceptFlag, alpsRemPeerConnType, alpsRemPeerLocalPort, alpsRemPeerRemotePort, alpsRemPeerState, alpsRemPeerUptime, alpsRemPeerNumActiveCkts, alpsRemPeerIdleTimer, alpsRemPeerAlarmsEnabled, alpsRemPeerTCPQlen, alpsRemPeerOutPackets, alpsRemPeerOutOctets, alpsRemPeerInPackets, alpsRemPeerInOctets, alpsRemPeerDropsGiant, alpsRemPeerDropsQFull, alpsRemPeerDropsPeerUnreach, alpsRemPeerRowStatus]

class alpsCktGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 2])
	group = [alpsCktBasePriPeerAddr, alpsCktBaseAlarmsEnabled, alpsCktBaseConnType, alpsCktBaseState, alpsCktBaseNumActiveAscus, alpsCktBaseCurrentPeer, alpsCktBaseLifeTimeTimer, alpsCktBaseHostLinkNumber, alpsCktBaseHostLinkType, alpsCktBaseRemHld, alpsCktBaseLocalHld, alpsCktBaseDownReason, alpsCktBaseOutPackets, alpsCktBaseOutOctets, alpsCktBaseInPackets, alpsCktBaseInOctets, alpsCktBaseDropsCktDisabled, alpsCktBaseDropsQOverflow, alpsCktBaseDropsLifeTimeExpd, alpsCktBaseEnabled, alpsCktBaseRowStatus, alpsCktX25IfIndex, alpsCktX25LCN, alpsCktX25HostX121, alpsCktX25RemoteX121, alpsCktX25DropsVcReset, alpsCktP1024BackupPeerAddr, alpsCktP1024RetryTimer, alpsCktP1024IdleTimer, alpsCktP1024EmtoxX121, alpsCktP1024Ax25LCN, alpsCktP1024WinOut, alpsCktP1024WinIn, alpsCktP1024OutPktSize, alpsCktP1024InPktSize, alpsCktP1024SvcMsgList, alpsCktP1024SvcMsgIntvl, alpsCktP1024DropsUnkAscu, alpsCktP1024RowStatus, alpsCktAscuIfIndex, alpsCktAscuId, alpsCktAscuStatus]

class alpsIfP1024Group(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 3])
	group = [alpsIfP1024EncapType, alpsIfP1024PollRespTimeout, alpsIfP1024GATimeout, alpsIfP1024PollPauseTimeout, alpsIfP1024MaxErrCnt, alpsIfP1024MaxRetrans, alpsIfP1024CurrErrCnt, alpsIfP1024MinGoodPollResp, alpsIfP1024PollingRatio, alpsIfP1024NumAscus]

class alpsIfHostlinkGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 4])
	group = [alpsIfHLinkX25ProtocolType, alpsIfHLinkAx25PvcDamp, alpsIfHLinkEmtoxHostX121, alpsIfHLinkActiveCkts]

class alpsAscuGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 5])
	group = [alpsAscuA1, alpsAscuA2, alpsAscuCktName, alpsAscuAlarmsEnabled, alpsAscuRetryOption, alpsAscuMaxMsgLength, alpsAscuFwdStatusOption, alpsAscuState, alpsAscuDownReason, alpsAscuOutPackets, alpsAscuOutOctets, alpsAscuInPackets, alpsAscuInOctets, alpsAscuDropsGarbledPkts, alpsAscuDropsAscuDown, alpsAscuDropsAscuDisabled, alpsAscuEnabled, alpsAscuRowStatus]

class alpsSvcMsgGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 6])
	group = [alpsSvcMsg, alpsSvcMsgRowStatus]

class alpsAddrTransGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 9, 9, 95, 3, 2, 7])
	group = [alpsIpAddress, alpsX121ToIpTransRowStatus]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
