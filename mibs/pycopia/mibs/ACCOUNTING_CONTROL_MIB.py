# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, mib_2, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, TestAndIncr, DisplayString, TruthValue
from IF_MIB import ifIndex

class ACCOUNTING_CONTROL_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/ACCOUNTING-CONTROL-MIB'
	conformance = 3
	name = 'ACCOUNTING-CONTROL-MIB'
	language = 2
	description = 'The MIB module for managing the collection and storage of\naccounting information for connections in a connection-\noriented network such as ATM.'

# nodes
class accountingControlMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60])
	name = 'accountingControlMIB'

class acctngMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1])
	name = 'acctngMIBObjects'

class acctngSelectionControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1])
	name = 'acctngSelectionControl'

class acctngFileControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2])
	name = 'acctngFileControl'

class acctngInterfaceControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3])
	name = 'acctngInterfaceControl'

class acctngTrapControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 4])
	name = 'acctngTrapControl'

class acctngNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 2])
	name = 'acctngNotifications'

class acctngNotifyPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 2, 0])
	name = 'acctngNotifyPrefix'

class acctngConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 3])
	name = 'acctngConformance'

class acctngGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 3, 1])
	name = 'acctngGroups'

class acctngCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 3, 2])
	name = 'acctngCompliances'


# macros
# types 

class DataCollectionSubtree(pycopia.SMI.Basetypes.ObjectIdentifier):
	status = 1


class DataCollectionList(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 8))


class FileIndex(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 65535))

# scalars 
class acctngAdminStatus(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class acctngOperStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class acctngProtection(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class acctngAgentMode(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'swapOnCommand'), Enum(2, 'swapOnFull')]


class acctngControlTrapThreshold(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class acctngControlTrapEnable(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class acctngSelectionIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class acctngSelectionSubtree(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 2])
	syntaxobject = DataCollectionSubtree


class acctngSelectionList(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 3])
	syntaxobject = DataCollectionList


class acctngSelectionFile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 4])
	syntaxobject = FileIndex


class acctngSelectionType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class acctngSelectionRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class acctngFileIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 1])
	syntaxobject = FileIndex


class acctngFileName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class acctngFileNameSuffix(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class acctngFileDescription(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class acctngFileCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'idle'), Enum(2, 'cmdInProgress'), Enum(3, 'swapToNewFile'), Enum(4, 'collectNow')]


class acctngFileMaximumSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bytes'


class acctngFileCurrentSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'bytes'


class acctngFileFormat(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'ber')]


class acctngFileCollectMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class acctngFileCollectFailedAttempts(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class acctngFileInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class acctngFileMinAge(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class acctngFileRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class acctngInterfaceEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# rows 
class acctngSelectionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([acctngSelectionIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1])
	access = 2
	rowstatus = acctngSelectionRowStatus
	columns = {'acctngSelectionIndex': acctngSelectionIndex, 'acctngSelectionSubtree': acctngSelectionSubtree, 'acctngSelectionList': acctngSelectionList, 'acctngSelectionFile': acctngSelectionFile, 'acctngSelectionType': acctngSelectionType, 'acctngSelectionRowStatus': acctngSelectionRowStatus}


class acctngFileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([acctngFileIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1])
	access = 2
	rowstatus = acctngFileRowStatus
	columns = {'acctngFileIndex': acctngFileIndex, 'acctngFileName': acctngFileName, 'acctngFileNameSuffix': acctngFileNameSuffix, 'acctngFileDescription': acctngFileDescription, 'acctngFileCommand': acctngFileCommand, 'acctngFileMaximumSize': acctngFileMaximumSize, 'acctngFileCurrentSize': acctngFileCurrentSize, 'acctngFileFormat': acctngFileFormat, 'acctngFileCollectMode': acctngFileCollectMode, 'acctngFileCollectFailedAttempts': acctngFileCollectFailedAttempts, 'acctngFileInterval': acctngFileInterval, 'acctngFileMinAge': acctngFileMinAge, 'acctngFileRowStatus': acctngFileRowStatus}


class acctngInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 1, 3, 5, 1])
	access = 2
	columns = {'acctngInterfaceEnable': acctngInterfaceEnable}


# notifications (traps) 
class acctngFileNearlyFull(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 2, 0, 1])

class acctngFileFull(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 2, 0, 2])

# groups 
class acctngBasicGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 3, 1, 1])
	group = [acctngSelectionSubtree, acctngSelectionList, acctngSelectionFile, acctngSelectionType, acctngSelectionRowStatus, acctngFileName, acctngFileNameSuffix, acctngFileDescription, acctngFileCommand, acctngFileMaximumSize, acctngFileCurrentSize, acctngFileRowStatus, acctngFileFormat, acctngFileCollectMode, acctngFileCollectFailedAttempts, acctngFileInterval, acctngFileMinAge, acctngAdminStatus, acctngOperStatus, acctngProtection, acctngAgentMode, acctngInterfaceEnable, acctngControlTrapThreshold, acctngControlTrapEnable]

class acctngNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 60, 3, 1, 2])
	group = [acctngFileNearlyFull, acctngFileFull]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
