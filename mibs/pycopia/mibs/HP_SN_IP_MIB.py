# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from HP_SN_ROOT_MIB import snIp, snRip, snDvmrp, snFsrp, snGblRt, snPim, snVrrp, snLoopbackIf
from RFC1155_SMI import IpAddress, Counter, TimeTicks

class HP_SN_IP_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/site/HP-SN-IP-MIB'
	conformance = 2
	name = 'HP-SN-IP-MIB'
	language = 1

# nodes
class snRtIpGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1])
	name = 'snRtIpGeneral'

class snRtBcastFwd(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9])
	name = 'snRtBcastFwd'

class snRtBcastFwdGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 1])
	name = 'snRtBcastFwdGeneral'

class snRtUdpBcastFwdPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 2])
	name = 'snRtUdpBcastFwdPort'

class snRtUdpHelper(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 3])
	name = 'snRtUdpHelper'

class snRtIpTraceRoute(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10])
	name = 'snRtIpTraceRoute'

class snRtIpTraceRouteGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 1])
	name = 'snRtIpTraceRouteGeneral'

class snRtIpTraceRouteResult(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 2])
	name = 'snRtIpTraceRouteResult'

class snRtIpRipGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1])
	name = 'snRtIpRipGeneral'

class snDvmrpMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1])
	name = 'snDvmrpMIBObjects'

class snFsrpGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 1])
	name = 'snFsrpGlobal'

class snFsrpIntf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2])
	name = 'snFsrpIntf'

class snGblRtGeneral(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 8, 1])
	name = 'snGblRtGeneral'

class snPimMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1])
	name = 'snPimMIBObjects'

class snVrrpGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 1])
	name = 'snVrrpGlobal'

class snVrrpIntf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2])
	name = 'snVrrpIntf'

class snVrrpVirRtr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3])
	name = 'snVrrpVirRtr'


# macros
# types 
DisplayString = pycopia.SMI.Basetypes.DisplayString

class RtrStatus(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class ClearStatus(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'normal'), Enum(1, 'clear')]


class RowSts(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(1, 'other'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create')]


class PortIndex(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(1, 3900))


class Action(pycopia.SMI.Basetypes.Enumeration):
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit')]

PhysAddress = pycopia.SMI.Basetypes.PhysAddress

class Metric(pycopia.SMI.Basetypes.Integer32):
	ranges = Ranges(Range(0, 65535))


class PortMask(pycopia.SMI.Basetypes.Integer32):
	pass

# scalars 
class snRtClearArpCache(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 1])
	syntaxobject = ClearStatus


class snRtClearIpCache(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 2])
	syntaxobject = ClearStatus


class snRtClearIpRoute(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 3])
	syntaxobject = ClearStatus


class snRtBootpRelayMax(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtArpAge(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpIrdpEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 7])
	syntaxobject = RtrStatus


class snRtIpLoadShare(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 8])
	syntaxobject = RtrStatus


class snRtIpProxyArp(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 9])
	syntaxobject = RtrStatus


class snRtIpRarp(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 10])
	syntaxobject = RtrStatus


class snRtIpTtl(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpSetAllPortConfig(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFwdCacheMaxEntries(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFwdCacheCurEntries(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpMaxStaticRouteEntries(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpDirBcastFwd(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 16])
	syntaxobject = RtrStatus


class snRtIpLoadShareNumOfPaths(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpLoadShareMaxPaths(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpLoadShareMinPaths(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpProtocolRouterId(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpSourceRoute(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 1, 21])
	syntaxobject = RtrStatus


class snRtUdpBcastFwdEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 1, 1])
	syntaxobject = RtrStatus


class snRtIpTraceRouteTargetAddr(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpTraceRouteMinTtl(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpTraceRouteMaxTtl(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpTraceRouteTimeOut(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpTraceRouteControl(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'start'), Enum(2, 'abort'), Enum(3, 'success'), Enum(4, 'failure'), Enum(5, 'inProgress')]


class snRtIpRipEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 1])
	syntaxobject = RtrStatus


class snRtIpRipUpdateTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipRedisEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 3])
	syntaxobject = RtrStatus


class snRtIpRipRedisDefMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipSetAllPortConfig(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipGblFiltList(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtIpRipFiltOnAllPort(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'valid'), Enum(2, 'deleteAllInBound'), Enum(3, 'deleteAllOutBound'), Enum(4, 'addAllInBound'), Enum(5, 'addAllOutBound')]


class snRtIpRipDistance(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpVersion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class snDvmrpEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 2])
	syntaxobject = RtrStatus


class snDvmrpGenerationId(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpProbeInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpReportInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpTriggerInterval(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpNeighborRouterTimeout(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteExpireTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteDiscardTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpPruneAge(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpGraftRetransmitTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpDefaultRoute(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snFsrpGroupOperMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snFsrpIfStateChangeTrap(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snGblRtRouteOnly(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 8, 1, 1])
	syntaxobject = RtrStatus


class snPimEnable(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 1])
	syntaxobject = RtrStatus


class snPimNeighborRouterTimeout(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimHelloTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimPruneTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimGraftRetransmitTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimInactivityTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpGroupOperMode(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVrrpIfStateChangeTrap(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVrrpIfMaxNumVridPerIntf(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpIfMaxNumVridPerSystem(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpClearVrrpStat(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'normal'), Enum(1, 'clear')]


# columns
class snRtIpStaticRouteIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpStaticRouteDest(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpStaticRouteMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpStaticRouteNextHop(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpStaticRouteMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpStaticRouteRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 6])
	syntaxobject = RowSts


class snRtIpStaticRouteDistance(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFilterIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFilterAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'deny'), Enum(1, 'permit'), Enum(2, 'qosEnabled')]


class snRtIpFilterProtocol(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFilterSourceIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpFilterSourceMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpFilterDestIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpFilterDestMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpFilterOperator(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'greater'), Enum(2, 'equal'), Enum(3, 'less'), Enum(4, 'notEqual')]


class snRtIpFilterOperand(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFilterRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 10])
	syntaxobject = RowSts


class snRtIpFilterEstablished(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 11])
	syntaxobject = RtrStatus


class snRtIpFilterQosPriority(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'level0'), Enum(1, 'level1'), Enum(2, 'level2'), Enum(3, 'level3'), Enum(4, 'level4'), Enum(5, 'level5'), Enum(6, 'level6'), Enum(7, 'level7')]


class snRtIpRarpIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRarpMac(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtIpRarpIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpRarpRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 4, 1, 4])
	syntaxobject = RowSts


class snRtStaticArpIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtStaticArpIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtStaticArpMac(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtStaticArpPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 5, 1, 4])
	syntaxobject = PortIndex


class snRtStaticArpRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 5, 1, 5])
	syntaxobject = RowSts


class snRtIpPortAddrPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 6, 1, 1])
	syntaxobject = PortIndex


class snRtIpPortAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpPortSubnetMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpPortAddrType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'primary'), Enum(2, 'secondary')]


class snRtIpPortRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 6, 1, 5])
	syntaxobject = RowSts


class snRtIpPortAccessPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 7, 1, 1])
	syntaxobject = PortIndex


class snRtIpPortAccessDirection(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'in'), Enum(2, 'out')]


class snRtIpPortAccessFilters(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtIpPortAccessRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 7, 1, 4])
	syntaxobject = RowSts


class snRtIpPortConfigPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 8, 1, 1])
	syntaxobject = PortIndex


class snRtIpPortMtu(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpPortEncap(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ethernet'), Enum(2, 'snap'), Enum(3, 'hdlc'), Enum(4, 'ppp')]


class snRtIpPortMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpPortDirBcastFwd(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 8, 1, 5])
	syntaxobject = RtrStatus


class snRtUdpBcastFwdPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtUdpBcastFwdPortNumber(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtUdpBcastFwdPortRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 2, 1, 1, 3])
	syntaxobject = RowSts


class snRtUdpHelperPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 3, 1, 1, 1])
	syntaxobject = PortIndex


class snRtUdpHelperIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtUdpHelperAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtUdpHelperRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 3, 1, 1, 4])
	syntaxobject = RowSts


class snRtIpTraceRouteResultIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpTraceRouteResultAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpTraceRouteResultRoundTripTime1(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snRtIpTraceRouteResultRoundTripTime2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snRtIpFwdCacheIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFwdCacheIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpFwdCacheMac(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtIpFwdCacheNextHopIp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpFwdCacheOutgoingPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpFwdCacheType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dynamic'), Enum(2, 'permanent')]


class snRtIpFwdCacheAction(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'forward'), Enum(3, 'forUs'), Enum(4, 'waitForArp'), Enum(5, 'complexFilter'), Enum(6, 'icmpDeny'), Enum(7, 'dropPacket')]


class snRtIpFwdCacheFragCheck(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snRtIpFwdCacheSnapHdr(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snRtIpFwdCacheVLanId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipPortConfigPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 2, 1, 1])
	syntaxobject = PortIndex


class snRtIpRipPortVersion(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'v1Only'), Enum(2, 'v2Only'), Enum(3, 'v1CompatibleV2')]


class snRtIpRipPortPoisonReverse(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 2, 1, 3])
	syntaxobject = RtrStatus


class snRtIpRipPortLearnDefault(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snRtIpRipRedisIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipRedisAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 2])
	syntaxobject = Action


class snRtIpRipRedisProtocol(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'all'), Enum(3, 'static'), Enum(4, 'ospf'), Enum(5, 'bgp')]


class snRtIpRipRedisIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpRipRedisMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpRipRedisMatchMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 6])
	syntaxobject = Metric


class snRtIpRipRedisSetMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipRedisRowStatus(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1, 8])
	syntaxobject = RowSts


class snRtIpRipRouteFilterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipRouteFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 4, 1, 2])
	syntaxobject = Action


class snRtIpRipRouteFilterIpAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpRipRouteFilterSubnetMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpRipRouteFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snRtIpRipNbrFilterId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snRtIpRipNbrFilterAction(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 5, 1, 2])
	syntaxobject = Action


class snRtIpRipNbrFilterSourceIp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snRtIpRipNbrFilterRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snRtIpRipPortAccessPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 6, 1, 1])
	syntaxobject = PortIndex


class snRtIpRipPortAccessDir(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'in'), Enum(2, 'out')]


class snRtIpRipPortAccessFilterList(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snRtIpRipPortAccessRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snDvmrpVInterfaceVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpVInterfaceType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tunnel'), Enum(2, 'querier'), Enum(3, 'subnet')]


class snDvmrpVInterfaceOperState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class snDvmrpVInterfaceLocalAddress(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpVInterfaceRemoteAddress(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpVInterfaceRemoteSubnetMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpVInterfaceMetric(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpVInterfaceTtlThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpVInterfaceAdvertiseLocal(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 9])
	syntaxobject = RtrStatus


class snDvmrpVInterfaceEncapsulation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 10])
	syntaxobject = RtrStatus


class snDvmrpVInterfaceStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snDvmrpNeighborEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpNeighborVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpNeighborAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpNeighborUpTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snDvmrpNeighborExpiryTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snDvmrpNeighborGenerationId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpNeighborMajorVersion(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpNeighborMinorVersion(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpNeighborCapabilities(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteSource(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpRouteSourceMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpRouteUpstreamNeighbor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpRouteVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteMetric(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteExpiryTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snDvmrpRouteNextHopSource(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpRouteNextHopSourceMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snDvmrpRouteNextHopVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 16, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpRouteNextHopType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 16, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'leaf'), Enum(2, 'branch')]


class snDvmrpVIfStatVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snDvmrpVIfStatInPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatInOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutOctets(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatInProbePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutProbePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatDiscardProbePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatInRtUpdatePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutRtUpdatePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatDiscardRtUpdatePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatInGraftPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutGraftPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatDiscardGraftPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatInGraftAckPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutGraftAckPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatDiscardGraftAckPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatInPrunePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatOutPrunePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snDvmrpVIfStatDiscardPrunePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snFsrpIfPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFsrpIfIpAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snFsrpIfVirRtrIpAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snFsrpIfOtherRtrIpAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snFsrpIfPreferLevel(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFsrpIfTrackPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 6])
	syntaxobject = PortMask


class snFsrpIfRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snFsrpIfState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'init'), Enum(1, 'negotiating'), Enum(2, 'standby'), Enum(3, 'active')]


class snFsrpIfKeepAliveTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFsrpIfRouterDeadTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snFsrpIfChassisTrackPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snPimVInterfaceVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimVInterfaceType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tunnel'), Enum(2, 'subnet')]


class snPimVInterfaceLocalAddress(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snPimVInterfaceLocalSubnetMask(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snPimVInterfaceRemoteAddress(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snPimVInterfaceDR(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snPimVInterfaceTtlThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimVInterfaceStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snPimNeighborEntryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimNeighborVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimNeighborAddress(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class snPimNeighborUpTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snPimNeighborExpiryTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class snPimVIfStatVifIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snPimVIfStatInJoinPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatOutJoinPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatDiscardJoinPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatInPrunePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatOutPrunePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatDiscardPrunePkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatInAssertPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatOutAssertPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatDiscardAssertPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatInHelloPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatOutHelloPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatDiscardHelloPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatInGraftPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatOutGraftPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatDiscardGraftPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatInGraftAckPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatOutGraftAckPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snPimVIfStatDiscardGraftAckPkts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpIfPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpIfAuthType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'noAuth'), Enum(1, 'simpleTextPasswd'), Enum(2, 'ipAuthHeader')]


class snVrrpIfAuthPassword(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVrrpIfRxHeaderErrCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpIfRxAuthTypeErrCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpIfRxAuthPwdMismatchErrCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpIfRxVridErrCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrPort(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrId(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrOwnership(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'incomplete'), Enum(1, 'owner'), Enum(2, 'backup')]


class snVrrpVirRtrCfgPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrTrackPriority(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrCurrPriority(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrHelloInt(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrDeadInt(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snVrrpVirRtrPreemptMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVrrpVirRtrState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'init'), Enum(1, 'master'), Enum(2, 'backup')]


class snVrrpVirRtrActivate(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snVrrpVirRtrIpAddrMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVrrpVirRtrTrackPortMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVrrpVirRtrTrackVifMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class snVrrpVirRtrRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


class snVrrpVirRtrRxArpPktDropCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxIpPktDropCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxPortMismatchCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxNumOfIpMismatchCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxIpMismatchCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxHelloIntMismatchCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxPriorityZeroFromMasterCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrRxHigherPriorityCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrTransToMasterStateCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrTransToBackupStateCnts(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class snVrrpVirRtrCurrDeadInt(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snLoopbackIntfConfigPortIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class snLoopbackIntfMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class snLoopbackIntfRowStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 13, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'invalid'), Enum(2, 'valid'), Enum(3, 'delete'), Enum(4, 'create'), Enum(5, 'modify')]


# rows 
class snRtIpStaticRouteEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpStaticRouteIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 2, 1])
	access = 2
	columns = {'snRtIpStaticRouteIndex': snRtIpStaticRouteIndex, 'snRtIpStaticRouteDest': snRtIpStaticRouteDest, 'snRtIpStaticRouteMask': snRtIpStaticRouteMask, 'snRtIpStaticRouteNextHop': snRtIpStaticRouteNextHop, 'snRtIpStaticRouteMetric': snRtIpStaticRouteMetric, 'snRtIpStaticRouteRowStatus': snRtIpStaticRouteRowStatus, 'snRtIpStaticRouteDistance': snRtIpStaticRouteDistance}


class snRtIpFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpFilterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 3, 1])
	access = 2
	columns = {'snRtIpFilterIndex': snRtIpFilterIndex, 'snRtIpFilterAction': snRtIpFilterAction, 'snRtIpFilterProtocol': snRtIpFilterProtocol, 'snRtIpFilterSourceIp': snRtIpFilterSourceIp, 'snRtIpFilterSourceMask': snRtIpFilterSourceMask, 'snRtIpFilterDestIp': snRtIpFilterDestIp, 'snRtIpFilterDestMask': snRtIpFilterDestMask, 'snRtIpFilterOperator': snRtIpFilterOperator, 'snRtIpFilterOperand': snRtIpFilterOperand, 'snRtIpFilterRowStatus': snRtIpFilterRowStatus, 'snRtIpFilterEstablished': snRtIpFilterEstablished, 'snRtIpFilterQosPriority': snRtIpFilterQosPriority}


class snRtIpRarpEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpRarpIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 4, 1])
	access = 2
	columns = {'snRtIpRarpIndex': snRtIpRarpIndex, 'snRtIpRarpMac': snRtIpRarpMac, 'snRtIpRarpIp': snRtIpRarpIp, 'snRtIpRarpRowStatus': snRtIpRarpRowStatus}


class snRtStaticArpEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtStaticArpIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 5, 1])
	access = 2
	columns = {'snRtStaticArpIndex': snRtStaticArpIndex, 'snRtStaticArpIp': snRtStaticArpIp, 'snRtStaticArpMac': snRtStaticArpMac, 'snRtStaticArpPort': snRtStaticArpPort, 'snRtStaticArpRowStatus': snRtStaticArpRowStatus}


class snRtIpPortAddrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpPortAddrPortIndex, snRtIpPortAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 6, 1])
	access = 2
	columns = {'snRtIpPortAddrPortIndex': snRtIpPortAddrPortIndex, 'snRtIpPortAddress': snRtIpPortAddress, 'snRtIpPortSubnetMask': snRtIpPortSubnetMask, 'snRtIpPortAddrType': snRtIpPortAddrType, 'snRtIpPortRowStatus': snRtIpPortRowStatus}


class snRtIpPortAccessEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpPortAccessPortIndex, snRtIpPortAccessDirection], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 7, 1])
	access = 2
	columns = {'snRtIpPortAccessPortIndex': snRtIpPortAccessPortIndex, 'snRtIpPortAccessDirection': snRtIpPortAccessDirection, 'snRtIpPortAccessFilters': snRtIpPortAccessFilters, 'snRtIpPortAccessRowStatus': snRtIpPortAccessRowStatus}


class snRtIpPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpPortConfigPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 8, 1])
	access = 2
	columns = {'snRtIpPortConfigPortIndex': snRtIpPortConfigPortIndex, 'snRtIpPortMtu': snRtIpPortMtu, 'snRtIpPortEncap': snRtIpPortEncap, 'snRtIpPortMetric': snRtIpPortMetric, 'snRtIpPortDirBcastFwd': snRtIpPortDirBcastFwd}


class snRtUdpBcastFwdPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtUdpBcastFwdPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 2, 1, 1])
	access = 2
	columns = {'snRtUdpBcastFwdPortIndex': snRtUdpBcastFwdPortIndex, 'snRtUdpBcastFwdPortNumber': snRtUdpBcastFwdPortNumber, 'snRtUdpBcastFwdPortRowStatus': snRtUdpBcastFwdPortRowStatus}


class snRtUdpHelperEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtUdpHelperPortIndex, snRtUdpHelperIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 9, 3, 1, 1])
	access = 2
	columns = {'snRtUdpHelperPortIndex': snRtUdpHelperPortIndex, 'snRtUdpHelperIndex': snRtUdpHelperIndex, 'snRtUdpHelperAddr': snRtUdpHelperAddr, 'snRtUdpHelperRowStatus': snRtUdpHelperRowStatus}


class snRtIpTraceRouteResultEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpTraceRouteResultIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 10, 2, 1, 1])
	access = 2
	columns = {'snRtIpTraceRouteResultIndex': snRtIpTraceRouteResultIndex, 'snRtIpTraceRouteResultAddr': snRtIpTraceRouteResultAddr, 'snRtIpTraceRouteResultRoundTripTime1': snRtIpTraceRouteResultRoundTripTime1, 'snRtIpTraceRouteResultRoundTripTime2': snRtIpTraceRouteResultRoundTripTime2}


class snRtIpFwdCacheEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpFwdCacheIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 2, 11, 1])
	access = 2
	columns = {'snRtIpFwdCacheIndex': snRtIpFwdCacheIndex, 'snRtIpFwdCacheIp': snRtIpFwdCacheIp, 'snRtIpFwdCacheMac': snRtIpFwdCacheMac, 'snRtIpFwdCacheNextHopIp': snRtIpFwdCacheNextHopIp, 'snRtIpFwdCacheOutgoingPort': snRtIpFwdCacheOutgoingPort, 'snRtIpFwdCacheType': snRtIpFwdCacheType, 'snRtIpFwdCacheAction': snRtIpFwdCacheAction, 'snRtIpFwdCacheFragCheck': snRtIpFwdCacheFragCheck, 'snRtIpFwdCacheSnapHdr': snRtIpFwdCacheSnapHdr, 'snRtIpFwdCacheVLanId': snRtIpFwdCacheVLanId}


class snRtIpRipPortConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpRipPortConfigPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 2, 1])
	access = 2
	columns = {'snRtIpRipPortConfigPortIndex': snRtIpRipPortConfigPortIndex, 'snRtIpRipPortVersion': snRtIpRipPortVersion, 'snRtIpRipPortPoisonReverse': snRtIpRipPortPoisonReverse, 'snRtIpRipPortLearnDefault': snRtIpRipPortLearnDefault}


class snRtIpRipRedisEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpRipRedisIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 3, 1])
	access = 2
	columns = {'snRtIpRipRedisIndex': snRtIpRipRedisIndex, 'snRtIpRipRedisAction': snRtIpRipRedisAction, 'snRtIpRipRedisProtocol': snRtIpRipRedisProtocol, 'snRtIpRipRedisIp': snRtIpRipRedisIp, 'snRtIpRipRedisMask': snRtIpRipRedisMask, 'snRtIpRipRedisMatchMetric': snRtIpRipRedisMatchMetric, 'snRtIpRipRedisSetMetric': snRtIpRipRedisSetMetric, 'snRtIpRipRedisRowStatus': snRtIpRipRedisRowStatus}


class snRtIpRipRouteFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpRipRouteFilterId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 4, 1])
	access = 2
	columns = {'snRtIpRipRouteFilterId': snRtIpRipRouteFilterId, 'snRtIpRipRouteFilterAction': snRtIpRipRouteFilterAction, 'snRtIpRipRouteFilterIpAddr': snRtIpRipRouteFilterIpAddr, 'snRtIpRipRouteFilterSubnetMask': snRtIpRipRouteFilterSubnetMask, 'snRtIpRipRouteFilterRowStatus': snRtIpRipRouteFilterRowStatus}


class snRtIpRipNbrFilterEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpRipNbrFilterId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 5, 1])
	access = 2
	columns = {'snRtIpRipNbrFilterId': snRtIpRipNbrFilterId, 'snRtIpRipNbrFilterAction': snRtIpRipNbrFilterAction, 'snRtIpRipNbrFilterSourceIp': snRtIpRipNbrFilterSourceIp, 'snRtIpRipNbrFilterRowStatus': snRtIpRipNbrFilterRowStatus}


class snRtIpRipPortAccessEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snRtIpRipPortAccessPort, snRtIpRipPortAccessDir], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 3, 6, 1])
	access = 2
	columns = {'snRtIpRipPortAccessPort': snRtIpRipPortAccessPort, 'snRtIpRipPortAccessDir': snRtIpRipPortAccessDir, 'snRtIpRipPortAccessFilterList': snRtIpRipPortAccessFilterList, 'snRtIpRipPortAccessRowStatus': snRtIpRipPortAccessRowStatus}


class snDvmrpVInterfaceEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snDvmrpVInterfaceVifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 13, 1])
	access = 2
	columns = {'snDvmrpVInterfaceVifIndex': snDvmrpVInterfaceVifIndex, 'snDvmrpVInterfaceType': snDvmrpVInterfaceType, 'snDvmrpVInterfaceOperState': snDvmrpVInterfaceOperState, 'snDvmrpVInterfaceLocalAddress': snDvmrpVInterfaceLocalAddress, 'snDvmrpVInterfaceRemoteAddress': snDvmrpVInterfaceRemoteAddress, 'snDvmrpVInterfaceRemoteSubnetMask': snDvmrpVInterfaceRemoteSubnetMask, 'snDvmrpVInterfaceMetric': snDvmrpVInterfaceMetric, 'snDvmrpVInterfaceTtlThreshold': snDvmrpVInterfaceTtlThreshold, 'snDvmrpVInterfaceAdvertiseLocal': snDvmrpVInterfaceAdvertiseLocal, 'snDvmrpVInterfaceEncapsulation': snDvmrpVInterfaceEncapsulation, 'snDvmrpVInterfaceStatus': snDvmrpVInterfaceStatus}


class snDvmrpNeighborEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snDvmrpNeighborEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 14, 1])
	access = 2
	columns = {'snDvmrpNeighborEntryIndex': snDvmrpNeighborEntryIndex, 'snDvmrpNeighborVifIndex': snDvmrpNeighborVifIndex, 'snDvmrpNeighborAddress': snDvmrpNeighborAddress, 'snDvmrpNeighborUpTime': snDvmrpNeighborUpTime, 'snDvmrpNeighborExpiryTime': snDvmrpNeighborExpiryTime, 'snDvmrpNeighborGenerationId': snDvmrpNeighborGenerationId, 'snDvmrpNeighborMajorVersion': snDvmrpNeighborMajorVersion, 'snDvmrpNeighborMinorVersion': snDvmrpNeighborMinorVersion, 'snDvmrpNeighborCapabilities': snDvmrpNeighborCapabilities}


class snDvmrpRouteEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snDvmrpRouteEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 15, 1])
	access = 2
	columns = {'snDvmrpRouteEntryIndex': snDvmrpRouteEntryIndex, 'snDvmrpRouteSource': snDvmrpRouteSource, 'snDvmrpRouteSourceMask': snDvmrpRouteSourceMask, 'snDvmrpRouteUpstreamNeighbor': snDvmrpRouteUpstreamNeighbor, 'snDvmrpRouteVifIndex': snDvmrpRouteVifIndex, 'snDvmrpRouteMetric': snDvmrpRouteMetric, 'snDvmrpRouteExpiryTime': snDvmrpRouteExpiryTime}


class snDvmrpRouteNextHopEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snDvmrpRouteNextHopSource, snDvmrpRouteNextHopSourceMask, snDvmrpRouteNextHopVifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 16, 1])
	access = 2
	columns = {'snDvmrpRouteNextHopSource': snDvmrpRouteNextHopSource, 'snDvmrpRouteNextHopSourceMask': snDvmrpRouteNextHopSourceMask, 'snDvmrpRouteNextHopVifIndex': snDvmrpRouteNextHopVifIndex, 'snDvmrpRouteNextHopType': snDvmrpRouteNextHopType}


class snDvmrpVIfStatEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snDvmrpVIfStatVifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 5, 1, 17, 1])
	access = 2
	columns = {'snDvmrpVIfStatVifIndex': snDvmrpVIfStatVifIndex, 'snDvmrpVIfStatInPkts': snDvmrpVIfStatInPkts, 'snDvmrpVIfStatOutPkts': snDvmrpVIfStatOutPkts, 'snDvmrpVIfStatInOctets': snDvmrpVIfStatInOctets, 'snDvmrpVIfStatOutOctets': snDvmrpVIfStatOutOctets, 'snDvmrpVIfStatInProbePkts': snDvmrpVIfStatInProbePkts, 'snDvmrpVIfStatOutProbePkts': snDvmrpVIfStatOutProbePkts, 'snDvmrpVIfStatDiscardProbePkts': snDvmrpVIfStatDiscardProbePkts, 'snDvmrpVIfStatInRtUpdatePkts': snDvmrpVIfStatInRtUpdatePkts, 'snDvmrpVIfStatOutRtUpdatePkts': snDvmrpVIfStatOutRtUpdatePkts, 'snDvmrpVIfStatDiscardRtUpdatePkts': snDvmrpVIfStatDiscardRtUpdatePkts, 'snDvmrpVIfStatInGraftPkts': snDvmrpVIfStatInGraftPkts, 'snDvmrpVIfStatOutGraftPkts': snDvmrpVIfStatOutGraftPkts, 'snDvmrpVIfStatDiscardGraftPkts': snDvmrpVIfStatDiscardGraftPkts, 'snDvmrpVIfStatInGraftAckPkts': snDvmrpVIfStatInGraftAckPkts, 'snDvmrpVIfStatOutGraftAckPkts': snDvmrpVIfStatOutGraftAckPkts, 'snDvmrpVIfStatDiscardGraftAckPkts': snDvmrpVIfStatDiscardGraftAckPkts, 'snDvmrpVIfStatInPrunePkts': snDvmrpVIfStatInPrunePkts, 'snDvmrpVIfStatOutPrunePkts': snDvmrpVIfStatOutPrunePkts, 'snDvmrpVIfStatDiscardPrunePkts': snDvmrpVIfStatDiscardPrunePkts}


class snFsrpIfEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snFsrpIfPort, snFsrpIfIpAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 7, 2, 1, 1])
	access = 2
	columns = {'snFsrpIfPort': snFsrpIfPort, 'snFsrpIfIpAddress': snFsrpIfIpAddress, 'snFsrpIfVirRtrIpAddr': snFsrpIfVirRtrIpAddr, 'snFsrpIfOtherRtrIpAddr': snFsrpIfOtherRtrIpAddr, 'snFsrpIfPreferLevel': snFsrpIfPreferLevel, 'snFsrpIfTrackPortMask': snFsrpIfTrackPortMask, 'snFsrpIfRowStatus': snFsrpIfRowStatus, 'snFsrpIfState': snFsrpIfState, 'snFsrpIfKeepAliveTime': snFsrpIfKeepAliveTime, 'snFsrpIfRouterDeadTime': snFsrpIfRouterDeadTime, 'snFsrpIfChassisTrackPortMask': snFsrpIfChassisTrackPortMask}


class snPimVInterfaceEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snPimVInterfaceVifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 7, 1])
	access = 2
	columns = {'snPimVInterfaceVifIndex': snPimVInterfaceVifIndex, 'snPimVInterfaceType': snPimVInterfaceType, 'snPimVInterfaceLocalAddress': snPimVInterfaceLocalAddress, 'snPimVInterfaceLocalSubnetMask': snPimVInterfaceLocalSubnetMask, 'snPimVInterfaceRemoteAddress': snPimVInterfaceRemoteAddress, 'snPimVInterfaceDR': snPimVInterfaceDR, 'snPimVInterfaceTtlThreshold': snPimVInterfaceTtlThreshold, 'snPimVInterfaceStatus': snPimVInterfaceStatus}


class snPimNeighborEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snPimNeighborEntryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 8, 1])
	access = 2
	columns = {'snPimNeighborEntryIndex': snPimNeighborEntryIndex, 'snPimNeighborVifIndex': snPimNeighborVifIndex, 'snPimNeighborAddress': snPimNeighborAddress, 'snPimNeighborUpTime': snPimNeighborUpTime, 'snPimNeighborExpiryTime': snPimNeighborExpiryTime}


class snPimVIfStatEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snPimVIfStatVifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 9, 1, 9, 1])
	access = 2
	columns = {'snPimVIfStatVifIndex': snPimVIfStatVifIndex, 'snPimVIfStatInJoinPkts': snPimVIfStatInJoinPkts, 'snPimVIfStatOutJoinPkts': snPimVIfStatOutJoinPkts, 'snPimVIfStatDiscardJoinPkts': snPimVIfStatDiscardJoinPkts, 'snPimVIfStatInPrunePkts': snPimVIfStatInPrunePkts, 'snPimVIfStatOutPrunePkts': snPimVIfStatOutPrunePkts, 'snPimVIfStatDiscardPrunePkts': snPimVIfStatDiscardPrunePkts, 'snPimVIfStatInAssertPkts': snPimVIfStatInAssertPkts, 'snPimVIfStatOutAssertPkts': snPimVIfStatOutAssertPkts, 'snPimVIfStatDiscardAssertPkts': snPimVIfStatDiscardAssertPkts, 'snPimVIfStatInHelloPkts': snPimVIfStatInHelloPkts, 'snPimVIfStatOutHelloPkts': snPimVIfStatOutHelloPkts, 'snPimVIfStatDiscardHelloPkts': snPimVIfStatDiscardHelloPkts, 'snPimVIfStatInGraftPkts': snPimVIfStatInGraftPkts, 'snPimVIfStatOutGraftPkts': snPimVIfStatOutGraftPkts, 'snPimVIfStatDiscardGraftPkts': snPimVIfStatDiscardGraftPkts, 'snPimVIfStatInGraftAckPkts': snPimVIfStatInGraftAckPkts, 'snPimVIfStatOutGraftAckPkts': snPimVIfStatOutGraftAckPkts, 'snPimVIfStatDiscardGraftAckPkts': snPimVIfStatDiscardGraftAckPkts}


class snVrrpIfEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVrrpIfPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 2, 1, 1])
	access = 2
	columns = {'snVrrpIfPort': snVrrpIfPort, 'snVrrpIfAuthType': snVrrpIfAuthType, 'snVrrpIfAuthPassword': snVrrpIfAuthPassword, 'snVrrpIfRxHeaderErrCnts': snVrrpIfRxHeaderErrCnts, 'snVrrpIfRxAuthTypeErrCnts': snVrrpIfRxAuthTypeErrCnts, 'snVrrpIfRxAuthPwdMismatchErrCnts': snVrrpIfRxAuthPwdMismatchErrCnts, 'snVrrpIfRxVridErrCnts': snVrrpIfRxVridErrCnts}


class snVrrpVirRtrEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snVrrpVirRtrPort, snVrrpVirRtrId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 12, 3, 1, 1])
	access = 2
	columns = {'snVrrpVirRtrPort': snVrrpVirRtrPort, 'snVrrpVirRtrId': snVrrpVirRtrId, 'snVrrpVirRtrOwnership': snVrrpVirRtrOwnership, 'snVrrpVirRtrCfgPriority': snVrrpVirRtrCfgPriority, 'snVrrpVirRtrTrackPriority': snVrrpVirRtrTrackPriority, 'snVrrpVirRtrCurrPriority': snVrrpVirRtrCurrPriority, 'snVrrpVirRtrHelloInt': snVrrpVirRtrHelloInt, 'snVrrpVirRtrDeadInt': snVrrpVirRtrDeadInt, 'snVrrpVirRtrPreemptMode': snVrrpVirRtrPreemptMode, 'snVrrpVirRtrState': snVrrpVirRtrState, 'snVrrpVirRtrActivate': snVrrpVirRtrActivate, 'snVrrpVirRtrIpAddrMask': snVrrpVirRtrIpAddrMask, 'snVrrpVirRtrTrackPortMask': snVrrpVirRtrTrackPortMask, 'snVrrpVirRtrTrackVifMask': snVrrpVirRtrTrackVifMask, 'snVrrpVirRtrRowStatus': snVrrpVirRtrRowStatus, 'snVrrpVirRtrRxArpPktDropCnts': snVrrpVirRtrRxArpPktDropCnts, 'snVrrpVirRtrRxIpPktDropCnts': snVrrpVirRtrRxIpPktDropCnts, 'snVrrpVirRtrRxPortMismatchCnts': snVrrpVirRtrRxPortMismatchCnts, 'snVrrpVirRtrRxNumOfIpMismatchCnts': snVrrpVirRtrRxNumOfIpMismatchCnts, 'snVrrpVirRtrRxIpMismatchCnts': snVrrpVirRtrRxIpMismatchCnts, 'snVrrpVirRtrRxHelloIntMismatchCnts': snVrrpVirRtrRxHelloIntMismatchCnts, 'snVrrpVirRtrRxPriorityZeroFromMasterCnts': snVrrpVirRtrRxPriorityZeroFromMasterCnts, 'snVrrpVirRtrRxHigherPriorityCnts': snVrrpVirRtrRxHigherPriorityCnts, 'snVrrpVirRtrTransToMasterStateCnts': snVrrpVirRtrTransToMasterStateCnts, 'snVrrpVirRtrTransToBackupStateCnts': snVrrpVirRtrTransToBackupStateCnts, 'snVrrpVirRtrCurrDeadInt': snVrrpVirRtrCurrDeadInt}


class snLoopbackIntfConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([snLoopbackIntfConfigPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 13, 1, 1])
	access = 2
	columns = {'snLoopbackIntfConfigPortIndex': snLoopbackIntfConfigPortIndex, 'snLoopbackIntfMode': snLoopbackIntfMode, 'snLoopbackIntfRowStatus': snLoopbackIntfRowStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
