# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, NOTIFICATION_GROUP, OBJECT_GROUP
from IF_MIB import InterfaceIndex
from SNMPv2_SMI import snmpModules, MODULE_IDENTITY, NOTIFICATION_TYPE, Counter32, Integer32, Unsigned32, OBJECT_TYPE, IpAddress
from ATM_TC_MIB import AtmAddr
from RFC1213_MIB import ipAdEntAddr
from SNMPv2_TC import TruthValue, RowStatus

class IPATM_IPMC_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/IPATM-IPMC-MIB'
	conformance = 3
	name = 'IPATM-IPMC-MIB'
	language = 2
	description = 'This module defines a portion of the managed information\nbase (MIB) for managing classical IP multicast address\nresolution server (MARS) and related entities as\ndescribed in the RFC2022.  This MIB is meant to be\nused in conjunction with the ATM-MIB (RFC1695),\nMIB-II (RFC1213), and optionally the IF-MIB (RFC1573).'

# nodes
class marsMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17])
	name = 'marsMIB'

class marsTrapInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 0])
	name = 'marsTrapInfo'

class marsClientObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1])
	name = 'marsClientObjects'

class marsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2])
	name = 'marsObjects'

class marsMcsObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3])
	name = 'marsMcsObjects'

class marsConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4])
	name = 'marsConformance'

class marsClientConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 1])
	name = 'marsClientConformance'

class marsClientCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 1, 1])
	name = 'marsClientCompliances'

class marsClientGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 1, 2])
	name = 'marsClientGroups'

class marsServerConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 2])
	name = 'marsServerConformance'

class marsServerCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 2, 1])
	name = 'marsServerCompliances'

class marsServerGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 2, 2])
	name = 'marsServerGroups'

class marsMcsConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 3])
	name = 'marsMcsConformance'

class marsMcsCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 3, 1])
	name = 'marsMcsCompliances'

class marsMcsGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 3, 2])
	name = 'marsMcsGroups'


# macros
# types 
# scalars 
# columns
class marsClientIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 2])
	syntaxobject = AtmAddr


class marsClientDefaultMarsAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 3])
	syntaxobject = AtmAddr


class marsClientHsn(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsClientRegistration(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notRegistered'), Enum(2, 'registering'), Enum(3, 'registered'), Enum(4, 'reRegisteringFault'), Enum(5, 'reRegisteringRedirMap')]


class marsClientCmi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientDefaultMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientFailureTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientRetranDelayTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientRdmMulReqAddRetrTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientRdmVcRevalidateTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientJoinLeaveRetrInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientJoinLeaveRetrLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientRegWithMarsRdmTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientForceWaitTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsClientLmtToMissRedirMapTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsClientIdleTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsClientRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsClientMcMinGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsClientMcMaxGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsClientMcGrpRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsClientBackupMarsPriority(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsClientBackupMarsAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 3, 1, 2])
	syntaxobject = AtmAddr


class marsClientBackupMarsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsClientVcVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientVcVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientVcMinGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsClientVcMaxGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsClientVcPartyAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 5])
	syntaxobject = AtmAddr


class marsClientVcPartyAddrType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'called'), Enum(2, 'calling')]


class marsClientVcType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svc')]


class marsClientVcCtrlType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pointToPointVC'), Enum(2, 'clusterControlVC'), Enum(3, 'pointToMultiPointVC')]


class marsClientVcIdleTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsClientVcRevalidate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class marsClientVcEncapsType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'llcSnap')]


class marsClientVcNegotiatedMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsClientVcRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsClientStatTxReqMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatTxJoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatTxLeaveMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatTxGrpLstReqMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatRxJoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatRxLeaveMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatRxMultiMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatRxNakMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatRxMigrateMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatRxGrpLstRplyMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsClientStatFailMultiMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 2])
	syntaxobject = InterfaceIndex


class marsAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 3])
	syntaxobject = AtmAddr


class marsLocal(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class marsServStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive'), Enum(3, 'faulted')]


class marsServType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'primary'), Enum(2, 'backup')]


class marsServPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsRedirMapMsgTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsCsn(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsSsn(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsMcMinGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsMcMaxGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsMcGrpAddrUsage(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'hostMap'), Enum(2, 'serverMap'), Enum(3, 'hostServerMap')]


class marsMcGrpRxLayer3GrpSets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcGrpRxLayer3GrpResets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcGrpRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsHostMapAtmAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 3, 1, 1])
	syntaxobject = AtmAddr


class marsHostMapRowType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'dynamic')]


class marsHostMapRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsServerMapAtmAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 4, 1, 1])
	syntaxobject = AtmAddr


class marsServerMapRowType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'dynamic')]


class marsServerMapRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsVcVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsVcVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsVcPartyAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 5])
	syntaxobject = AtmAddr


class marsVcPartyAddrType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'called'), Enum(2, 'calling')]


class marsVcType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svc')]


class marsVcCtrlType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pointToPointVC'), Enum(2, 'clusterControlVC'), Enum(3, 'serverControlVC')]


class marsVcIdleTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsVcCmi(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsVcEncapsType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'llcSnap')]


class marsVcNegotiatedMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsVcRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsRegClientCmi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsRegClientAtmAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 6, 1, 2])
	syntaxobject = AtmAddr


class marsRegMcsAtmAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 7, 1, 1])
	syntaxobject = AtmAddr


class marsStatTxMultiMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxGrpLstRplyMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxRedirectMapMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxMigrateMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxNakMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxJoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxLeaveMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxSjoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxSleaveMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxMservMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatTxUnservMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxReqMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxGrpLstReqMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxJoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxLeaveMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxMservMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxUnservMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRxBlkJoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRegMemGroups(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsStatRegMcsGroups(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsMcsIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 2])
	syntaxobject = InterfaceIndex


class marsMcsAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 3])
	syntaxobject = AtmAddr


class marsMcsDefaultMarsAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 4])
	syntaxobject = AtmAddr


class marsMcsRegistration(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notRegistered'), Enum(2, 'registering'), Enum(3, 'registered'), Enum(4, 'reRegisteringFault'), Enum(5, 'reRegisteringRedirMap')]


class marsMcsSsn(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsMcsDefaultMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsMcsFailureTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsRetranDelayTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsRdmMulReqAddRetrTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsRdmVcRevalidateTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsRegisterRetrInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsRegisterRetrLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsMcsRegWithMarsRdmTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsForceWaitTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsMcsLmtToMissRedirMapTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'seconds'


class marsMcsIdleTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsMcsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsMcsMcMinGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsMcsMcMaxGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsMcsMcGrpRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsMcsBackupMarsPriority(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class marsMcsBackupMarsAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 3, 1, 2])
	syntaxobject = AtmAddr


class marsMcsBackupMarsRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsMcsVcVpi(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsMcsVcVci(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsMcsVcMinGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsMcsVcMaxGrpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class marsMcsVcPartyAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 5])
	syntaxobject = AtmAddr


class marsMcsVcPartyAddrType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'called'), Enum(2, 'calling')]


class marsMcsVcType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pvc'), Enum(2, 'svc')]


class marsMcsVcCtrlType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'pointToPointVC'), Enum(2, 'serverControlVC'), Enum(3, 'pointToMultiPointVC')]


class marsMcsVcIdleTimer(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'minutes'


class marsMcsVcRevalidate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class marsMcsVcEncapsType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'llcSnap')]


class marsMcsVcNegotiatedMtu(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class marsMcsVcRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class marsMcsStatTxReqMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatTxMservMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatTxUnservMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatRxMultiMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatRxSjoinMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatRxSleaveMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatRxNakMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatRxMigrateMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class marsMcsStatFailMultiMsgs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class marsClientEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAdEntAddr, marsClientIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 1, 1])
	access = 2
	rowstatus = marsClientRowStatus
	columns = {'marsClientIndex': marsClientIndex, 'marsClientAddr': marsClientAddr, 'marsClientDefaultMarsAddr': marsClientDefaultMarsAddr, 'marsClientHsn': marsClientHsn, 'marsClientRegistration': marsClientRegistration, 'marsClientCmi': marsClientCmi, 'marsClientDefaultMtu': marsClientDefaultMtu, 'marsClientFailureTimer': marsClientFailureTimer, 'marsClientRetranDelayTimer': marsClientRetranDelayTimer, 'marsClientRdmMulReqAddRetrTimer': marsClientRdmMulReqAddRetrTimer, 'marsClientRdmVcRevalidateTimer': marsClientRdmVcRevalidateTimer, 'marsClientJoinLeaveRetrInterval': marsClientJoinLeaveRetrInterval, 'marsClientJoinLeaveRetrLimit': marsClientJoinLeaveRetrLimit, 'marsClientRegWithMarsRdmTimer': marsClientRegWithMarsRdmTimer, 'marsClientForceWaitTimer': marsClientForceWaitTimer, 'marsClientLmtToMissRedirMapTimer': marsClientLmtToMissRedirMapTimer, 'marsClientIdleTimer': marsClientIdleTimer, 'marsClientRowStatus': marsClientRowStatus}


class marsClientMcGrpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAdEntAddr, marsClientIndex, marsClientMcMinGrpAddr, marsClientMcMaxGrpAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 2, 1])
	access = 2
	rowstatus = marsClientMcGrpRowStatus
	columns = {'marsClientMcMinGrpAddr': marsClientMcMinGrpAddr, 'marsClientMcMaxGrpAddr': marsClientMcMaxGrpAddr, 'marsClientMcGrpRowStatus': marsClientMcGrpRowStatus}


class marsClientBackupMarsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAdEntAddr, marsClientIndex, marsClientBackupMarsPriority, marsClientBackupMarsAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 3, 1])
	access = 2
	rowstatus = marsClientBackupMarsRowStatus
	columns = {'marsClientBackupMarsPriority': marsClientBackupMarsPriority, 'marsClientBackupMarsAddr': marsClientBackupMarsAddr, 'marsClientBackupMarsRowStatus': marsClientBackupMarsRowStatus}


class marsClientVcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAdEntAddr, marsClientIndex, marsClientVcVpi, marsClientVcVci, marsClientVcMinGrpAddr, marsClientVcMaxGrpAddr, marsClientVcPartyAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 4, 1])
	access = 2
	rowstatus = marsClientVcRowStatus
	columns = {'marsClientVcVpi': marsClientVcVpi, 'marsClientVcVci': marsClientVcVci, 'marsClientVcMinGrpAddr': marsClientVcMinGrpAddr, 'marsClientVcMaxGrpAddr': marsClientVcMaxGrpAddr, 'marsClientVcPartyAddr': marsClientVcPartyAddr, 'marsClientVcPartyAddrType': marsClientVcPartyAddrType, 'marsClientVcType': marsClientVcType, 'marsClientVcCtrlType': marsClientVcCtrlType, 'marsClientVcIdleTimer': marsClientVcIdleTimer, 'marsClientVcRevalidate': marsClientVcRevalidate, 'marsClientVcEncapsType': marsClientVcEncapsType, 'marsClientVcNegotiatedMtu': marsClientVcNegotiatedMtu, 'marsClientVcRowStatus': marsClientVcRowStatus}


class marsClientStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ipAdEntAddr, marsClientIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 1, 5, 1])
	access = 2
	columns = {'marsClientStatTxReqMsgs': marsClientStatTxReqMsgs, 'marsClientStatTxJoinMsgs': marsClientStatTxJoinMsgs, 'marsClientStatTxLeaveMsgs': marsClientStatTxLeaveMsgs, 'marsClientStatTxGrpLstReqMsgs': marsClientStatTxGrpLstReqMsgs, 'marsClientStatRxJoinMsgs': marsClientStatRxJoinMsgs, 'marsClientStatRxLeaveMsgs': marsClientStatRxLeaveMsgs, 'marsClientStatRxMultiMsgs': marsClientStatRxMultiMsgs, 'marsClientStatRxNakMsgs': marsClientStatRxNakMsgs, 'marsClientStatRxMigrateMsgs': marsClientStatRxMigrateMsgs, 'marsClientStatRxGrpLstRplyMsgs': marsClientStatRxGrpLstRplyMsgs, 'marsClientStatFailMultiMsgs': marsClientStatFailMultiMsgs}


class marsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 1, 1])
	access = 2
	rowstatus = marsRowStatus
	columns = {'marsIndex': marsIndex, 'marsIfIndex': marsIfIndex, 'marsAddr': marsAddr, 'marsLocal': marsLocal, 'marsServStatus': marsServStatus, 'marsServType': marsServType, 'marsServPriority': marsServPriority, 'marsRedirMapMsgTimer': marsRedirMapMsgTimer, 'marsCsn': marsCsn, 'marsSsn': marsSsn, 'marsRowStatus': marsRowStatus}


class marsMcGrpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex, marsMcMinGrpAddr, marsMcMaxGrpAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 2, 1])
	access = 2
	rowstatus = marsMcGrpRowStatus
	columns = {'marsMcMinGrpAddr': marsMcMinGrpAddr, 'marsMcMaxGrpAddr': marsMcMaxGrpAddr, 'marsMcGrpAddrUsage': marsMcGrpAddrUsage, 'marsMcGrpRxLayer3GrpSets': marsMcGrpRxLayer3GrpSets, 'marsMcGrpRxLayer3GrpResets': marsMcGrpRxLayer3GrpResets, 'marsMcGrpRowStatus': marsMcGrpRowStatus}


class marsHostMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex, marsMcMinGrpAddr, marsMcMaxGrpAddr, marsHostMapAtmAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 3, 1])
	access = 2
	rowstatus = marsHostMapRowStatus
	columns = {'marsHostMapAtmAddr': marsHostMapAtmAddr, 'marsHostMapRowType': marsHostMapRowType, 'marsHostMapRowStatus': marsHostMapRowStatus}


class marsServerMapEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex, marsMcMinGrpAddr, marsMcMaxGrpAddr, marsServerMapAtmAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 4, 1])
	access = 2
	rowstatus = marsServerMapRowStatus
	columns = {'marsServerMapAtmAddr': marsServerMapAtmAddr, 'marsServerMapRowType': marsServerMapRowType, 'marsServerMapRowStatus': marsServerMapRowStatus}


class marsVcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex, marsVcVpi, marsVcVci, marsVcPartyAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 5, 1])
	access = 2
	rowstatus = marsVcRowStatus
	columns = {'marsVcVpi': marsVcVpi, 'marsVcVci': marsVcVci, 'marsVcPartyAddr': marsVcPartyAddr, 'marsVcPartyAddrType': marsVcPartyAddrType, 'marsVcType': marsVcType, 'marsVcCtrlType': marsVcCtrlType, 'marsVcIdleTimer': marsVcIdleTimer, 'marsVcCmi': marsVcCmi, 'marsVcEncapsType': marsVcEncapsType, 'marsVcNegotiatedMtu': marsVcNegotiatedMtu, 'marsVcRowStatus': marsVcRowStatus}


class marsRegClientEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex, marsRegClientCmi], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 6, 1])
	access = 2
	columns = {'marsRegClientCmi': marsRegClientCmi, 'marsRegClientAtmAddr': marsRegClientAtmAddr}


class marsRegMcsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex, marsRegMcsAtmAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 7, 1])
	access = 2
	columns = {'marsRegMcsAtmAddr': marsRegMcsAtmAddr}


class marsStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsIndex, marsIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 2, 8, 1])
	access = 2
	columns = {'marsStatTxMultiMsgs': marsStatTxMultiMsgs, 'marsStatTxGrpLstRplyMsgs': marsStatTxGrpLstRplyMsgs, 'marsStatTxRedirectMapMsgs': marsStatTxRedirectMapMsgs, 'marsStatTxMigrateMsgs': marsStatTxMigrateMsgs, 'marsStatTxNakMsgs': marsStatTxNakMsgs, 'marsStatTxJoinMsgs': marsStatTxJoinMsgs, 'marsStatTxLeaveMsgs': marsStatTxLeaveMsgs, 'marsStatTxSjoinMsgs': marsStatTxSjoinMsgs, 'marsStatTxSleaveMsgs': marsStatTxSleaveMsgs, 'marsStatTxMservMsgs': marsStatTxMservMsgs, 'marsStatTxUnservMsgs': marsStatTxUnservMsgs, 'marsStatRxReqMsgs': marsStatRxReqMsgs, 'marsStatRxGrpLstReqMsgs': marsStatRxGrpLstReqMsgs, 'marsStatRxJoinMsgs': marsStatRxJoinMsgs, 'marsStatRxLeaveMsgs': marsStatRxLeaveMsgs, 'marsStatRxMservMsgs': marsStatRxMservMsgs, 'marsStatRxUnservMsgs': marsStatRxUnservMsgs, 'marsStatRxBlkJoinMsgs': marsStatRxBlkJoinMsgs, 'marsStatRegMemGroups': marsStatRegMemGroups, 'marsStatRegMcsGroups': marsStatRegMcsGroups}


class marsMcsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsMcsIndex, marsMcsIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 1, 1])
	access = 2
	rowstatus = marsMcsRowStatus
	columns = {'marsMcsIndex': marsMcsIndex, 'marsMcsIfIndex': marsMcsIfIndex, 'marsMcsAddr': marsMcsAddr, 'marsMcsDefaultMarsAddr': marsMcsDefaultMarsAddr, 'marsMcsRegistration': marsMcsRegistration, 'marsMcsSsn': marsMcsSsn, 'marsMcsDefaultMtu': marsMcsDefaultMtu, 'marsMcsFailureTimer': marsMcsFailureTimer, 'marsMcsRetranDelayTimer': marsMcsRetranDelayTimer, 'marsMcsRdmMulReqAddRetrTimer': marsMcsRdmMulReqAddRetrTimer, 'marsMcsRdmVcRevalidateTimer': marsMcsRdmVcRevalidateTimer, 'marsMcsRegisterRetrInterval': marsMcsRegisterRetrInterval, 'marsMcsRegisterRetrLimit': marsMcsRegisterRetrLimit, 'marsMcsRegWithMarsRdmTimer': marsMcsRegWithMarsRdmTimer, 'marsMcsForceWaitTimer': marsMcsForceWaitTimer, 'marsMcsLmtToMissRedirMapTimer': marsMcsLmtToMissRedirMapTimer, 'marsMcsIdleTimer': marsMcsIdleTimer, 'marsMcsRowStatus': marsMcsRowStatus}


class marsMcsMcGrpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsMcsIndex, marsMcsIfIndex, marsMcsMcMinGrpAddr, marsMcsMcMaxGrpAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 2, 1])
	access = 2
	rowstatus = marsMcsMcGrpRowStatus
	columns = {'marsMcsMcMinGrpAddr': marsMcsMcMinGrpAddr, 'marsMcsMcMaxGrpAddr': marsMcsMcMaxGrpAddr, 'marsMcsMcGrpRowStatus': marsMcsMcGrpRowStatus}


class marsMcsBackupMarsEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsMcsIndex, marsMcsIfIndex, marsMcsBackupMarsPriority, marsMcsBackupMarsAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 3, 1])
	access = 2
	rowstatus = marsMcsBackupMarsRowStatus
	columns = {'marsMcsBackupMarsPriority': marsMcsBackupMarsPriority, 'marsMcsBackupMarsAddr': marsMcsBackupMarsAddr, 'marsMcsBackupMarsRowStatus': marsMcsBackupMarsRowStatus}


class marsMcsVcEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsMcsIndex, marsMcsIfIndex, marsMcsVcVpi, marsMcsVcVci, marsMcsVcMinGrpAddr, marsMcsVcMaxGrpAddr, marsMcsVcPartyAddr], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 4, 1])
	access = 2
	rowstatus = marsMcsVcRowStatus
	columns = {'marsMcsVcVpi': marsMcsVcVpi, 'marsMcsVcVci': marsMcsVcVci, 'marsMcsVcMinGrpAddr': marsMcsVcMinGrpAddr, 'marsMcsVcMaxGrpAddr': marsMcsVcMaxGrpAddr, 'marsMcsVcPartyAddr': marsMcsVcPartyAddr, 'marsMcsVcPartyAddrType': marsMcsVcPartyAddrType, 'marsMcsVcType': marsMcsVcType, 'marsMcsVcCtrlType': marsMcsVcCtrlType, 'marsMcsVcIdleTimer': marsMcsVcIdleTimer, 'marsMcsVcRevalidate': marsMcsVcRevalidate, 'marsMcsVcEncapsType': marsMcsVcEncapsType, 'marsMcsVcNegotiatedMtu': marsMcsVcNegotiatedMtu, 'marsMcsVcRowStatus': marsMcsVcRowStatus}


class marsMcsStatEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([marsMcsIndex, marsMcsIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 3, 5, 1])
	access = 2
	columns = {'marsMcsStatTxReqMsgs': marsMcsStatTxReqMsgs, 'marsMcsStatTxMservMsgs': marsMcsStatTxMservMsgs, 'marsMcsStatTxUnservMsgs': marsMcsStatTxUnservMsgs, 'marsMcsStatRxMultiMsgs': marsMcsStatRxMultiMsgs, 'marsMcsStatRxSjoinMsgs': marsMcsStatRxSjoinMsgs, 'marsMcsStatRxSleaveMsgs': marsMcsStatRxSleaveMsgs, 'marsMcsStatRxNakMsgs': marsMcsStatRxNakMsgs, 'marsMcsStatRxMigrateMsgs': marsMcsStatRxMigrateMsgs, 'marsMcsStatFailMultiMsgs': marsMcsStatFailMultiMsgs}


# notifications (traps) 
class marsFaultTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 0, 1])

# groups 
class marsClientGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 1, 2, 1])
	group = [marsClientAddr, marsClientDefaultMarsAddr, marsClientHsn, marsClientRegistration, marsClientCmi, marsClientDefaultMtu, marsClientFailureTimer, marsClientRetranDelayTimer, marsClientRdmMulReqAddRetrTimer, marsClientRdmVcRevalidateTimer, marsClientJoinLeaveRetrInterval, marsClientJoinLeaveRetrLimit, marsClientRegWithMarsRdmTimer, marsClientForceWaitTimer, marsClientIdleTimer, marsClientLmtToMissRedirMapTimer, marsClientRowStatus, marsClientMcGrpRowStatus, marsClientBackupMarsRowStatus, marsClientVcPartyAddrType, marsClientVcType, marsClientVcCtrlType, marsClientVcIdleTimer, marsClientVcRevalidate, marsClientVcEncapsType, marsClientVcNegotiatedMtu, marsClientVcRowStatus, marsClientStatTxReqMsgs, marsClientStatTxJoinMsgs, marsClientStatTxLeaveMsgs, marsClientStatTxGrpLstReqMsgs, marsClientStatRxJoinMsgs, marsClientStatRxLeaveMsgs, marsClientStatRxMultiMsgs, marsClientStatRxNakMsgs, marsClientStatRxGrpLstRplyMsgs, marsClientStatRxMigrateMsgs, marsClientStatFailMultiMsgs]

class marsServerGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 2, 2, 1])
	group = [marsAddr, marsLocal, marsServStatus, marsServType, marsServPriority, marsRedirMapMsgTimer, marsCsn, marsSsn, marsRowStatus, marsMcGrpAddrUsage, marsMcGrpRxLayer3GrpSets, marsMcGrpRxLayer3GrpResets, marsMcGrpRowStatus, marsHostMapRowType, marsHostMapRowStatus, marsServerMapRowType, marsServerMapRowStatus, marsVcPartyAddrType, marsVcType, marsVcCtrlType, marsVcIdleTimer, marsVcCmi, marsVcEncapsType, marsVcNegotiatedMtu, marsVcRowStatus, marsRegClientAtmAddr, marsRegMcsAtmAddr, marsStatTxMultiMsgs, marsStatTxGrpLstRplyMsgs, marsStatTxRedirectMapMsgs, marsStatTxMigrateMsgs, marsStatTxNakMsgs, marsStatTxJoinMsgs, marsStatTxLeaveMsgs, marsStatTxSjoinMsgs, marsStatTxSleaveMsgs, marsStatTxMservMsgs, marsStatTxUnservMsgs, marsStatRxReqMsgs, marsStatRxGrpLstReqMsgs, marsStatRxJoinMsgs, marsStatRxLeaveMsgs, marsStatRxMservMsgs, marsStatRxUnservMsgs, marsStatRxBlkJoinMsgs, marsStatRegMemGroups, marsStatRegMcsGroups]

class marsServerEventGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 2, 2, 2])
	group = [marsFaultTrap]

class marsMcsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 6, 3, 17, 4, 3, 2, 1])
	group = [marsMcsAddr, marsMcsDefaultMarsAddr, marsMcsRegistration, marsMcsSsn, marsMcsDefaultMtu, marsMcsFailureTimer, marsMcsRetranDelayTimer, marsMcsRdmMulReqAddRetrTimer, marsMcsRdmVcRevalidateTimer, marsMcsRegisterRetrInterval, marsMcsRegisterRetrLimit, marsMcsRegWithMarsRdmTimer, marsMcsForceWaitTimer, marsMcsIdleTimer, marsMcsLmtToMissRedirMapTimer, marsMcsRowStatus, marsMcsMcGrpRowStatus, marsMcsVcPartyAddrType, marsMcsBackupMarsRowStatus, marsMcsVcType, marsMcsVcCtrlType, marsMcsVcIdleTimer, marsMcsVcRevalidate, marsMcsVcEncapsType, marsMcsVcNegotiatedMtu, marsMcsVcRowStatus, marsMcsStatTxReqMsgs, marsMcsStatTxMservMsgs, marsMcsStatTxUnservMsgs, marsMcsStatRxMultiMsgs, marsMcsStatRxSjoinMsgs, marsMcsStatRxSleaveMsgs, marsMcsStatRxNakMsgs, marsMcsStatRxMigrateMsgs, marsMcsStatFailMultiMsgs]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
