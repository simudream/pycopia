# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, Unsigned32, Counter64
from TUBS_SMI import ibr
from INET_ADDRESS_MIB import InetAddressType, InetAddress, InetAddressPrefixLength
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, StorageType, RowStatus, TimeStamp

class TUBS_IBR_LINUX_NETFILTER_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/tubs/TUBS-IBR-LINUX-NETFILTER-MIB'
	conformance = 3
	name = 'TUBS-IBR-LINUX-NETFILTER-MIB'
	language = 2
	description = 'Experimental MIB module for the Linux 2.4 netfilter\nsubsystem.'

# nodes
class lnfMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13])
	name = 'lnfMIB'

class lnfObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1])
	name = 'lnfObjects'

class lnfTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 2])
	name = 'lnfTraps'

class lnfNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 2, 0])
	name = 'lnfNotifications'

class lnfConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 3])
	name = 'lnfConformance'

class lnfCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 3, 1])
	name = 'lnfCompliances'

class lnfGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 3, 2])
	name = 'lnfGroups'


# macros
# types 

class LnfTarget(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'none'), Enum(2, 'other'), Enum(3, 'drop'), Enum(4, 'accept'), Enum(5, 'queue'), Enum(6, 'return'), Enum(7, 'chain')]

# scalars 
class lnfLastChange(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


# columns
class lnfTableAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 2, 1, 1])
	syntaxobject = InetAddressType


class lnfTableName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 2, 1, 2])
	syntaxobject = SnmpAdminString


class lnfTableLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lnfChainName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 1])
	syntaxobject = SnmpAdminString


class lnfChainPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class lnfChainOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class lnfChainTarget(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 4])
	syntaxobject = LnfTarget


class lnfChainLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lnfChainStorage(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class lnfChainStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class lnfRuleIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class lnfRuleProtocol(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class lnfRuleProtocolInv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleSourceAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 4])
	syntaxobject = InetAddress


class lnfRuleSourceAddressPrefixLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 5])
	syntaxobject = InetAddressPrefixLength


class lnfRuleSourceAddressInv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleDestinationAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 7])
	syntaxobject = InetAddress


class lnfRuleDestinationAddressPrefixLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 8])
	syntaxobject = InetAddressPrefixLength


class lnfRuleDestinationAddressInv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleInInterface(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 10])
	syntaxobject = SnmpAdminString


class lnfRuleInInterfaceInv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleOutInterface(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 12])
	syntaxobject = SnmpAdminString


class lnfRuleOutInterfaceInv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleFragment(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleFragmentInv(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRulePackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class lnfRuleOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class lnfRuleTarget(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 18])
	syntaxobject = LnfTarget


class lnfRuleTargetChain(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 19])
	syntaxobject = SnmpAdminString


class lnfRuleTrapEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lnfRuleLastChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class lnfRuleStorage(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class lnfRuleStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class lnfTableEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lnfTableAddressType, lnfTableName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 2, 1])
	access = 2
	columns = {'lnfTableAddressType': lnfTableAddressType, 'lnfTableName': lnfTableName, 'lnfTableLastChange': lnfTableLastChange}


class lnfChainEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lnfTableAddressType, lnfTableName, lnfChainName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 3, 1])
	access = 2
	rowstatus = lnfChainStatus
	columns = {'lnfChainName': lnfChainName, 'lnfChainPackets': lnfChainPackets, 'lnfChainOctets': lnfChainOctets, 'lnfChainTarget': lnfChainTarget, 'lnfChainLastChange': lnfChainLastChange, 'lnfChainStorage': lnfChainStorage, 'lnfChainStatus': lnfChainStatus}


class lnfRuleEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lnfTableAddressType, lnfTableName, lnfChainName, lnfRuleIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 1, 4, 1])
	access = 2
	rowstatus = lnfRuleStatus
	columns = {'lnfRuleIndex': lnfRuleIndex, 'lnfRuleProtocol': lnfRuleProtocol, 'lnfRuleProtocolInv': lnfRuleProtocolInv, 'lnfRuleSourceAddress': lnfRuleSourceAddress, 'lnfRuleSourceAddressPrefixLength': lnfRuleSourceAddressPrefixLength, 'lnfRuleSourceAddressInv': lnfRuleSourceAddressInv, 'lnfRuleDestinationAddress': lnfRuleDestinationAddress, 'lnfRuleDestinationAddressPrefixLength': lnfRuleDestinationAddressPrefixLength, 'lnfRuleDestinationAddressInv': lnfRuleDestinationAddressInv, 'lnfRuleInInterface': lnfRuleInInterface, 'lnfRuleInInterfaceInv': lnfRuleInInterfaceInv, 'lnfRuleOutInterface': lnfRuleOutInterface, 'lnfRuleOutInterfaceInv': lnfRuleOutInterfaceInv, 'lnfRuleFragment': lnfRuleFragment, 'lnfRuleFragmentInv': lnfRuleFragmentInv, 'lnfRulePackets': lnfRulePackets, 'lnfRuleOctets': lnfRuleOctets, 'lnfRuleTarget': lnfRuleTarget, 'lnfRuleTargetChain': lnfRuleTargetChain, 'lnfRuleTrapEnable': lnfRuleTrapEnable, 'lnfRuleLastChange': lnfRuleLastChange, 'lnfRuleStorage': lnfRuleStorage, 'lnfRuleStatus': lnfRuleStatus}


# notifications (traps) 
class lnfRuleMatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 2, 0, 1])

# groups 
class lnfGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 3, 2, 1])
	group = [lnfLastChange, lnfTableLastChange, lnfChainPackets, lnfChainOctets, lnfChainTarget, lnfChainLastChange, lnfChainStorage, lnfChainStatus, lnfRuleProtocol, lnfRuleProtocolInv, lnfRuleSourceAddress, lnfRuleSourceAddressPrefixLength, lnfRuleSourceAddressInv, lnfRuleDestinationAddress, lnfRuleDestinationAddressPrefixLength, lnfRuleDestinationAddressInv, lnfRuleInInterface, lnfRuleInInterfaceInv, lnfRuleOutInterface, lnfRuleOutInterfaceInv, lnfRuleFragment, lnfRuleFragmentInv, lnfRulePackets, lnfRuleOctets, lnfRuleTarget, lnfRuleTargetChain, lnfRuleTrapEnable, lnfRuleLastChange, lnfRuleStorage, lnfRuleStatus]

class lnfNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 1575, 1, 13, 3, 2, 2])
	group = [lnfRuleMatch]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
