# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, TimeTicks, Counter32, Counter64, IpAddress, Opaque, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import TimeStamp, DateAndTime, StorageType, RowStatus, TAddress, TDomain
from SNMP_FRAMEWORK_MIB import SnmpAdminString, SnmpEngineID

class NOTIFICATION_LOG_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/NOTIFICATION-LOG-MIB'
	conformance = 4
	name = 'NOTIFICATION-LOG-MIB'
	language = 2
	description = 'The MIB module for logging SNMP Notifications, that is, Traps\n\n\nand Informs.'

# nodes
class notificationLogMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92])
	name = 'notificationLogMIB'

class notificationLogMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1])
	name = 'notificationLogMIBObjects'

class nlmConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1])
	name = 'nlmConfig'

class nlmStats(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 2])
	name = 'nlmStats'

class nlmLog(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3])
	name = 'nlmLog'

class notificationLogMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3])
	name = 'notificationLogMIBConformance'

class notificationLogMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3, 1])
	name = 'notificationLogMIBCompliances'

class notificationLogMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3, 2])
	name = 'notificationLogMIBGroups'


# macros
# types 
# scalars 
class nlmConfigGlobalEntryLimit(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nlmConfigGlobalAgeOut(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'minutes'


class nlmStatsGlobalNotificationsLogged(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'notifications'


class nlmStatsGlobalNotificationsBumped(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'notifications'


# columns
class nlmLogName(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 1])
	syntaxobject = SnmpAdminString


class nlmConfigLogFilterName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 2])
	syntaxobject = SnmpAdminString


class nlmConfigLogEntryLimit(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nlmConfigLogAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class nlmConfigLogOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'operational'), Enum(3, 'noFilter')]


class nlmConfigLogStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class nlmConfigLogEntryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class nlmStatsLogNotificationsLogged(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'notifications'


class nlmStatsLogNotificationsBumped(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'notifications'


class nlmLogIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nlmLogTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class nlmLogDateAndTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class nlmLogEngineID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 4])
	syntaxobject = SnmpEngineID


class nlmLogEngineTAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TAddress


class nlmLogEngineTDomain(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TDomain


class nlmLogContextEngineID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 7])
	syntaxobject = SnmpEngineID


class nlmLogContextName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 8])
	syntaxobject = SnmpAdminString


class nlmLogNotificationID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class nlmLogVariableIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nlmLogVariableID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class nlmLogVariableValueType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'counter32'), Enum(2, 'unsigned32'), Enum(3, 'timeTicks'), Enum(4, 'integer32'), Enum(5, 'ipAddress'), Enum(6, 'octetString'), Enum(7, 'objectId'), Enum(8, 'counter64'), Enum(9, 'opaque')]


class nlmLogVariableCounter32Val(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class nlmLogVariableUnsigned32Val(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class nlmLogVariableTimeTicksVal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class nlmLogVariableInteger32Val(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class nlmLogVariableOctetStringVal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class nlmLogVariableIpAddressVal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class nlmLogVariableOidVal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class nlmLogVariableCounter64Val(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class nlmLogVariableOpaqueVal(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Opaque


# rows 
class nlmConfigLogEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlmLogName], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 1, 3, 1])
	access = 2
	rowstatus = nlmConfigLogEntryStatus
	columns = {'nlmLogName': nlmLogName, 'nlmConfigLogFilterName': nlmConfigLogFilterName, 'nlmConfigLogEntryLimit': nlmConfigLogEntryLimit, 'nlmConfigLogAdminStatus': nlmConfigLogAdminStatus, 'nlmConfigLogOperStatus': nlmConfigLogOperStatus, 'nlmConfigLogStorageType': nlmConfigLogStorageType, 'nlmConfigLogEntryStatus': nlmConfigLogEntryStatus}


from NOTIFICATION_LOG_MIB import nlmLogName
class nlmStatsLogEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlmLogName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 2, 3, 1])
	access = 2
	columns = {'nlmStatsLogNotificationsLogged': nlmStatsLogNotificationsLogged, 'nlmStatsLogNotificationsBumped': nlmStatsLogNotificationsBumped}


class nlmLogEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlmLogName, nlmLogIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 1, 1])
	access = 2
	columns = {'nlmLogIndex': nlmLogIndex, 'nlmLogTime': nlmLogTime, 'nlmLogDateAndTime': nlmLogDateAndTime, 'nlmLogEngineID': nlmLogEngineID, 'nlmLogEngineTAddress': nlmLogEngineTAddress, 'nlmLogEngineTDomain': nlmLogEngineTDomain, 'nlmLogContextEngineID': nlmLogContextEngineID, 'nlmLogContextName': nlmLogContextName, 'nlmLogNotificationID': nlmLogNotificationID}


class nlmLogVariableEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([nlmLogName, nlmLogIndex, nlmLogVariableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 1, 3, 2, 1])
	access = 2
	columns = {'nlmLogVariableIndex': nlmLogVariableIndex, 'nlmLogVariableID': nlmLogVariableID, 'nlmLogVariableValueType': nlmLogVariableValueType, 'nlmLogVariableCounter32Val': nlmLogVariableCounter32Val, 'nlmLogVariableUnsigned32Val': nlmLogVariableUnsigned32Val, 'nlmLogVariableTimeTicksVal': nlmLogVariableTimeTicksVal, 'nlmLogVariableInteger32Val': nlmLogVariableInteger32Val, 'nlmLogVariableOctetStringVal': nlmLogVariableOctetStringVal, 'nlmLogVariableIpAddressVal': nlmLogVariableIpAddressVal, 'nlmLogVariableOidVal': nlmLogVariableOidVal, 'nlmLogVariableCounter64Val': nlmLogVariableCounter64Val, 'nlmLogVariableOpaqueVal': nlmLogVariableOpaqueVal}


# notifications (traps) 
# groups 
class notificationLogConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3, 2, 1])
	group = [nlmConfigGlobalEntryLimit, nlmConfigGlobalAgeOut, nlmConfigLogFilterName, nlmConfigLogEntryLimit, nlmConfigLogAdminStatus, nlmConfigLogOperStatus, nlmConfigLogStorageType, nlmConfigLogEntryStatus]

class notificationLogStatsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3, 2, 2])
	group = [nlmStatsGlobalNotificationsLogged, nlmStatsGlobalNotificationsBumped, nlmStatsLogNotificationsLogged, nlmStatsLogNotificationsBumped]

class notificationLogLogGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3, 2, 3])
	group = [nlmLogTime, nlmLogEngineID, nlmLogEngineTAddress, nlmLogEngineTDomain, nlmLogContextEngineID, nlmLogContextName, nlmLogNotificationID, nlmLogVariableID, nlmLogVariableValueType, nlmLogVariableCounter32Val, nlmLogVariableUnsigned32Val, nlmLogVariableTimeTicksVal, nlmLogVariableInteger32Val, nlmLogVariableOctetStringVal, nlmLogVariableIpAddressVal, nlmLogVariableOidVal, nlmLogVariableCounter64Val, nlmLogVariableOpaqueVal]

class notificationLogDateGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 92, 3, 2, 4])
	group = [nlmLogDateAndTime]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
