# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, OBJECT_IDENTITY, Counter32, Integer32, IpAddress, TimeTicks, mib_2
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from SNMP_FRAMEWORK_MIB import SnmpAdminString

class RADIUS_AUTH_SERVER_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/RADIUS-AUTH-SERVER-MIB'
	conformance = 4
	name = 'RADIUS-AUTH-SERVER-MIB'
	language = 2
	description = 'The MIB module for entities implementing the server\nside of the Remote Authentication Dial-In User\nService (RADIUS) authentication protocol.  Copyright\n(C) The Internet Society (2006).  This version of this\nMIB module is part of RFC 4669; see the RFC itself for\nfull legal notices.'

# nodes
class radiusMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67])
	name = 'radiusMIB'

class radiusAuthentication(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1])
	name = 'radiusAuthentication'

class radiusAuthServMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1])
	name = 'radiusAuthServMIB'

class radiusAuthServMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1])
	name = 'radiusAuthServMIBObjects'

class radiusAuthServ(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1])
	name = 'radiusAuthServ'

class radiusAuthServMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 2])
	name = 'radiusAuthServMIBConformance'

class radiusAuthServMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 2, 1])
	name = 'radiusAuthServMIBCompliances'

class radiusAuthServMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 2, 2])
	name = 'radiusAuthServMIBGroups'


# macros
# types 
# scalars 
class radiusAuthServIdent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 1])
	syntaxobject = SnmpAdminString


class radiusAuthServUpTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class radiusAuthServResetTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class radiusAuthServConfigReset(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'other'), Enum(2, 'reset'), Enum(3, 'initializing'), Enum(4, 'running')]


class radiusAuthServTotalAccessRequests(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalInvalidRequests(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalDupAccessRequests(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalAccessAccepts(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalAccessRejects(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalAccessChallenges(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalMalformedAccessRequests(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalBadAuthenticators(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalPacketsDropped(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServTotalUnknownTypes(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


# columns
class radiusAuthClientIndex(ColumnObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class radiusAuthClientAddress(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class radiusAuthClientID(ColumnObject):
	access = 4
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 3])
	syntaxobject = SnmpAdminString


class radiusAuthServAccessRequests(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServDupAccessRequests(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServAccessAccepts(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServAccessRejects(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServAccessChallenges(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServMalformedAccessRequests(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServBadAuthenticators(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServPacketsDropped(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServUnknownTypes(ColumnObject):
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthClientExtIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class radiusAuthClientInetAddressType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 2])
	syntaxobject = InetAddressType


class radiusAuthClientInetAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 3])
	syntaxobject = InetAddress


class radiusAuthClientExtID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 4])
	syntaxobject = SnmpAdminString


class radiusAuthServExtAccessRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtDupAccessRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtAccessAccepts(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtAccessRejects(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtAccessChallenges(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtMalformedAccessRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtBadAuthenticators(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtPacketsDropped(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServExtUnknownTypes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'packets'


class radiusAuthServCounterDiscontinuity(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks
	access = 4
	units = 'centiseconds'


# rows 
class radiusAuthClientEntry(RowObject):
	status = 2
	index = pycopia.SMI.Objects.IndexObjects([radiusAuthClientIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 15, 1])
	access = 2
	columns = {'radiusAuthClientIndex': radiusAuthClientIndex, 'radiusAuthClientAddress': radiusAuthClientAddress, 'radiusAuthClientID': radiusAuthClientID, 'radiusAuthServAccessRequests': radiusAuthServAccessRequests, 'radiusAuthServDupAccessRequests': radiusAuthServDupAccessRequests, 'radiusAuthServAccessAccepts': radiusAuthServAccessAccepts, 'radiusAuthServAccessRejects': radiusAuthServAccessRejects, 'radiusAuthServAccessChallenges': radiusAuthServAccessChallenges, 'radiusAuthServMalformedAccessRequests': radiusAuthServMalformedAccessRequests, 'radiusAuthServBadAuthenticators': radiusAuthServBadAuthenticators, 'radiusAuthServPacketsDropped': radiusAuthServPacketsDropped, 'radiusAuthServUnknownTypes': radiusAuthServUnknownTypes}


class radiusAuthClientExtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([radiusAuthClientExtIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 1, 1, 16, 1])
	access = 2
	columns = {'radiusAuthClientExtIndex': radiusAuthClientExtIndex, 'radiusAuthClientInetAddressType': radiusAuthClientInetAddressType, 'radiusAuthClientInetAddress': radiusAuthClientInetAddress, 'radiusAuthClientExtID': radiusAuthClientExtID, 'radiusAuthServExtAccessRequests': radiusAuthServExtAccessRequests, 'radiusAuthServExtDupAccessRequests': radiusAuthServExtDupAccessRequests, 'radiusAuthServExtAccessAccepts': radiusAuthServExtAccessAccepts, 'radiusAuthServExtAccessRejects': radiusAuthServExtAccessRejects, 'radiusAuthServExtAccessChallenges': radiusAuthServExtAccessChallenges, 'radiusAuthServExtMalformedAccessRequests': radiusAuthServExtMalformedAccessRequests, 'radiusAuthServExtBadAuthenticators': radiusAuthServExtBadAuthenticators, 'radiusAuthServExtPacketsDropped': radiusAuthServExtPacketsDropped, 'radiusAuthServExtUnknownTypes': radiusAuthServExtUnknownTypes, 'radiusAuthServCounterDiscontinuity': radiusAuthServCounterDiscontinuity}


# notifications (traps) 
# groups 
class radiusAuthServMIBGroup(GroupObject):
	access = 2
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 2, 2, 1])
	group = [radiusAuthServIdent, radiusAuthServUpTime, radiusAuthServResetTime, radiusAuthServConfigReset, radiusAuthServTotalAccessRequests, radiusAuthServTotalInvalidRequests, radiusAuthServTotalDupAccessRequests, radiusAuthServTotalAccessAccepts, radiusAuthServTotalAccessRejects, radiusAuthServTotalAccessChallenges, radiusAuthServTotalMalformedAccessRequests, radiusAuthServTotalBadAuthenticators, radiusAuthServTotalPacketsDropped, radiusAuthServTotalUnknownTypes, radiusAuthClientAddress, radiusAuthClientID, radiusAuthServAccessRequests, radiusAuthServDupAccessRequests, radiusAuthServAccessAccepts, radiusAuthServAccessRejects, radiusAuthServAccessChallenges, radiusAuthServMalformedAccessRequests, radiusAuthServBadAuthenticators, radiusAuthServPacketsDropped, radiusAuthServUnknownTypes]

class radiusAuthServExtMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 67, 1, 1, 2, 2, 2])
	group = [radiusAuthServIdent, radiusAuthServUpTime, radiusAuthServResetTime, radiusAuthServConfigReset, radiusAuthServTotalAccessRequests, radiusAuthServTotalInvalidRequests, radiusAuthServTotalDupAccessRequests, radiusAuthServTotalAccessAccepts, radiusAuthServTotalAccessRejects, radiusAuthServTotalAccessChallenges, radiusAuthServTotalMalformedAccessRequests, radiusAuthServTotalBadAuthenticators, radiusAuthServTotalPacketsDropped, radiusAuthServTotalUnknownTypes, radiusAuthClientInetAddressType, radiusAuthClientInetAddress, radiusAuthClientExtID, radiusAuthServExtAccessRequests, radiusAuthServExtDupAccessRequests, radiusAuthServExtAccessAccepts, radiusAuthServExtAccessRejects, radiusAuthServExtAccessChallenges, radiusAuthServExtMalformedAccessRequests, radiusAuthServExtBadAuthenticators, radiusAuthServExtPacketsDropped, radiusAuthServExtUnknownTypes, radiusAuthServCounterDiscontinuity]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
