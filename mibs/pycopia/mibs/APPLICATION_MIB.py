# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Counter64, Counter32, Gauge32, mib_2, Unsigned32, zeroDotZero
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from SNMPv2_TC import DateAndTime, TEXTUAL_CONVENTION, TestAndIncr, TDomain, TimeStamp, TruthValue
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SYSAPPL_MIB import LongUtf8String, sysApplElmtRunIndex

class APPLICATION_MIB(ModuleObject):
	path = '/usr/share/snmp/mibs/ietf/APPLICATION-MIB'
	conformance = 3
	name = 'APPLICATION-MIB'
	language = 2
	description = 'This MIB defines objects representing generic aspects of\napplications that are of interest to management but typically\nrequire instrumentation within managed application elements.'

# nodes
class applicationMib(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62])
	name = 'applicationMib'

class applicationMibObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1])
	name = 'applicationMibObjects'

class applServiceGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1])
	name = 'applServiceGroup'

class applChannelGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2])
	name = 'applChannelGroup'

class applPastChannelGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3])
	name = 'applPastChannelGroup'

class applElmtRunControlGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4])
	name = 'applElmtRunControlGroup'

class applicationMibConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2])
	name = 'applicationMibConformance'

class applicationMibGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1])
	name = 'applicationMibGroups'


# macros
# types 

class Unsigned64TC(pycopia.SMI.Basetypes.Counter64):
	status = 1


class ApplTAddress(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 255))

# scalars 
# columns
class applSrvInstQual(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 1, 1, 1])
	syntaxobject = SnmpAdminString


class applSrvName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 2, 1, 1])
	syntaxobject = SnmpAdminString


class applSrvIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class applSrvInstance(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class applElmtOrSvc(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'service'), Enum(2, 'element')]


class applElmtOrSvcId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class applOpenChannelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class applOpenChannelOpenTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class applOpenChannelReadRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'read requests'


class applOpenChannelReadRequestsLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'read requests'


class applOpenChannelReadFailures(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'failed read requests'


class applOpenChannelBytesRead(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'bytes'


class applOpenChannelBytesReadLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'bytes'


class applOpenChannelLastReadTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applOpenChannelWriteRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'write requests'


class applOpenChannelWriteRequestsLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'write requests'


class applOpenChannelWriteFailures(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'failed write requests'


class applOpenChannelBytesWritten(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'bytes'


class applOpenChannelBytesWrittenLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'bytes'


class applOpenChannelLastWriteTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applOpenFileName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 2, 1, 1])
	syntaxobject = LongUtf8String


class applOpenFileSizeHigh(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '2^32 byte blocks'


class applOpenFileSizeLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applOpenFileMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'read'), Enum(2, 'write'), Enum(3, 'readWrite')]


class applOpenConnectionTransport(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TDomain


class applOpenConnectionNearEndAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1, 2])
	syntaxobject = ApplTAddress


class applOpenConnectionNearEndpoint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1, 3])
	syntaxobject = SnmpAdminString


class applOpenConnectionFarEndAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1, 4])
	syntaxobject = ApplTAddress


class applOpenConnectionFarEndpoint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1, 5])
	syntaxobject = SnmpAdminString


class applOpenConnectionApplication(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1, 6])
	syntaxobject = SnmpAdminString


class applTransactStreamDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 1])
	syntaxobject = SnmpAdminString


class applTransactStreamUnitOfWork(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 2])
	syntaxobject = SnmpAdminString


class applTransactStreamInvokes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'transactions'


class applTransactStreamInvokesLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'transactions'


class applTransactStreamInvCumTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'milliseconds'


class applTransactStreamInvRspTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'milliseconds'


class applTransactStreamPerforms(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'transactions'


class applTransactStreamPerformsLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'transactions'


class applTransactStreamPrfCumTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'milliseconds'


class applTransactStreamPrfRspTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'milliseconds'


class applTransactFlowDirection(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'transmit'), Enum(2, 'receive')]


class applTransactFlowReqRsp(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'request'), Enum(2, 'response')]


class applTransactFlowTrans(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'transactions'


class applTransactFlowTransLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'transactions'


class applTransactFlowBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'bytes'


class applTransactFlowBytesLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'bytes'


class applTransactFlowTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applTransactKind(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1, 1])
	syntaxobject = SnmpAdminString


class applTransactKindTrans(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'transactions'


class applTransactKindTransLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'transactions'


class applTransactKindBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter64
	access = 4
	units = 'bytes'


class applTransactKindBytesLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'bytes'


class applTransactKindTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applPastChannelControlCollect(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'frozen'), Enum(3, 'disabled')]


class applPastChannelControlMaxRows(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'channel history entries'


class applPastChannelControlTimeLimit(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class applPastChannelControlRemItems(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32
	access = 4
	units = 'channel history entries'


class applPastChannelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class applPastChannelOpenTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applPastChannelCloseTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applPastChannelReadRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 4])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'read requests'


class applPastChannelReadReqsLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'read requests'


class applPastChannelReadFailures(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'failed read requests'


class applPastChannelBytesRead(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 7])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'bytes'


class applPastChannelBytesReadLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applPastChannelLastReadTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applPastChannelWriteRequests(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 10])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'write requests'


class applPastChannelWriteReqsLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'write requests'


class applPastChannelWriteFailures(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'failed write requests'


class applPastChannelBytesWritten(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 13])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'bytes'


class applPastChannelBytesWritLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applPastChannelLastWriteTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applPastFileName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 3, 1, 1])
	syntaxobject = LongUtf8String


class applPastFileSizeHigh(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = '2^32 byte blocks'


class applPastFileSizeLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applPastFileMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'read'), Enum(2, 'write'), Enum(3, 'readWrite')]


class applPastConTransport(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TDomain


class applPastConNearEndAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1, 2])
	syntaxobject = ApplTAddress


class applPastConNearEndpoint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1, 3])
	syntaxobject = SnmpAdminString


class applPastConFarEndAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1, 4])
	syntaxobject = ApplTAddress


class applPastConFarEndpoint(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1, 5])
	syntaxobject = SnmpAdminString


class applPastConApplication(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1, 6])
	syntaxobject = SnmpAdminString


class applPastTransStreamDescr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 1])
	syntaxobject = SnmpAdminString


class applPastTransStreamUnitOfWork(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 2])
	syntaxobject = SnmpAdminString


class applPastTransStreamInvokes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 3])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'transactions'


class applPastTransStreamInvokesLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'transactions'


class applPastTransStreamInvCumTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class applPastTransStreamInvRspTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class applPastTransStreamPerforms(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 7])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'transactions'


class applPastTransStreamPerformsLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'transactions'


class applPastTransStreamPrfCumTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class applPastTransStreamPrfRspTimes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'milliseconds'


class applPastTransFlowDirection(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'transmit'), Enum(2, 'receive')]


class applPastTransFlowReqRsp(ColumnObject):
	status = 1
	access = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'request'), Enum(2, 'response')]


class applPastTransFlowTrans(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 3])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'transactions'


class applPastTransFlowTransLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'transactions'


class applPastTransFlowBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 5])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'bytes'


class applPastTransFlowBytesLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applPastTransFlowTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applPastTransKind(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1, 1])
	syntaxobject = SnmpAdminString


class applPastTransKindTrans(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1, 2])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'transactions'


class applPastTransKindTransLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'transactions'


class applPastTransKindBytes(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1, 4])
	syntaxobject = Unsigned64TC
	access = 4
	units = 'bytes'


class applPastTransKindBytesLow(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applPastTransKindTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applElmtRunStatusSuspended(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class applElmtRunStatusHeapUsage(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'bytes'


class applElmtRunStatusOpenConnections(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 4
	units = 'connections'


class applElmtRunStatusOpenFiles(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'files'


class applElmtRunStatusLastErrorMsg(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1, 5])
	syntaxobject = SnmpAdminString


class applElmtRunStatusLastErrorTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DateAndTime


class applElmtRunControlSuspend(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class applElmtRunControlReconfigure(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TestAndIncr


class applElmtRunControlTerminate(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# rows 
class applSrvNameToSrvInstEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applSrvName, applSrvIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 1, 1])
	access = 2
	columns = {'applSrvInstQual': applSrvInstQual}


class applSrvInstToSrvNameEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applSrvIndex, applSrvName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 2, 1])
	access = 2
	columns = {'applSrvName': applSrvName}


class applSrvInstToRunApplElmtEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applSrvIndex, sysApplElmtRunIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 3, 1])
	access = 2
	columns = {'applSrvIndex': applSrvIndex}


class applRunApplElmtToSrvInstEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sysApplElmtRunIndex, applSrvInstance], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 1, 4, 1])
	access = 2
	columns = {'applSrvInstance': applSrvInstance}


class applOpenChannelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applOpenChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 1, 1])
	access = 2
	columns = {'applElmtOrSvc': applElmtOrSvc, 'applElmtOrSvcId': applElmtOrSvcId, 'applOpenChannelIndex': applOpenChannelIndex, 'applOpenChannelOpenTime': applOpenChannelOpenTime, 'applOpenChannelReadRequests': applOpenChannelReadRequests, 'applOpenChannelReadRequestsLow': applOpenChannelReadRequestsLow, 'applOpenChannelReadFailures': applOpenChannelReadFailures, 'applOpenChannelBytesRead': applOpenChannelBytesRead, 'applOpenChannelBytesReadLow': applOpenChannelBytesReadLow, 'applOpenChannelLastReadTime': applOpenChannelLastReadTime, 'applOpenChannelWriteRequests': applOpenChannelWriteRequests, 'applOpenChannelWriteRequestsLow': applOpenChannelWriteRequestsLow, 'applOpenChannelWriteFailures': applOpenChannelWriteFailures, 'applOpenChannelBytesWritten': applOpenChannelBytesWritten, 'applOpenChannelBytesWrittenLow': applOpenChannelBytesWrittenLow, 'applOpenChannelLastWriteTime': applOpenChannelLastWriteTime}


class applOpenFileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applOpenChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 2, 1])
	access = 2
	columns = {'applOpenFileName': applOpenFileName, 'applOpenFileSizeHigh': applOpenFileSizeHigh, 'applOpenFileSizeLow': applOpenFileSizeLow, 'applOpenFileMode': applOpenFileMode}


class applOpenConnectionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applOpenChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 3, 1])
	access = 2
	columns = {'applOpenConnectionTransport': applOpenConnectionTransport, 'applOpenConnectionNearEndAddr': applOpenConnectionNearEndAddr, 'applOpenConnectionNearEndpoint': applOpenConnectionNearEndpoint, 'applOpenConnectionFarEndAddr': applOpenConnectionFarEndAddr, 'applOpenConnectionFarEndpoint': applOpenConnectionFarEndpoint, 'applOpenConnectionApplication': applOpenConnectionApplication}


class applTransactionStreamEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applOpenChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 4, 1])
	access = 2
	columns = {'applTransactStreamDescr': applTransactStreamDescr, 'applTransactStreamUnitOfWork': applTransactStreamUnitOfWork, 'applTransactStreamInvokes': applTransactStreamInvokes, 'applTransactStreamInvokesLow': applTransactStreamInvokesLow, 'applTransactStreamInvCumTimes': applTransactStreamInvCumTimes, 'applTransactStreamInvRspTimes': applTransactStreamInvRspTimes, 'applTransactStreamPerforms': applTransactStreamPerforms, 'applTransactStreamPerformsLow': applTransactStreamPerformsLow, 'applTransactStreamPrfCumTimes': applTransactStreamPrfCumTimes, 'applTransactStreamPrfRspTimes': applTransactStreamPrfRspTimes}


class applTransactFlowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applOpenChannelIndex, applTransactFlowDirection, applTransactFlowReqRsp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 5, 1])
	access = 2
	columns = {'applTransactFlowDirection': applTransactFlowDirection, 'applTransactFlowReqRsp': applTransactFlowReqRsp, 'applTransactFlowTrans': applTransactFlowTrans, 'applTransactFlowTransLow': applTransactFlowTransLow, 'applTransactFlowBytes': applTransactFlowBytes, 'applTransactFlowBytesLow': applTransactFlowBytesLow, 'applTransactFlowTime': applTransactFlowTime}


class applTransactKindEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applOpenChannelIndex, applTransactFlowDirection, applTransactFlowReqRsp, applTransactKind], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 2, 6, 1])
	access = 2
	columns = {'applTransactKind': applTransactKind, 'applTransactKindTrans': applTransactKindTrans, 'applTransactKindTransLow': applTransactKindTransLow, 'applTransactKindBytes': applTransactKindBytes, 'applTransactKindBytesLow': applTransactKindBytesLow, 'applTransactKindTime': applTransactKindTime}


class applPastChannelControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 1, 1])
	access = 2
	columns = {'applPastChannelControlCollect': applPastChannelControlCollect, 'applPastChannelControlMaxRows': applPastChannelControlMaxRows, 'applPastChannelControlTimeLimit': applPastChannelControlTimeLimit, 'applPastChannelControlRemItems': applPastChannelControlRemItems}


class applPastChannelEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applPastChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 2, 1])
	access = 2
	columns = {'applPastChannelIndex': applPastChannelIndex, 'applPastChannelOpenTime': applPastChannelOpenTime, 'applPastChannelCloseTime': applPastChannelCloseTime, 'applPastChannelReadRequests': applPastChannelReadRequests, 'applPastChannelReadReqsLow': applPastChannelReadReqsLow, 'applPastChannelReadFailures': applPastChannelReadFailures, 'applPastChannelBytesRead': applPastChannelBytesRead, 'applPastChannelBytesReadLow': applPastChannelBytesReadLow, 'applPastChannelLastReadTime': applPastChannelLastReadTime, 'applPastChannelWriteRequests': applPastChannelWriteRequests, 'applPastChannelWriteReqsLow': applPastChannelWriteReqsLow, 'applPastChannelWriteFailures': applPastChannelWriteFailures, 'applPastChannelBytesWritten': applPastChannelBytesWritten, 'applPastChannelBytesWritLow': applPastChannelBytesWritLow, 'applPastChannelLastWriteTime': applPastChannelLastWriteTime}


class applPastFileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applPastChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 3, 1])
	access = 2
	columns = {'applPastFileName': applPastFileName, 'applPastFileSizeHigh': applPastFileSizeHigh, 'applPastFileSizeLow': applPastFileSizeLow, 'applPastFileMode': applPastFileMode}


class applPastConEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applPastChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 4, 1])
	access = 2
	columns = {'applPastConTransport': applPastConTransport, 'applPastConNearEndAddr': applPastConNearEndAddr, 'applPastConNearEndpoint': applPastConNearEndpoint, 'applPastConFarEndAddr': applPastConFarEndAddr, 'applPastConFarEndpoint': applPastConFarEndpoint, 'applPastConApplication': applPastConApplication}


class applPastTransStreamEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applPastChannelIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 5, 1])
	access = 2
	columns = {'applPastTransStreamDescr': applPastTransStreamDescr, 'applPastTransStreamUnitOfWork': applPastTransStreamUnitOfWork, 'applPastTransStreamInvokes': applPastTransStreamInvokes, 'applPastTransStreamInvokesLow': applPastTransStreamInvokesLow, 'applPastTransStreamInvCumTimes': applPastTransStreamInvCumTimes, 'applPastTransStreamInvRspTimes': applPastTransStreamInvRspTimes, 'applPastTransStreamPerforms': applPastTransStreamPerforms, 'applPastTransStreamPerformsLow': applPastTransStreamPerformsLow, 'applPastTransStreamPrfCumTimes': applPastTransStreamPrfCumTimes, 'applPastTransStreamPrfRspTimes': applPastTransStreamPrfRspTimes}


class applPastTransFlowEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applPastChannelIndex, applPastTransFlowDirection, applPastTransFlowReqRsp], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 6, 1])
	access = 2
	columns = {'applPastTransFlowDirection': applPastTransFlowDirection, 'applPastTransFlowReqRsp': applPastTransFlowReqRsp, 'applPastTransFlowTrans': applPastTransFlowTrans, 'applPastTransFlowTransLow': applPastTransFlowTransLow, 'applPastTransFlowBytes': applPastTransFlowBytes, 'applPastTransFlowBytesLow': applPastTransFlowBytesLow, 'applPastTransFlowTime': applPastTransFlowTime}


class applPastTransKindEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([applElmtOrSvc, applElmtOrSvcId, applPastChannelIndex, applPastTransFlowDirection, applPastTransFlowReqRsp, applPastTransKind], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 3, 7, 1])
	access = 2
	columns = {'applPastTransKind': applPastTransKind, 'applPastTransKindTrans': applPastTransKindTrans, 'applPastTransKindTransLow': applPastTransKindTransLow, 'applPastTransKindBytes': applPastTransKindBytes, 'applPastTransKindBytesLow': applPastTransKindBytesLow, 'applPastTransKindTime': applPastTransKindTime}


class applElmtRunStatusEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sysApplElmtRunIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 1, 1])
	access = 2
	columns = {'applElmtRunStatusSuspended': applElmtRunStatusSuspended, 'applElmtRunStatusHeapUsage': applElmtRunStatusHeapUsage, 'applElmtRunStatusOpenConnections': applElmtRunStatusOpenConnections, 'applElmtRunStatusOpenFiles': applElmtRunStatusOpenFiles, 'applElmtRunStatusLastErrorMsg': applElmtRunStatusLastErrorMsg, 'applElmtRunStatusLastErrorTime': applElmtRunStatusLastErrorTime}


class applElmtRunControlEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([sysApplElmtRunIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 1, 4, 2, 1])
	access = 2
	columns = {'applElmtRunControlSuspend': applElmtRunControlSuspend, 'applElmtRunControlReconfigure': applElmtRunControlReconfigure, 'applElmtRunControlTerminate': applElmtRunControlTerminate}


# notifications (traps) 
# groups 
class applicationMonitorGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 1])
	group = [applSrvInstQual, applSrvName, applSrvIndex, applSrvInstance, applOpenChannelOpenTime, applOpenChannelReadRequestsLow, applOpenChannelReadFailures, applOpenChannelBytesReadLow, applOpenChannelLastReadTime, applOpenChannelWriteRequestsLow, applOpenChannelWriteFailures, applOpenChannelBytesWrittenLow, applOpenChannelLastWriteTime, applOpenFileName, applOpenFileSizeHigh, applOpenFileSizeLow, applOpenFileMode, applOpenConnectionTransport, applOpenConnectionNearEndAddr, applOpenConnectionNearEndpoint, applOpenConnectionFarEndAddr, applOpenConnectionFarEndpoint, applOpenConnectionApplication]

class applicationFastMonitorGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 2])
	group = [applOpenChannelReadRequests, applOpenChannelBytesRead, applOpenChannelWriteRequests, applOpenChannelBytesWritten]

class applicationTransactGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 3])
	group = [applTransactStreamDescr, applTransactStreamUnitOfWork, applTransactStreamInvokesLow, applTransactStreamInvCumTimes, applTransactStreamInvRspTimes, applTransactStreamPerformsLow, applTransactStreamPrfCumTimes, applTransactStreamPrfRspTimes, applTransactFlowTransLow, applTransactFlowBytesLow, applTransactFlowTime, applTransactKindTransLow, applTransactKindBytesLow, applTransactKindTime]

class applicationFastTransactGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 4])
	group = [applTransactStreamInvokes, applTransactStreamPerforms, applTransactFlowTrans, applTransactFlowBytes, applTransactKindTrans, applTransactKindBytes]

class applicationHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 5])
	group = [applPastChannelControlCollect, applPastChannelControlMaxRows, applPastChannelControlTimeLimit, applPastChannelControlRemItems, applPastChannelOpenTime, applPastChannelCloseTime, applPastChannelReadReqsLow, applPastChannelReadFailures, applPastChannelBytesReadLow, applPastChannelLastReadTime, applPastChannelWriteReqsLow, applPastChannelWriteFailures, applPastChannelBytesWritLow, applPastChannelLastWriteTime, applPastFileName, applPastFileSizeHigh, applPastFileSizeLow, applPastFileMode, applPastConTransport, applPastConNearEndAddr, applPastConNearEndpoint, applPastConFarEndAddr, applPastConFarEndpoint, applPastConApplication]

class applicationFastHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 6])
	group = [applPastChannelReadRequests, applPastChannelBytesRead, applPastChannelWriteRequests, applPastChannelBytesWritten]

class applicationTransHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 7])
	group = [applPastTransStreamDescr, applPastTransStreamUnitOfWork, applPastTransStreamInvokesLow, applPastTransStreamInvCumTimes, applPastTransStreamInvRspTimes, applPastTransStreamPerformsLow, applPastTransStreamPrfCumTimes, applPastTransStreamPrfRspTimes, applPastTransFlowTransLow, applPastTransFlowBytesLow, applPastTransFlowTime, applPastTransKindTransLow, applPastTransKindBytesLow, applPastTransKindTime]

class applicationFastTransHistoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 8])
	group = [applPastTransFlowTrans, applPastTransFlowBytes, applPastTransKindTrans, applPastTransKindBytes, applPastTransStreamPerforms, applPastTransStreamInvokes]

class applicationRunGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 62, 2, 1, 9])
	group = [applElmtRunStatusSuspended, applElmtRunStatusHeapUsage, applElmtRunStatusOpenConnections, applElmtRunStatusOpenFiles, applElmtRunStatusLastErrorMsg, applElmtRunStatusLastErrorTime, applElmtRunControlSuspend, applElmtRunControlReconfigure, applElmtRunControlTerminate]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
