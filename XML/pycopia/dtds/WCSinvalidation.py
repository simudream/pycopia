#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

#  WCSinvalidation.dtd is the DTD file that describes a valid
# Webcache invalidation XML message for request and response.
# 


#  root element for invalidation request 


class Invalidation(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('VERSION', 1, 11, None), 
         ])
	_name = u'INVALIDATION'


#  VERSION is currently "WCS-1.0" without the quotes 


class System(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'SYSTEM'


class Systeminfo(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('NAME', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('VALUE', 1, 12, None), 
         ])
	_name = u'SYSTEMINFO'


class Object(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'OBJECT'


class Basicselector(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('URI', 1, 11, None), 
         ])
	_name = u'BASICSELECTOR'


class Advancedselector(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('URIPREFIX', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('HOST', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('URIEXP', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('METHOD', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('BODYEXP', 1, 12, None), 
         ])
	_name = u'ADVANCEDSELECTOR'


class Cookie(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('NAME', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('VALUE', 1, 12, None), 
         ])
	_name = u'COOKIE'


class Header(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('NAME', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('VALUE', 1, 12, None), 
         ])
	_name = u'HEADER'


class Other(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('TYPE', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('NAME', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('VALUE', 1, 12, None), 
         ])
	_name = u'OTHER'


class Action(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('REMOVALTTL', 1, 12, None), 
         ])
	_name = u'ACTION'


#  root element for invalidation response 


class Invalidationresult(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'INVALIDATIONRESULT'


class Objectresult(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'OBJECTRESULT'


class Result(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('ID', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('STATUS', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('NUMINV', 1, 11, None), 
         ])
	_name = u'RESULT'


GENERAL_ENTITIES = {}
