#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

attribLocalsrc_3220966263157833969 = pycopia.XML.POM.XMLAttribute(u'localsrc', 1, 12, None)


attribFormat_5682208774702329 = pycopia.XML.POM.XMLAttribute(u'format', 1, 12, None)


attribTitle_4254840287891469241 = pycopia.XML.POM.XMLAttribute(u'title', 1, 12, None)


attribNewcontext_3674167346276038756 = pycopia.XML.POM.XMLAttribute(u'newcontext', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'false')


attribVspace_995461752639063616 = pycopia.XML.POM.XMLAttribute(u'vspace', 1, 13, u'0')


attribMode_1119166784791358436 = pycopia.XML.POM.XMLAttribute(u'mode', pycopia.XML.POM.Enumeration((u'wrap', u'nowrap')), 12, None)


attribLabel_1763775457643958889 = pycopia.XML.POM.XMLAttribute(u'label', 1, 12, None)


attribAlt_1162895347347825025 = pycopia.XML.POM.XMLAttribute(u'alt', 1, 11, None)


attribHspace_1582921740062583684 = pycopia.XML.POM.XMLAttribute(u'hspace', 1, 13, u'0')


attribSendreferer_3133377546496661025 = pycopia.XML.POM.XMLAttribute(u'sendreferer', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'false')


attribScheme_305738970983549041 = pycopia.XML.POM.XMLAttribute(u'scheme', 1, 12, None)


attribDomain_1465870397029897104 = pycopia.XML.POM.XMLAttribute(u'domain', 1, 12, None)


attribMethod_3652949412068207364 = pycopia.XML.POM.XMLAttribute(u'method', pycopia.XML.POM.Enumeration((u'post', u'get')), 13, u'get')


attribXml_lang_2029235648979380625 = pycopia.XML.POM.XMLAttribute(u'xml:lang', 7, 12, None)


attribSrc_3104320399512748900 = pycopia.XML.POM.XMLAttribute(u'src', 1, 11, None)


attribIvalue_2737941916211253504 = pycopia.XML.POM.XMLAttribute(u'ivalue', 1, 12, None)


attribOptional_4060772272290282025 = pycopia.XML.POM.XMLAttribute(u'optional', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'false')


attribForua_1818838475511667204 = pycopia.XML.POM.XMLAttribute(u'forua', pycopia.XML.POM.Enumeration((u'true', u'false')), 12, None)


attribName_303323689952890000 = pycopia.XML.POM.XMLAttribute(u'name', 7, 11, None)


attribOnpick_2409726156289415824 = pycopia.XML.POM.XMLAttribute(u'onpick', 1, 12, None)


attribIname_342161487157078369 = pycopia.XML.POM.XMLAttribute(u'iname', 7, 12, None)


attribPath_2436346508635681849 = pycopia.XML.POM.XMLAttribute(u'path', 1, 12, None)


attribType_291473665566426121 = pycopia.XML.POM.XMLAttribute(u'type', 1, 11, None)


attribOnenterbackward_4596453292218896761 = pycopia.XML.POM.XMLAttribute(u'onenterbackward', 1, 12, None)


attribType_3748092840448665856 = pycopia.XML.POM.XMLAttribute(u'type', pycopia.XML.POM.Enumeration((u'text', u'password')), 13, u'text')


attribId_121205855951786596 = pycopia.XML.POM.XMLAttribute(u'id', 2, 12, None)


attribHeight_607192057250935849 = pycopia.XML.POM.XMLAttribute(u'height', 1, 12, None)


attribContent_3546404873644026241 = pycopia.XML.POM.XMLAttribute(u'content', 1, 11, None)


attribAlign_4037419012459682529 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'left', u'right', u'center')), 13, u'left')


attribWidth_2698869476000729641 = pycopia.XML.POM.XMLAttribute(u'width', 1, 12, None)


attribClass_21482239889467681 = pycopia.XML.POM.XMLAttribute(u'class', 1, 12, None)


attribName_1423564487243335089 = pycopia.XML.POM.XMLAttribute(u'name', 1, 12, None)


attribAccept_charset_3314295702872442729 = pycopia.XML.POM.XMLAttribute(u'accept-charset', 1, 12, None)


attribTabindex_2183065430186080729 = pycopia.XML.POM.XMLAttribute(u'tabindex', 7, 12, None)


attribName_1246620389478747364 = pycopia.XML.POM.XMLAttribute(u'name', 1, 11, None)


attribOntimer_1330163535687011281 = pycopia.XML.POM.XMLAttribute(u'ontimer', 1, 12, None)


attribMultiple_16771446342335161 = pycopia.XML.POM.XMLAttribute(u'multiple', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'false')


attribHttp_equiv_1967159638805230489 = pycopia.XML.POM.XMLAttribute(u'http-equiv', 1, 12, None)


attribSize_41977888220973721 = pycopia.XML.POM.XMLAttribute(u'size', 7, 12, None)


attribValue_4156605816673722624 = pycopia.XML.POM.XMLAttribute(u'value', 1, 12, None)


attribHref_35096121232009744 = pycopia.XML.POM.XMLAttribute(u'href', 1, 11, None)


attribValue_18672084769430569 = pycopia.XML.POM.XMLAttribute(u'value', 1, 11, None)


attribAlign_1715347099837610404 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'top', u'middle', u'bottom')), 13, u'bottom')


attribMaxlength_1942012335973294729 = pycopia.XML.POM.XMLAttribute(u'maxlength', 7, 12, None)


attribOnenterforward_222621761611547236 = pycopia.XML.POM.XMLAttribute(u'onenterforward', 1, 12, None)


attribColumns_572657905169439769 = pycopia.XML.POM.XMLAttribute(u'columns', 7, 11, None)


attribOrdered_4108862243898239689 = pycopia.XML.POM.XMLAttribute(u'ordered', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'true')


attribName_3951386174947790881 = pycopia.XML.POM.XMLAttribute(u'name', 7, 12, None)


attribAlign_1852521551500152976 = pycopia.XML.POM.XMLAttribute(u'align', 1, 12, None)


attribEmptyok_4505788268119429369 = pycopia.XML.POM.XMLAttribute(u'emptyok', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'false')




# 
# Wireless Markup Language (WML) Document Type Definition.
# 
# Copyright Wireless Application Protocol Forum Ltd., 1998,1999.
#                       All rights reserved.  
# 
# WML is an XML language.  Typical usage:
#    <?xml version="1.0"?>
#    <!DOCTYPE wml PUBLIC "-//WAPFORUM//DTD WML 1.1//EN"
#           "http://www.wapforum.org/DTD/wml_1.1.xml">
#    <wml>
#    ...
#    </wml>
# 
# Terms and conditions of use are available from the Wireless 
# Application Protocol Forum Ltd. web site at
# http://www.wapforum.org/docs/copyright.htm.
# 


#  [0-9]+ for pixels or [0-9]+"%" for
#                                     percentage length 


#  attribute value possibly containing
#                                     variable references 


#  URI, URL or URN designating a hypertext
#                                     node. May contain variable references 


#  a number, with format [0-9]+ 


#  flow covers "card-level" elements, such as text and images 


#  Task types 


#  Navigation and event elements 


# ================ Decks and Cards ================


class Wml(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'wml'



_Root = Wml



#  card intrinsic events 


#  card field types 


class Card(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'xml_lang': attribXml_lang_2029235648979380625, 
         'ordered': attribOrdered_4108862243898239689, 
         'onenterbackward': attribOnenterbackward_4596453292218896761, 
         'title': attribTitle_4254840287891469241, 
         'class_': attribClass_21482239889467681, 
         'ontimer': attribOntimer_1330163535687011281, 
         'newcontext': attribNewcontext_3674167346276038756, 
         'onenterforward': attribOnenterforward_222621761611547236, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'card'


# ================ Event Bindings ================


class Do(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'xml_lang': attribXml_lang_2029235648979380625, 
         'name': attribName_3951386174947790881, 
         'type': attribType_291473665566426121, 
         'label': attribLabel_1763775457643958889, 
         'class_': attribClass_21482239889467681, 
         'optional': attribOptional_4060772272290282025, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'do'


class Onevent(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'type': attribType_291473665566426121, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'onevent'


# ================ Deck-level declarations ================


class Head(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'head'


class Template(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'id': attribId_121205855951786596, 
         'class_': attribClass_21482239889467681, 
         'onenterforward': attribOnenterforward_222621761611547236, 
         'ontimer': attribOntimer_1330163535687011281, 
         'onenterbackward': attribOnenterbackward_4596453292218896761, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'template'


class Access(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'path': attribPath_2436346508635681849, 
         'domain': attribDomain_1465870397029897104, 
         'id': attribId_121205855951786596, 
         'class_': attribClass_21482239889467681, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'access'


class Meta(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'http_equiv': attribHttp_equiv_1967159638805230489, 
         'forua': attribForua_1818838475511667204, 
         'content': attribContent_3546404873644026241, 
         'class_': attribClass_21482239889467681, 
         'scheme': attribScheme_305738970983549041, 
         'id': attribId_121205855951786596, 
         'name': attribName_1423564487243335089, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'meta'


# ================ Tasks ================


class Go(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'accept_charset': attribAccept_charset_3314295702872442729, 
         'method': attribMethod_3652949412068207364, 
         'class_': attribClass_21482239889467681, 
         'href': attribHref_35096121232009744, 
         'sendreferer': attribSendreferer_3133377546496661025, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'go'


class Prev(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'prev'


class Refresh(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'refresh'


class Noop(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'noop'


# ================ postfield ================


class Postfield(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'name': attribName_1246620389478747364, 
         'value': attribValue_18672084769430569, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'postfield'


# ================ variables ================


class Setvar(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'name': attribName_1246620389478747364, 
         'value': attribValue_18672084769430569, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'setvar'


# ================ Card Fields ================


class Select(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'xml_lang': attribXml_lang_2029235648979380625, 
         'multiple': attribMultiple_16771446342335161, 
         'iname': attribIname_342161487157078369, 
         'title': attribTitle_4254840287891469241, 
         'ivalue': attribIvalue_2737941916211253504, 
         'class_': attribClass_21482239889467681, 
         'value': attribValue_4156605816673722624, 
         'tabindex': attribTabindex_2183065430186080729, 
         'id': attribId_121205855951786596, 
         'name': attribName_3951386174947790881, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'select'


class Optgroup(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         'title': attribTitle_4254840287891469241, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'optgroup'


class Option(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onpick': attribOnpick_2409726156289415824, 
         'title': attribTitle_4254840287891469241, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'value': attribValue_4156605816673722624, 
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'option'


class Input(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'xml_lang': attribXml_lang_2029235648979380625, 
         'name': attribName_303323689952890000, 
         'format': attribFormat_5682208774702329, 
         'title': attribTitle_4254840287891469241, 
         'value': attribValue_4156605816673722624, 
         'class_': attribClass_21482239889467681, 
         'emptyok': attribEmptyok_4505788268119429369, 
         'maxlength': attribMaxlength_1942012335973294729, 
         'tabindex': attribTabindex_2183065430186080729, 
         'type': attribType_3748092840448665856, 
         'id': attribId_121205855951786596, 
         'size': attribSize_41977888220973721, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'input'


class Fieldset(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         'title': attribTitle_4254840287891469241, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'fieldset'


class Timer(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'name': attribName_3951386174947790881, 
         'value': attribValue_18672084769430569, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'timer'


# ================ Images ================


class Img(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'src': attribSrc_3104320399512748900, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'localsrc': attribLocalsrc_3220966263157833969, 
         'class_': attribClass_21482239889467681, 
         'align': attribAlign_1715347099837610404, 
         'height': attribHeight_607192057250935849, 
         'width': attribWidth_2698869476000729641, 
         'vspace': attribVspace_995461752639063616, 
         'alt': attribAlt_1162895347347825025, 
         'hspace': attribHspace_1582921740062583684, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'img'


# ================ Anchor ================


class Anchor(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         'title': attribTitle_4254840287891469241, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'anchor'


class A(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'href': attribHref_35096121232009744, 
         'id': attribId_121205855951786596, 
         'title': attribTitle_4254840287891469241, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'a'


# ================ Tables ================


class Table(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'xml_lang': attribXml_lang_2029235648979380625, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1852521551500152976, 
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         'columns': attribColumns_572657905169439769, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'table'


class Tr(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'tr'


class Td(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'td'


# ================ Text layout and line breaks ================


class Em(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'em'


class Strong(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'strong'


class B(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'b'


class I(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'i'


class U(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'u'


class Big(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'big'


class Small(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'small'


class P(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'align': attribAlign_4037419012459682529, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'mode': attribMode_1119166784791358436, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'p'


class Br(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'br'


#  quotation mark 


#  ampersand 


#  apostrophe 


#  less than 


#  greater than 


#  non-breaking space 


#  soft hyphen (discretionary hyphen) 


# 
# Copyright Wireless Application Protocol Forum Ltd., 1998,1999.
#                       All rights reserved.  
# 


GENERAL_ENTITIES = {'gt': u'>', 'quot': u'"', 'shy': u'\xad', 'lt': u'&#60;', 'nbsp': u'\xa0', 'amp': u'&#38;', 'apos': u"'"}

# Cache for dynamic classes for this dtd.


_CLASSCACHE = {}


