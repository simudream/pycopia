#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

attribRel_210781088572488256 = pycopia.XML.POM.XMLAttribute(u'rel', 1, 12, None)


attribOnsubmit_548115041167630561 = pycopia.XML.POM.XMLAttribute(u'onsubmit', 1, 12, None)


attribHreflang_96177259461920569 = pycopia.XML.POM.XMLAttribute(u'hreflang', 7, 12, None)


attribStart_37096382094932521 = pycopia.XML.POM.XMLAttribute(u'start', 1, 12, None)


attribLabel_1260736214172610816 = pycopia.XML.POM.XMLAttribute(u'label', 1, 11, None)


attribOnunload_1601018212792218256 = pycopia.XML.POM.XMLAttribute(u'onunload', 1, 12, None)


attribOnclick_218984846997916224 = pycopia.XML.POM.XMLAttribute(u'onclick', 1, 12, None)


attribScheme_305738970983549041 = pycopia.XML.POM.XMLAttribute(u'scheme', 1, 12, None)


attribAlt_2026611278337360400 = pycopia.XML.POM.XMLAttribute(u'alt', 1, 12, None)


attribMedia_1916838375387458329 = pycopia.XML.POM.XMLAttribute(u'media', 1, 12, None)


attribProfile_3323627329706839684 = pycopia.XML.POM.XMLAttribute(u'profile', 1, 12, None)


attribLang_60603731757775504 = pycopia.XML.POM.XMLAttribute(u'lang', 7, 12, None)


attribDir_986584432728367489 = pycopia.XML.POM.XMLAttribute(u'dir', pycopia.XML.POM.Enumeration((u'ltr', u'rtl')), 11, None)


attribMaxlength_604742143183339225 = pycopia.XML.POM.XMLAttribute(u'maxlength', 1, 12, None)


attribUsemap_1482360860247970329 = pycopia.XML.POM.XMLAttribute(u'usemap', 1, 12, None)


attribDefer_101701461619235556 = pycopia.XML.POM.XMLAttribute(u'defer', pycopia.XML.POM.Enumeration((u'defer',)), 12, None)


attribId_121205855951786596 = pycopia.XML.POM.XMLAttribute(u'id', 2, 12, None)


attribSize_896024298127360000 = pycopia.XML.POM.XMLAttribute(u'size', 1, 11, None)


attribOnmouseout_3949102245718310976 = pycopia.XML.POM.XMLAttribute(u'onmouseout', 1, 12, None)


attribMarginheight_232059084494862769 = pycopia.XML.POM.XMLAttribute(u'marginheight', 1, 12, None)


attribXml_lang_2029235648979380625 = pycopia.XML.POM.XMLAttribute(u'xml:lang', 7, 12, None)


attribStandby_275913609211742436 = pycopia.XML.POM.XMLAttribute(u'standby', 1, 12, None)


attribOnmousemove_304442714949305284 = pycopia.XML.POM.XMLAttribute(u'onmousemove', 1, 12, None)


attribCharset_2456238898048849 = pycopia.XML.POM.XMLAttribute(u'charset', 1, 12, None)


attribHref_10590696292225 = pycopia.XML.POM.XMLAttribute(u'href', 1, 12, None)


attribDatetime_4149042511988579881 = pycopia.XML.POM.XMLAttribute(u'datetime', 1, 12, None)


attribColspan_13003694770657536 = pycopia.XML.POM.XMLAttribute(u'colspan', 1, 13, u'1')


attribHspace_2767215927762068836 = pycopia.XML.POM.XMLAttribute(u'hspace', 1, 12, None)


attribTarget_199657905920859681 = pycopia.XML.POM.XMLAttribute(u'target', 7, 12, None)


attribOnreset_2571890462972446225 = pycopia.XML.POM.XMLAttribute(u'onreset', 1, 12, None)


attribSrc_622124219914705225 = pycopia.XML.POM.XMLAttribute(u'src', 1, 12, None)


attribVspace_2352136466791193104 = pycopia.XML.POM.XMLAttribute(u'vspace', 1, 12, None)


attribCharoff_65851267463140324 = pycopia.XML.POM.XMLAttribute(u'charoff', 1, 12, None)


attribOnmouseover_1690484448512533969 = pycopia.XML.POM.XMLAttribute(u'onmouseover', 1, 12, None)


attribFor_666919309859033284 = pycopia.XML.POM.XMLAttribute(u'for', 3, 12, None)


attribChecked_1601429972271201856 = pycopia.XML.POM.XMLAttribute(u'checked', pycopia.XML.POM.Enumeration((u'checked',)), 12, None)


attribName_3951386174947790881 = pycopia.XML.POM.XMLAttribute(u'name', 7, 12, None)


attribOnchange_1479634582206140721 = pycopia.XML.POM.XMLAttribute(u'onchange', 1, 12, None)


attribRowspan_824571289138210084 = pycopia.XML.POM.XMLAttribute(u'rowspan', 1, 13, u'1')


attribOnkeydown_1500412149098308161 = pycopia.XML.POM.XMLAttribute(u'onkeydown', 1, 12, None)


attribOnmouseup_1201669506220024384 = pycopia.XML.POM.XMLAttribute(u'onmouseup', 1, 12, None)


attribAlt_1162895347347825025 = pycopia.XML.POM.XMLAttribute(u'alt', 1, 11, None)


attribId_1305668797275774409 = pycopia.XML.POM.XMLAttribute(u'id', 2, 11, None)


attribCellspacing_1429406768430936036 = pycopia.XML.POM.XMLAttribute(u'cellspacing', 1, 12, None)


attribAlink_549540744423503716 = pycopia.XML.POM.XMLAttribute(u'alink', 1, 12, None)


attribBgcolor_2421952498914997801 = pycopia.XML.POM.XMLAttribute(u'bgcolor', 1, 12, None)


attribMarginwidth_3754353124423471761 = pycopia.XML.POM.XMLAttribute(u'marginwidth', 1, 12, None)


attribNowrap_895997721987119844 = pycopia.XML.POM.XMLAttribute(u'nowrap', pycopia.XML.POM.Enumeration((u'nowrap',)), 12, None)


attribClear_1130432899291921 = pycopia.XML.POM.XMLAttribute(u'clear', pycopia.XML.POM.Enumeration((u'left', u'all', u'right', u'none')), 13, u'none')


attribAccesskey_2737575848648385424 = pycopia.XML.POM.XMLAttribute(u'accesskey', 1, 12, None)


attribObject_941323264410731409 = pycopia.XML.POM.XMLAttribute(u'object', 1, 12, None)


attribAccept_687132212977459456 = pycopia.XML.POM.XMLAttribute(u'accept', 1, 12, None)


attribAlign_710921868196301584 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'top', u'middle', u'bottom', u'left', u'right')), 12, None)


attribSummary_293896294327076841 = pycopia.XML.POM.XMLAttribute(u'summary', 1, 12, None)


attribOnload_292658179982830281 = pycopia.XML.POM.XMLAttribute(u'onload', 1, 12, None)


attribHeight_607192057250935849 = pycopia.XML.POM.XMLAttribute(u'height', 1, 12, None)


attribShape_2366611433715347289 = pycopia.XML.POM.XMLAttribute(u'shape', pycopia.XML.POM.Enumeration((u'rect', u'circle', u'poly', u'default')), 13, u'rect')


attribStyle_68292116612380816 = pycopia.XML.POM.XMLAttribute(u'style', 1, 12, None)


attribSelected_797750601755673316 = pycopia.XML.POM.XMLAttribute(u'selected', pycopia.XML.POM.Enumeration((u'selected',)), 12, None)


attribAccept_charset_3314295702872442729 = pycopia.XML.POM.XMLAttribute(u'accept-charset', 1, 12, None)


attribOnkeypress_4440472239224268025 = pycopia.XML.POM.XMLAttribute(u'onkeypress', 1, 12, None)


attribMultiple_1270567521988255296 = pycopia.XML.POM.XMLAttribute(u'multiple', pycopia.XML.POM.Enumeration((u'multiple',)), 12, None)


attribCodebase_1491350078472004 = pycopia.XML.POM.XMLAttribute(u'codebase', 1, 12, None)


attribTabindex_1924349933320454025 = pycopia.XML.POM.XMLAttribute(u'tabindex', 1, 12, None)


attribFrameborder_329493431462553856 = pycopia.XML.POM.XMLAttribute(u'frameborder', pycopia.XML.POM.Enumeration((u'1', u'0')), 13, u'1')


attribLabel_1763775457643958889 = pycopia.XML.POM.XMLAttribute(u'label', 1, 12, None)


attribEnctype_436576891689519025 = pycopia.XML.POM.XMLAttribute(u'enctype', 1, 13, u'application/x-www-form-urlencoded')


attribNoshade_3021452397879502500 = pycopia.XML.POM.XMLAttribute(u'noshade', pycopia.XML.POM.Enumeration((u'noshade',)), 12, None)


attribColor_63299592161186404 = pycopia.XML.POM.XMLAttribute(u'color', 1, 12, None)


attribAlign_536865270305919025 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'top', u'bottom', u'left', u'right')), 12, None)


attribArchive_2029791469104495009 = pycopia.XML.POM.XMLAttribute(u'archive', 1, 12, None)


attribAlign_1906525509233284 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'left', u'center', u'right', u'justify')), 12, None)


attribLink_1572944480856255556 = pycopia.XML.POM.XMLAttribute(u'link', 1, 12, None)


attribType_3598646553109970404 = pycopia.XML.POM.XMLAttribute(u'type', 1, 12, None)


attribAlign_1920212820748718721 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'left', u'center', u'right')), 12, None)


attribOnkeyup_909454956101496484 = pycopia.XML.POM.XMLAttribute(u'onkeyup', 1, 12, None)


attribBorder_347829150666058084 = pycopia.XML.POM.XMLAttribute(u'border', 1, 12, None)


attribClassid_1288014720321799044 = pycopia.XML.POM.XMLAttribute(u'classid', 1, 12, None)


attribType_73263565986139489 = pycopia.XML.POM.XMLAttribute(u'type', pycopia.XML.POM.Enumeration((u'text', u'password', u'checkbox', u'radio', u'submit', u'reset', u'file', u'hidden', u'image', u'button')), 13, u'text')


attribMethod_1594070884251040000 = pycopia.XML.POM.XMLAttribute(u'method', pycopia.XML.POM.Enumeration((u'get', u'post')), 13, u'get')


attribTitle_4254840287891469241 = pycopia.XML.POM.XMLAttribute(u'title', 1, 12, None)


attribCompact_225962512927260736 = pycopia.XML.POM.XMLAttribute(u'compact', pycopia.XML.POM.Enumeration((u'compact',)), 12, None)


attribValuetype_3058020386316608164 = pycopia.XML.POM.XMLAttribute(u'valuetype', pycopia.XML.POM.Enumeration((u'data', u'ref', u'object')), 13, u'data')


attribDir_7209994079715856 = pycopia.XML.POM.XMLAttribute(u'dir', pycopia.XML.POM.Enumeration((u'ltr', u'rtl')), 12, None)


attribAlign_104483610154648516 = pycopia.XML.POM.XMLAttribute(u'align', pycopia.XML.POM.Enumeration((u'left', u'center', u'right', u'justify', u'char')), 12, None)


attribXmlns_2523611023564185025 = pycopia.XML.POM.XMLAttribute(u'xmlns', 1, 14, u'http://www.w3.org/1999/xhtml')


attribFrame_732198051411918400 = pycopia.XML.POM.XMLAttribute(u'frame', pycopia.XML.POM.Enumeration((u'void', u'above', u'below', u'hsides', u'lhs', u'rhs', u'vsides', u'box', u'border')), 12, None)


attribRows_873710474168435344 = pycopia.XML.POM.XMLAttribute(u'rows', 1, 11, None)


attribLongdesc_551606211785669089 = pycopia.XML.POM.XMLAttribute(u'longdesc', 1, 12, None)


attribValign_465514098463396096 = pycopia.XML.POM.XMLAttribute(u'valign', pycopia.XML.POM.Enumeration((u'top', u'middle', u'bottom', u'baseline')), 12, None)


attribSize_1540036912549524169 = pycopia.XML.POM.XMLAttribute(u'size', 1, 12, None)


attribFace_72210001461940969 = pycopia.XML.POM.XMLAttribute(u'face', 1, 12, None)


attribWidth_3319227284037614244 = pycopia.XML.POM.XMLAttribute(u'width', 1, 11, None)


attribType_418236194942219889 = pycopia.XML.POM.XMLAttribute(u'type', pycopia.XML.POM.Enumeration((u'button', u'submit', u'reset')), 13, u'submit')


attribCodetype_164813866435053081 = pycopia.XML.POM.XMLAttribute(u'codetype', 1, 12, None)


attribHttp_equiv_1967159638805230489 = pycopia.XML.POM.XMLAttribute(u'http-equiv', 1, 12, None)


attribDisabled_463113992526643264 = pycopia.XML.POM.XMLAttribute(u'disabled', pycopia.XML.POM.Enumeration((u'disabled',)), 12, None)


attribValue_4156605816673722624 = pycopia.XML.POM.XMLAttribute(u'value', 1, 12, None)


attribLanguage_2692294709179107904 = pycopia.XML.POM.XMLAttribute(u'language', 1, 12, None)


attribOndblclick_1801050127905703921 = pycopia.XML.POM.XMLAttribute(u'ondblclick', 1, 12, None)


attribXml_space_359981169846238864 = pycopia.XML.POM.XMLAttribute(u'xml:space', pycopia.XML.POM.Enumeration((u'preserve',)), 14, u'preserve')


attribOnmousedown_3573838939762520361 = pycopia.XML.POM.XMLAttribute(u'onmousedown', 1, 12, None)


attribCols_157052534391325764 = pycopia.XML.POM.XMLAttribute(u'cols', 1, 11, None)


attribIsmap_7068851462437444 = pycopia.XML.POM.XMLAttribute(u'ismap', pycopia.XML.POM.Enumeration((u'ismap',)), 12, None)


attribRev_2629567755960016804 = pycopia.XML.POM.XMLAttribute(u'rev', 1, 12, None)


attribCite_2366926375086749281 = pycopia.XML.POM.XMLAttribute(u'cite', 1, 12, None)


attribVlink_1306978804484037169 = pycopia.XML.POM.XMLAttribute(u'vlink', 1, 12, None)


attribReadonly_3553452907694444304 = pycopia.XML.POM.XMLAttribute(u'readonly', pycopia.XML.POM.Enumeration((u'readonly',)), 12, None)


attribCode_821085029361080929 = pycopia.XML.POM.XMLAttribute(u'code', 1, 12, None)


attribDeclare_857178368687561284 = pycopia.XML.POM.XMLAttribute(u'declare', pycopia.XML.POM.Enumeration((u'declare',)), 12, None)


attribScope_696057159108760801 = pycopia.XML.POM.XMLAttribute(u'scope', pycopia.XML.POM.Enumeration((u'row', u'col', u'rowgroup', u'colgroup')), 12, None)


attribOnfocus_3032793062530224400 = pycopia.XML.POM.XMLAttribute(u'onfocus', 1, 12, None)


attribWidth_2698869476000729641 = pycopia.XML.POM.XMLAttribute(u'width', 1, 12, None)


attribSrc_3104320399512748900 = pycopia.XML.POM.XMLAttribute(u'src', 1, 11, None)


attribNohref_4261619962699292736 = pycopia.XML.POM.XMLAttribute(u'nohref', pycopia.XML.POM.Enumeration((u'nohref',)), 12, None)


attribData_119997120992872036 = pycopia.XML.POM.XMLAttribute(u'data', 1, 12, None)


attribOnselect_1171458765119423169 = pycopia.XML.POM.XMLAttribute(u'onselect', 1, 12, None)


attribScrolling_4040297681898082276 = pycopia.XML.POM.XMLAttribute(u'scrolling', pycopia.XML.POM.Enumeration((u'yes', u'no', u'auto')), 13, u'auto')


attribChar_4212719149091685444 = pycopia.XML.POM.XMLAttribute(u'char', 1, 12, None)


attribAction_142350502103259025 = pycopia.XML.POM.XMLAttribute(u'action', 1, 11, None)


attribType_291473665566426121 = pycopia.XML.POM.XMLAttribute(u'type', 1, 11, None)


attribContent_3546404873644026241 = pycopia.XML.POM.XMLAttribute(u'content', 1, 11, None)


attribHeight_1949363583163916544 = pycopia.XML.POM.XMLAttribute(u'height', 1, 11, None)


attribPrompt_1058847713206640644 = pycopia.XML.POM.XMLAttribute(u'prompt', 1, 12, None)


attribClass_21482239889467681 = pycopia.XML.POM.XMLAttribute(u'class', 1, 12, None)


attribCellpadding_4312010106974760100 = pycopia.XML.POM.XMLAttribute(u'cellpadding', 1, 12, None)


attribName_1423564487243335089 = pycopia.XML.POM.XMLAttribute(u'name', 1, 12, None)


attribCoords_236937713882800324 = pycopia.XML.POM.XMLAttribute(u'coords', 1, 12, None)


attribOnblur_400089540432531856 = pycopia.XML.POM.XMLAttribute(u'onblur', 1, 12, None)


attribHeaders_1895922246332405776 = pycopia.XML.POM.XMLAttribute(u'headers', 4, 12, None)


attribName_1246620389478747364 = pycopia.XML.POM.XMLAttribute(u'name', 1, 11, None)


attribType_2706764326651887616 = pycopia.XML.POM.XMLAttribute(u'type', pycopia.XML.POM.Enumeration((u'disc', u'square', u'circle')), 12, None)


attribText_4284143684356732249 = pycopia.XML.POM.XMLAttribute(u'text', 1, 12, None)


attribSpan_166592741538223081 = pycopia.XML.POM.XMLAttribute(u'span', 1, 13, u'1')


attribRules_932406217823290896 = pycopia.XML.POM.XMLAttribute(u'rules', pycopia.XML.POM.Enumeration((u'none', u'groups', u'rows', u'cols', u'all')), 12, None)


attribBackground_178928830800040000 = pycopia.XML.POM.XMLAttribute(u'background', 1, 12, None)


attribAbbr_2036693206661546449 = pycopia.XML.POM.XMLAttribute(u'abbr', 1, 12, None)


attribAxis_298091641253602249 = pycopia.XML.POM.XMLAttribute(u'axis', 1, 12, None)




# 
#    Extensible HTML version 1.0 Transitional DTD
# 
#    This is the same as HTML 4 Transitional except for
#    changes due to the differences between XML and SGML.
# 
#    Namespace = http://www.w3.org/1999/xhtml
# 
#    For further information, see: http://www.w3.org/TR/xhtml1
# 
#    Copyright (c) 1998-2001 W3C (MIT, INRIA, Keio),
#    All Rights Reserved. 
# 
#    This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
#    SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"
# 
#    $Revision$
#    $Date$
# 
# 


# ================ Character mnemonic entities =========================


#  Portions (C) International Organization for Standardization 1986
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Character entity set. Typical invocation:
#     <!ENTITY % HTMLlat1 PUBLIC
#        "-//W3C//ENTITIES Latin 1 for XHTML//EN"
#        "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
#     %HTMLlat1;
# 


#  no-break space = non-breaking space,
#                                   U+00A0 ISOnum 


#  inverted exclamation mark, U+00A1 ISOnum 


#  cent sign, U+00A2 ISOnum 


#  pound sign, U+00A3 ISOnum 


#  currency sign, U+00A4 ISOnum 


#  yen sign = yuan sign, U+00A5 ISOnum 


#  broken bar = broken vertical bar,
#                                   U+00A6 ISOnum 


#  section sign, U+00A7 ISOnum 


#  diaeresis = spacing diaeresis,
#                                   U+00A8 ISOdia 


#  copyright sign, U+00A9 ISOnum 


#  feminine ordinal indicator, U+00AA ISOnum 


#  left-pointing double angle quotation mark
#                                   = left pointing guillemet, U+00AB ISOnum 


#  not sign = angled dash,
#                                   U+00AC ISOnum 


#  soft hyphen = discretionary hyphen,
#                                   U+00AD ISOnum 


#  registered sign = registered trade mark sign,
#                                   U+00AE ISOnum 


#  macron = spacing macron = overline
#                                   = APL overbar, U+00AF ISOdia 


#  degree sign, U+00B0 ISOnum 


#  plus-minus sign = plus-or-minus sign,
#                                   U+00B1 ISOnum 


#  superscript two = superscript digit two
#                                   = squared, U+00B2 ISOnum 


#  superscript three = superscript digit three
#                                   = cubed, U+00B3 ISOnum 


#  acute accent = spacing acute,
#                                   U+00B4 ISOdia 


#  micro sign, U+00B5 ISOnum 


#  pilcrow sign = paragraph sign,
#                                   U+00B6 ISOnum 


#  middle dot = Georgian comma
#                                   = Greek middle dot, U+00B7 ISOnum 


#  cedilla = spacing cedilla, U+00B8 ISOdia 


#  superscript one = superscript digit one,
#                                   U+00B9 ISOnum 


#  masculine ordinal indicator,
#                                   U+00BA ISOnum 


#  right-pointing double angle quotation mark
#                                   = right pointing guillemet, U+00BB ISOnum 


#  vulgar fraction one quarter
#                                   = fraction one quarter, U+00BC ISOnum 


#  vulgar fraction one half
#                                   = fraction one half, U+00BD ISOnum 


#  vulgar fraction three quarters
#                                   = fraction three quarters, U+00BE ISOnum 


#  inverted question mark
#                                   = turned question mark, U+00BF ISOnum 


#  latin capital letter A with grave
#                                   = latin capital letter A grave,
#                                   U+00C0 ISOlat1 


#  latin capital letter A with acute,
#                                   U+00C1 ISOlat1 


#  latin capital letter A with circumflex,
#                                   U+00C2 ISOlat1 


#  latin capital letter A with tilde,
#                                   U+00C3 ISOlat1 


#  latin capital letter A with diaeresis,
#                                   U+00C4 ISOlat1 


#  latin capital letter A with ring above
#                                   = latin capital letter A ring,
#                                   U+00C5 ISOlat1 


#  latin capital letter AE
#                                   = latin capital ligature AE,
#                                   U+00C6 ISOlat1 


#  latin capital letter C with cedilla,
#                                   U+00C7 ISOlat1 


#  latin capital letter E with grave,
#                                   U+00C8 ISOlat1 


#  latin capital letter E with acute,
#                                   U+00C9 ISOlat1 


#  latin capital letter E with circumflex,
#                                   U+00CA ISOlat1 


#  latin capital letter E with diaeresis,
#                                   U+00CB ISOlat1 


#  latin capital letter I with grave,
#                                   U+00CC ISOlat1 


#  latin capital letter I with acute,
#                                   U+00CD ISOlat1 


#  latin capital letter I with circumflex,
#                                   U+00CE ISOlat1 


#  latin capital letter I with diaeresis,
#                                   U+00CF ISOlat1 


#  latin capital letter ETH, U+00D0 ISOlat1 


#  latin capital letter N with tilde,
#                                   U+00D1 ISOlat1 


#  latin capital letter O with grave,
#                                   U+00D2 ISOlat1 


#  latin capital letter O with acute,
#                                   U+00D3 ISOlat1 


#  latin capital letter O with circumflex,
#                                   U+00D4 ISOlat1 


#  latin capital letter O with tilde,
#                                   U+00D5 ISOlat1 


#  latin capital letter O with diaeresis,
#                                   U+00D6 ISOlat1 


#  multiplication sign, U+00D7 ISOnum 


#  latin capital letter O with stroke
#                                   = latin capital letter O slash,
#                                   U+00D8 ISOlat1 


#  latin capital letter U with grave,
#                                   U+00D9 ISOlat1 


#  latin capital letter U with acute,
#                                   U+00DA ISOlat1 


#  latin capital letter U with circumflex,
#                                   U+00DB ISOlat1 


#  latin capital letter U with diaeresis,
#                                   U+00DC ISOlat1 


#  latin capital letter Y with acute,
#                                   U+00DD ISOlat1 


#  latin capital letter THORN,
#                                   U+00DE ISOlat1 


#  latin small letter sharp s = ess-zed,
#                                   U+00DF ISOlat1 


#  latin small letter a with grave
#                                   = latin small letter a grave,
#                                   U+00E0 ISOlat1 


#  latin small letter a with acute,
#                                   U+00E1 ISOlat1 


#  latin small letter a with circumflex,
#                                   U+00E2 ISOlat1 


#  latin small letter a with tilde,
#                                   U+00E3 ISOlat1 


#  latin small letter a with diaeresis,
#                                   U+00E4 ISOlat1 


#  latin small letter a with ring above
#                                   = latin small letter a ring,
#                                   U+00E5 ISOlat1 


#  latin small letter ae
#                                   = latin small ligature ae, U+00E6 ISOlat1 


#  latin small letter c with cedilla,
#                                   U+00E7 ISOlat1 


#  latin small letter e with grave,
#                                   U+00E8 ISOlat1 


#  latin small letter e with acute,
#                                   U+00E9 ISOlat1 


#  latin small letter e with circumflex,
#                                   U+00EA ISOlat1 


#  latin small letter e with diaeresis,
#                                   U+00EB ISOlat1 


#  latin small letter i with grave,
#                                   U+00EC ISOlat1 


#  latin small letter i with acute,
#                                   U+00ED ISOlat1 


#  latin small letter i with circumflex,
#                                   U+00EE ISOlat1 


#  latin small letter i with diaeresis,
#                                   U+00EF ISOlat1 


#  latin small letter eth, U+00F0 ISOlat1 


#  latin small letter n with tilde,
#                                   U+00F1 ISOlat1 


#  latin small letter o with grave,
#                                   U+00F2 ISOlat1 


#  latin small letter o with acute,
#                                   U+00F3 ISOlat1 


#  latin small letter o with circumflex,
#                                   U+00F4 ISOlat1 


#  latin small letter o with tilde,
#                                   U+00F5 ISOlat1 


#  latin small letter o with diaeresis,
#                                   U+00F6 ISOlat1 


#  division sign, U+00F7 ISOnum 


#  latin small letter o with stroke,
#                                   = latin small letter o slash,
#                                   U+00F8 ISOlat1 


#  latin small letter u with grave,
#                                   U+00F9 ISOlat1 


#  latin small letter u with acute,
#                                   U+00FA ISOlat1 


#  latin small letter u with circumflex,
#                                   U+00FB ISOlat1 


#  latin small letter u with diaeresis,
#                                   U+00FC ISOlat1 


#  latin small letter y with acute,
#                                   U+00FD ISOlat1 


#  latin small letter thorn with,
#                                   U+00FE ISOlat1 


#  latin small letter y with diaeresis,
#                                   U+00FF ISOlat1 


#  Mathematical, Greek and Symbolic characters for HTML 


#  Character entity set. Typical invocation:
#      <!ENTITY % HTMLsymbol PUBLIC
#         "-//W3C//ENTITIES Symbols for XHTML//EN"
#         "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
#      %HTMLsymbol;
# 


#  Portions (C) International Organization for Standardization 1986:
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Relevant ISO entity set is given unless names are newly introduced.
#      New names (i.e., not in ISO 8879 list) do not clash with any
#      existing ISO 8879 entity names. ISO 10646 character numbers
#      are given for each character, in hex. values are decimal
#      conversions of the ISO 10646 values and refer to the document
#      character set. Names are Unicode names. 
# 


#  Latin Extended-B 


#  latin small f with hook = function
#                                     = florin, U+0192 ISOtech 


#  Greek 


#  greek capital letter alpha, U+0391 


#  greek capital letter beta, U+0392 


#  greek capital letter gamma,
#                                     U+0393 ISOgrk3 


#  greek capital letter delta,
#                                     U+0394 ISOgrk3 


#  greek capital letter epsilon, U+0395 


#  greek capital letter zeta, U+0396 


#  greek capital letter eta, U+0397 


#  greek capital letter theta,
#                                     U+0398 ISOgrk3 


#  greek capital letter iota, U+0399 


#  greek capital letter kappa, U+039A 


#  greek capital letter lambda,
#                                     U+039B ISOgrk3 


#  greek capital letter mu, U+039C 


#  greek capital letter nu, U+039D 


#  greek capital letter xi, U+039E ISOgrk3 


#  greek capital letter omicron, U+039F 


#  greek capital letter pi, U+03A0 ISOgrk3 


#  greek capital letter rho, U+03A1 


#  there is no Sigmaf, and no U+03A2 character either 


#  greek capital letter sigma,
#                                     U+03A3 ISOgrk3 


#  greek capital letter tau, U+03A4 


#  greek capital letter upsilon,
#                                     U+03A5 ISOgrk3 


#  greek capital letter phi,
#                                     U+03A6 ISOgrk3 


#  greek capital letter chi, U+03A7 


#  greek capital letter psi,
#                                     U+03A8 ISOgrk3 


#  greek capital letter omega,
#                                     U+03A9 ISOgrk3 


#  greek small letter alpha,
#                                     U+03B1 ISOgrk3 


#  greek small letter beta, U+03B2 ISOgrk3 


#  greek small letter gamma,
#                                     U+03B3 ISOgrk3 


#  greek small letter delta,
#                                     U+03B4 ISOgrk3 


#  greek small letter epsilon,
#                                     U+03B5 ISOgrk3 


#  greek small letter zeta, U+03B6 ISOgrk3 


#  greek small letter eta, U+03B7 ISOgrk3 


#  greek small letter theta,
#                                     U+03B8 ISOgrk3 


#  greek small letter iota, U+03B9 ISOgrk3 


#  greek small letter kappa,
#                                     U+03BA ISOgrk3 


#  greek small letter lambda,
#                                     U+03BB ISOgrk3 


#  greek small letter mu, U+03BC ISOgrk3 


#  greek small letter nu, U+03BD ISOgrk3 


#  greek small letter xi, U+03BE ISOgrk3 


#  greek small letter omicron, U+03BF NEW 


#  greek small letter pi, U+03C0 ISOgrk3 


#  greek small letter rho, U+03C1 ISOgrk3 


#  greek small letter final sigma,
#                                     U+03C2 ISOgrk3 


#  greek small letter sigma,
#                                     U+03C3 ISOgrk3 


#  greek small letter tau, U+03C4 ISOgrk3 


#  greek small letter upsilon,
#                                     U+03C5 ISOgrk3 


#  greek small letter phi, U+03C6 ISOgrk3 


#  greek small letter chi, U+03C7 ISOgrk3 


#  greek small letter psi, U+03C8 ISOgrk3 


#  greek small letter omega,
#                                     U+03C9 ISOgrk3 


#  greek small letter theta symbol,
#                                     U+03D1 NEW 


#  greek upsilon with hook symbol,
#                                     U+03D2 NEW 


#  greek pi symbol, U+03D6 ISOgrk3 


#  General Punctuation 


#  bullet = black small circle,
#                                      U+2022 ISOpub  


#  bullet is NOT the same as bullet operator, U+2219 


#  horizontal ellipsis = three dot leader,
#                                      U+2026 ISOpub  


#  prime = minutes = feet, U+2032 ISOtech 


#  double prime = seconds = inches,
#                                      U+2033 ISOtech 


#  overline = spacing overscore,
#                                      U+203E NEW 


#  fraction slash, U+2044 NEW 


#  Letterlike Symbols 


#  script capital P = power set
#                                      = Weierstrass p, U+2118 ISOamso 


#  blackletter capital I = imaginary part,
#                                      U+2111 ISOamso 


#  blackletter capital R = real part symbol,
#                                      U+211C ISOamso 


#  trade mark sign, U+2122 ISOnum 


#  alef symbol = first transfinite cardinal,
#                                      U+2135 NEW 


#  alef symbol is NOT the same as hebrew letter alef,
#      U+05D0 although the same glyph could be used to depict both characters 


#  Arrows 


#  leftwards arrow, U+2190 ISOnum 


#  upwards arrow, U+2191 ISOnum


#  rightwards arrow, U+2192 ISOnum 


#  downwards arrow, U+2193 ISOnum 


#  left right arrow, U+2194 ISOamsa 


#  downwards arrow with corner leftwards
#                                      = carriage return, U+21B5 NEW 


#  leftwards double arrow, U+21D0 ISOtech 


#  Unicode does not say that lArr is the same as the 'is implied by' arrow
#     but also does not have any other character for that function. So ? lArr can
#     be used for 'is implied by' as ISOtech suggests 


#  upwards double arrow, U+21D1 ISOamsa 


#  rightwards double arrow,
#                                      U+21D2 ISOtech 


#  Unicode does not say this is the 'implies' character but does not have 
#      another character with this function so ?
#      rArr can be used for 'implies' as ISOtech suggests 


#  downwards double arrow, U+21D3 ISOamsa 


#  left right double arrow,
#                                      U+21D4 ISOamsa 


#  Mathematical Operators 


#  for all, U+2200 ISOtech 


#  partial differential, U+2202 ISOtech  


#  there exists, U+2203 ISOtech 


#  empty set = null set = diameter,
#                                      U+2205 ISOamso 


#  nabla = backward difference,
#                                      U+2207 ISOtech 


#  element of, U+2208 ISOtech 


#  not an element of, U+2209 ISOtech 


#  contains as member, U+220B ISOtech 


#  should there be a more memorable name than 'ni'? 


#  n-ary product = product sign,
#                                      U+220F ISOamsb 


#  prod is NOT the same character as U+03A0 'greek capital letter pi' though
#      the same glyph might be used for both 


#  n-ary sumation, U+2211 ISOamsb 


#  sum is NOT the same character as U+03A3 'greek capital letter sigma'
#      though the same glyph might be used for both 


#  minus sign, U+2212 ISOtech 


#  asterisk operator, U+2217 ISOtech 


#  square root = radical sign,
#                                      U+221A ISOtech 


#  proportional to, U+221D ISOtech 


#  infinity, U+221E ISOtech 


#  angle, U+2220 ISOamso 


#  logical and = wedge, U+2227 ISOtech 


#  logical or = vee, U+2228 ISOtech 


#  intersection = cap, U+2229 ISOtech 


#  union = cup, U+222A ISOtech 


#  integral, U+222B ISOtech 


#  therefore, U+2234 ISOtech 


#  tilde operator = varies with = similar to,
#                                      U+223C ISOtech 


#  tilde operator is NOT the same character as the tilde, U+007E,
#      although the same glyph might be used to represent both  


#  approximately equal to, U+2245 ISOtech 


#  almost equal to = asymptotic to,
#                                      U+2248 ISOamsr 


#  not equal to, U+2260 ISOtech 


#  identical to, U+2261 ISOtech 


#  less-than or equal to, U+2264 ISOtech 


#  greater-than or equal to,
#                                      U+2265 ISOtech 


#  subset of, U+2282 ISOtech 


#  superset of, U+2283 ISOtech 


#  note that nsup, 'not a superset of, U+2283' is not covered by the Symbol 
#      font encoding and is not included. Should it be, for symmetry?
#      It is in ISOamsn  


#  not a subset of, U+2284 ISOamsn 


#  subset of or equal to, U+2286 ISOtech 


#  superset of or equal to,
#                                      U+2287 ISOtech 


#  circled plus = direct sum,
#                                      U+2295 ISOamsb 


#  circled times = vector product,
#                                      U+2297 ISOamsb 


#  up tack = orthogonal to = perpendicular,
#                                      U+22A5 ISOtech 


#  dot operator, U+22C5 ISOamsb 


#  dot operator is NOT the same character as U+00B7 middle dot 


#  Miscellaneous Technical 


#  left ceiling = apl upstile,
#                                      U+2308 ISOamsc  


#  right ceiling, U+2309 ISOamsc  


#  left floor = apl downstile,
#                                      U+230A ISOamsc  


#  right floor, U+230B ISOamsc  


#  left-pointing angle bracket = bra,
#                                      U+2329 ISOtech 


#  lang is NOT the same character as U+003C 'less than' 
#      or U+2039 'single left-pointing angle quotation mark' 


#  right-pointing angle bracket = ket,
#                                      U+232A ISOtech 


#  rang is NOT the same character as U+003E 'greater than' 
#      or U+203A 'single right-pointing angle quotation mark' 


#  Geometric Shapes 


#  lozenge, U+25CA ISOpub 


#  Miscellaneous Symbols 


#  black spade suit, U+2660 ISOpub 


#  black here seems to mean filled as opposed to hollow 


#  black club suit = shamrock,
#                                      U+2663 ISOpub 


#  black heart suit = valentine,
#                                      U+2665 ISOpub 


#  black diamond suit, U+2666 ISOpub 


#  Special characters for HTML 


#  Character entity set. Typical invocation:
#      <!ENTITY % HTMLspecial PUBLIC
#         "-//W3C//ENTITIES Special for XHTML//EN"
#         "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
#      %HTMLspecial;
# 


#  Portions (C) International Organization for Standardization 1986:
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Relevant ISO entity set is given unless names are newly introduced.
#      New names (i.e., not in ISO 8879 list) do not clash with any
#      existing ISO 8879 entity names. ISO 10646 character numbers
#      are given for each character, in hex. values are decimal
#      conversions of the ISO 10646 values and refer to the document
#      character set. Names are Unicode names. 
# 


#  C0 Controls and Basic Latin 


#   quotation mark = APL quote,
#                                     U+0022 ISOnum 


#   ampersand, U+0026 ISOnum 


#   less-than sign, U+003C ISOnum 


#   greater-than sign, U+003E ISOnum 


#   apostrophe mark, U+0027 ISOnum 


#  Latin Extended-A 


#   latin capital ligature OE,
#                                     U+0152 ISOlat2 


#   latin small ligature oe, U+0153 ISOlat2 


#  ligature is a misnomer, this is a separate character in some languages 


#   latin capital letter S with caron,
#                                     U+0160 ISOlat2 


#   latin small letter s with caron,
#                                     U+0161 ISOlat2 


#   latin capital letter Y with diaeresis,
#                                     U+0178 ISOlat2 


#  Spacing Modifier Letters 


#   modifier letter circumflex accent,
#                                     U+02C6 ISOpub 


#   small tilde, U+02DC ISOdia 


#  General Punctuation 


#  en space, U+2002 ISOpub 


#  em space, U+2003 ISOpub 


#  thin space, U+2009 ISOpub 


#  zero width non-joiner,
#                                     U+200C NEW RFC 2070 


#  zero width joiner, U+200D NEW RFC 2070 


#  left-to-right mark, U+200E NEW RFC 2070 


#  right-to-left mark, U+200F NEW RFC 2070 


#  en dash, U+2013 ISOpub 


#  em dash, U+2014 ISOpub 


#  left single quotation mark,
#                                     U+2018 ISOnum 


#  right single quotation mark,
#                                     U+2019 ISOnum 


#  single low-9 quotation mark, U+201A NEW 


#  left double quotation mark,
#                                     U+201C ISOnum 


#  right double quotation mark,
#                                     U+201D ISOnum 


#  double low-9 quotation mark, U+201E NEW 


#  dagger, U+2020 ISOpub 


#  double dagger, U+2021 ISOpub 


#  per mille sign, U+2030 ISOtech 


#  single left-pointing angle quotation mark,
#                                     U+2039 ISO proposed 


#  lsaquo is proposed but not yet ISO standardized 


#  single right-pointing angle quotation mark,
#                                     U+203A ISO proposed 


#  rsaquo is proposed but not yet ISO standardized 


#   euro sign, U+20AC NEW 


# ================== Imported Names ====================================


#  media type, as per [RFC2045] 


#  comma-separated list of media types, as per [RFC2045] 


#  a character encoding, as per [RFC2045] 


#  a space separated list of character encodings, as per [RFC2045] 


#  a language code, as per [RFC3066] 


#  a single character from [ISO10646] 


#  one or more digits 


#  space-separated list of link types 


#  single or comma-separated list of media descriptors 


#  a Uniform Resource Identifier, see [RFC2396] 


#  a space separated list of Uniform Resource Identifiers 


#  date and time information. ISO date format 


#  script expression 


#  style sheet data 


#  used for titles etc. 


#  render in this frame 


#  nn for pixels or nn% for percentage length 


#  pixel, percentage, or relative 


#  integer representing length in pixels 


#  these are used for image maps 


#  comma separated list of lengths 


#  used for object, applet, img, input and iframe 


#  a color using sRGB: #RRGGBB as Hex values 


#  There are also 16 widely known color names with their sRGB values:
# 
#     Black  = #000000    Green  = #008000
#     Silver = #C0C0C0    Lime   = #00FF00
#     Gray   = #808080    Olive  = #808000
#     White  = #FFFFFF    Yellow = #FFFF00
#     Maroon = #800000    Navy   = #000080
#     Red    = #FF0000    Blue   = #0000FF
#     Purple = #800080    Teal   = #008080
#     Fuchsia= #FF00FF    Aqua   = #00FFFF
# 


# =================== Generic Attributes ===============================


#  core attributes common to most elements
#   id       document-wide unique id
#   class    space separated list of classes
#   style    associated style info
#   title    advisory title/amplification
# 


#  internationalization attributes
#   lang        language code (backwards compatible)
#   xml:lang    language code (as per XML 1.0 spec)
#   dir         direction for weak/neutral text
# 


#  attributes for common UI events
#   onclick     a pointer button was clicked
#   ondblclick  a pointer button was double clicked
#   onmousedown a pointer button was pressed down
#   onmouseup   a pointer button was released
#   onmousemove a pointer was moved onto the element
#   onmouseout  a pointer was moved away from the element
#   onkeypress  a key was pressed and released
#   onkeydown   a key was pressed down
#   onkeyup     a key was released
# 


#  attributes for elements that can get the focus
#   accesskey   accessibility key character
#   tabindex    position in tabbing order
#   onfocus     the element got the focus
#   onblur      the element lost the focus
# 


#  text alignment for p, div, h1-h6. The default is
#      align="left" for ltr headings, "right" for rtl 


# =================== Text Elements ====================================


#  these can occur at block or inline level 


#  %Inline; covers inline or "text-level" elements 


# ================== Block level elements ==============================


#  %Flow; mixes Block and Inline and is used for list items etc. 


# ================== Content models for exclusions =====================


#  a elements use %Inline; excluding a 


#  pre uses %Inline excluding img, object, applet, big, small,
#      font, or basefont 


#  form uses %Flow; excluding form 


#  button uses %Flow; but excludes a, form, form controls, iframe 


# ================ Document Structure ==================================


#  the namespace URI designates the document profile 


class Html(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'xmlns': attribXmlns_2523611023564185025, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'html'



_Root = Html



# ================ Document Head =======================================


#  content model is %head.misc; combined with a single
#      title and an optional base element in any order 


class Head(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'profile': attribProfile_3323627329706839684, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'head'


#  The title element is not considered part of the flow of text.
#        It should be displayed, for example as the page header or
#        window title. Exactly one title is required per document.
#     


class Title(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'title'


#  document base URI 


class Base(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'href': attribHref_10590696292225, 
         'id': attribId_121205855951786596, 
         'target': attribTarget_199657905920859681, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'base'


#  generic metainformation 


class Meta(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'name': attribName_1423564487243335089, 
         'content': attribContent_3546404873644026241, 
         'scheme': attribScheme_305738970983549041, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         'http_equiv': attribHttp_equiv_1967159638805230489, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'meta'


# 
#   Relationship values can be used in principle:
# 
#    a) for document specific toolbars/menus when used
#       with the link element in document head e.g.
#         start, contents, previous, next, index, end, help
#    b) to link to a separate style sheet (rel="stylesheet")
#    c) to make a link to a script (rel="script")
#    d) by stylesheets to control how collections of
#       html nodes are rendered into printed documents
#    e) to make a link to a printable version of this document
#       e.g. a PostScript or PDF version (rel="alternate" media="print")
# 


class Link(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onclick': attribOnclick_218984846997916224, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'href': attribHref_10590696292225, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'media': attribMedia_1916838375387458329, 
         'charset': attribCharset_2456238898048849, 
         'rev': attribRev_2629567755960016804, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'rel': attribRel_210781088572488256, 
         'type': attribType_3598646553109970404, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'hreflang': attribHreflang_96177259461920569, 
         'lang': attribLang_60603731757775504, 
         'target': attribTarget_199657905920859681, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'link'


#  style info, which may include CDATA sections 


class Style(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'title': attribTitle_4254840287891469241, 
         'media': attribMedia_1916838375387458329, 
         'xml_space': attribXml_space_359981169846238864, 
         'type': attribType_291473665566426121, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'style'


#  script statements, which may include CDATA sections 


class Script(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'src': attribSrc_622124219914705225, 
         'language': attribLanguage_2692294709179107904, 
         'defer': attribDefer_101701461619235556, 
         'charset': attribCharset_2456238898048849, 
         'xml_space': attribXml_space_359981169846238864, 
         'type': attribType_291473665566426121, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'script'


#  alternate content container for non script-based rendering 


class Noscript(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'noscript'


# ======================= Frames =======================================


#  inline subwindow 


class Iframe(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'src': attribSrc_622124219914705225, 
         'style': attribStyle_68292116612380816, 
         'name': attribName_3951386174947790881, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_710921868196301584, 
         'id': attribId_121205855951786596, 
         'height': attribHeight_607192057250935849, 
         'class_': attribClass_21482239889467681, 
         'width': attribWidth_2698869476000729641, 
         'marginwidth': attribMarginwidth_3754353124423471761, 
         'marginheight': attribMarginheight_232059084494862769, 
         'scrolling': attribScrolling_4040297681898082276, 
         'longdesc': attribLongdesc_551606211785669089, 
         'frameborder': attribFrameborder_329493431462553856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'iframe'


#  alternate content container for non frame-based rendering 


class Noframes(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'noframes'


# =================== Document Body ====================================


class Body(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'text': attribText_4284143684356732249, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'vlink': attribVlink_1306978804484037169, 
         'id': attribId_121205855951786596, 
         'onload': attribOnload_292658179982830281, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'bgcolor': attribBgcolor_2421952498914997801, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'alink': attribAlink_549540744423503716, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'link': attribLink_1572944480856255556, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'background': attribBackground_178928830800040000, 
         'lang': attribLang_60603731757775504, 
         'onunload': attribOnunload_1601018212792218256, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'body'


class Div(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'div'


#  generic language/style container 


# =================== Paragraphs =======================================


class P(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'p'


# =================== Headings =========================================


# 
#   There are six levels of headings from h1 (the most important)
#   to h6 (the least important).
# 


class H1(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'h1'


class H2(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'h2'


class H3(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'h3'


class H4(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'h4'


class H5(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'h5'


class H6(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1906525509233284, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'h6'


# =================== Lists ============================================


#  Unordered list bullet styles 


#  Unordered list 


class Ul(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'compact': attribCompact_225962512927260736, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'type': attribType_2706764326651887616, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'ul'


#  Ordered list numbering style
# 
#     1   arabic numbers      1, 2, 3, ...
#     a   lower alpha         a, b, c, ...
#     A   upper alpha         A, B, C, ...
#     i   lower roman         i, ii, iii, ...
#     I   upper roman         I, II, III, ...
# 
#     The style is applied to the sequence number which by default
#     is reset to 1 for the first list item in an ordered list.
# 


#  Ordered (numbered) list 


class Ol(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'compact': attribCompact_225962512927260736, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'start': attribStart_37096382094932521, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'type': attribType_3598646553109970404, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'ol'


#  single column list (DEPRECATED) 


class Menu(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'compact': attribCompact_225962512927260736, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'menu'


#  multiple column list (DEPRECATED) 


class Dir(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'compact': attribCompact_225962512927260736, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'dir'


#  LIStyle is constrained to: "(%ULStyle;|%OLStyle;)" 


#  list item 


class Li(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'value': attribValue_4156605816673722624, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'type': attribType_3598646553109970404, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'li'


#  definition lists - dt for term, dd for its definition 


class Dl(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'compact': attribCompact_225962512927260736, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'dl'


class Dt(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'dt'


class Dd(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'dd'


# =================== Address ==========================================


#  information on author 


class Address(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'address'


# =================== Horizontal Rule ==================================


class Hr(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_1920212820748718721, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'noshade': attribNoshade_3021452397879502500, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'width': attribWidth_2698869476000729641, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         'size': attribSize_1540036912549524169, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'hr'


# =================== Preformatted Text ================================


#  content is %Inline; excluding 
#         "img|object|applet|big|small|sub|sup|font|basefont" 


class Pre(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'xml_space': attribXml_space_359981169846238864, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'width': attribWidth_2698869476000729641, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'pre'


# =================== Block-like Quotes ================================


class Blockquote(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'cite': attribCite_2366926375086749281, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'blockquote'


# =================== Text alignment ===================================


#  center content 


class Center(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'center'


# =================== Inserted/Deleted Text ============================


# 
#   ins/del are allowed in block and inline content, but its
#   inappropriate to include block content within an ins element
#   occurring in inline content.
# 


class Ins(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'datetime': attribDatetime_4149042511988579881, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'cite': attribCite_2366926375086749281, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'ins'


class Del(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'datetime': attribDatetime_4149042511988579881, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'cite': attribCite_2366926375086749281, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'del'


# ================== The Anchor Element ================================


#  content is %Inline; except that anchors shouldn't be nested 


class A(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'accesskey': attribAccesskey_2737575848648385424, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'shape': attribShape_2366611433715347289, 
         'href': attribHref_10590696292225, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'charset': attribCharset_2456238898048849, 
         'rev': attribRev_2629567755960016804, 
         'rel': attribRel_210781088572488256, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'type': attribType_3598646553109970404, 
         'onblur': attribOnblur_400089540432531856, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'hreflang': attribHreflang_96177259461920569, 
         'target': attribTarget_199657905920859681, 
         'lang': attribLang_60603731757775504, 
         'name': attribName_3951386174947790881, 
         'coords': attribCoords_236937713882800324, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'a'


# ===================== Inline Elements ================================


class Span(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'span'


#  generic language/style container 


class Bdo(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_986584432728367489, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'bdo'


#  I18N BiDi over-ride 


class Br(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'class_': attribClass_21482239889467681, 
         'style': attribStyle_68292116612380816, 
         'id': attribId_121205855951786596, 
         'clear': attribClear_1130432899291921, 
         'title': attribTitle_4254840287891469241, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'br'


#  forced line break 


class Em(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'em'


#  emphasis 


class Strong(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'strong'


#  strong emphasis 


class Dfn(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'dfn'


#  definitional 


class Code(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'code'


#  program code 


class Samp(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'samp'


#  sample 


class Kbd(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'kbd'


#  something user would type 


class Var(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'var'


#  variable 


class Cite(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'cite'


#  citation 


class Abbr(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'abbr'


#  abbreviation 


class Acronym(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'acronym'


#  acronym 


class Q(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'cite': attribCite_2366926375086749281, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'q'


#  inlined quote 


class Sub(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'sub'


#  subscript 


class Sup(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'sup'


#  superscript 


class Tt(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'tt'


#  fixed pitch font 


class I(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'i'


#  italic font 


class B(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'b'


#  bold font 


class Big(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'big'


#  bigger font 


class Small(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'small'


#  smaller font 


class U(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'u'


#  underline 


class S(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u's'


#  strike-through 


class Strike(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'strike'


#  strike-through 


class Basefont(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'color': attribColor_63299592161186404, 
         'face': attribFace_72210001461940969, 
         'id': attribId_121205855951786596, 
         'size': attribSize_896024298127360000, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'basefont'


#  base font size 


class Font(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'color': attribColor_63299592161186404, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'face': attribFace_72210001461940969, 
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         'size': attribSize_1540036912549524169, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'font'


#  local change to font 


# ==================== Object ======================================


# 
#   object is used to embed objects as part of HTML pages.
#   param elements should precede other content. Parameters
#   can also be expressed as attribute/value pairs on the
#   object element itself when brevity is desired.
# 


class Object(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'classid': attribClassid_1288014720321799044, 
         'usemap': attribUsemap_1482360860247970329, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'codetype': attribCodetype_164813866435053081, 
         'border': attribBorder_347829150666058084, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'hspace': attribHspace_2767215927762068836, 
         'archive': attribArchive_2029791469104495009, 
         'width': attribWidth_2698869476000729641, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'type': attribType_3598646553109970404, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'codebase': attribCodebase_1491350078472004, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'height': attribHeight_607192057250935849, 
         'data': attribData_119997120992872036, 
         'lang': attribLang_60603731757775504, 
         'name': attribName_3951386174947790881, 
         'standby': attribStandby_275913609211742436, 
         'align': attribAlign_710921868196301584, 
         'vspace': attribVspace_2352136466791193104, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'declare': attribDeclare_857178368687561284, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'object'


# 
#   param is used to supply a named property value.
#   In XML it would seem natural to follow RDF and support an
#   abbreviated syntax where the param elements are replaced
#   by attribute value pairs on the object start tag.
# 


class Param(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'valuetype': attribValuetype_3058020386316608164, 
         'type': attribType_3598646553109970404, 
         'id': attribId_121205855951786596, 
         'value': attribValue_4156605816673722624, 
         'name': attribName_1246620389478747364, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'param'


# =================== Java applet ==================================


# 
#   One of code or object attributes must be present.
#   Place param elements before other content.
# 


class Applet(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'style': attribStyle_68292116612380816, 
         'code': attribCode_821085029361080929, 
         'name': attribName_3951386174947790881, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_710921868196301584, 
         'object': attribObject_941323264410731409, 
         'archive': attribArchive_2029791469104495009, 
         'codebase': attribCodebase_1491350078472004, 
         'class_': attribClass_21482239889467681, 
         'vspace': attribVspace_2352136466791193104, 
         'width': attribWidth_3319227284037614244, 
         'alt': attribAlt_2026611278337360400, 
         'height': attribHeight_1949363583163916544, 
         'hspace': attribHspace_2767215927762068836, 
         'id': attribId_121205855951786596, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'applet'


# =================== Images ===========================================


# 
#    To avoid accessibility problems for people who aren't
#    able to see the image, you should provide a text
#    description using the alt and longdesc attributes.
#    In addition, avoid the use of server-side image maps.
# 


class Img(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'usemap': attribUsemap_1482360860247970329, 
         'alt': attribAlt_1162895347347825025, 
         'border': attribBorder_347829150666058084, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'hspace': attribHspace_2767215927762068836, 
         'ismap': attribIsmap_7068851462437444, 
         'width': attribWidth_2698869476000729641, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'height': attribHeight_607192057250935849, 
         'lang': attribLang_60603731757775504, 
         'src': attribSrc_3104320399512748900, 
         'name': attribName_3951386174947790881, 
         'align': attribAlign_710921868196301584, 
         'vspace': attribVspace_2352136466791193104, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'longdesc': attribLongdesc_551606211785669089, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'img'


#  usemap points to a map element which may be in this document
#   or an external document, although the latter is not widely supported 


# ================== Client-side image maps ============================


#  These can be placed in the same document or grouped in a
#      separate document although this isn't yet widely supported 


class Map(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'title': attribTitle_4254840287891469241, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'style': attribStyle_68292116612380816, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_1305668797275774409, 
         'dir': attribDir_7209994079715856, 
         'name': attribName_1423564487243335089, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'map'


class Area(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'accesskey': attribAccesskey_2737575848648385424, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'shape': attribShape_2366611433715347289, 
         'href': attribHref_10590696292225, 
         'alt': attribAlt_1162895347347825025, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'onblur': attribOnblur_400089540432531856, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'nohref': attribNohref_4261619962699292736, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'target': attribTarget_199657905920859681, 
         'coords': attribCoords_236937713882800324, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'area'


# ================ Forms ===============================================


class Form(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onreset': attribOnreset_2571890462972446225, 
         'accept': attribAccept_687132212977459456, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'accept_charset': attribAccept_charset_3314295702872442729, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'method': attribMethod_1594070884251040000, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onsubmit': attribOnsubmit_548115041167630561, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'enctype': attribEnctype_436576891689519025, 
         'lang': attribLang_60603731757775504, 
         'name': attribName_3951386174947790881, 
         'target': attribTarget_199657905920859681, 
         'action': attribAction_142350502103259025, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'form'


#  forms shouldn't be nested 


# 
#   Each label must not contain more than ONE field
#   Label elements shouldn't be nested.
# 


class Label(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'accesskey': attribAccesskey_2737575848648385424, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onblur': attribOnblur_400089540432531856, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'for_': attribFor_666919309859033284, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'label'


#  the name attribute is required for all but submit & reset 


class Input(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'accesskey': attribAccesskey_2737575848648385424, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'accept': attribAccept_687132212977459456, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'disabled': attribDisabled_463113992526643264, 
         'usemap': attribUsemap_1482360860247970329, 
         'alt': attribAlt_2026611278337360400, 
         'onchange': attribOnchange_1479634582206140721, 
         'id': attribId_121205855951786596, 
         'size': attribSize_1540036912549524169, 
         'style': attribStyle_68292116612380816, 
         'checked': attribChecked_1601429972271201856, 
         'title': attribTitle_4254840287891469241, 
         'readonly': attribReadonly_3553452907694444304, 
         'onselect': attribOnselect_1171458765119423169, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'type': attribType_73263565986139489, 
         'onblur': attribOnblur_400089540432531856, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'src': attribSrc_622124219914705225, 
         'name': attribName_1423564487243335089, 
         'align': attribAlign_710921868196301584, 
         'value': attribValue_4156605816673722624, 
         'maxlength': attribMaxlength_604742143183339225, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'input'


#  form control 


class Select(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onblur': attribOnblur_400089540432531856, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'disabled': attribDisabled_463113992526643264, 
         'onchange': attribOnchange_1479634582206140721, 
         'id': attribId_121205855951786596, 
         'size': attribSize_1540036912549524169, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'multiple': attribMultiple_1270567521988255296, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'name': attribName_1423564487243335089, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'select'


#  option selector 


class Optgroup(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'disabled': attribDisabled_463113992526643264, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'label': attribLabel_1260736214172610816, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'optgroup'


#  option group 


class Option(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'selected': attribSelected_797750601755673316, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'value': attribValue_4156605816673722624, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'disabled': attribDisabled_463113992526643264, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'label': attribLabel_1763775457643958889, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'option'


#  selectable choice 


class Textarea(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'accesskey': attribAccesskey_2737575848648385424, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'disabled': attribDisabled_463113992526643264, 
         'onchange': attribOnchange_1479634582206140721, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'rows': attribRows_873710474168435344, 
         'title': attribTitle_4254840287891469241, 
         'readonly': attribReadonly_3553452907694444304, 
         'onselect': attribOnselect_1171458765119423169, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'onblur': attribOnblur_400089540432531856, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'cols': attribCols_157052534391325764, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'name': attribName_1423564487243335089, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'textarea'


#  multi-line text field 


# 
#   The fieldset element is used to group form fields.
#   Only one legend element should occur in the content
#   and if present should only be preceded by whitespace.
# 


class Fieldset(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'fieldset'


class Legend(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'accesskey': attribAccesskey_2737575848648385424, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'align': attribAlign_536865270305919025, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'legend'


#  fieldset label 


# 
#  Content is %Flow; excluding a, form, form controls, iframe
# 


class Button(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'accesskey': attribAccesskey_2737575848648385424, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'disabled': attribDisabled_463113992526643264, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onfocus': attribOnfocus_3032793062530224400, 
         'type': attribType_418236194942219889, 
         'onblur': attribOnblur_400089540432531856, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'name': attribName_1423564487243335089, 
         'value': attribValue_4156605816673722624, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         'tabindex': attribTabindex_1924349933320454025, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'button'


#  push button 


#  single-line text input control (DEPRECATED) 


class Isindex(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'prompt': attribPrompt_1058847713206640644, 
         'title': attribTitle_4254840287891469241, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'class_': attribClass_21482239889467681, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'isindex'


# ======================= Tables =======================================


#  Derived from IETF HTML table standard, see [RFC1942] 


# 
#  The border attribute sets the thickness of the frame around the
#  table. The default units are screen pixels.
# 
#  The frame attribute specifies which parts of the frame around
#  the table should be rendered. The values are not the same as
#  CALS to avoid a name clash with the valign attribute.
# 


# 
#  The rules attribute defines which rules to draw between cells:
# 
#  If rules is absent then assume:
#      "none" if border is absent or border="0" otherwise "all"
# 


#  horizontal placement of table relative to document 


#  horizontal alignment attributes for cell contents
# 
#   char        alignment char, e.g. char=':'
#   charoff     offset for alignment char
# 


#  vertical alignment attributes for cell contents 


class Table(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'frame': attribFrame_732198051411918400, 
         'cellpadding': attribCellpadding_4312010106974760100, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'border': attribBorder_347829150666058084, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'width': attribWidth_2698869476000729641, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'cellspacing': attribCellspacing_1429406768430936036, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'rules': attribRules_932406217823290896, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'align': attribAlign_1920212820748718721, 
         'bgcolor': attribBgcolor_2421952498914997801, 
         'summary': attribSummary_293896294327076841, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'table'


class Caption(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_536865270305919025, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'caption'


class Thead(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_104483610154648516, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'valign': attribValign_465514098463396096, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'charoff': attribCharoff_65851267463140324, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'thead'


class Tfoot(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_104483610154648516, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'valign': attribValign_465514098463396096, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'charoff': attribCharoff_65851267463140324, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'tfoot'


class Tbody(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'lang': attribLang_60603731757775504, 
         'style': attribStyle_68292116612380816, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'title': attribTitle_4254840287891469241, 
         'align': attribAlign_104483610154648516, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'class_': attribClass_21482239889467681, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'onclick': attribOnclick_218984846997916224, 
         'valign': attribValign_465514098463396096, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'charoff': attribCharoff_65851267463140324, 
         'id': attribId_121205855951786596, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'tbody'


class Colgroup(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'span': attribSpan_166592741538223081, 
         'title': attribTitle_4254840287891469241, 
         'width': attribWidth_2698869476000729641, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'valign': attribValign_465514098463396096, 
         'charoff': attribCharoff_65851267463140324, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'align': attribAlign_104483610154648516, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'colgroup'


class Col(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'span': attribSpan_166592741538223081, 
         'title': attribTitle_4254840287891469241, 
         'width': attribWidth_2698869476000729641, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'valign': attribValign_465514098463396096, 
         'charoff': attribCharoff_65851267463140324, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'align': attribAlign_104483610154648516, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	_name = u'col'


class Tr(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'id': attribId_121205855951786596, 
         'style': attribStyle_68292116612380816, 
         'title': attribTitle_4254840287891469241, 
         'bgcolor': attribBgcolor_2421952498914997801, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'valign': attribValign_465514098463396096, 
         'charoff': attribCharoff_65851267463140324, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'lang': attribLang_60603731757775504, 
         'align': attribAlign_104483610154648516, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'dir': attribDir_7209994079715856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'tr'


class Th(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'colspan': attribColspan_13003694770657536, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'nowrap': attribNowrap_895997721987119844, 
         'id': attribId_121205855951786596, 
         'axis': attribAxis_298091641253602249, 
         'style': attribStyle_68292116612380816, 
         'rowspan': attribRowspan_824571289138210084, 
         'title': attribTitle_4254840287891469241, 
         'bgcolor': attribBgcolor_2421952498914997801, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'valign': attribValign_465514098463396096, 
         'scope': attribScope_696057159108760801, 
         'charoff': attribCharoff_65851267463140324, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'height': attribHeight_607192057250935849, 
         'lang': attribLang_60603731757775504, 
         'align': attribAlign_104483610154648516, 
         'headers': attribHeaders_1895922246332405776, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'width': attribWidth_2698869476000729641, 
         'dir': attribDir_7209994079715856, 
         'abbr': attribAbbr_2036693206661546449, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'th'


class Td(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         'colspan': attribColspan_13003694770657536, 
         'onmousedown': attribOnmousedown_3573838939762520361, 
         'char': attribChar_4212719149091685444, 
         'nowrap': attribNowrap_895997721987119844, 
         'id': attribId_121205855951786596, 
         'axis': attribAxis_298091641253602249, 
         'style': attribStyle_68292116612380816, 
         'rowspan': attribRowspan_824571289138210084, 
         'title': attribTitle_4254840287891469241, 
         'bgcolor': attribBgcolor_2421952498914997801, 
         'onmousemove': attribOnmousemove_304442714949305284, 
         'onmouseup': attribOnmouseup_1201669506220024384, 
         'valign': attribValign_465514098463396096, 
         'scope': attribScope_696057159108760801, 
         'charoff': attribCharoff_65851267463140324, 
         'xml_lang': attribXml_lang_2029235648979380625, 
         'onclick': attribOnclick_218984846997916224, 
         'onmouseout': attribOnmouseout_3949102245718310976, 
         'onkeypress': attribOnkeypress_4440472239224268025, 
         'onkeydown': attribOnkeydown_1500412149098308161, 
         'class_': attribClass_21482239889467681, 
         'onmouseover': attribOnmouseover_1690484448512533969, 
         'height': attribHeight_607192057250935849, 
         'lang': attribLang_60603731757775504, 
         'align': attribAlign_104483610154648516, 
         'headers': attribHeaders_1895922246332405776, 
         'onkeyup': attribOnkeyup_909454956101496484, 
         'ondblclick': attribOndblclick_1801050127905703921, 
         'width': attribWidth_2698869476000729641, 
         'dir': attribDir_7209994079715856, 
         'abbr': attribAbbr_2036693206661546449, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'td'


# 
# colgroup groups a set of col elements. It allows you to group
# several semantically related columns together.
# 


# 
#  col elements define the alignment properties for cells in
#  one or more columns.
# 
#  The width attribute specifies the width of the columns, e.g.
# 
#      width=64        width in screen pixels
#      width=0.5*      relative width of 0.5
# 
#  The span attribute causes the attributes of one
#  col element to apply to more than one column.
# 


# 
#     Use thead to duplicate headers when breaking table
#     across page boundaries, or for static headers when
#     tbody sections are rendered in scrolling panel.
# 
#     Use tfoot to duplicate footers when breaking table
#     across page boundaries, or for static footers when
#     tbody sections are rendered in scrolling panel.
# 
#     Use multiple tbody sections when rules are needed
#     between groups of table rows.
# 


#  Scope is simpler than headers attribute for common tables 


#  th is for headers, td for data and for cells acting as both 


GENERAL_ENTITIES = {   'AElig': u'\xc6',
    'Aacute': u'\xc1',
    'Acirc': u'\xc2',
    'Agrave': u'\xc0',
    'Alpha': u'\u0391',
    'Aring': u'\xc5',
    'Atilde': u'\xc3',
    'Auml': u'\xc4',
    'Beta': u'\u0392',
    'Ccedil': u'\xc7',
    'Chi': u'\u03a7',
    'Dagger': u'\u2021',
    'Delta': u'\u0394',
    'ETH': u'\xd0',
    'Eacute': u'\xc9',
    'Ecirc': u'\xca',
    'Egrave': u'\xc8',
    'Epsilon': u'\u0395',
    'Eta': u'\u0397',
    'Euml': u'\xcb',
    'Gamma': u'\u0393',
    'Iacute': u'\xcd',
    'Icirc': u'\xce',
    'Igrave': u'\xcc',
    'Iota': u'\u0399',
    'Iuml': u'\xcf',
    'Kappa': u'\u039a',
    'Lambda': u'\u039b',
    'Mu': u'\u039c',
    'Ntilde': u'\xd1',
    'Nu': u'\u039d',
    'OElig': u'\u0152',
    'Oacute': u'\xd3',
    'Ocirc': u'\xd4',
    'Ograve': u'\xd2',
    'Omega': u'\u03a9',
    'Omicron': u'\u039f',
    'Oslash': u'\xd8',
    'Otilde': u'\xd5',
    'Ouml': u'\xd6',
    'Phi': u'\u03a6',
    'Pi': u'\u03a0',
    'Prime': u'\u2033',
    'Psi': u'\u03a8',
    'Rho': u'\u03a1',
    'Scaron': u'\u0160',
    'Sigma': u'\u03a3',
    'THORN': u'\xde',
    'Tau': u'\u03a4',
    'Theta': u'\u0398',
    'Uacute': u'\xda',
    'Ucirc': u'\xdb',
    'Ugrave': u'\xd9',
    'Upsilon': u'\u03a5',
    'Uuml': u'\xdc',
    'Xi': u'\u039e',
    'Yacute': u'\xdd',
    'Yuml': u'\u0178',
    'Zeta': u'\u0396',
    'aacute': u'\xe1',
    'acirc': u'\xe2',
    'acute': u'\xb4',
    'aelig': u'\xe6',
    'agrave': u'\xe0',
    'alefsym': u'\u2135',
    'alpha': u'\u03b1',
    'amp': u'&#38;',
    'and': u'\u2227',
    'ang': u'\u2220',
    'apos': u"'",
    'aring': u'\xe5',
    'asymp': u'\u2248',
    'atilde': u'\xe3',
    'auml': u'\xe4',
    'bdquo': u'\u201e',
    'beta': u'\u03b2',
    'brvbar': u'\xa6',
    'bull': u'\u2022',
    'cap': u'\u2229',
    'ccedil': u'\xe7',
    'cedil': u'\xb8',
    'cent': u'\xa2',
    'chi': u'\u03c7',
    'circ': u'\u02c6',
    'clubs': u'\u2663',
    'cong': u'\u2245',
    'copy': u'\xa9',
    'crarr': u'\u21b5',
    'cup': u'\u222a',
    'curren': u'\xa4',
    'dArr': u'\u21d3',
    'dagger': u'\u2020',
    'darr': u'\u2193',
    'deg': u'\xb0',
    'delta': u'\u03b4',
    'diams': u'\u2666',
    'divide': u'\xf7',
    'eacute': u'\xe9',
    'ecirc': u'\xea',
    'egrave': u'\xe8',
    'empty': u'\u2205',
    'emsp': u'\u2003',
    'ensp': u'\u2002',
    'epsilon': u'\u03b5',
    'equiv': u'\u2261',
    'eta': u'\u03b7',
    'eth': u'\xf0',
    'euml': u'\xeb',
    'euro': u'\u20ac',
    'exist': u'\u2203',
    'fnof': u'\u0192',
    'forall': u'\u2200',
    'frac12': u'\xbd',
    'frac14': u'\xbc',
    'frac34': u'\xbe',
    'frasl': u'\u2044',
    'gamma': u'\u03b3',
    'ge': u'\u2265',
    'gt': u'>',
    'hArr': u'\u21d4',
    'harr': u'\u2194',
    'hearts': u'\u2665',
    'hellip': u'\u2026',
    'iacute': u'\xed',
    'icirc': u'\xee',
    'iexcl': u'\xa1',
    'igrave': u'\xec',
    'image': u'\u2111',
    'infin': u'\u221e',
    'int': u'\u222b',
    'iota': u'\u03b9',
    'iquest': u'\xbf',
    'isin': u'\u2208',
    'iuml': u'\xef',
    'kappa': u'\u03ba',
    'lArr': u'\u21d0',
    'lambda': u'\u03bb',
    'lang': u'\u2329',
    'laquo': u'\xab',
    'larr': u'\u2190',
    'lceil': u'\u2308',
    'ldquo': u'\u201c',
    'le': u'\u2264',
    'lfloor': u'\u230a',
    'lowast': u'\u2217',
    'loz': u'\u25ca',
    'lrm': u'\u200e',
    'lsaquo': u'\u2039',
    'lsquo': u'\u2018',
    'lt': u'&#60;',
    'macr': u'\xaf',
    'mdash': u'\u2014',
    'micro': u'\xb5',
    'middot': u'\xb7',
    'minus': u'\u2212',
    'mu': u'\u03bc',
    'nabla': u'\u2207',
    'nbsp': u'\xa0',
    'ndash': u'\u2013',
    'ne': u'\u2260',
    'ni': u'\u220b',
    'not': u'\xac',
    'notin': u'\u2209',
    'nsub': u'\u2284',
    'ntilde': u'\xf1',
    'nu': u'\u03bd',
    'oacute': u'\xf3',
    'ocirc': u'\xf4',
    'oelig': u'\u0153',
    'ograve': u'\xf2',
    'oline': u'\u203e',
    'omega': u'\u03c9',
    'omicron': u'\u03bf',
    'oplus': u'\u2295',
    'or': u'\u2228',
    'ordf': u'\xaa',
    'ordm': u'\xba',
    'oslash': u'\xf8',
    'otilde': u'\xf5',
    'otimes': u'\u2297',
    'ouml': u'\xf6',
    'para': u'\xb6',
    'part': u'\u2202',
    'permil': u'\u2030',
    'perp': u'\u22a5',
    'phi': u'\u03c6',
    'pi': u'\u03c0',
    'piv': u'\u03d6',
    'plusmn': u'\xb1',
    'pound': u'\xa3',
    'prime': u'\u2032',
    'prod': u'\u220f',
    'prop': u'\u221d',
    'psi': u'\u03c8',
    'quot': u'"',
    'rArr': u'\u21d2',
    'radic': u'\u221a',
    'rang': u'\u232a',
    'raquo': u'\xbb',
    'rarr': u'\u2192',
    'rceil': u'\u2309',
    'rdquo': u'\u201d',
    'real': u'\u211c',
    'reg': u'\xae',
    'rfloor': u'\u230b',
    'rho': u'\u03c1',
    'rlm': u'\u200f',
    'rsaquo': u'\u203a',
    'rsquo': u'\u2019',
    'sbquo': u'\u201a',
    'scaron': u'\u0161',
    'sdot': u'\u22c5',
    'sect': u'\xa7',
    'shy': u'\xad',
    'sigma': u'\u03c3',
    'sigmaf': u'\u03c2',
    'sim': u'\u223c',
    'spades': u'\u2660',
    'sub': u'\u2282',
    'sube': u'\u2286',
    'sum': u'\u2211',
    'sup': u'\u2283',
    'sup1': u'\xb9',
    'sup2': u'\xb2',
    'sup3': u'\xb3',
    'supe': u'\u2287',
    'szlig': u'\xdf',
    'tau': u'\u03c4',
    'there4': u'\u2234',
    'theta': u'\u03b8',
    'thetasym': u'\u03d1',
    'thinsp': u'\u2009',
    'thorn': u'\xfe',
    'tilde': u'\u02dc',
    'times': u'\xd7',
    'trade': u'\u2122',
    'uArr': u'\u21d1',
    'uacute': u'\xfa',
    'uarr': u'\u2191',
    'ucirc': u'\xfb',
    'ugrave': u'\xf9',
    'uml': u'\xa8',
    'upsih': u'\u03d2',
    'upsilon': u'\u03c5',
    'uuml': u'\xfc',
    'weierp': u'\u2118',
    'xi': u'\u03be',
    'yacute': u'\xfd',
    'yen': u'\xa5',
    'yuml': u'\xff',
    'zeta': u'\u03b6',
    'zwj': u'\u200d',
    'zwnj': u'\u200c'}

# Cache for dynamic classes for this dtd.


_CLASSCACHE = {}


