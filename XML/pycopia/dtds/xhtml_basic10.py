#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

#  XHTML Basic 1.0 DTD  ...................................................... 


#  file: xhtml-basic10.dtd 


#  XHTML Basic 1.0 DTD
# 
#      This is XHTML Basic, a proper subset of XHTML.
# 
#      The Extensible HyperText Markup Language (XHTML)
#      Copyright 1998-2005 World Wide Web Consortium
#         (Massachusetts Institute of Technology, European Research Consortium
#          for Informatics and Mathematics, Keio University).
#          All Rights Reserved.
# 
#      Permission to use, copy, modify and distribute the XHTML Basic DTD
#      and its accompanying documentation for any purpose and without fee is
#      hereby granted in perpetuity, provided that the above copyright notice
#      and this paragraph appear in all copies.  The copyright holders make
#      no representation about the suitability of the DTD for any purpose.
# 
#      It is provided "as is" without expressed or implied warranty.
# 
#         Editors:    Murray M. Altheim <mailto:altheim@eng.sun.com>
#                     Peter Stark       <mailto:Peter.Stark@ecs.ericsson.se>
#         Revision:   $Id$ SMI
# 
# 


#  This is the driver file for version 1.0 of the XHTML Basic DTD.
# 
#      This DTD is identified by the PUBLIC and SYSTEM identifiers:
# 
#      PUBLIC: "-//W3C//DTD XHTML Basic 1.0//EN"
#      SYSTEM: "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd"
# 


#  Use this URI to identify the default namespace:
# 
#          "http://www.w3.org/1999/xhtml"
# 
#      See the Qualified Names module for information
#      on the use of namespace prefixes in the DTD.
# 


#  Reserved for use with the XLink namespace:
# 


#  For example, if you are using XHTML Basic 1.0 directly, use
#      the public identifier in the DOCTYPE declaration, with the namespace
#      declaration on the document element to identify the default namespace:
# 
#          <?xml version="1.0"?>
#          <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
#              "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd" >
#          <html xmlns="http://www.w3.org/1999/xhtml"
#                xml:lang="en" >
#          ...
#          </html>
# 


#  reserved for future use with document profiles 


#  Bidirectional Text features
#      This feature-test entity is used to declare elements
#      and attributes used for bidirectional text support.
# 


#  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 


#  ...................................................................... 


#  XHTML Modular Framework Module  ...................................... 


#  file: xhtml-framework-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ENTITIES XHTML Modular Framework 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-framework-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Modular Framework
# 
#      This required module instantiates the modules needed
#      to support the XHTML modularization model, including:
# 
#         +  notations
#         +  datatypes
#         +  namespace-qualified names
#         +  common attributes
#         +  document model
#         +  character entities
# 
#      The Intrinsic Events module is ignored by default but
#      occurs in this module because it must be instantiated
#      prior to Attributes but after Datatypes.
# 


#  ...................................................................... 


#  XHTML Notations Module  .............................................. 


#  file: xhtml-notations-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//NOTATIONS XHTML Notations 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-notations-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Notations
# 
#      defines the following notations, many of these imported from
#      other specifications and standards. When an existing FPI is
#      known, it is incorporated here.
# 


#  XML Notations ..................................... 


#  SGML and XML Notations ............................ 


#  W3C XML 1.0 Recommendation 


W3c_xml = pycopia.XML.POM.Notation(u'w3c-xml', u'ISO 8879//NOTATION Extensible Markup Language (XML) 1.0//EN', None)

#  XML 1.0 CDATA 


Cdata = pycopia.XML.POM.Notation(u'cdata', u'-//W3C//NOTATION XML 1.0: CDATA//EN', None)

#  SGML Formal Public Identifiers 


Fpi = pycopia.XML.POM.Notation(u'fpi', u'ISO 8879:1986//NOTATION Formal Public Identifier//EN', None)

#  XHTML Notations ................................... 


#  Length defined for cellpadding/cellspacing 


#  nn for pixels or nn% for percentage length 


Length = pycopia.XML.POM.Notation(u'length', u'-//W3C//NOTATION XHTML Datatype: Length//EN', None)

#  space-separated list of link types 


Linktypes = pycopia.XML.POM.Notation(u'linkTypes', u'-//W3C//NOTATION XHTML Datatype: LinkTypes//EN', None)

#  single or comma-separated list of media descriptors 


Mediadesc = pycopia.XML.POM.Notation(u'mediaDesc', u'-//W3C//NOTATION XHTML Datatype: MediaDesc//EN', None)

#  pixel, percentage, or relative 


Multilength = pycopia.XML.POM.Notation(u'multiLength', u'-//W3C//NOTATION XHTML Datatype: MultiLength//EN', None)

#  one or more digits (NUMBER) 


Number = pycopia.XML.POM.Notation(u'number', u'-//W3C//NOTATION XHTML Datatype: Number//EN', None)

#  integer representing length in pixels 


Pixels = pycopia.XML.POM.Notation(u'pixels', u'-//W3C//NOTATION XHTML Datatype: Pixels//EN', None)

#  script expression 


Script = pycopia.XML.POM.Notation(u'script', u'-//W3C//NOTATION XHTML Datatype: Script//EN', None)

#  textual content 


Text = pycopia.XML.POM.Notation(u'text', u'-//W3C//NOTATION XHTML Datatype: Text//EN', None)

#  Imported Notations ................................ 


#  a single character from [ISO10646] 


Character = pycopia.XML.POM.Notation(u'character', u'-//W3C//NOTATION XHTML Datatype: Character//EN', None)

#  a character encoding, as per [RFC2045] 


Charset = pycopia.XML.POM.Notation(u'charset', u'-//W3C//NOTATION XHTML Datatype: Charset//EN', None)

#  a space separated list of character encodings, as per [RFC2045] 


Charsets = pycopia.XML.POM.Notation(u'charsets', u'-//W3C//NOTATION XHTML Datatype: Charsets//EN', None)

#  media type, as per [RFC2045] 


Contenttype = pycopia.XML.POM.Notation(u'contentType', u'-//W3C//NOTATION XHTML Datatype: ContentType//EN', None)

#  comma-separated list of media types, as per [RFC2045] 


Contenttypes = pycopia.XML.POM.Notation(u'contentTypes', u'-//W3C//NOTATION XHTML Datatype: ContentTypes//EN', None)

#  date and time information. ISO date format 


Datetime = pycopia.XML.POM.Notation(u'datetime', u'-//W3C//NOTATION XHTML Datatype: Datetime//EN', None)

#  a language code, as per [RFC3066] 


Languagecode = pycopia.XML.POM.Notation(u'languageCode', u'-//W3C//NOTATION XHTML Datatype: LanguageCode//EN', None)

#  a Uniform Resource Identifier, see [URI] 


Uri = pycopia.XML.POM.Notation(u'uri', u'-//W3C//NOTATION XHTML Datatype: URI//EN', None)

#  a space-separated list of Uniform Resource Identifiers, see [URI] 


Uris = pycopia.XML.POM.Notation(u'uris', u'-//W3C//NOTATION XHTML Datatype: URIs//EN', None)

#  end of xhtml-notations-1.mod 


#  ...................................................................... 


#  XHTML Datatypes Module  .............................................. 


#  file: xhtml-datatypes-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ENTITIES XHTML Datatypes 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-datatypes-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Datatypes
# 
#      defines containers for the following datatypes, many of
#      these imported from other specifications and standards.
# 


#  Length defined for cellpadding/cellspacing 


#  nn for pixels or nn% for percentage length 


#  space-separated list of link types 


#  single or comma-separated list of media descriptors 


#  pixel, percentage, or relative 


#  one or more digits (NUMBER) 


#  integer representing length in pixels 


#  script expression 


#  textual content 


#  Imported Datatypes ................................ 


#  a single character from [ISO10646] 


#  a character encoding, as per [RFC2045] 


#  a space separated list of character encodings, as per [RFC2045] 


#  Color specification using color name or sRGB (#RRGGBB) values 


#  media type, as per [RFC2045] 


#  comma-separated list of media types, as per [RFC2045] 


#  date and time information. ISO date format 


#  formal public identifier, as per [ISO8879] 


#  a language code, as per [RFC3066] or its successor 


#  a Uniform Resource Identifier, see [URI] 


#  a space-separated list of Uniform Resource Identifiers, see [URI] 


#  end of xhtml-datatypes-1.mod 


#  placeholder for XLink support module 


#  ....................................................................... 


#  XHTML Qname Module  ................................................... 


#  file: xhtml-qname-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ENTITIES XHTML Qualified Names 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-qname-1.mod"
# 
#      Revisions:
# #2000-10-22: added qname declarations for ruby elements
#      ....................................................................... 


#  XHTML Qname (Qualified Name) Module
# 
#      This module is contained in two parts, labeled Section 'A' and 'B':
# 
#        Section A declares parameter entities to support namespace-
#        qualified names, namespace declarations, and name prefixing
#        for XHTML and extensions.
# 
#        Section B declares parameter entities used to provide
#        namespace-qualified names for all XHTML element types:
# 
#          %applet.qname;   the xmlns-qualified name for <applet>
#          %base.qname;     the xmlns-qualified name for <base>
#          ...
# 
#      XHTML extensions would create a module similar to this one.
#      Included in the XHTML distribution is a template module
#      ('template-qname-1.mod') suitable for this purpose.
# 


#  Section A: XHTML XML Namespace Framework :::::::::::::::::::: 


#  1. Declare a %XHTML.prefixed; conditional section keyword, used
#         to activate namespace prefixing. The default value should
#         inherit '%NS.prefixed;' from the DTD driver, so that unless
#         overridden, the default behaviour follows the overall DTD
#         prefixing scheme.
# 


#  By default, we always permit XHTML attribute collections to have
#      namespace-qualified prefixes as well.
# 


#  By default, we allow the XML Schema attributes on the root
#      element.
# 


#  2. Declare a parameter entity (eg., %XHTML.xmlns;) containing
#         the URI reference used to identify the XHTML namespace:
# 


#  3. Declare parameter entities (eg., %XHTML.prefix;) containing
#         the default namespace prefix string(s) to use when prefixing
#         is enabled. This may be overridden in the DTD driver or the
#         internal subset of an document instance. If no default prefix
#         is desired, this may be declared as an empty string.
# 
#      NOTE: As specified in [XMLNAMES], the namespace prefix serves
#      as a proxy for the URI reference, and is not in itself significant.
# 


#  4. Declare parameter entities (eg., %XHTML.pfx;) containing the
#         colonized prefix(es) (eg., '%XHTML.prefix;:') used when
#         prefixing is active, an empty string when it is not.
# 


#  declare qualified name extensions here ............ 


#  5. The parameter entity %XHTML.xmlns.extra.attrib; may be
#         redeclared to contain any non-XHTML namespace declaration
#         attributes for namespaces embedded in XHTML. The default
#         is an empty string.  XLink should be included here if used
#         in the DTD.
# 


#  The remainder of Section A is only followed in XHTML, not extensions. 


#  Declare a parameter entity %NS.decl.attrib; containing
#      all XML Namespace declarations used in the DTD, plus the
#      xmlns declaration for XHTML, its form dependent on whether
#      prefixing is active.
# 


#  Declare a parameter entity %XSI.prefix as a prefix to use for XML
#      Schema Instance attributes.
# 


#  Declare a parameter entity %XSI.xmlns.attrib as support for the
#      schemaLocation attribute, since this is legal throughout the DTD.
# 


#  This is a placeholder for future XLink support.
# 


#  This is the attribute for the XML Schema namespace - XHTML
#      Modularization is also expressed in XML Schema, and it needs to
# 	 be legal to declare the XML Schema namespace and the
# 	 schemaLocation attribute on the root element of XHTML family
# 	 documents.
# 


#  Declare a parameter entity %NS.decl.attrib; containing all
#      XML namespace declaration attributes used by XHTML, including
#      a default xmlns attribute when prefixing is inactive.
# 


#  placeholder for qualified name redeclarations 


#  Section B: XHTML Qualified Names ::::::::::::::::::::::::::::: 


#  6. This section declares parameter entities used to provide
#         namespace-qualified names for all XHTML element types.
# 


#  module:  xhtml-applet-1.mod 


#  module:  xhtml-base-1.mod 


#  module:  xhtml-bdo-1.mod 


#  module:  xhtml-blkphras-1.mod 


#  module:  xhtml-blkpres-1.mod 


#  module:  xhtml-blkstruct-1.mod 


#  module:  xhtml-edit-1.mod 


#  module:  xhtml-form-1.mod 


#  module:  xhtml-hypertext-1.mod 


#  module:  xhtml-image-1.mod 


#  module:  xhtml-inlphras-1.mod 


#  module:  xhtml-inlpres-1.mod 


#  module:  xhtml-inlstruct-1.mod 


#  module:  xhtml-ismap-1.mod (also csismap, ssismap) 


#  module:  xhtml-link-1.mod 


#  module:  xhtml-list-1.mod 


#  module:  xhtml-meta-1.mod 


#  module:  xhtml-param-1.mod 


#  module:  xhtml-object-1.mod 


#  module:  xhtml-script-1.mod 


#  module:  xhtml-struct-1.mod 


#  module:  xhtml-style-1.mod 


#  module:  xhtml-table-1.mod 


#  module:  xhtml-ruby-1.mod 


#  Provisional XHTML 2.0 Qualified Names  ...................... 


#  module:  xhtml-image-2.mod 


#  end of xhtml-qname-1.mod 


#  ...................................................................... 


#  XHTML Common Attributes Module  ...................................... 


#  file: xhtml-attribs-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ENTITIES XHTML Common Attributes 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-attribs-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Common Attributes
# 
#      This module declares many of the common attributes for the XHTML DTD.
#      %NS.decl.attrib; is declared in the XHTML Qname module.
# 
# 	 Note that this file was extended in XHTML Modularization Second Edition to 
# 	 include declarations of "global" versions of the attribute collections.
# 	 The global versions of the attributes are for use on elements in other 
# 	 namespaces.  The global version of "common" includes the xmlns declaration
# 	 for the prefixed version of the xhtml namespace.  If you are only using a
# 	 specific attribute or an individual attribute collection, you must also
# 	 include the XHTML.xmlns.attrib.prefixed PE on your elements.
# 


#  intrinsic event attributes declared previously
# 


#  end of xhtml-attribs-1.mod 


#  placeholder for content model redeclarations 


#  instantiate the Document Model module declared in the DTD driver
# 


#  ....................................................................... 


#  XHTML Basic 1.0 Document Model Module  .................................... 


#  file: xhtml-basic10-model-1.mod
# 
#      This is XHTML Basic, a proper subset of XHTML.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ENTITIES XHTML Basic 1.0 Document Model 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-basic10-model-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  XHTML Basic Document Model
# 
#      This module describes the groupings of elements that make up
#      common content models for XHTML elements.
# 


#  Optional Elements in head  .............. 


#  Miscellaneous Elements  ................. 


#  Inline Elements  ........................ 


#  Block Elements  ......................... 


#  All Content Elements  ................... 


#  declares all content except tables
# 


#  end of xhtml-basic10-model-1.mod 


#  ...................................................................... 


#  XHTML Character Entities Module  ......................................... 


#  file: xhtml-charent-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ENTITIES XHTML Character Entities 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-charent-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Character Entities for XHTML
# 
#      This module declares the set of character entities for XHTML,
#      including the Latin 1, Symbol and Special character collections.
# 


#  Portions (C) International Organization for Standardization 1986
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Character entity set. Typical invocation:
#     <!ENTITY % HTMLlat1 PUBLIC
#        "-//W3C//ENTITIES Latin 1 for XHTML//EN"
#        "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
#     %HTMLlat1;
# 


#  no-break space = non-breaking space,
#                                   U+00A0 ISOnum 


#  inverted exclamation mark, U+00A1 ISOnum 


#  cent sign, U+00A2 ISOnum 


#  pound sign, U+00A3 ISOnum 


#  currency sign, U+00A4 ISOnum 


#  yen sign = yuan sign, U+00A5 ISOnum 


#  broken bar = broken vertical bar,
#                                   U+00A6 ISOnum 


#  section sign, U+00A7 ISOnum 


#  diaeresis = spacing diaeresis,
#                                   U+00A8 ISOdia 


#  copyright sign, U+00A9 ISOnum 


#  feminine ordinal indicator, U+00AA ISOnum 


#  left-pointing double angle quotation mark
#                                   = left pointing guillemet, U+00AB ISOnum 


#  not sign = angled dash,
#                                   U+00AC ISOnum 


#  soft hyphen = discretionary hyphen,
#                                   U+00AD ISOnum 


#  registered sign = registered trade mark sign,
#                                   U+00AE ISOnum 


#  macron = spacing macron = overline
#                                   = APL overbar, U+00AF ISOdia 


#  degree sign, U+00B0 ISOnum 


#  plus-minus sign = plus-or-minus sign,
#                                   U+00B1 ISOnum 


#  superscript two = superscript digit two
#                                   = squared, U+00B2 ISOnum 


#  superscript three = superscript digit three
#                                   = cubed, U+00B3 ISOnum 


#  acute accent = spacing acute,
#                                   U+00B4 ISOdia 


#  micro sign, U+00B5 ISOnum 


#  pilcrow sign = paragraph sign,
#                                   U+00B6 ISOnum 


#  middle dot = Georgian comma
#                                   = Greek middle dot, U+00B7 ISOnum 


#  cedilla = spacing cedilla, U+00B8 ISOdia 


#  superscript one = superscript digit one,
#                                   U+00B9 ISOnum 


#  masculine ordinal indicator,
#                                   U+00BA ISOnum 


#  right-pointing double angle quotation mark
#                                   = right pointing guillemet, U+00BB ISOnum 


#  vulgar fraction one quarter
#                                   = fraction one quarter, U+00BC ISOnum 


#  vulgar fraction one half
#                                   = fraction one half, U+00BD ISOnum 


#  vulgar fraction three quarters
#                                   = fraction three quarters, U+00BE ISOnum 


#  inverted question mark
#                                   = turned question mark, U+00BF ISOnum 


#  latin capital letter A with grave
#                                   = latin capital letter A grave,
#                                   U+00C0 ISOlat1 


#  latin capital letter A with acute,
#                                   U+00C1 ISOlat1 


#  latin capital letter A with circumflex,
#                                   U+00C2 ISOlat1 


#  latin capital letter A with tilde,
#                                   U+00C3 ISOlat1 


#  latin capital letter A with diaeresis,
#                                   U+00C4 ISOlat1 


#  latin capital letter A with ring above
#                                   = latin capital letter A ring,
#                                   U+00C5 ISOlat1 


#  latin capital letter AE
#                                   = latin capital ligature AE,
#                                   U+00C6 ISOlat1 


#  latin capital letter C with cedilla,
#                                   U+00C7 ISOlat1 


#  latin capital letter E with grave,
#                                   U+00C8 ISOlat1 


#  latin capital letter E with acute,
#                                   U+00C9 ISOlat1 


#  latin capital letter E with circumflex,
#                                   U+00CA ISOlat1 


#  latin capital letter E with diaeresis,
#                                   U+00CB ISOlat1 


#  latin capital letter I with grave,
#                                   U+00CC ISOlat1 


#  latin capital letter I with acute,
#                                   U+00CD ISOlat1 


#  latin capital letter I with circumflex,
#                                   U+00CE ISOlat1 


#  latin capital letter I with diaeresis,
#                                   U+00CF ISOlat1 


#  latin capital letter ETH, U+00D0 ISOlat1 


#  latin capital letter N with tilde,
#                                   U+00D1 ISOlat1 


#  latin capital letter O with grave,
#                                   U+00D2 ISOlat1 


#  latin capital letter O with acute,
#                                   U+00D3 ISOlat1 


#  latin capital letter O with circumflex,
#                                   U+00D4 ISOlat1 


#  latin capital letter O with tilde,
#                                   U+00D5 ISOlat1 


#  latin capital letter O with diaeresis,
#                                   U+00D6 ISOlat1 


#  multiplication sign, U+00D7 ISOnum 


#  latin capital letter O with stroke
#                                   = latin capital letter O slash,
#                                   U+00D8 ISOlat1 


#  latin capital letter U with grave,
#                                   U+00D9 ISOlat1 


#  latin capital letter U with acute,
#                                   U+00DA ISOlat1 


#  latin capital letter U with circumflex,
#                                   U+00DB ISOlat1 


#  latin capital letter U with diaeresis,
#                                   U+00DC ISOlat1 


#  latin capital letter Y with acute,
#                                   U+00DD ISOlat1 


#  latin capital letter THORN,
#                                   U+00DE ISOlat1 


#  latin small letter sharp s = ess-zed,
#                                   U+00DF ISOlat1 


#  latin small letter a with grave
#                                   = latin small letter a grave,
#                                   U+00E0 ISOlat1 


#  latin small letter a with acute,
#                                   U+00E1 ISOlat1 


#  latin small letter a with circumflex,
#                                   U+00E2 ISOlat1 


#  latin small letter a with tilde,
#                                   U+00E3 ISOlat1 


#  latin small letter a with diaeresis,
#                                   U+00E4 ISOlat1 


#  latin small letter a with ring above
#                                   = latin small letter a ring,
#                                   U+00E5 ISOlat1 


#  latin small letter ae
#                                   = latin small ligature ae, U+00E6 ISOlat1 


#  latin small letter c with cedilla,
#                                   U+00E7 ISOlat1 


#  latin small letter e with grave,
#                                   U+00E8 ISOlat1 


#  latin small letter e with acute,
#                                   U+00E9 ISOlat1 


#  latin small letter e with circumflex,
#                                   U+00EA ISOlat1 


#  latin small letter e with diaeresis,
#                                   U+00EB ISOlat1 


#  latin small letter i with grave,
#                                   U+00EC ISOlat1 


#  latin small letter i with acute,
#                                   U+00ED ISOlat1 


#  latin small letter i with circumflex,
#                                   U+00EE ISOlat1 


#  latin small letter i with diaeresis,
#                                   U+00EF ISOlat1 


#  latin small letter eth, U+00F0 ISOlat1 


#  latin small letter n with tilde,
#                                   U+00F1 ISOlat1 


#  latin small letter o with grave,
#                                   U+00F2 ISOlat1 


#  latin small letter o with acute,
#                                   U+00F3 ISOlat1 


#  latin small letter o with circumflex,
#                                   U+00F4 ISOlat1 


#  latin small letter o with tilde,
#                                   U+00F5 ISOlat1 


#  latin small letter o with diaeresis,
#                                   U+00F6 ISOlat1 


#  division sign, U+00F7 ISOnum 


#  latin small letter o with stroke,
#                                   = latin small letter o slash,
#                                   U+00F8 ISOlat1 


#  latin small letter u with grave,
#                                   U+00F9 ISOlat1 


#  latin small letter u with acute,
#                                   U+00FA ISOlat1 


#  latin small letter u with circumflex,
#                                   U+00FB ISOlat1 


#  latin small letter u with diaeresis,
#                                   U+00FC ISOlat1 


#  latin small letter y with acute,
#                                   U+00FD ISOlat1 


#  latin small letter thorn,
#                                   U+00FE ISOlat1 


#  latin small letter y with diaeresis,
#                                   U+00FF ISOlat1 


#  Mathematical, Greek and Symbolic characters for XHTML 


#  Character entity set. Typical invocation:
#      <!ENTITY % HTMLsymbol PUBLIC
#         "-//W3C//ENTITIES Symbols for XHTML//EN"
#         "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
#      %HTMLsymbol;
# 


#  Portions (C) International Organization for Standardization 1986:
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Relevant ISO entity set is given unless names are newly introduced.
#      New names (i.e., not in ISO 8879 list) do not clash with any
#      existing ISO 8879 entity names. ISO 10646 character numbers
#      are given for each character, in hex. values are decimal
#      conversions of the ISO 10646 values and refer to the document
#      character set. Names are Unicode names. 
# 


#  Latin Extended-B 


#  latin small letter f with hook = function
#                                     = florin, U+0192 ISOtech 


#  Greek 


#  greek capital letter alpha, U+0391 


#  greek capital letter beta, U+0392 


#  greek capital letter gamma,
#                                     U+0393 ISOgrk3 


#  greek capital letter delta,
#                                     U+0394 ISOgrk3 


#  greek capital letter epsilon, U+0395 


#  greek capital letter zeta, U+0396 


#  greek capital letter eta, U+0397 


#  greek capital letter theta,
#                                     U+0398 ISOgrk3 


#  greek capital letter iota, U+0399 


#  greek capital letter kappa, U+039A 


#  greek capital letter lamda,
#                                     U+039B ISOgrk3 


#  greek capital letter mu, U+039C 


#  greek capital letter nu, U+039D 


#  greek capital letter xi, U+039E ISOgrk3 


#  greek capital letter omicron, U+039F 


#  greek capital letter pi, U+03A0 ISOgrk3 


#  greek capital letter rho, U+03A1 


#  there is no Sigmaf, and no U+03A2 character either 


#  greek capital letter sigma,
#                                     U+03A3 ISOgrk3 


#  greek capital letter tau, U+03A4 


#  greek capital letter upsilon,
#                                     U+03A5 ISOgrk3 


#  greek capital letter phi,
#                                     U+03A6 ISOgrk3 


#  greek capital letter chi, U+03A7 


#  greek capital letter psi,
#                                     U+03A8 ISOgrk3 


#  greek capital letter omega,
#                                     U+03A9 ISOgrk3 


#  greek small letter alpha,
#                                     U+03B1 ISOgrk3 


#  greek small letter beta, U+03B2 ISOgrk3 


#  greek small letter gamma,
#                                     U+03B3 ISOgrk3 


#  greek small letter delta,
#                                     U+03B4 ISOgrk3 


#  greek small letter epsilon,
#                                     U+03B5 ISOgrk3 


#  greek small letter zeta, U+03B6 ISOgrk3 


#  greek small letter eta, U+03B7 ISOgrk3 


#  greek small letter theta,
#                                     U+03B8 ISOgrk3 


#  greek small letter iota, U+03B9 ISOgrk3 


#  greek small letter kappa,
#                                     U+03BA ISOgrk3 


#  greek small letter lamda,
#                                     U+03BB ISOgrk3 


#  greek small letter mu, U+03BC ISOgrk3 


#  greek small letter nu, U+03BD ISOgrk3 


#  greek small letter xi, U+03BE ISOgrk3 


#  greek small letter omicron, U+03BF NEW 


#  greek small letter pi, U+03C0 ISOgrk3 


#  greek small letter rho, U+03C1 ISOgrk3 


#  greek small letter final sigma,
#                                     U+03C2 ISOgrk3 


#  greek small letter sigma,
#                                     U+03C3 ISOgrk3 


#  greek small letter tau, U+03C4 ISOgrk3 


#  greek small letter upsilon,
#                                     U+03C5 ISOgrk3 


#  greek small letter phi, U+03C6 ISOgrk3 


#  greek small letter chi, U+03C7 ISOgrk3 


#  greek small letter psi, U+03C8 ISOgrk3 


#  greek small letter omega,
#                                     U+03C9 ISOgrk3 


#  greek theta symbol,
#                                     U+03D1 NEW 


#  greek upsilon with hook symbol,
#                                     U+03D2 NEW 


#  greek pi symbol, U+03D6 ISOgrk3 


#  General Punctuation 


#  bullet = black small circle,
#                                      U+2022 ISOpub  


#  bullet is NOT the same as bullet operator, U+2219 


#  horizontal ellipsis = three dot leader,
#                                      U+2026 ISOpub  


#  prime = minutes = feet, U+2032 ISOtech 


#  double prime = seconds = inches,
#                                      U+2033 ISOtech 


#  overline = spacing overscore,
#                                      U+203E NEW 


#  fraction slash, U+2044 NEW 


#  Letterlike Symbols 


#  script capital P = power set
#                                      = Weierstrass p, U+2118 ISOamso 


#  black-letter capital I = imaginary part,
#                                      U+2111 ISOamso 


#  black-letter capital R = real part symbol,
#                                      U+211C ISOamso 


#  trade mark sign, U+2122 ISOnum 


#  alef symbol = first transfinite cardinal,
#                                      U+2135 NEW 


#  alef symbol is NOT the same as hebrew letter alef,
#      U+05D0 although the same glyph could be used to depict both characters 


#  Arrows 


#  leftwards arrow, U+2190 ISOnum 


#  upwards arrow, U+2191 ISOnum


#  rightwards arrow, U+2192 ISOnum 


#  downwards arrow, U+2193 ISOnum 


#  left right arrow, U+2194 ISOamsa 


#  downwards arrow with corner leftwards
#                                      = carriage return, U+21B5 NEW 


#  leftwards double arrow, U+21D0 ISOtech 


#  Unicode does not say that lArr is the same as the 'is implied by' arrow
#     but also does not have any other character for that function. So lArr can
#     be used for 'is implied by' as ISOtech suggests 


#  upwards double arrow, U+21D1 ISOamsa 


#  rightwards double arrow,
#                                      U+21D2 ISOtech 


#  Unicode does not say this is the 'implies' character but does not have 
#      another character with this function so rArr can be used for 'implies'
#      as ISOtech suggests 


#  downwards double arrow, U+21D3 ISOamsa 


#  left right double arrow,
#                                      U+21D4 ISOamsa 


#  Mathematical Operators 


#  for all, U+2200 ISOtech 


#  partial differential, U+2202 ISOtech  


#  there exists, U+2203 ISOtech 


#  empty set = null set, U+2205 ISOamso 


#  nabla = backward difference,
#                                      U+2207 ISOtech 


#  element of, U+2208 ISOtech 


#  not an element of, U+2209 ISOtech 


#  contains as member, U+220B ISOtech 


#  n-ary product = product sign,
#                                      U+220F ISOamsb 


#  prod is NOT the same character as U+03A0 'greek capital letter pi' though
#      the same glyph might be used for both 


#  n-ary summation, U+2211 ISOamsb 


#  sum is NOT the same character as U+03A3 'greek capital letter sigma'
#      though the same glyph might be used for both 


#  minus sign, U+2212 ISOtech 


#  asterisk operator, U+2217 ISOtech 


#  square root = radical sign,
#                                      U+221A ISOtech 


#  proportional to, U+221D ISOtech 


#  infinity, U+221E ISOtech 


#  angle, U+2220 ISOamso 


#  logical and = wedge, U+2227 ISOtech 


#  logical or = vee, U+2228 ISOtech 


#  intersection = cap, U+2229 ISOtech 


#  union = cup, U+222A ISOtech 


#  integral, U+222B ISOtech 


#  therefore, U+2234 ISOtech 


#  tilde operator = varies with = similar to,
#                                      U+223C ISOtech 


#  tilde operator is NOT the same character as the tilde, U+007E,
#      although the same glyph might be used to represent both  


#  approximately equal to, U+2245 ISOtech 


#  almost equal to = asymptotic to,
#                                      U+2248 ISOamsr 


#  not equal to, U+2260 ISOtech 


#  identical to, U+2261 ISOtech 


#  less-than or equal to, U+2264 ISOtech 


#  greater-than or equal to,
#                                      U+2265 ISOtech 


#  subset of, U+2282 ISOtech 


#  superset of, U+2283 ISOtech 


#  not a subset of, U+2284 ISOamsn 


#  subset of or equal to, U+2286 ISOtech 


#  superset of or equal to,
#                                      U+2287 ISOtech 


#  circled plus = direct sum,
#                                      U+2295 ISOamsb 


#  circled times = vector product,
#                                      U+2297 ISOamsb 


#  up tack = orthogonal to = perpendicular,
#                                      U+22A5 ISOtech 


#  dot operator, U+22C5 ISOamsb 


#  dot operator is NOT the same character as U+00B7 middle dot 


#  Miscellaneous Technical 


#  left ceiling = APL upstile,
#                                      U+2308 ISOamsc  


#  right ceiling, U+2309 ISOamsc  


#  left floor = APL downstile,
#                                      U+230A ISOamsc  


#  right floor, U+230B ISOamsc  


#  left-pointing angle bracket = bra,
#                                      U+2329 ISOtech 


#  lang is NOT the same character as U+003C 'less than sign' 
#      or U+2039 'single left-pointing angle quotation mark' 


#  right-pointing angle bracket = ket,
#                                      U+232A ISOtech 


#  rang is NOT the same character as U+003E 'greater than sign' 
#      or U+203A 'single right-pointing angle quotation mark' 


#  Geometric Shapes 


#  lozenge, U+25CA ISOpub 


#  Miscellaneous Symbols 


#  black spade suit, U+2660 ISOpub 


#  black here seems to mean filled as opposed to hollow 


#  black club suit = shamrock,
#                                      U+2663 ISOpub 


#  black heart suit = valentine,
#                                      U+2665 ISOpub 


#  black diamond suit, U+2666 ISOpub 


#  Special characters for XHTML 


#  Character entity set. Typical invocation:
#      <!ENTITY % HTMLspecial PUBLIC
#         "-//W3C//ENTITIES Special for XHTML//EN"
#         "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
#      %HTMLspecial;
# 


#  Portions (C) International Organization for Standardization 1986:
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Relevant ISO entity set is given unless names are newly introduced.
#      New names (i.e., not in ISO 8879 list) do not clash with any
#      existing ISO 8879 entity names. ISO 10646 character numbers
#      are given for each character, in hex. values are decimal
#      conversions of the ISO 10646 values and refer to the document
#      character set. Names are Unicode names. 
# 


#  C0 Controls and Basic Latin 


#   quotation mark, U+0022 ISOnum 


#   ampersand, U+0026 ISOnum 


#   less-than sign, U+003C ISOnum 


#   greater-than sign, U+003E ISOnum 


#   apostrophe = APL quote, U+0027 ISOnum 


#  Latin Extended-A 


#   latin capital ligature OE,
#                                     U+0152 ISOlat2 


#   latin small ligature oe, U+0153 ISOlat2 


#  ligature is a misnomer, this is a separate character in some languages 


#   latin capital letter S with caron,
#                                     U+0160 ISOlat2 


#   latin small letter s with caron,
#                                     U+0161 ISOlat2 


#   latin capital letter Y with diaeresis,
#                                     U+0178 ISOlat2 


#  Spacing Modifier Letters 


#   modifier letter circumflex accent,
#                                     U+02C6 ISOpub 


#   small tilde, U+02DC ISOdia 


#  General Punctuation 


#  en space, U+2002 ISOpub 


#  em space, U+2003 ISOpub 


#  thin space, U+2009 ISOpub 


#  zero width non-joiner,
#                                     U+200C NEW RFC 2070 


#  zero width joiner, U+200D NEW RFC 2070 


#  left-to-right mark, U+200E NEW RFC 2070 


#  right-to-left mark, U+200F NEW RFC 2070 


#  en dash, U+2013 ISOpub 


#  em dash, U+2014 ISOpub 


#  left single quotation mark,
#                                     U+2018 ISOnum 


#  right single quotation mark,
#                                     U+2019 ISOnum 


#  single low-9 quotation mark, U+201A NEW 


#  left double quotation mark,
#                                     U+201C ISOnum 


#  right double quotation mark,
#                                     U+201D ISOnum 


#  double low-9 quotation mark, U+201E NEW 


#  dagger, U+2020 ISOpub 


#  double dagger, U+2021 ISOpub 


#  per mille sign, U+2030 ISOtech 


#  single left-pointing angle quotation mark,
#                                     U+2039 ISO proposed 


#  lsaquo is proposed but not yet ISO standardized 


#  single right-pointing angle quotation mark,
#                                     U+203A ISO proposed 


#  rsaquo is proposed but not yet ISO standardized 


#  Currency Symbols 


#   euro sign, U+20AC NEW 


#  end of xhtml-charent-1.mod 


#  end of xhtml-framework-1.mod 


#  ...................................................................... 


#  XHTML Text Module  ................................................... 


#  file: xhtml-text-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Text 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-text-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Textual Content
# 
#      The Text module includes declarations for all core
#      text container elements and their attributes.
# 


#  ...................................................................... 


#  XHTML Inline Structural Module  ...................................... 


#  file: xhtml-inlstruct-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Inline Structural 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-inlstruct-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Inline Structural
# 
#         br, span
# 
#      This module declares the elements and their attributes
#      used to support inline-level structural markup.
# 


#  br: forced line break ............................. 


class Br(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         ])
	_name = u'br'


#  end of br.element 


#  end of br.attlist 


#  span: generic inline container .................... 


class Span(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'span'


#  end of span.element 


#  end of span.attlist 


#  end of xhtml-inlstruct-1.mod 


#  ...................................................................... 


#  XHTML Inline Phrasal Module  ......................................... 


#  file: xhtml-inlphras-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Inline Phrasal 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-inlphras-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Inline Phrasal
# 
#         abbr, acronym, cite, code, dfn, em, kbd, q, samp, strong, var
# 
#      This module declares the elements and their attributes used to
#      support inline-level phrasal markup.
# 


class Abbr(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'abbr'


#  end of abbr.element 


#  end of abbr.attlist 


class Acronym(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'acronym'


#  end of acronym.element 


#  end of acronym.attlist 


class Cite(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'cite'


#  end of cite.element 


#  end of cite.attlist 


class Code(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'code'


#  end of code.element 


#  end of code.attlist 


class Dfn(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'dfn'


#  end of dfn.element 


#  end of dfn.attlist 


class Em(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'em'


#  end of em.element 


#  end of em.attlist 


class Kbd(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'kbd'


#  end of kbd.element 


#  end of kbd.attlist 


class Q(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cite', 1, 12, None), 
         ])
	_name = u'q'


#  end of q.element 


#  end of q.attlist 


class Samp(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'samp'


#  end of samp.element 


#  end of samp.attlist 


class Strong(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'strong'


#  end of strong.element 


#  end of strong.attlist 


class Var(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'var'


#  end of var.element 


#  end of var.attlist 


#  end of xhtml-inlphras-1.mod 


#  ...................................................................... 


#  XHTML Block Structural Module  ....................................... 


#  file: xhtml-blkstruct-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Block Structural 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-blkstruct-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Block Structural
# 
#         div, p
# 
#      This module declares the elements and their attributes used to
#      support block-level structural markup.
# 


class Div(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'div'


#  end of div.element 


#  end of div.attlist 


class P(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'p'


#  end of p.element 


#  end of p.attlist 


#  end of xhtml-blkstruct-1.mod 


#  ...................................................................... 


#  XHTML Block Phrasal Module  .......................................... 


#  file: xhtml-blkphras-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Block Phrasal 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-blkphras-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Block Phrasal
# 
#         address, blockquote, pre, h1, h2, h3, h4, h5, h6
# 
#      This module declares the elements and their attributes used to
#      support block-level phrasal markup.
# 


class Address(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'address'


#  end of address.element 


#  end of address.attlist 


class Blockquote(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cite', 1, 12, None), 
         ])
	_name = u'blockquote'


#  end of blockquote.element 


#  end of blockquote.attlist 


class Pre(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'pre'


#  end of pre.element 


#  end of pre.attlist 


#  ...................  Heading Elements  ................... 


class H1(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'h1'


#  end of h1.element 


#  end of h1.attlist 


class H2(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'h2'


#  end of h2.element 


#  end of h2.attlist 


class H3(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'h3'


#  end of h3.element 


#  end of h3.attlist 


class H4(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'h4'


#  end of h4.element 


#  end of h4.attlist 


class H5(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'h5'


#  end of h5.element 


#  end of h5.attlist 


class H6(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'h6'


#  end of h6.element 


#  end of h6.attlist 


#  end of xhtml-blkphras-1.mod 


#  end of xhtml-text-1.mod 


#  ...................................................................... 


#  XHTML Hypertext Module  .............................................. 


#  file: xhtml-hypertext-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Hypertext 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-hypertext-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Hypertext
# 
#         a
# 
#      This module declares the anchor ('a') element type, which
#      defines the source of a hypertext link. The destination
#      (or link 'target') is identified via its 'id' attribute
#      rather than the 'name' attribute as was used in HTML.
# 


#  ............  Anchor Element  ............ 


class A(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('href', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('hreflang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rel', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('rev', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         ])
	_name = u'a'


#  end of a.element 


#  end of a.attlist 


#  end of xhtml-hypertext-1.mod 


#  ...................................................................... 


#  XHTML Lists Module  .................................................. 


#  file: xhtml-list-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Lists 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-list-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Lists
# 
#         dl, dt, dd, ol, ul, li
# 
#      This module declares the list-oriented element types
#      and their attributes.
# 


#  dl: Definition List ............................... 


class Dl(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'dl'


#  end of dl.element 


#  end of dl.attlist 


#  dt: Definition Term ............................... 


class Dt(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'dt'


#  end of dt.element 


#  end of dt.attlist 


#  dd: Definition Description ........................ 


class Dd(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'dd'


#  end of dd.element 


#  end of dd.attlist 


#  ol: Ordered List (numbered styles) ................ 


class Ol(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'ol'


#  end of ol.element 


#  end of ol.attlist 


#  ul: Unordered List (bullet styles) ................ 


class Ul(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'ul'


#  end of ul.element 


#  end of ul.attlist 


#  li: List Item ..................................... 


class Li(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'li'


#  end of li.element 


#  end of li.attlist 


#  end of xhtml-list-1.mod 


#  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 


#  Image Module  ............................................... 


#  ...................................................................... 


#  XHTML Images Module  ................................................. 


#  file: xhtml-image-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Rovision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Images 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-image-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Images
# 
#         img
# 
#      This module provides markup to support basic image embedding.
# 


#  To avoid problems with text-only UAs as well as to make
#      image content understandable and navigable to users of
#      non-visual UAs, you need to provide a description with
#      the 'alt' attribute, and avoid server-side image maps.
# 


class Img(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('alt', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('longdesc', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         ])
	_name = u'img'


#  end of img.element 


#  end of img.attlist 


#  end of xhtml-image-1.mod 


#  Tables Module ............................................... 


#  ....................................................................... 


#  XHTML Basic Table Module  ............................................. 


#  file: xhtml-basic-table-1.mod
# 
#      This is XHTML Basic, a proper subset of XHTML.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Basic Tables 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-basic-table-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Basic Tables
# 
#         table, caption, tr, th, td
# 
#      This table module declares elements and attributes defining
#      a table model based fundamentally on features found in the
#      widely-deployed HTML 3.2 table model.  While this module
#      mimics the content model and table attributes of HTML 3.2
#      tables, the element types declared herein also includes all
#      HTML 4 common and most of the HTML 4 table attributes.
# 


#  declare qualified element type names:
# 


#  horizontal alignment attributes for cell contents
# 


#  vertical alignment attributes for cell contents
# 


#  scope is simpler than axes attribute for common tables
# 


#  table: Table Element .............................. 


class Table(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('summary', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         ])
	_name = u'table'


#  end of table.element 


#  end of table.attlist 


#  caption: Table Caption ............................ 


class Caption(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'caption'


#  end of caption.element 


#  end of caption.attlist 


#  tr: Table Row ..................................... 


class Tr(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom']), 12, None), 
         ])
	_name = u'tr'


#  end of tr.element 


#  end of tr.attlist 


#  th: Table Header Cell ............................. 


#  th is for header cells, td for data,
#      but for cells acting as both use td
# 


class Th(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('abbr', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('axis', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('headers', 4, 12, None), 
         pycopia.XML.POM.XMLAttribute('scope', pycopia.XML.POM.Enumeration(['row', 'col']), 12, None), 
         pycopia.XML.POM.XMLAttribute('rowspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('colspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom']), 12, None), 
         ])
	_name = u'th'


#  end of th.element 


#  end of th.attlist 


#  td: Table Data Cell ............................... 


class Td(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('abbr', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('axis', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('headers', 4, 12, None), 
         pycopia.XML.POM.XMLAttribute('scope', pycopia.XML.POM.Enumeration(['row', 'col']), 12, None), 
         pycopia.XML.POM.XMLAttribute('rowspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('colspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom']), 12, None), 
         ])
	_name = u'td'


#  end of td.element 


#  end of td.attlist 


#  end of xhtml-basic-table-1.mod 


#  Forms Module  ............................................... 


#  ...................................................................... 


#  XHTML Simplified Forms Module  ....................................... 


#  file: xhtml-basic-form-1.mod
# 
#      This is XHTML Basic, a proper subset of XHTML.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Basic Forms 1.0//EN"  
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-basic-form-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Basic Forms
# 
#      This forms module is based on the HTML 3.2 forms model, with
#      the WAI-requested addition of the label element. While this 
#      module essentially mimics the content model and attributes of 
#      HTML 3.2 forms, the element types declared herein also include
#      all HTML 4 common attributes.
# 
#         form, label, input, select, option, textarea
# 


#  declare qualified element type names:
# 


#  %BlkNoForm.mix; includes all non-form block elements,
#      plus %Misc.class;
# 


#  form: Form Element ................................ 


class Form(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('action', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('method', pycopia.XML.POM.Enumeration(['get', 'post']), 13, u'get'), 
         pycopia.XML.POM.XMLAttribute('enctype', 1, 13, u'application/x-www-form-urlencoded'), 
         ])
	_name = u'form'


#  end of form.element 


#  end of form.attlist 


#  label: Form Field Label Text ...................... 


#  Each label must not contain more than ONE field
# 


class Label(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('for', 3, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         ])
	_name = u'label'


#  end of label.element 


#  end of label.attlist 


#  input: Form Control ............................... 


class Input(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', pycopia.XML.POM.Enumeration(['text', 'password', 'checkbox', 'radio', 'submit', 'reset', 'hidden']), 13, u'text'), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('checked', pycopia.XML.POM.Enumeration(['checked']), 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('maxlength', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         ])
	_name = u'input'


#  end of input.element 


#  Basic Forms removes 'button', 'image' and 'file' input types.
# 


#  attribute name required for all but submit & reset
# 


#  end of input.attlist 


#  select: Option Selector ........................... 


class Select(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('multiple', pycopia.XML.POM.Enumeration(['multiple']), 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         ])
	_name = u'select'


#  end of select.element 


#  end of select.attlist 


#  option: Selectable Choice ......................... 


class Option(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('selected', pycopia.XML.POM.Enumeration(['selected']), 12, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         ])
	_name = u'option'


#  end of option.element 


#  end of option.attlist 


#  textarea: Multi-Line Text Field ................... 


class Textarea(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rows', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('cols', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         ])
	_name = u'textarea'


#  end of textarea.element 


#  end of textarea.attlist 


#  end of xhtml-basic-form-1.mod 


#  Link Element Module  ........................................ 


#  ...................................................................... 


#  XHTML Link Element Module  ........................................... 


#  file: xhtml-link-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Link Element 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-link-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Link element
# 
#         link
# 
#      This module declares the link element type and its attributes,
#      which could (in principle) be used to define document-level links
#      to external resources such as:
# 
#      a) for document specific toolbars/menus, e.g. start, contents,
#         previous, next, index, end, help
#      b) to link to a separate style sheet (rel="stylesheet")
#      c) to make a link to a script (rel="script")
#      d) by style sheets to control how collections of html nodes are
#         rendered into printed documents
#      e) to make a link to a printable version of this document
#         e.g. a postscript or pdf version (rel="alternate" media="print")
# 


#  link: Media-Independent Link ...................... 


class Link(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('href', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('hreflang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rel', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('rev', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('media', 1, 12, None), 
         ])
	_name = u'link'


#  end of link.element 


#  end of link.attlist 


#  end of xhtml-link-1.mod 


#  Document Metainformation Module  ............................ 


#  ...................................................................... 


#  XHTML Document Metainformation Module  ............................... 


#  file: xhtml-meta-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Metainformation 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-meta-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Meta Information
# 
#         meta
# 
#      This module declares the meta element type and its attributes,
#      used to provide declarative document metainformation.
# 


#  meta: Generic Metainformation ..................... 


class Meta(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('http-equiv', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('content', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('scheme', 1, 12, None), 
         ])
	_name = u'meta'


#  end of meta.element 


#  end of meta.attlist 


#  end of xhtml-meta-1.mod 


#  Base Element Module  ........................................ 


#  ...................................................................... 


#  XHTML Base Element Module  ........................................... 


#  file: xhtml-base-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Base Element 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-base-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Base element
# 
#         base
# 
#      This module declares the base element type and its attributes,
#      used to define a base URI against which relative URIs in the
#      document will be resolved.
# 
#      Note that this module also redeclares the content model for
#      the head element to include the base element.
# 


#  base: Document Base URI ........................... 


class Base(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('href', 1, 11, None), 
         ])
	_name = u'base'


#  end of base.element 


#  end of base.attlist 


#  end of xhtml-base-1.mod 


#  Param Element Module  ....................................... 


#  ...................................................................... 


#  XHTML Param Element Module  ..................................... 


#  file: xhtml-param-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Param Element 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-param-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Parameters for Java Applets and Embedded Objects
# 
#         param
# 
#      This module provides declarations for the param element,
#      used to provide named property values for the applet
#      and object elements.
# 


#  param: Named Property Value ....................... 


class Param(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valuetype', pycopia.XML.POM.Enumeration(['data', 'ref', 'object']), 13, u'data'), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         ])
	_name = u'param'


#  end of param.element 


#  end of param.attlist 


#  end of xhtml-param-1.mod 


#  Embedded Object Module  ..................................... 


#  ...................................................................... 


#  XHTML Embedded Object Module  ........................................ 


#  file: xhtml-object-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Embedded Object 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-object-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Embedded Objects
# 
#         object
# 
#      This module declares the object element type and its attributes, used
#      to embed external objects as part of XHTML pages. In the document,
#      place param elements prior to other content within the object element.
# 
#      Note that use of this module requires instantiation of the Param
#      Element Module.
# 


#  object: Generic Embedded Object ................... 


class Object(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('declare', pycopia.XML.POM.Enumeration(['declare']), 12, None), 
         pycopia.XML.POM.XMLAttribute('classid', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('codebase', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('data', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('codetype', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('archive', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('standby', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         ])
	_name = u'object'


#  end of object.element 


#  end of object.attlist 


#  end of xhtml-object-1.mod 


#  ...................................................................... 


#  XHTML Structure Module  .............................................. 


#  file: xhtml-struct-1.mod
# 
#      This is XHTML, a reformulation of HTML as a modular XML application.
#      Copyright 1998-2005 W3C (MIT, ERCIM, Keio), All Rights Reserved.
#      Revision: $Id$ SMI
# 
#      This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#        PUBLIC "-//W3C//ELEMENTS XHTML Document Structure 1.0//EN"
#        SYSTEM "http://www.w3.org/MarkUp/DTD/xhtml-struct-1.mod"
# 
#      Revisions:
#      (none)
#      ....................................................................... 


#  Document Structure
# 
#         title, head, body, html
# 
#      The Structure Module defines the major structural elements and
#      their attributes.
# 
#      Note that the content model of the head element type is redeclared
#      when the Base Module is included in the DTD.
# 
#      The parameter entity containing the XML namespace URI value used
#      for XHTML is '%XHTML.xmlns;', defined in the Qualified Names module.
# 


#  title: Document Title ............................. 


#  The title element is not considered part of the flow of text.
#      It should be displayed, for example as the page header or
#      window title. Exactly one title is required per document.
# 


class Title(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'title'


#  end of title.element 


#  end of title.attlist 


#  head: Document Head ............................... 


class Head(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('profile', 1, 13, u''), 
         ])
	_name = u'head'


#  end of head.element 


#  reserved for future use with document profiles
# 


#  end of head.attlist 


#  body: Document Body ............................... 


class Body(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 8, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'body'


#  end of body.element 


#  end of body.attlist 


#  html: XHTML Document Element ...................... 


class Html(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         pycopia.XML.POM.XMLAttribute('xmlns:xsi', 1, 14, u'http://www.w3.org/2001/XMLSchema-instance'), 
         pycopia.XML.POM.XMLAttribute('xsi:schemaLocation', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('version', 1, 14, u'-//W3C//DTD XHTML Basic 1.0//EN'), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 1, 12, None), 
         ])
	_name = u'html'



Root = Html



#  end of html.element 


#  define a parameter for the XSI schemaLocation attribute 


#  version attribute value defined in driver
# 


#  schemaLocation attribute from XML Schema
# 


#  see the Qualified Names module for information
#      on how to extend XHTML using XML namespaces
# 


#  end of html.attlist 


#  end of xhtml-struct-1.mod 


#  end of XHTML Basic 1.0 DTD  ........................................... 


GENERAL_ENTITIES = {u'zwnj': u'\u200c', u'aring': u'\xe5', u'gt': u'>', u'yen': u'\xa5', u'ograve': u'\xf2', u'Chi': u'\u03a7', u'delta': u'\u03b4', u'rang': u'\u232a', u'sup': u'\u2283', u'trade': u'\u2122', u'Ntilde': u'\xd1', u'xi': u'\u03be', u'upsih': u'\u03d2', u'nbsp': u'\xa0', u'Atilde': u'\xc3', u'radic': u'\u221a', u'otimes': u'\u2297', u'aelig': u'\xe6', u'oelig': u'\u0153', u'equiv': u'\u2261', u'ni': u'\u220b', u'infin': u'\u221e', u'Psi': u'\u03a8', u'auml': u'\xe4', u'cup': u'\u222a', u'Epsilon': u'\u0395', u'otilde': u'\xf5', u'lt': u'&#60;', u'Icirc': u'\xce', u'Eacute': u'\xc9', u'Lambda': u'\u039b', u'sbquo': u'\u201a', u'Prime': u'\u2033', u'prime': u'\u2032', u'psi': u'\u03c8', u'Kappa': u'\u039a', u'rsaquo': u'\u203a', u'Tau': u'\u03a4', u'uacute': u'\xfa', u'ocirc': u'\xf4', u'lrm': u'\u200e', u'zwj': u'\u200d', u'cedil': u'\xb8', u'Alpha': u'\u0391', u'not': u'\xac', u'amp': u'&#38;', u'AElig': u'\xc6', u'oslash': u'\xf8', u'acute': u'\xb4', u'lceil': u'\u2308', u'alefsym': u'\u2135', u'laquo': u'\xab', u'shy': u'\xad', u'loz': u'\u25ca', u'ge': u'\u2265', u'Igrave': u'\xcc', u'nu': u'\u03bd', u'Ograve': u'\xd2', u'lsaquo': u'\u2039', u'sube': u'\u2286', u'euro': u'\u20ac', u'rarr': u'\u2192', u'sdot': u'\u22c5', u'rdquo': u'\u201d', u'Yacute': u'\xdd', u'lfloor': u'\u230a', u'lArr': u'\u21d0', u'Auml': u'\xc4', u'Dagger': u'\u2021', u'brvbar': u'\xa6', u'Otilde': u'\xd5', u'szlig': u'\xdf', u'clubs': u'\u2663', u'diams': u'\u2666', u'agrave': u'\xe0', u'Ocirc': u'\xd4', u'Iota': u'\u0399', u'Theta': u'\u0398', u'Pi': u'\u03a0', u'zeta': u'\u03b6', u'Scaron': u'\u0160', u'frac14': u'\xbc', u'egrave': u'\xe8', u'sub': u'\u2282', u'iexcl': u'\xa1', u'frac12': u'\xbd', u'ordf': u'\xaa', u'sum': u'\u2211', u'prop': u'\u221d', u'Uuml': u'\xdc', u'ntilde': u'\xf1', u'apos': u"'", u'atilde': u'\xe3', u'asymp': u'\u2248', u'uml': u'\xa8', u'prod': u'\u220f', u'nsub': u'\u2284', u'reg': u'\xae', u'rArr': u'\u21d2', u'Oslash': u'\xd8', u'emsp': u'\u2003', u'THORN': u'\xde', u'yuml': u'\xff', u'aacute': u'\xe1', u'Mu': u'\u039c', u'hArr': u'\u21d4', u'le': u'\u2264', u'thinsp': u'\u2009', u'dArr': u'\u21d3', u'ecirc': u'\xea', u'bdquo': u'\u201e', u'Sigma': u'\u03a3', u'Aring': u'\xc5', u'tilde': u'\u02dc', u'nabla': u'\u2207', u'mdash': u'\u2014', u'uarr': u'\u2191', u'times': u'\xd7', u'Ugrave': u'\xd9', u'Eta': u'\u0397', u'Agrave': u'\xc0', u'chi': u'\u03c7', u'real': u'\u211c', u'circ': u'\u02c6', u'eth': u'\xf0', u'rceil': u'\u2309', u'iuml': u'\xef', u'gamma': u'\u03b3', u'lambda': u'\u03bb', u'harr': u'\u2194', u'Egrave': u'\xc8', u'frac34': u'\xbe', u'dagger': u'\u2020', u'divide': u'\xf7', u'Ouml': u'\xd6', u'image': u'\u2111', u'ndash': u'\u2013', u'hellip': u'\u2026', u'igrave': u'\xec', u'Yuml': u'\u0178', u'ang': u'\u2220', u'alpha': u'\u03b1', u'frasl': u'\u2044', u'ETH': u'\xd0', u'lowast': u'\u2217', u'Nu': u'\u039d', u'plusmn': u'\xb1', u'bull': u'\u2022', u'sup1': u'\xb9', u'sup2': u'\xb2', u'sup3': u'\xb3', u'Aacute': u'\xc1', u'cent': u'\xa2', u'oline': u'\u203e', u'Beta': u'\u0392', u'perp': u'\u22a5', u'Delta': u'\u0394', u'there4': u'\u2234', u'pi': u'\u03c0', u'iota': u'\u03b9', u'empty': u'\u2205', u'euml': u'\xeb', u'notin': u'\u2209', u'iacute': u'\xed', u'para': u'\xb6', u'epsilon': u'\u03b5', u'weierp': u'\u2118', u'OElig': u'\u0152', u'uuml': u'\xfc', u'larr': u'\u2190', u'icirc': u'\xee', u'Upsilon': u'\u03a5', u'omicron': u'\u03bf', u'upsilon': u'\u03c5', u'copy': u'\xa9', u'Iuml': u'\xcf', u'Oacute': u'\xd3', u'Xi': u'\u039e', u'kappa': u'\u03ba', u'ccedil': u'\xe7', u'Ucirc': u'\xdb', u'cap': u'\u2229', u'mu': u'\u03bc', u'scaron': u'\u0161', u'lsquo': u'\u2018', u'isin': u'\u2208', u'Zeta': u'\u0396', u'minus': u'\u2212', u'deg': u'\xb0', u'and': u'\u2227', u'tau': u'\u03c4', u'pound': u'\xa3', u'curren': u'\xa4', u'int': u'\u222b', u'ucirc': u'\xfb', u'rfloor': u'\u230b', u'ensp': u'\u2002', u'crarr': u'\u21b5', u'ugrave': u'\xf9', u'exist': u'\u2203', u'cong': u'\u2245', u'theta': u'\u03b8', u'oplus': u'\u2295', u'permil': u'\u2030', u'Acirc': u'\xc2', u'piv': u'\u03d6', u'Euml': u'\xcb', u'Phi': u'\u03a6', u'Iacute': u'\xcd', u'quot': u'"', u'Uacute': u'\xda', u'Omicron': u'\u039f', u'ne': u'\u2260', u'iquest': u'\xbf', u'eta': u'\u03b7', u'rsquo': u'\u2019', u'yacute': u'\xfd', u'Rho': u'\u03a1', u'darr': u'\u2193', u'Ecirc': u'\xca', u'Omega': u'\u03a9', u'acirc': u'\xe2', u'sim': u'\u223c', u'phi': u'\u03c6', u'sigmaf': u'\u03c2', u'macr': u'\xaf', u'thetasym': u'\u03d1', u'Ccedil': u'\xc7', u'ordm': u'\xba', u'uArr': u'\u21d1', u'forall': u'\u2200', u'beta': u'\u03b2', u'fnof': u'\u0192', u'rho': u'\u03c1', u'micro': u'\xb5', u'eacute': u'\xe9', u'omega': u'\u03c9', u'middot': u'\xb7', u'Gamma': u'\u0393', u'rlm': u'\u200f', u'lang': u'\u2329', u'spades': u'\u2660', u'supe': u'\u2287', u'thorn': u'\xfe', u'ouml': u'\xf6', u'or': u'\u2228', u'raquo': u'\xbb', u'part': u'\u2202', u'sect': u'\xa7', u'ldquo': u'\u201c', u'hearts': u'\u2665', u'sigma': u'\u03c3', u'oacute': u'\xf3'}
