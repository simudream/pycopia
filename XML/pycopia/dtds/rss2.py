#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

attribIspermalink_312979127608890625 = pycopia.XML.POM.XMLAttribute(u'isPermaLink', pycopia.XML.POM.Enumeration((u'true', u'false')), 13, u'true')


attribPort_116265298844058529 = pycopia.XML.POM.XMLAttribute(u'port', 1, 12, None)


attribPath_1403968622733128761 = pycopia.XML.POM.XMLAttribute(u'path', 1, 12, None)


attribProtocol_402492753557463556 = pycopia.XML.POM.XMLAttribute(u'protocol', 1, 12, None)


attribVersion_869849613128885796 = pycopia.XML.POM.XMLAttribute(u'version', 1, 14, u'2.0')


attribDomain_2892948211515610000 = pycopia.XML.POM.XMLAttribute(u'domain', 1, 12, None)


attribRegisterprocedure_159508720897514041 = pycopia.XML.POM.XMLAttribute(u'registerProcedure', 1, 12, None)


attribLength_3509839988040323025 = pycopia.XML.POM.XMLAttribute(u'length', 1, 11, None)


attribUrl_527219945134558641 = pycopia.XML.POM.XMLAttribute(u'url', 1, 11, None)


attribType_1977399331530900489 = pycopia.XML.POM.XMLAttribute(u'type', 1, 11, None)




#  RSS 2.0 DTD
# 
#      This version Copyright 2003 Silmaril Consultants
#      Licensed for use under the terms of the XL 1.1
# 
#      Peter Flynn <peter@silmaril.ie>, August 2003
# 
#      This is a real, working DTD for RSS 2.0.
# 
#      This replaces an earlier version which misinterpreted
#      the specification. The header of the earlier version
#      is reproduced here: 
# /**
# * rss.xml
# * Copyright: David Shafik and The Explosive Network
# * Began: 08:33 PM 01/14/03
# * Desc: RSS 2.0 DTD
# * Build #: 0003
# * Version number: 1.0 RC2
# * E-Mail: davey@i...
# * URL: www.its-explosive.net
# * License: XL 1.1
# */
# 
#      Comments and questions about the RSS2.0 Spec should be posted
#      to the Yahoo! group RSS2-Support, *NOT* sent to me. Contact me
#      only about bugs in this DTD!
# 
#      This version is based on the specification provided by 
#      Userland at http://feeds.archive.org/validator/docs/rss2.html 


class Rss(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'version': attribVersion_869849613128885796, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'version': attribVersion_869849613128885796, 
         }
	_name = u'rss'



_Root = Rss



#  A channel can apparently either have one or more items, 
#      or just a title, link, and description of its own 


class Channel(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'channel'


class Item(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'item'


class Author(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'author'


class Category(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'domain': attribDomain_2892948211515610000, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'domain': attribDomain_2892948211515610000, 
         }
	_name = u'category'


class Cloud(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'path': attribPath_1403968622733128761, 
         u'domain': attribDomain_2892948211515610000, 
         u'protocol': attribProtocol_402492753557463556, 
         u'port': attribPort_116265298844058529, 
         u'registerProcedure': attribRegisterprocedure_159508720897514041, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'path': attribPath_1403968622733128761, 
         'domain': attribDomain_2892948211515610000, 
         'protocol': attribProtocol_402492753557463556, 
         'port': attribPort_116265298844058529, 
         'registerProcedure': attribRegisterprocedure_159508720897514041, 
         }
	_name = u'cloud'


class Comments(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'comments'


class Copyright(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'copyright'


class Description(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'description'


class Docs(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'docs'


class Enclosure(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'url': attribUrl_527219945134558641, 
         u'length': attribLength_3509839988040323025, 
         u'type': attribType_1977399331530900489, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'url': attribUrl_527219945134558641, 
         'length': attribLength_3509839988040323025, 
         'type': attribType_1977399331530900489, 
         }
	_name = u'enclosure'


class Generator(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'generator'


class Guid(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'isPermaLink': attribIspermalink_312979127608890625, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'isPermaLink': attribIspermalink_312979127608890625, 
         }
	_name = u'guid'


class Height(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'height'


class Image(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'image'


class Language(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'language'


class Lastbuilddate(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'lastBuildDate'


class Link(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'link'


class Managingeditor(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'managingEditor'


class Name(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'name'


class Pubdate(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'pubDate'


class Skipdays(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'skipDays'


class Skiphours(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'skipHours'


class Source(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'url': attribUrl_527219945134558641, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'url': attribUrl_527219945134558641, 
         }
	_name = u'source'


class Textinput(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'textInput'


class Title(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'title'


class Ttl(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'ttl'


class Url(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'url'


class Webmaster(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'webMaster'


class Width(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'width'


GENERAL_ENTITIES = {}

# Cache for dynamic classes for this dtd.


_CLASSCACHE = {}


