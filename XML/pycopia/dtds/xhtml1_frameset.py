#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

# 
#    Extensible HTML version 1.0 Frameset DTD
# 
#    This is the same as HTML 4 Frameset except for
#    changes due to the differences between XML and SGML.
# 
#    Namespace = http://www.w3.org/1999/xhtml
# 
#    For further information, see: http://www.w3.org/TR/xhtml1
# 
#    Copyright (c) 1998-2001 W3C (MIT, INRIA, Keio),
#    All Rights Reserved. 
# 
#    This DTD module is identified by the PUBLIC and SYSTEM identifiers:
# 
#    PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
#    SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"
# 
#    $Revision$
#    $Date$
# 
# 


# ================ Character mnemonic entities =========================


#  Portions (C) International Organization for Standardization 1986
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Character entity set. Typical invocation:
#     <!ENTITY % HTMLlat1 PUBLIC
#        "-//W3C//ENTITIES Latin 1 for XHTML//EN"
#        "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
#     %HTMLlat1;
# 


#  no-break space = non-breaking space,
#                                   U+00A0 ISOnum 


#  inverted exclamation mark, U+00A1 ISOnum 


#  cent sign, U+00A2 ISOnum 


#  pound sign, U+00A3 ISOnum 


#  currency sign, U+00A4 ISOnum 


#  yen sign = yuan sign, U+00A5 ISOnum 


#  broken bar = broken vertical bar,
#                                   U+00A6 ISOnum 


#  section sign, U+00A7 ISOnum 


#  diaeresis = spacing diaeresis,
#                                   U+00A8 ISOdia 


#  copyright sign, U+00A9 ISOnum 


#  feminine ordinal indicator, U+00AA ISOnum 


#  left-pointing double angle quotation mark
#                                   = left pointing guillemet, U+00AB ISOnum 


#  not sign = angled dash,
#                                   U+00AC ISOnum 


#  soft hyphen = discretionary hyphen,
#                                   U+00AD ISOnum 


#  registered sign = registered trade mark sign,
#                                   U+00AE ISOnum 


#  macron = spacing macron = overline
#                                   = APL overbar, U+00AF ISOdia 


#  degree sign, U+00B0 ISOnum 


#  plus-minus sign = plus-or-minus sign,
#                                   U+00B1 ISOnum 


#  superscript two = superscript digit two
#                                   = squared, U+00B2 ISOnum 


#  superscript three = superscript digit three
#                                   = cubed, U+00B3 ISOnum 


#  acute accent = spacing acute,
#                                   U+00B4 ISOdia 


#  micro sign, U+00B5 ISOnum 


#  pilcrow sign = paragraph sign,
#                                   U+00B6 ISOnum 


#  middle dot = Georgian comma
#                                   = Greek middle dot, U+00B7 ISOnum 


#  cedilla = spacing cedilla, U+00B8 ISOdia 


#  superscript one = superscript digit one,
#                                   U+00B9 ISOnum 


#  masculine ordinal indicator,
#                                   U+00BA ISOnum 


#  right-pointing double angle quotation mark
#                                   = right pointing guillemet, U+00BB ISOnum 


#  vulgar fraction one quarter
#                                   = fraction one quarter, U+00BC ISOnum 


#  vulgar fraction one half
#                                   = fraction one half, U+00BD ISOnum 


#  vulgar fraction three quarters
#                                   = fraction three quarters, U+00BE ISOnum 


#  inverted question mark
#                                   = turned question mark, U+00BF ISOnum 


#  latin capital letter A with grave
#                                   = latin capital letter A grave,
#                                   U+00C0 ISOlat1 


#  latin capital letter A with acute,
#                                   U+00C1 ISOlat1 


#  latin capital letter A with circumflex,
#                                   U+00C2 ISOlat1 


#  latin capital letter A with tilde,
#                                   U+00C3 ISOlat1 


#  latin capital letter A with diaeresis,
#                                   U+00C4 ISOlat1 


#  latin capital letter A with ring above
#                                   = latin capital letter A ring,
#                                   U+00C5 ISOlat1 


#  latin capital letter AE
#                                   = latin capital ligature AE,
#                                   U+00C6 ISOlat1 


#  latin capital letter C with cedilla,
#                                   U+00C7 ISOlat1 


#  latin capital letter E with grave,
#                                   U+00C8 ISOlat1 


#  latin capital letter E with acute,
#                                   U+00C9 ISOlat1 


#  latin capital letter E with circumflex,
#                                   U+00CA ISOlat1 


#  latin capital letter E with diaeresis,
#                                   U+00CB ISOlat1 


#  latin capital letter I with grave,
#                                   U+00CC ISOlat1 


#  latin capital letter I with acute,
#                                   U+00CD ISOlat1 


#  latin capital letter I with circumflex,
#                                   U+00CE ISOlat1 


#  latin capital letter I with diaeresis,
#                                   U+00CF ISOlat1 


#  latin capital letter ETH, U+00D0 ISOlat1 


#  latin capital letter N with tilde,
#                                   U+00D1 ISOlat1 


#  latin capital letter O with grave,
#                                   U+00D2 ISOlat1 


#  latin capital letter O with acute,
#                                   U+00D3 ISOlat1 


#  latin capital letter O with circumflex,
#                                   U+00D4 ISOlat1 


#  latin capital letter O with tilde,
#                                   U+00D5 ISOlat1 


#  latin capital letter O with diaeresis,
#                                   U+00D6 ISOlat1 


#  multiplication sign, U+00D7 ISOnum 


#  latin capital letter O with stroke
#                                   = latin capital letter O slash,
#                                   U+00D8 ISOlat1 


#  latin capital letter U with grave,
#                                   U+00D9 ISOlat1 


#  latin capital letter U with acute,
#                                   U+00DA ISOlat1 


#  latin capital letter U with circumflex,
#                                   U+00DB ISOlat1 


#  latin capital letter U with diaeresis,
#                                   U+00DC ISOlat1 


#  latin capital letter Y with acute,
#                                   U+00DD ISOlat1 


#  latin capital letter THORN,
#                                   U+00DE ISOlat1 


#  latin small letter sharp s = ess-zed,
#                                   U+00DF ISOlat1 


#  latin small letter a with grave
#                                   = latin small letter a grave,
#                                   U+00E0 ISOlat1 


#  latin small letter a with acute,
#                                   U+00E1 ISOlat1 


#  latin small letter a with circumflex,
#                                   U+00E2 ISOlat1 


#  latin small letter a with tilde,
#                                   U+00E3 ISOlat1 


#  latin small letter a with diaeresis,
#                                   U+00E4 ISOlat1 


#  latin small letter a with ring above
#                                   = latin small letter a ring,
#                                   U+00E5 ISOlat1 


#  latin small letter ae
#                                   = latin small ligature ae, U+00E6 ISOlat1 


#  latin small letter c with cedilla,
#                                   U+00E7 ISOlat1 


#  latin small letter e with grave,
#                                   U+00E8 ISOlat1 


#  latin small letter e with acute,
#                                   U+00E9 ISOlat1 


#  latin small letter e with circumflex,
#                                   U+00EA ISOlat1 


#  latin small letter e with diaeresis,
#                                   U+00EB ISOlat1 


#  latin small letter i with grave,
#                                   U+00EC ISOlat1 


#  latin small letter i with acute,
#                                   U+00ED ISOlat1 


#  latin small letter i with circumflex,
#                                   U+00EE ISOlat1 


#  latin small letter i with diaeresis,
#                                   U+00EF ISOlat1 


#  latin small letter eth, U+00F0 ISOlat1 


#  latin small letter n with tilde,
#                                   U+00F1 ISOlat1 


#  latin small letter o with grave,
#                                   U+00F2 ISOlat1 


#  latin small letter o with acute,
#                                   U+00F3 ISOlat1 


#  latin small letter o with circumflex,
#                                   U+00F4 ISOlat1 


#  latin small letter o with tilde,
#                                   U+00F5 ISOlat1 


#  latin small letter o with diaeresis,
#                                   U+00F6 ISOlat1 


#  division sign, U+00F7 ISOnum 


#  latin small letter o with stroke,
#                                   = latin small letter o slash,
#                                   U+00F8 ISOlat1 


#  latin small letter u with grave,
#                                   U+00F9 ISOlat1 


#  latin small letter u with acute,
#                                   U+00FA ISOlat1 


#  latin small letter u with circumflex,
#                                   U+00FB ISOlat1 


#  latin small letter u with diaeresis,
#                                   U+00FC ISOlat1 


#  latin small letter y with acute,
#                                   U+00FD ISOlat1 


#  latin small letter thorn with,
#                                   U+00FE ISOlat1 


#  latin small letter y with diaeresis,
#                                   U+00FF ISOlat1 


#  Mathematical, Greek and Symbolic characters for HTML 


#  Character entity set. Typical invocation:
#      <!ENTITY % HTMLsymbol PUBLIC
#         "-//W3C//ENTITIES Symbols for XHTML//EN"
#         "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
#      %HTMLsymbol;
# 


#  Portions (C) International Organization for Standardization 1986:
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Relevant ISO entity set is given unless names are newly introduced.
#      New names (i.e., not in ISO 8879 list) do not clash with any
#      existing ISO 8879 entity names. ISO 10646 character numbers
#      are given for each character, in hex. values are decimal
#      conversions of the ISO 10646 values and refer to the document
#      character set. Names are Unicode names. 
# 


#  Latin Extended-B 


#  latin small f with hook = function
#                                     = florin, U+0192 ISOtech 


#  Greek 


#  greek capital letter alpha, U+0391 


#  greek capital letter beta, U+0392 


#  greek capital letter gamma,
#                                     U+0393 ISOgrk3 


#  greek capital letter delta,
#                                     U+0394 ISOgrk3 


#  greek capital letter epsilon, U+0395 


#  greek capital letter zeta, U+0396 


#  greek capital letter eta, U+0397 


#  greek capital letter theta,
#                                     U+0398 ISOgrk3 


#  greek capital letter iota, U+0399 


#  greek capital letter kappa, U+039A 


#  greek capital letter lambda,
#                                     U+039B ISOgrk3 


#  greek capital letter mu, U+039C 


#  greek capital letter nu, U+039D 


#  greek capital letter xi, U+039E ISOgrk3 


#  greek capital letter omicron, U+039F 


#  greek capital letter pi, U+03A0 ISOgrk3 


#  greek capital letter rho, U+03A1 


#  there is no Sigmaf, and no U+03A2 character either 


#  greek capital letter sigma,
#                                     U+03A3 ISOgrk3 


#  greek capital letter tau, U+03A4 


#  greek capital letter upsilon,
#                                     U+03A5 ISOgrk3 


#  greek capital letter phi,
#                                     U+03A6 ISOgrk3 


#  greek capital letter chi, U+03A7 


#  greek capital letter psi,
#                                     U+03A8 ISOgrk3 


#  greek capital letter omega,
#                                     U+03A9 ISOgrk3 


#  greek small letter alpha,
#                                     U+03B1 ISOgrk3 


#  greek small letter beta, U+03B2 ISOgrk3 


#  greek small letter gamma,
#                                     U+03B3 ISOgrk3 


#  greek small letter delta,
#                                     U+03B4 ISOgrk3 


#  greek small letter epsilon,
#                                     U+03B5 ISOgrk3 


#  greek small letter zeta, U+03B6 ISOgrk3 


#  greek small letter eta, U+03B7 ISOgrk3 


#  greek small letter theta,
#                                     U+03B8 ISOgrk3 


#  greek small letter iota, U+03B9 ISOgrk3 


#  greek small letter kappa,
#                                     U+03BA ISOgrk3 


#  greek small letter lambda,
#                                     U+03BB ISOgrk3 


#  greek small letter mu, U+03BC ISOgrk3 


#  greek small letter nu, U+03BD ISOgrk3 


#  greek small letter xi, U+03BE ISOgrk3 


#  greek small letter omicron, U+03BF NEW 


#  greek small letter pi, U+03C0 ISOgrk3 


#  greek small letter rho, U+03C1 ISOgrk3 


#  greek small letter final sigma,
#                                     U+03C2 ISOgrk3 


#  greek small letter sigma,
#                                     U+03C3 ISOgrk3 


#  greek small letter tau, U+03C4 ISOgrk3 


#  greek small letter upsilon,
#                                     U+03C5 ISOgrk3 


#  greek small letter phi, U+03C6 ISOgrk3 


#  greek small letter chi, U+03C7 ISOgrk3 


#  greek small letter psi, U+03C8 ISOgrk3 


#  greek small letter omega,
#                                     U+03C9 ISOgrk3 


#  greek small letter theta symbol,
#                                     U+03D1 NEW 


#  greek upsilon with hook symbol,
#                                     U+03D2 NEW 


#  greek pi symbol, U+03D6 ISOgrk3 


#  General Punctuation 


#  bullet = black small circle,
#                                      U+2022 ISOpub  


#  bullet is NOT the same as bullet operator, U+2219 


#  horizontal ellipsis = three dot leader,
#                                      U+2026 ISOpub  


#  prime = minutes = feet, U+2032 ISOtech 


#  double prime = seconds = inches,
#                                      U+2033 ISOtech 


#  overline = spacing overscore,
#                                      U+203E NEW 


#  fraction slash, U+2044 NEW 


#  Letterlike Symbols 


#  script capital P = power set
#                                      = Weierstrass p, U+2118 ISOamso 


#  blackletter capital I = imaginary part,
#                                      U+2111 ISOamso 


#  blackletter capital R = real part symbol,
#                                      U+211C ISOamso 


#  trade mark sign, U+2122 ISOnum 


#  alef symbol = first transfinite cardinal,
#                                      U+2135 NEW 


#  alef symbol is NOT the same as hebrew letter alef,
#      U+05D0 although the same glyph could be used to depict both characters 


#  Arrows 


#  leftwards arrow, U+2190 ISOnum 


#  upwards arrow, U+2191 ISOnum


#  rightwards arrow, U+2192 ISOnum 


#  downwards arrow, U+2193 ISOnum 


#  left right arrow, U+2194 ISOamsa 


#  downwards arrow with corner leftwards
#                                      = carriage return, U+21B5 NEW 


#  leftwards double arrow, U+21D0 ISOtech 


#  Unicode does not say that lArr is the same as the 'is implied by' arrow
#     but also does not have any other character for that function. So ? lArr can
#     be used for 'is implied by' as ISOtech suggests 


#  upwards double arrow, U+21D1 ISOamsa 


#  rightwards double arrow,
#                                      U+21D2 ISOtech 


#  Unicode does not say this is the 'implies' character but does not have 
#      another character with this function so ?
#      rArr can be used for 'implies' as ISOtech suggests 


#  downwards double arrow, U+21D3 ISOamsa 


#  left right double arrow,
#                                      U+21D4 ISOamsa 


#  Mathematical Operators 


#  for all, U+2200 ISOtech 


#  partial differential, U+2202 ISOtech  


#  there exists, U+2203 ISOtech 


#  empty set = null set = diameter,
#                                      U+2205 ISOamso 


#  nabla = backward difference,
#                                      U+2207 ISOtech 


#  element of, U+2208 ISOtech 


#  not an element of, U+2209 ISOtech 


#  contains as member, U+220B ISOtech 


#  should there be a more memorable name than 'ni'? 


#  n-ary product = product sign,
#                                      U+220F ISOamsb 


#  prod is NOT the same character as U+03A0 'greek capital letter pi' though
#      the same glyph might be used for both 


#  n-ary sumation, U+2211 ISOamsb 


#  sum is NOT the same character as U+03A3 'greek capital letter sigma'
#      though the same glyph might be used for both 


#  minus sign, U+2212 ISOtech 


#  asterisk operator, U+2217 ISOtech 


#  square root = radical sign,
#                                      U+221A ISOtech 


#  proportional to, U+221D ISOtech 


#  infinity, U+221E ISOtech 


#  angle, U+2220 ISOamso 


#  logical and = wedge, U+2227 ISOtech 


#  logical or = vee, U+2228 ISOtech 


#  intersection = cap, U+2229 ISOtech 


#  union = cup, U+222A ISOtech 


#  integral, U+222B ISOtech 


#  therefore, U+2234 ISOtech 


#  tilde operator = varies with = similar to,
#                                      U+223C ISOtech 


#  tilde operator is NOT the same character as the tilde, U+007E,
#      although the same glyph might be used to represent both  


#  approximately equal to, U+2245 ISOtech 


#  almost equal to = asymptotic to,
#                                      U+2248 ISOamsr 


#  not equal to, U+2260 ISOtech 


#  identical to, U+2261 ISOtech 


#  less-than or equal to, U+2264 ISOtech 


#  greater-than or equal to,
#                                      U+2265 ISOtech 


#  subset of, U+2282 ISOtech 


#  superset of, U+2283 ISOtech 


#  note that nsup, 'not a superset of, U+2283' is not covered by the Symbol 
#      font encoding and is not included. Should it be, for symmetry?
#      It is in ISOamsn  


#  not a subset of, U+2284 ISOamsn 


#  subset of or equal to, U+2286 ISOtech 


#  superset of or equal to,
#                                      U+2287 ISOtech 


#  circled plus = direct sum,
#                                      U+2295 ISOamsb 


#  circled times = vector product,
#                                      U+2297 ISOamsb 


#  up tack = orthogonal to = perpendicular,
#                                      U+22A5 ISOtech 


#  dot operator, U+22C5 ISOamsb 


#  dot operator is NOT the same character as U+00B7 middle dot 


#  Miscellaneous Technical 


#  left ceiling = apl upstile,
#                                      U+2308 ISOamsc  


#  right ceiling, U+2309 ISOamsc  


#  left floor = apl downstile,
#                                      U+230A ISOamsc  


#  right floor, U+230B ISOamsc  


#  left-pointing angle bracket = bra,
#                                      U+2329 ISOtech 


#  lang is NOT the same character as U+003C 'less than' 
#      or U+2039 'single left-pointing angle quotation mark' 


#  right-pointing angle bracket = ket,
#                                      U+232A ISOtech 


#  rang is NOT the same character as U+003E 'greater than' 
#      or U+203A 'single right-pointing angle quotation mark' 


#  Geometric Shapes 


#  lozenge, U+25CA ISOpub 


#  Miscellaneous Symbols 


#  black spade suit, U+2660 ISOpub 


#  black here seems to mean filled as opposed to hollow 


#  black club suit = shamrock,
#                                      U+2663 ISOpub 


#  black heart suit = valentine,
#                                      U+2665 ISOpub 


#  black diamond suit, U+2666 ISOpub 


#  Special characters for HTML 


#  Character entity set. Typical invocation:
#      <!ENTITY % HTMLspecial PUBLIC
#         "-//W3C//ENTITIES Special for XHTML//EN"
#         "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
#      %HTMLspecial;
# 


#  Portions (C) International Organization for Standardization 1986:
#      Permission to copy in any form is granted for use with
#      conforming SGML systems and applications as defined in
#      ISO 8879, provided this notice is included in all copies.
# 


#  Relevant ISO entity set is given unless names are newly introduced.
#      New names (i.e., not in ISO 8879 list) do not clash with any
#      existing ISO 8879 entity names. ISO 10646 character numbers
#      are given for each character, in hex. values are decimal
#      conversions of the ISO 10646 values and refer to the document
#      character set. Names are Unicode names. 
# 


#  C0 Controls and Basic Latin 


#   quotation mark = APL quote,
#                                     U+0022 ISOnum 


#   ampersand, U+0026 ISOnum 


#   less-than sign, U+003C ISOnum 


#   greater-than sign, U+003E ISOnum 


#   apostrophe mark, U+0027 ISOnum 


#  Latin Extended-A 


#   latin capital ligature OE,
#                                     U+0152 ISOlat2 


#   latin small ligature oe, U+0153 ISOlat2 


#  ligature is a misnomer, this is a separate character in some languages 


#   latin capital letter S with caron,
#                                     U+0160 ISOlat2 


#   latin small letter s with caron,
#                                     U+0161 ISOlat2 


#   latin capital letter Y with diaeresis,
#                                     U+0178 ISOlat2 


#  Spacing Modifier Letters 


#   modifier letter circumflex accent,
#                                     U+02C6 ISOpub 


#   small tilde, U+02DC ISOdia 


#  General Punctuation 


#  en space, U+2002 ISOpub 


#  em space, U+2003 ISOpub 


#  thin space, U+2009 ISOpub 


#  zero width non-joiner,
#                                     U+200C NEW RFC 2070 


#  zero width joiner, U+200D NEW RFC 2070 


#  left-to-right mark, U+200E NEW RFC 2070 


#  right-to-left mark, U+200F NEW RFC 2070 


#  en dash, U+2013 ISOpub 


#  em dash, U+2014 ISOpub 


#  left single quotation mark,
#                                     U+2018 ISOnum 


#  right single quotation mark,
#                                     U+2019 ISOnum 


#  single low-9 quotation mark, U+201A NEW 


#  left double quotation mark,
#                                     U+201C ISOnum 


#  right double quotation mark,
#                                     U+201D ISOnum 


#  double low-9 quotation mark, U+201E NEW 


#  dagger, U+2020 ISOpub 


#  double dagger, U+2021 ISOpub 


#  per mille sign, U+2030 ISOtech 


#  single left-pointing angle quotation mark,
#                                     U+2039 ISO proposed 


#  lsaquo is proposed but not yet ISO standardized 


#  single right-pointing angle quotation mark,
#                                     U+203A ISO proposed 


#  rsaquo is proposed but not yet ISO standardized 


#   euro sign, U+20AC NEW 


# ================== Imported Names ====================================


#  media type, as per [RFC2045] 


#  comma-separated list of media types, as per [RFC2045] 


#  a character encoding, as per [RFC2045] 


#  a space separated list of character encodings, as per [RFC2045] 


#  a language code, as per [RFC3066] 


#  a single character from [ISO10646] 


#  one or more digits 


#  space-separated list of link types 


#  single or comma-separated list of media descriptors 


#  a Uniform Resource Identifier, see [RFC2396] 


#  a space separated list of Uniform Resource Identifiers 


#  date and time information. ISO date format 


#  script expression 


#  style sheet data 


#  used for titles etc. 


#  render in this frame 


#  nn for pixels or nn% for percentage length 


#  pixel, percentage, or relative 


#  comma-separated list of MultiLength 


#  integer representing length in pixels 


#  these are used for image maps 


#  comma separated list of lengths 


#  used for object, applet, img, input and iframe 


#  a color using sRGB: #RRGGBB as Hex values 


#  There are also 16 widely known color names with their sRGB values:
# 
#     Black  = #000000    Green  = #008000
#     Silver = #C0C0C0    Lime   = #00FF00
#     Gray   = #808080    Olive  = #808000
#     White  = #FFFFFF    Yellow = #FFFF00
#     Maroon = #800000    Navy   = #000080
#     Red    = #FF0000    Blue   = #0000FF
#     Purple = #800080    Teal   = #008080
#     Fuchsia= #FF00FF    Aqua   = #00FFFF
# 


# =================== Generic Attributes ===============================


#  core attributes common to most elements
#   id       document-wide unique id
#   class    space separated list of classes
#   style    associated style info
#   title    advisory title/amplification
# 


#  internationalization attributes
#   lang        language code (backwards compatible)
#   xml:lang    language code (as per XML 1.0 spec)
#   dir         direction for weak/neutral text
# 


#  attributes for common UI events
#   onclick     a pointer button was clicked
#   ondblclick  a pointer button was double clicked
#   onmousedown a pointer button was pressed down
#   onmouseup   a pointer button was released
#   onmousemove a pointer was moved onto the element
#   onmouseout  a pointer was moved away from the element
#   onkeypress  a key was pressed and released
#   onkeydown   a key was pressed down
#   onkeyup     a key was released
# 


#  attributes for elements that can get the focus
#   accesskey   accessibility key character
#   tabindex    position in tabbing order
#   onfocus     the element got the focus
#   onblur      the element lost the focus
# 


#  text alignment for p, div, h1-h6. The default is
#      align="left" for ltr headings, "right" for rtl 


# =================== Text Elements ====================================


#  these can occur at block or inline level 


#  %Inline; covers inline or "text-level" elements 


# ================== Block level elements ==============================


#  %Flow; mixes Block and Inline and is used for list items etc. 


# ================== Content models for exclusions =====================


#  a elements use %Inline; excluding a 


#  pre uses %Inline excluding img, object, applet, big, small,
#      sub, sup, font, or basefont 


#  form uses %Flow; excluding form 


#  button uses %Flow; but excludes a, form, form controls, iframe 


# ================ Document Structure ==================================


#  the namespace URI designates the document profile 


class Html(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('xmlns', 1, 14, u'http://www.w3.org/1999/xhtml'), 
         ])
	_name = u'html'



Root = Html



# ================ Document Head =======================================


#  content model is %head.misc; combined with a single
#      title and an optional base element in any order 


class Head(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('profile', 1, 12, None), 
         ])
	_name = u'head'


#  The title element is not considered part of the flow of text.
#        It should be displayed, for example as the page header or
#        window title. Exactly one title is required per document.
#     


class Title(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         ])
	_name = u'title'


#  document base URI 


class Base(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('href', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('target', 7, 12, None), 
         ])
	_name = u'base'


#  generic metainformation 


class Meta(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('http-equiv', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('content', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('scheme', 1, 12, None), 
         ])
	_name = u'meta'


# 
#   Relationship values can be used in principle:
# 
#    a) for document specific toolbars/menus when used
#       with the link element in document head e.g.
#         start, contents, previous, next, index, end, help
#    b) to link to a separate style sheet (rel="stylesheet")
#    c) to make a link to a script (rel="script")
#    d) by stylesheets to control how collections of
#       html nodes are rendered into printed documents
#    e) to make a link to a printable version of this document
#       e.g. a PostScript or PDF version (rel="alternate" media="print")
# 


class Link(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('href', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('hreflang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rel', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rev', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('media', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('target', 7, 12, None), 
         ])
	_name = u'link'


#  style info, which may include CDATA sections 


class Style(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('media', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         ])
	_name = u'style'


#  script statements, which may include CDATA sections 


class Script(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('charset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('language', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('defer', pycopia.XML.POM.Enumeration(['defer']), 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         ])
	_name = u'script'


#  alternate content container for non script-based rendering 


class Noscript(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'noscript'


# ======================= Frames =======================================


#  only one noframes element permitted per document 


class Frameset(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rows', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cols', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onload', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onunload', 1, 12, None), 
         ])
	_name = u'frameset'


#  reserved frame names start with "_" otherwise starts with letter 


#  tiled window within frameset 


class Frame(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('longdesc', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('frameborder', pycopia.XML.POM.Enumeration(['1', '0']), 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('marginwidth', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('marginheight', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('noresize', pycopia.XML.POM.Enumeration(['noresize']), 12, None), 
         pycopia.XML.POM.XMLAttribute('scrolling', pycopia.XML.POM.Enumeration(['yes', 'no', 'auto']), 13, u'auto'), 
         ])
	_name = u'frame'


#  inline subwindow 


class Iframe(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('longdesc', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('frameborder', pycopia.XML.POM.Enumeration(['1', '0']), 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('marginwidth', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('marginheight', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('scrolling', pycopia.XML.POM.Enumeration(['yes', 'no', 'auto']), 13, u'auto'), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'left', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         ])
	_name = u'iframe'


#  alternate content container for non frame-based rendering 


class Noframes(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'noframes'


# =================== Document Body ====================================


class Body(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onload', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onunload', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('background', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('bgcolor', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('text', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('link', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('vlink', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('alink', 1, 12, None), 
         ])
	_name = u'body'


class Div(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'div'


#  generic language/style container 


# =================== Paragraphs =======================================


class P(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'p'


# =================== Headings =========================================


# 
#   There are six levels of headings from h1 (the most important)
#   to h6 (the least important).
# 


class H1(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'h1'


class H2(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'h2'


class H3(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'h3'


class H4(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'h4'


class H5(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'h5'


class H6(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify']), 12, None), 
         ])
	_name = u'h6'


# =================== Lists ============================================


#  Unordered list bullet styles 


#  Unordered list 


class Ul(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', pycopia.XML.POM.Enumeration(['disc', 'square', 'circle']), 12, None), 
         pycopia.XML.POM.XMLAttribute('compact', pycopia.XML.POM.Enumeration(['compact']), 12, None), 
         ])
	_name = u'ul'


#  Ordered list numbering style
# 
#     1   arabic numbers      1, 2, 3, ...
#     a   lower alpha         a, b, c, ...
#     A   upper alpha         A, B, C, ...
#     i   lower roman         i, ii, iii, ...
#     I   upper roman         I, II, III, ...
# 
#     The style is applied to the sequence number which by default
#     is reset to 1 for the first list item in an ordered list.
# 


#  Ordered (numbered) list 


class Ol(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('compact', pycopia.XML.POM.Enumeration(['compact']), 12, None), 
         pycopia.XML.POM.XMLAttribute('start', 1, 12, None), 
         ])
	_name = u'ol'


#  single column list (DEPRECATED) 


class Menu(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('compact', pycopia.XML.POM.Enumeration(['compact']), 12, None), 
         ])
	_name = u'menu'


#  multiple column list (DEPRECATED) 


class Dir(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('compact', pycopia.XML.POM.Enumeration(['compact']), 12, None), 
         ])
	_name = u'dir'


#  LIStyle is constrained to: "(%ULStyle;|%OLStyle;)" 


#  list item 


class Li(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         ])
	_name = u'li'


#  definition lists - dt for term, dd for its definition 


class Dl(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('compact', pycopia.XML.POM.Enumeration(['compact']), 12, None), 
         ])
	_name = u'dl'


class Dt(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'dt'


class Dd(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'dd'


# =================== Address ==========================================


#  information on author 


class Address(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'address'


# =================== Horizontal Rule ==================================


class Hr(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('noshade', pycopia.XML.POM.Enumeration(['noshade']), 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         ])
	_name = u'hr'


# =================== Preformatted Text ================================


#  content is %Inline; excluding 
#         "img|object|applet|big|small|sub|sup|font|basefont" 


class Pre(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:space', pycopia.XML.POM.Enumeration(['preserve']), 14, u'preserve'), 
         ])
	_name = u'pre'


# =================== Block-like Quotes ================================


class Blockquote(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cite', 1, 12, None), 
         ])
	_name = u'blockquote'


# =================== Text alignment ===================================


#  center content 


class Center(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'center'


# =================== Inserted/Deleted Text ============================


# 
#   ins/del are allowed in block and inline content, but its
#   inappropriate to include block content within an ins element
#   occurring in inline content.
# 


class Ins(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cite', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('datetime', 1, 12, None), 
         ])
	_name = u'ins'


class Del(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cite', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('datetime', 1, 12, None), 
         ])
	_name = u'del'


# ================== The Anchor Element ================================


#  content is %Inline; except that anchors shouldn't be nested 


class A(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('href', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('hreflang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('rel', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rev', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('shape', pycopia.XML.POM.Enumeration(['rect', 'circle', 'poly', 'default']), 13, u'rect'), 
         pycopia.XML.POM.XMLAttribute('coords', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('target', 7, 12, None), 
         ])
	_name = u'a'


# ===================== Inline Elements ================================


class Span(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'span'


#  generic language/style container 


class Bdo(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 11, None), 
         ])
	_name = u'bdo'


#  I18N BiDi over-ride 


class Br(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('clear', pycopia.XML.POM.Enumeration(['left', 'all', 'right', 'none']), 13, u'none'), 
         ])
	_name = u'br'


#  forced line break 


class Em(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'em'


#  emphasis 


class Strong(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'strong'


#  strong emphasis 


class Dfn(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'dfn'


#  definitional 


class Code(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'code'


#  program code 


class Samp(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'samp'


#  sample 


class Kbd(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'kbd'


#  something user would type 


class Var(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'var'


#  variable 


class Cite(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'cite'


#  citation 


class Abbr(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'abbr'


#  abbreviation 


class Acronym(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'acronym'


#  acronym 


class Q(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cite', 1, 12, None), 
         ])
	_name = u'q'


#  inlined quote 


class Sub(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'sub'


#  subscript 


class Sup(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'sup'


#  superscript 


class Tt(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'tt'


#  fixed pitch font 


class I(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'i'


#  italic font 


class B(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'b'


#  bold font 


class Big(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'big'


#  bigger font 


class Small(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'small'


#  smaller font 


class U(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'u'


#  underline 


class S(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u's'


#  strike-through 


class Strike(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'strike'


#  strike-through 


class Basefont(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('color', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('face', 1, 12, None), 
         ])
	_name = u'basefont'


#  base font size 


class Font(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('color', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('face', 1, 12, None), 
         ])
	_name = u'font'


#  local change to font 


# ==================== Object ======================================


# 
#   object is used to embed objects as part of HTML pages.
#   param elements should precede other content. Parameters
#   can also be expressed as attribute/value pairs on the
#   object element itself when brevity is desired.
# 


class Object(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('declare', pycopia.XML.POM.Enumeration(['declare']), 12, None), 
         pycopia.XML.POM.XMLAttribute('classid', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('codebase', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('data', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('codetype', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('archive', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('standby', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('usemap', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'left', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('border', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('hspace', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('vspace', 1, 12, None), 
         ])
	_name = u'object'


# 
#   param is used to supply a named property value.
#   In XML it would seem natural to follow RDF and support an
#   abbreviated syntax where the param elements are replaced
#   by attribute value pairs on the object start tag.
# 


class Param(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valuetype', pycopia.XML.POM.Enumeration(['data', 'ref', 'object']), 13, u'data'), 
         pycopia.XML.POM.XMLAttribute('type', 1, 12, None), 
         ])
	_name = u'param'


# =================== Java applet ==================================


# 
#   One of code or object attributes must be present.
#   Place param elements before other content.
# 


class Applet(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('codebase', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('archive', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('code', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('object', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('alt', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'left', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('hspace', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('vspace', 1, 12, None), 
         ])
	_name = u'applet'


# =================== Images ===========================================


# 
#    To avoid accessibility problems for people who aren't
#    able to see the image, you should provide a text
#    description using the alt and longdesc attributes.
#    In addition, avoid the use of server-side image maps.
# 


class Img(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('alt', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('longdesc', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('usemap', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ismap', pycopia.XML.POM.Enumeration(['ismap']), 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'left', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('border', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('hspace', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('vspace', 1, 12, None), 
         ])
	_name = u'img'


#  usemap points to a map element which may be in this document
#   or an external document, although the latter is not widely supported 


# ================== Client-side image maps ============================


#  These can be placed in the same document or grouped in a
#      separate document although this isn't yet widely supported 


class Map(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 11, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         ])
	_name = u'map'


class Area(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('shape', pycopia.XML.POM.Enumeration(['rect', 'circle', 'poly', 'default']), 13, u'rect'), 
         pycopia.XML.POM.XMLAttribute('coords', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('href', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('nohref', pycopia.XML.POM.Enumeration(['nohref']), 12, None), 
         pycopia.XML.POM.XMLAttribute('alt', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('target', 7, 12, None), 
         ])
	_name = u'area'


# ================ Forms ===============================================


class Form(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('action', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('method', pycopia.XML.POM.Enumeration(['get', 'post']), 13, u'get'), 
         pycopia.XML.POM.XMLAttribute('name', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('enctype', 1, 13, u'application/x-www-form-urlencoded'), 
         pycopia.XML.POM.XMLAttribute('onsubmit', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onreset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accept', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accept-charset', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('target', 7, 12, None), 
         ])
	_name = u'form'


#  forms shouldn't be nested 


# 
#   Each label must not contain more than ONE field
#   Label elements shouldn't be nested.
# 


class Label(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('for', 3, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         ])
	_name = u'label'


#  the name attribute is required for all but submit & reset 


class Input(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', pycopia.XML.POM.Enumeration(['text', 'password', 'checkbox', 'radio', 'submit', 'reset', 'file', 'hidden', 'image', 'button']), 13, u'text'), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('checked', pycopia.XML.POM.Enumeration(['checked']), 12, None), 
         pycopia.XML.POM.XMLAttribute('disabled', pycopia.XML.POM.Enumeration(['disabled']), 12, None), 
         pycopia.XML.POM.XMLAttribute('readonly', pycopia.XML.POM.Enumeration(['readonly']), 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('maxlength', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('src', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('alt', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('usemap', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onselect', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onchange', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accept', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'left', 'right']), 12, None), 
         ])
	_name = u'input'


#  form control 


class Select(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('size', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('multiple', pycopia.XML.POM.Enumeration(['multiple']), 12, None), 
         pycopia.XML.POM.XMLAttribute('disabled', pycopia.XML.POM.Enumeration(['disabled']), 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onchange', 1, 12, None), 
         ])
	_name = u'select'


#  option selector 


class Optgroup(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('disabled', pycopia.XML.POM.Enumeration(['disabled']), 12, None), 
         pycopia.XML.POM.XMLAttribute('label', 1, 11, None), 
         ])
	_name = u'optgroup'


#  option group 


class Option(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('selected', pycopia.XML.POM.Enumeration(['selected']), 12, None), 
         pycopia.XML.POM.XMLAttribute('disabled', pycopia.XML.POM.Enumeration(['disabled']), 12, None), 
         pycopia.XML.POM.XMLAttribute('label', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         ])
	_name = u'option'


#  selectable choice 


class Textarea(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('rows', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('cols', 1, 11, None), 
         pycopia.XML.POM.XMLAttribute('disabled', pycopia.XML.POM.Enumeration(['disabled']), 12, None), 
         pycopia.XML.POM.XMLAttribute('readonly', pycopia.XML.POM.Enumeration(['readonly']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onselect', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onchange', 1, 12, None), 
         ])
	_name = u'textarea'


#  multi-line text field 


# 
#   The fieldset element is used to group form fields.
#   Only one legend element should occur in the content
#   and if present should only be preceded by whitespace.
# 


class Fieldset(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         ])
	_name = u'fieldset'


class Legend(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'bottom', 'left', 'right']), 12, None), 
         ])
	_name = u'legend'


#  fieldset label 


# 
#  Content is %Flow; excluding a, form, form controls, iframe
# 


class Button(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('accesskey', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('tabindex', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onfocus', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onblur', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('name', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('value', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('type', pycopia.XML.POM.Enumeration(['button', 'submit', 'reset']), 13, u'submit'), 
         pycopia.XML.POM.XMLAttribute('disabled', pycopia.XML.POM.Enumeration(['disabled']), 12, None), 
         ])
	_name = u'button'


#  push button 


#  single-line text input control (DEPRECATED) 


class Isindex(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('prompt', 1, 12, None), 
         ])
	_name = u'isindex'


# ======================= Tables =======================================


#  Derived from IETF HTML table standard, see [RFC1942] 


# 
#  The border attribute sets the thickness of the frame around the
#  table. The default units are screen pixels.
# 
#  The frame attribute specifies which parts of the frame around
#  the table should be rendered. The values are not the same as
#  CALS to avoid a name clash with the valign attribute.
# 


# 
#  The rules attribute defines which rules to draw between cells:
# 
#  If rules is absent then assume:
#      "none" if border is absent or border="0" otherwise "all"
# 


#  horizontal placement of table relative to document 


#  horizontal alignment attributes for cell contents
# 
#   char        alignment char, e.g. char=":"
#   charoff     offset for alignment char
# 


#  vertical alignment attributes for cell contents 


class Table(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('summary', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('border', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('frame', pycopia.XML.POM.Enumeration(['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border']), 12, None), 
         pycopia.XML.POM.XMLAttribute('rules', pycopia.XML.POM.Enumeration(['none', 'groups', 'rows', 'cols', 'all']), 12, None), 
         pycopia.XML.POM.XMLAttribute('cellspacing', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('cellpadding', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right']), 12, None), 
         pycopia.XML.POM.XMLAttribute('bgcolor', 1, 12, None), 
         ])
	_name = u'table'


class Caption(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['top', 'bottom', 'left', 'right']), 12, None), 
         ])
	_name = u'caption'


class Thead(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         ])
	_name = u'thead'


class Tfoot(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         ])
	_name = u'tfoot'


class Tbody(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         ])
	_name = u'tbody'


class Colgroup(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('span', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         ])
	_name = u'colgroup'


class Col(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('span', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         ])
	_name = u'col'


class Tr(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         pycopia.XML.POM.XMLAttribute('bgcolor', 1, 12, None), 
         ])
	_name = u'tr'


class Th(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('abbr', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('axis', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('headers', 4, 12, None), 
         pycopia.XML.POM.XMLAttribute('scope', pycopia.XML.POM.Enumeration(['row', 'col', 'rowgroup', 'colgroup']), 12, None), 
         pycopia.XML.POM.XMLAttribute('rowspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('colspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         pycopia.XML.POM.XMLAttribute('nowrap', pycopia.XML.POM.Enumeration(['nowrap']), 12, None), 
         pycopia.XML.POM.XMLAttribute('bgcolor', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         ])
	_name = u'th'


class Td(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	ATTLIST = pycopia.XML.POM.AttributeList([
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('abbr', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('axis', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('headers', 4, 12, None), 
         pycopia.XML.POM.XMLAttribute('scope', pycopia.XML.POM.Enumeration(['row', 'col', 'rowgroup', 'colgroup']), 12, None), 
         pycopia.XML.POM.XMLAttribute('rowspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('colspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         pycopia.XML.POM.XMLAttribute('nowrap', pycopia.XML.POM.Enumeration(['nowrap']), 12, None), 
         pycopia.XML.POM.XMLAttribute('bgcolor', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('id', 2, 12, None), 
         pycopia.XML.POM.XMLAttribute('class', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('style', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('title', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('xml:lang', 7, 12, None), 
         pycopia.XML.POM.XMLAttribute('dir', pycopia.XML.POM.Enumeration(['ltr', 'rtl']), 12, None), 
         pycopia.XML.POM.XMLAttribute('onclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('ondblclick', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousedown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseover', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmousemove', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onmouseout', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeypress', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeydown', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('onkeyup', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('abbr', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('axis', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('headers', 4, 12, None), 
         pycopia.XML.POM.XMLAttribute('scope', pycopia.XML.POM.Enumeration(['row', 'col', 'rowgroup', 'colgroup']), 12, None), 
         pycopia.XML.POM.XMLAttribute('rowspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('colspan', 1, 13, u'1'), 
         pycopia.XML.POM.XMLAttribute('align', pycopia.XML.POM.Enumeration(['left', 'center', 'right', 'justify', 'char']), 12, None), 
         pycopia.XML.POM.XMLAttribute('char', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('charoff', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('valign', pycopia.XML.POM.Enumeration(['top', 'middle', 'bottom', 'baseline']), 12, None), 
         pycopia.XML.POM.XMLAttribute('nowrap', pycopia.XML.POM.Enumeration(['nowrap']), 12, None), 
         pycopia.XML.POM.XMLAttribute('bgcolor', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('width', 1, 12, None), 
         pycopia.XML.POM.XMLAttribute('height', 1, 12, None), 
         ])
	_name = u'td'


# 
# colgroup groups a set of col elements. It allows you to group
# several semantically related columns together.
# 


# 
#  col elements define the alignment properties for cells in
#  one or more columns.
# 
#  The width attribute specifies the width of the columns, e.g.
# 
#      width=64        width in screen pixels
#      width=0.5*      relative width of 0.5
# 
#  The span attribute causes the attributes of one
#  col element to apply to more than one column.
# 


# 
#     Use thead to duplicate headers when breaking table
#     across page boundaries, or for static headers when
#     tbody sections are rendered in scrolling panel.
# 
#     Use tfoot to duplicate footers when breaking table
#     across page boundaries, or for static footers when
#     tbody sections are rendered in scrolling panel.
# 
#     Use multiple tbody sections when rules are needed
#     between groups of table rows.
# 


#  Scope is simpler than headers attribute for common tables 


#  th is for headers, td for data and for cells acting as both 


GENERAL_ENTITIES = {u'zwnj': u'\u200c', u'aring': u'\xe5', u'gt': u'>', u'yen': u'\xa5', u'ograve': u'\xf2', u'Chi': u'\u03a7', u'delta': u'\u03b4', u'rang': u'\u232a', u'sup': u'\u2283', u'trade': u'\u2122', u'Ntilde': u'\xd1', u'xi': u'\u03be', u'upsih': u'\u03d2', u'nbsp': u'\xa0', u'Atilde': u'\xc3', u'radic': u'\u221a', u'otimes': u'\u2297', u'aelig': u'\xe6', u'oelig': u'\u0153', u'equiv': u'\u2261', u'ni': u'\u220b', u'infin': u'\u221e', u'Psi': u'\u03a8', u'auml': u'\xe4', u'cup': u'\u222a', u'Epsilon': u'\u0395', u'otilde': u'\xf5', u'lt': u'&#60;', u'Icirc': u'\xce', u'Eacute': u'\xc9', u'Lambda': u'\u039b', u'sbquo': u'\u201a', u'Prime': u'\u2033', u'prime': u'\u2032', u'psi': u'\u03c8', u'Kappa': u'\u039a', u'rsaquo': u'\u203a', u'Tau': u'\u03a4', u'uacute': u'\xfa', u'ocirc': u'\xf4', u'lrm': u'\u200e', u'zwj': u'\u200d', u'cedil': u'\xb8', u'Alpha': u'\u0391', u'not': u'\xac', u'amp': u'&#38;', u'AElig': u'\xc6', u'oslash': u'\xf8', u'acute': u'\xb4', u'lceil': u'\u2308', u'alefsym': u'\u2135', u'laquo': u'\xab', u'shy': u'\xad', u'loz': u'\u25ca', u'ge': u'\u2265', u'Igrave': u'\xcc', u'nu': u'\u03bd', u'Ograve': u'\xd2', u'lsaquo': u'\u2039', u'sube': u'\u2286', u'euro': u'\u20ac', u'rarr': u'\u2192', u'sdot': u'\u22c5', u'rdquo': u'\u201d', u'Yacute': u'\xdd', u'lfloor': u'\u230a', u'lArr': u'\u21d0', u'Auml': u'\xc4', u'Dagger': u'\u2021', u'brvbar': u'\xa6', u'Otilde': u'\xd5', u'szlig': u'\xdf', u'clubs': u'\u2663', u'diams': u'\u2666', u'agrave': u'\xe0', u'Ocirc': u'\xd4', u'Iota': u'\u0399', u'Theta': u'\u0398', u'Pi': u'\u03a0', u'zeta': u'\u03b6', u'Scaron': u'\u0160', u'frac14': u'\xbc', u'egrave': u'\xe8', u'sub': u'\u2282', u'iexcl': u'\xa1', u'frac12': u'\xbd', u'ordf': u'\xaa', u'sum': u'\u2211', u'prop': u'\u221d', u'Uuml': u'\xdc', u'ntilde': u'\xf1', u'apos': u"'", u'atilde': u'\xe3', u'asymp': u'\u2248', u'uml': u'\xa8', u'prod': u'\u220f', u'nsub': u'\u2284', u'reg': u'\xae', u'rArr': u'\u21d2', u'Oslash': u'\xd8', u'emsp': u'\u2003', u'THORN': u'\xde', u'yuml': u'\xff', u'aacute': u'\xe1', u'Mu': u'\u039c', u'hArr': u'\u21d4', u'le': u'\u2264', u'thinsp': u'\u2009', u'dArr': u'\u21d3', u'ecirc': u'\xea', u'bdquo': u'\u201e', u'Sigma': u'\u03a3', u'Aring': u'\xc5', u'tilde': u'\u02dc', u'nabla': u'\u2207', u'mdash': u'\u2014', u'uarr': u'\u2191', u'times': u'\xd7', u'Ugrave': u'\xd9', u'Eta': u'\u0397', u'Agrave': u'\xc0', u'chi': u'\u03c7', u'real': u'\u211c', u'circ': u'\u02c6', u'eth': u'\xf0', u'rceil': u'\u2309', u'iuml': u'\xef', u'gamma': u'\u03b3', u'lambda': u'\u03bb', u'harr': u'\u2194', u'Egrave': u'\xc8', u'frac34': u'\xbe', u'dagger': u'\u2020', u'divide': u'\xf7', u'Ouml': u'\xd6', u'image': u'\u2111', u'ndash': u'\u2013', u'hellip': u'\u2026', u'igrave': u'\xec', u'Yuml': u'\u0178', u'ang': u'\u2220', u'alpha': u'\u03b1', u'frasl': u'\u2044', u'ETH': u'\xd0', u'lowast': u'\u2217', u'Nu': u'\u039d', u'plusmn': u'\xb1', u'bull': u'\u2022', u'sup1': u'\xb9', u'sup2': u'\xb2', u'sup3': u'\xb3', u'Aacute': u'\xc1', u'cent': u'\xa2', u'oline': u'\u203e', u'Beta': u'\u0392', u'perp': u'\u22a5', u'Delta': u'\u0394', u'there4': u'\u2234', u'pi': u'\u03c0', u'iota': u'\u03b9', u'empty': u'\u2205', u'euml': u'\xeb', u'notin': u'\u2209', u'iacute': u'\xed', u'para': u'\xb6', u'epsilon': u'\u03b5', u'weierp': u'\u2118', u'OElig': u'\u0152', u'uuml': u'\xfc', u'larr': u'\u2190', u'icirc': u'\xee', u'Upsilon': u'\u03a5', u'omicron': u'\u03bf', u'upsilon': u'\u03c5', u'copy': u'\xa9', u'Iuml': u'\xcf', u'Oacute': u'\xd3', u'Xi': u'\u039e', u'kappa': u'\u03ba', u'ccedil': u'\xe7', u'Ucirc': u'\xdb', u'cap': u'\u2229', u'mu': u'\u03bc', u'scaron': u'\u0161', u'lsquo': u'\u2018', u'isin': u'\u2208', u'Zeta': u'\u0396', u'minus': u'\u2212', u'deg': u'\xb0', u'and': u'\u2227', u'tau': u'\u03c4', u'pound': u'\xa3', u'curren': u'\xa4', u'int': u'\u222b', u'ucirc': u'\xfb', u'rfloor': u'\u230b', u'ensp': u'\u2002', u'crarr': u'\u21b5', u'ugrave': u'\xf9', u'exist': u'\u2203', u'cong': u'\u2245', u'theta': u'\u03b8', u'oplus': u'\u2295', u'permil': u'\u2030', u'Acirc': u'\xc2', u'piv': u'\u03d6', u'Euml': u'\xcb', u'Phi': u'\u03a6', u'Iacute': u'\xcd', u'quot': u'"', u'Uacute': u'\xda', u'Omicron': u'\u039f', u'ne': u'\u2260', u'iquest': u'\xbf', u'eta': u'\u03b7', u'rsquo': u'\u2019', u'yacute': u'\xfd', u'Rho': u'\u03a1', u'darr': u'\u2193', u'Ecirc': u'\xca', u'Omega': u'\u03a9', u'acirc': u'\xe2', u'sim': u'\u223c', u'phi': u'\u03c6', u'sigmaf': u'\u03c2', u'macr': u'\xaf', u'thetasym': u'\u03d1', u'Ccedil': u'\xc7', u'ordm': u'\xba', u'uArr': u'\u21d1', u'forall': u'\u2200', u'beta': u'\u03b2', u'fnof': u'\u0192', u'rho': u'\u03c1', u'micro': u'\xb5', u'eacute': u'\xe9', u'omega': u'\u03c9', u'middot': u'\xb7', u'Gamma': u'\u0393', u'rlm': u'\u200f', u'lang': u'\u2329', u'spades': u'\u2660', u'supe': u'\u2287', u'thorn': u'\xfe', u'ouml': u'\xf6', u'or': u'\u2228', u'raquo': u'\xbb', u'part': u'\u2202', u'sect': u'\xa7', u'ldquo': u'\u201c', u'hearts': u'\u2665', u'sigma': u'\u03c3', u'oacute': u'\xf3'}
