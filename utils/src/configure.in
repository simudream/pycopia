dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during installation
dnl	to configure the system for the local environment.
AC_INIT(pyntping.c)
AC_CONFIG_HEADER(config.h)

#----------------------------------------------------------------------------
#       Check if we should use gcc if available on this machine.
#----------------------------------------------------------------------------

AC_ARG_WITH(gcc, [  --with-gcc              use gcc for compilation],
	use_gcc=1)
if test -z "$use_gcc" ; then
    CC=${CC-cc}
else
    AC_PROG_CC
    if test "$CC" = "gcc" ; then
	CC="gcc -Wall"
    fi
fi
AC_SUBST(CC)
AC_PROG_CPP
AC_PREFIX_PROGRAM(pyntping)
AC_C_BIGENDIAN
AC_PROG_INSTALL

#--------------------------------------------------------------------
#       Check for the existence of various libraries.  The order here
#       is important, so that then end up in the right order in the
#       command line generated by make.  The -lsocket and -lnsl libraries
#       require a couple of special tricks:
#       1. Only use these libraries if they supply procedures that aren't
#          already present in the normal libraries.  This is because
#          IRIX 5.2 has libraries, but they aren't needed and they're
#          bogus:  they goof up name resolution if used.
#       2. On some SVR4 systems, can't use -lsocket without -lnsl too.
#          To get around this problem, first check for both libraries
#          together, and use them both if they're both needed.  If that
#          isn't the case, then check for them individually.
#--------------------------------------------------------------------

tk_both=1
AC_CHECK_FUNC(connect, tk_both=0)
AC_CHECK_FUNC(gethostbyname, tk_both=0)
tk_oldLibs=$LIBS
LIBS="$LIBS -lsocket"
AC_CHECK_LIB(nsl, main, , tk_both=0)
LIBS=$tk_oldLibs
if test "$tk_both" = 1; then
    echo "need -lsocket and -lnsl together"
    LIBS="$LIBS -lsocket -lnsl"
else
    AC_CHECK_LIB(socket, connect, [LIBS="$LIBS -lsocket"])
    AC_CHECK_LIB(nsl, gethostbyname, [LIBS="$LIBS -lnsl"])
fi

#----------------------------------------------------------------------------
#       Check to use dbmalloc (optional and only recommended for debugging)
#               --with-dbmalloc
#----------------------------------------------------------------------------

AC_ARG_WITH(dbmalloc, [  --with-dbmalloc         use dbmalloc library], 
	dm=1, dm=0)
if test $dm = 1 ; then
    AC_DEFINE(DBMALLOC)
    DBMALLOC_LIB="-ldbmalloc"
fi
AC_SUBST(DBMALLOC_LIB)

#----------------------------------------------------------------------------
#	Checks for various include files missing on some machines.
#----------------------------------------------------------------------------

AC_CHECK_HEADERS(stdlib.h unistd.h malloc.h sys/select.h)

AC_OUTPUT(Makefile)
